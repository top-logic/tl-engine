class.com.top_logic.service.openapi.server.I18NConstants.CLASHING_PATH_PARAMETERS__PATH1__PATH2__UNIFIED_COMPLETE_PATH = Die Pfade ''{0}'' und ''{1}'' führen unter Berücksichtigung der Pfadparameter zu dem selben Ergebnis: {2}
class.com.top_logic.service.openapi.server.I18NConstants.CREATING_AUTHENTICATOR_FAILED__PATH__METHOD = Es konnte kein Authentifizierungsalgorithmus für {1}:{0} erstellt werden.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_ILLEGAL_TOKEN_VALIDATION_RESPONSE__MSG = Ungültige Server Antwort bei der Überprüfung des Tokens: {0}
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_INVALID_API_KEY__PARAMETER = Ungültiger API Schlüssel in Parameter ''{0}'' gefunden.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_NO_COOKIE__PARAMETER = Kein Cookie mit Namen ''{0}'' gefunden.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_NO_HEADER__PARAMETER = Kein Header mit Namen ''{0}'' gefunden.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_NO_QUERY_PARAM__PARAMETER = Kein Abfrageparameter mit Namen ''{0}'' gefunden.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_NO_TOKEN = Token kann nicht abgerufen werden.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_TOKEN_DECLINED__STATUS_CODE__CODE__DESCRIPTION = Token abgelehnt: {0} {1}: {2}.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_TOKEN_EXPIRED__DATE = Das Authentifizierungstoken ist abgelaufen seit {0}.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_TOKEN_INACTIVE = Token inaktiv.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.ERROR_MISSING_AUTHENTICATION_SECRET = Fehlendes Authentifizierungsgeheimnis.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.ERROR_MULTIPLE_CLIENT_CREDENTIAL_SECRETS__DOMAIN = Mehrere Client Credential Konfigurationen für Bereich {0}.
class.com.top_logic.service.openapi.server.authentication.http.basic.I18NConstants.AUTH_FAILED_MISSING_AUTHENTICATION_DATA = Fehlende Authentifizierung.
class.com.top_logic.service.openapi.server.authentication.http.basic.I18NConstants.AUTH_FAILED_NO_BASIC_AUTH = Keine BasicAuth Authentifizierung.
class.com.top_logic.service.openapi.server.authentication.http.basic.I18NConstants.AUTH_FAILED_WRONG_AUTHENTICATION_DATA__USER = Falsche Authentifizierung für Nutzer "{0}".
class.com.top_logic.service.openapi.server.conf.I18NConstants.ERROR_BODY_PARAM_UNSUPPORTED_FOR_METHOD__PARAM__METHOD = Der Anfrageparameter {0} ist bei der ausgewählten Methode {1} nicht erlaubt.
class.com.top_logic.service.openapi.server.conf.I18NConstants.ERROR_LOCAL_GLOBAL_PARAMETER_CLASH__CLASHES = Es dürfen keine Parameter mit dem selben Namen und dem selben Auftrittsort sowohl an der API und der Operation definiert werden: {0}
class.com.top_logic.service.openapi.server.conf.I18NConstants.ERROR_MULTIPLE_REQUEST_BODY_PARAMETERS__PARAMETERS = Es kann nur einen Anfrageparameter an der API und der Operation geben: {0}
class.com.top_logic.service.openapi.server.conf.I18NConstants.ERROR_PATH_PARAMETER_NOT_ALLOWED_AT_OPERATION__PARAMS = Pfadparameter sind bei Vorgangsdefinitionen nicht erlaubt: {0}
class.com.top_logic.service.openapi.server.conf.I18NConstants.ERROR_PATH_PARAMETER_NOT_DECLARED__PARAMS = Pfadparameter nicht definiert: {0}
class.com.top_logic.service.openapi.server.conf.I18NConstants.WARN_PATH_PARAMETER_NOT_USED__PARAMS = Die Pfadparameter ''{0}'' werden nicht verwendet. Der Pfad muss entweder alle oder keine Pfadparameter enthalten.
class.com.top_logic.service.openapi.server.impl.I18NConstants.ERROR_COMPILING_EXPRESSION__PATH_PARAMETERS = Fehler beim Kompilieren der Operation für Pfad "{0}" mit den Parametern "{1}".
class.com.top_logic.service.openapi.server.impl.I18NConstants.ERROR_INVALID_CONTENET_TYPE__VALUE_MSG = Ungültiger Inhaltstyp "{0}": {1}
class.com.top_logic.service.openapi.server.layout.I18NConstants.ACCESSING_SERVER_CONFIGURATION_FAILED = Der Zugriff auf die <i>OpenAPI-Serverkonfiguration</i> ist fehlgeschlagen.
class.com.top_logic.service.openapi.server.layout.I18NConstants.INVALID_IMPLEMENTATION_FOR_OPERATION___PATH__METHOD__MSG = Implementierung für {1}:{0} ist ungültig: {2}
class.com.top_logic.service.openapi.server.layout.I18NConstants.INVALID_IMPLEMENTATION_TYPE = Ungültiger Implementierungs-Typ
class.com.top_logic.service.openapi.server.layout.I18NConstants.MISSING_BODY_TYPE__PATH = Fehlender Body Typ im Pfad ''{0}''.
class.com.top_logic.service.openapi.server.layout.I18NConstants.MISSING_PARAMETER_TYPE__PARAMETER = Kein Typ im Schema für Parameter {0} gefunden.
class.com.top_logic.service.openapi.server.layout.I18NConstants.UNSUPPORTED_BODY_TYPES__PATH_UNSUPPORTED_SUPPORTED = Nicht unterstützte Body Typen ''{1}'' im Pfad ''{0}''. Unterstützt: {2}
class.com.top_logic.service.openapi.server.layout.I18NConstants.UNSUPPORTED_PARAMETER_FORMAT__FORMAT__PARAMETER = Das Format ''{0}'' im Parameter ''{1}'' wird nicht unterstützt.
class.com.top_logic.service.openapi.server.layout.I18NConstants.UNSUPPORTED_PARAMETER_TYPE__TYPE__PARAMETER = Der Typ ''{0}'' im Parameter ''{1}'' wird nicht unterstützt.
class.com.top_logic.service.openapi.server.parameter.I18NConstants.UNDEFINED_PARAMETER_REFERENCE__REFERENCE = Der referenzierte Parameter "{0}" existiert nicht.
com.top_logic.service.openapi.server.OpenApiServer = OpenAPI-Server
com.top_logic.service.openapi.server.OpenApiServer$Information = Informationen
com.top_logic.service.openapi.server.OpenApiServer$Information.tooltip = <i>Info-Objekt</i> mit zusätzlichen global verwendeten Schemata.
com.top_logic.service.openapi.server.OpenApiServer.Config.authentications.tooltip = <i>Authentifizierungskonfigurationen</i>, die zur Authentifizierung von Anträgen in <i>Pfaden</i> verwendet werden können.
com.top_logic.service.openapi.server.OpenApiServer.Config.base-url = Basis-URL
com.top_logic.service.openapi.server.OpenApiServer.Config.base-url.tooltip = Die Basis-URL, unter der der <i>OpenAPI-Server</i> von den Clients erreicht werden kann.
com.top_logic.service.openapi.server.OpenApiServer.Config.display-api-spec-jsp = API-Spezifikations Anzeige JSP
com.top_logic.service.openapi.server.OpenApiServer.Config.display-api-spec-jsp.tooltip = Pfad zu der JSP, die die <i>OpenAPI-Spezifikationsdatei</i> anzeigt.
com.top_logic.service.openapi.server.OpenApiServer.Config.global-parameters = Globale Parameter
com.top_logic.service.openapi.server.OpenApiServer.Config.global-parameters.tooltip = Definition von <i>Auftragsparametern</i>, die in jeder <i>Operation</i> und in jedem <i>Pfadelement</i> verwendet werden können. In der konkreten <i>Operation</i> bzw. dem <i>Trassenpunkt</i> muss eine <i>Parameterreferenz</i> mit demselben Namen konfiguriert werden.
com.top_logic.service.openapi.server.OpenApiServer.Config.global-schemas = Globale Schemata
com.top_logic.service.openapi.server.OpenApiServer.Config.global-schemas.tooltip = Globale Schemata, die innerhalb des <i>OpenAPI-Servers</i> verwendet werden können.
com.top_logic.service.openapi.server.OpenApiServer.Config.information = Informationen
com.top_logic.service.openapi.server.OpenApiServer.Config.information.tooltip = Informationen über den <i>OpenAPI-Server</i>.
com.top_logic.service.openapi.server.OpenApiServer.Config.paths = Pfade
com.top_logic.service.openapi.server.OpenApiServer.Config.paths.tooltip = Pfade, die Dienstmethoden auslösen.
com.top_logic.service.openapi.server.OpenApiServer.Config.secrets = Geheimnisse
com.top_logic.service.openapi.server.OpenApiServer.Config.secrets.tooltip = Konfiguration der Geheimnisse, die ein Client für den Zugriff auf diesen Server verwenden muss.
com.top_logic.service.openapi.server.OpenApiServer.Config.tags = Tags
com.top_logic.service.openapi.server.OpenApiServer.Config.tags.tooltip = Eine Liste der in der Spezifikation verwendeten Tags mit zusätzlichen Metadaten. Jeder Tag-Name in der Liste MUSS eindeutig sein.
com.top_logic.service.openapi.server.OpenApiServer.OpenAPIServerPart.server-configuration = Server-Konfiguration
com.top_logic.service.openapi.server.OpenApiServer.OpenAPIServerPart.server-configuration.tooltip = Die Serverkonfiguration, die dieses Konfigurationsobjekt enthält.
com.top_logic.service.openapi.server.OpenApiServer.tooltip = Dienst, der einen konfigurierbaren REST-Dienst bereitstellt.
com.top_logic.service.openapi.server.authentication.ServerSecret.owner = Eigentümer
com.top_logic.service.openapi.server.authentication.ServerSecret.owner.tooltip = Die <i>OpenAPI-Serverkonfiguration</i>, zu der dieses <i>Servergeheimnis</i> gehört.
com.top_logic.service.openapi.server.authentication.apikey.ServerAPIKeySecret = API-Schlüssel
com.top_logic.service.openapi.server.authentication.apikey.ServerAPIKeySecret.tooltip = <i>API-Schlüsselgeheimnis</i> für den Open-API-Server.
com.top_logic.service.openapi.server.authentication.http.basic.ServerBasicAuthSecret = HTTP-Authentifizierung (BasicAuth)
com.top_logic.service.openapi.server.authentication.http.basic.ServerBasicAuthSecret.tooltip = <i>HTTP-Geheimnis</i> für den Open-API-Server.
com.top_logic.service.openapi.server.authentication.oauth.ServerCredentialSecret = OpenID-Authentifizierung
com.top_logic.service.openapi.server.authentication.oauth.ServerCredentialSecret.tooltip = Authentifizierungsdaten für einen Open-API-Server gegenüber dem <i>OpenID-Server</i>.
com.top_logic.service.openapi.server.conf.Operation = Operation
com.top_logic.service.openapi.server.conf.Operation.implementation = Umsetzung
com.top_logic.service.openapi.server.conf.Operation.implementation.tooltip = Die Operation, die auf Anforderung ausgeführt werden soll.
com.top_logic.service.openapi.server.conf.Operation.responses = Antworten
com.top_logic.service.openapi.server.conf.Operation.responses.tooltip = Definition der möglichen Reaktionen auf diesen Vorgang.
com.top_logic.service.openapi.server.conf.Operation.summary = Zusammenfassung
com.top_logic.service.openapi.server.conf.Operation.summary.tooltip = Eine kurze Zusammenfassung, was die Operation bewirkt.
com.top_logic.service.openapi.server.conf.Operation.tooltip = Eine einzelne API-Operation, die an einen bestimmten Pfad gebunden ist.
com.top_logic.service.openapi.server.conf.OperationByMethod = Operation
com.top_logic.service.openapi.server.conf.OperationByMethod.authentication = Authentifizierung
com.top_logic.service.openapi.server.conf.OperationByMethod.authentication.tooltip = Name einer <i>Authentifizierungskonfiguration</i> im <i>OpenAPI-Server</i>, die zur Authentifizierung des Zugriffs auf dieses <i>Pfadelement</i> verwendet wird.
com.top_logic.service.openapi.server.conf.OperationByMethod.enclosing-path-item = Umschließende Pfadangabe
com.top_logic.service.openapi.server.conf.OperationByMethod.enclosing-path-item.tooltip = Das <i>Pfadelement</i>, zu dem dieser <i>Vorgang</i> gehört.
com.top_logic.service.openapi.server.conf.OperationByMethod.method = Methode
com.top_logic.service.openapi.server.conf.OperationByMethod.method.tooltip = Die HTTP-Methode, die diesen Vorgang auslöst.
com.top_logic.service.openapi.server.conf.OperationByMethod.tags = Tags
com.top_logic.service.openapi.server.conf.OperationByMethod.tags.tooltip = Tags für diese Operation.
com.top_logic.service.openapi.server.conf.OperationByMethod.tooltip = <i>Operation</i>, die an eine <i>HTTP-Methode</i> gebunden ist.
com.top_logic.service.openapi.server.conf.OperationResponse = Reaktion auf die Operation
com.top_logic.service.openapi.server.conf.OperationResponse.example = Beispiel
com.top_logic.service.openapi.server.conf.OperationResponse.example.tooltip = Ein Beispiel für ein mögliches Antwortobjekt.
com.top_logic.service.openapi.server.conf.OperationResponse.format = Format
com.top_logic.service.openapi.server.conf.OperationResponse.format.tooltip = Das Schema, das den für den Parameter verwendeten Typ definiert.
com.top_logic.service.openapi.server.conf.OperationResponse.response-code = Antwort-Code
com.top_logic.service.openapi.server.conf.OperationResponse.response-code.tooltip = Der Code dieser Antwort, z. B. 200, 400 oder 501.
com.top_logic.service.openapi.server.conf.OperationResponse.schema = Schema
com.top_logic.service.openapi.server.conf.OperationResponse.schema.tooltip = Das Schema des Antwortobjekts.
com.top_logic.service.openapi.server.conf.OperationResponse.tooltip = Konfiguration einer möglichen Reaktion auf einen <i>Vorgang</i>.
com.top_logic.service.openapi.server.conf.ParametersConfig = Konfiguration der Parameter
com.top_logic.service.openapi.server.conf.ParametersConfig.parameters = Parameter
com.top_logic.service.openapi.server.conf.ParametersConfig.parameters.tooltip = Eine Liste von Parametern, die für diesen Vorgang anwendbar sind. <p> Die Liste darf nicht mehrere Parameter mit gleichem Namen enthalten. </p>
com.top_logic.service.openapi.server.conf.ParametersConfig.tooltip = Konfiguration der Parameter für eine Operation.
com.top_logic.service.openapi.server.conf.PathItem = Pfad-Element
com.top_logic.service.openapi.server.conf.PathItem.complete-path = Vollständiger Pfad
com.top_logic.service.openapi.server.conf.PathItem.complete-path.tooltip = Der vollständige Pfad unter Berücksichtigung aller Pfadparameter.
com.top_logic.service.openapi.server.conf.PathItem.operations = Operationen
com.top_logic.service.openapi.server.conf.PathItem.operations.tooltip = Operationen, die für eine bestimmte HTTP-Methode durchgeführt werden sollen.
com.top_logic.service.openapi.server.conf.PathItem.owner = Eigentümer
com.top_logic.service.openapi.server.conf.PathItem.owner.tooltip = Die <i>OpenAPI-Serverkonfiguration</i>, zu der dieses <i>Pfadelement</i> gehört.
com.top_logic.service.openapi.server.conf.PathItem.path = Pfad
com.top_logic.service.openapi.server.conf.PathItem.path.tooltip = Der Servlet-Pfad, an den der Vorgang gebunden werden soll.
com.top_logic.service.openapi.server.conf.PathItem.tooltip = Beschreibt die auf einem einzelnen Pfad verfügbaren Operationen. Ein Pfadelement KANN aufgrund von <a href="http://spec.openapis.org/oas/v3.1.0#securityFiltering">ACL-Beschränkungen</a> leer sein. Der Pfad selbst ist für den Dokumentationsbetrachter immer noch sichtbar, aber er weiß nicht, welche Operationen und Parameter verfügbar sind.
com.top_logic.service.openapi.server.impl.ServiceMethodBuilderByExpression = Dienstmethodenerstellung durch Ausdruck
com.top_logic.service.openapi.server.impl.ServiceMethodBuilderByExpression.Config.operation = Operation
com.top_logic.service.openapi.server.impl.ServiceMethodBuilderByExpression.Config.operation.tooltip = Die Operation, die auf Anforderung ausgeführt werden soll. <p> Der Ausdruck hat Zugriff auf die für diese Dienstmethode definierten impliziten Parameter. </p> <p> Es wird erwartet, dass das Skript ein JSON-serialisierbares Objekt zurückgibt, wenn die Anfrage erfolgreich ist. </p> <p> Alternativ kann auch ein Antwortobjekt erstellt und zurückgegeben werden. Dieses Antwortobjekt definiert dann den Statuscode und den Inhalt der Antwort. Ein solches Antwortobjekt kann mit der Funktion <i>response</i> erstellt werden. </p>
com.top_logic.service.openapi.server.impl.ServiceMethodBuilderByExpression.Config.transaction = Transaktion
com.top_logic.service.openapi.server.impl.ServiceMethodBuilderByExpression.Config.transaction.tooltip = Ob die <i>Operation</i> in einem Transaktionskontext ausgeführt werden soll.
com.top_logic.service.openapi.server.impl.ServiceMethodBuilderByExpression.tooltip = <i>Service Method Builder</i>, der mit einem TL-Script-Ausdruck parametrisiert werden kann, um auf Anfrage ausgeführt zu werden.
com.top_logic.service.openapi.server.layout.ExportOpenAPIConfiguration = Offene API-Konfiguration exportieren
com.top_logic.service.openapi.server.layout.ExportOpenAPIConfiguration.Config.export-format = Exportformat
com.top_logic.service.openapi.server.layout.ExportOpenAPIConfiguration.Config.export-format.tooltip = Das Format des Exports.
com.top_logic.service.openapi.server.layout.ExportOpenAPIConfiguration.tooltip = <i>Befehlshandler</i>, der die konfigurierte Server-API im <i>OpenAPI-Format</i> exportiert.
com.top_logic.service.openapi.server.layout.ImportOpenAPIServer = Offenen API-Server importieren
com.top_logic.service.openapi.server.layout.ImportOpenAPIServer.tooltip = <i>Importieren einer offenen API-Konfiguration</i>, die einen <i>OpenAPI-Server</i> aus einer importierten Konfiguration erstellt.
com.top_logic.service.openapi.server.layout.OpenAPIExporter$ExportFormat = Exportformat
com.top_logic.service.openapi.server.layout.OpenAPIExporter$ExportFormat.tooltip = Exportformat eines <i>offenen API-Exporters</i>.
com.top_logic.service.openapi.server.layout.OpenAPIExporter.ExportFormat.JSON = JSON
com.top_logic.service.openapi.server.layout.OpenAPIExporter.ExportFormat.JSON.tooltip = Das <i>OpenAPI-Dokument</i> muss im "json"-Format exportiert werden.
com.top_logic.service.openapi.server.layout.OpenAPIExporter.ExportFormat.YAML = Yaml
com.top_logic.service.openapi.server.layout.OpenAPIExporter.ExportFormat.YAML.tooltip = Das <i>OpenAPI-Dokument</i> muss im "yaml"-Format exportiert werden.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter = Konkreter Anfrageparameter
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter$ParameterConfiguration = Konfiguration der Parameter
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter$ParameterConfiguration.tooltip = Konfiguration eines Parameters.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.Config.parameter-location = Position des Parameter
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.Config.parameter-location.tooltip = Service-Methode zum Abrufen der <i>Parameterposition</i>, in der diese Konfiguration verwendet wird.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.description.tooltip = Eine kurze Beschreibung des Parameters. Diese könnte Beispiele für die Verwendung enthalten. Die <i>CommonMark-Syntax</i> <i>kann</i> für die Rich-Text-Darstellung verwendet werden.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.example = Beispiel
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.example.tooltip = <i>Beispiel</i> definiert ein Beispiel für das Argument. Das Beispiel muss zu dem <i>Schema</i> passen.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.format = Format
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.format.tooltip = Das Schema, das den für den Parameter verwendeten Typ definiert.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.multiple = Mehrfach
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.multiple.tooltip = Ob dieser Parameter mehrfach angegeben wird.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.required = Erforderlich
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.required.tooltip = Legt fest, ob dieser Parameter obligatorisch ist.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.schema = Schema
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.schema.tooltip = <i>Schema</i> definiert das Schema (im JSON-Format) für das erwartete Argument. Für die Definition eines JSON-Schemas siehe <code>https://spec.openapis.org/oas/v3.0.3#schema-object</code>.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.tooltip = Konkreter Anfrageparameter, d. h. ein <i>Anfrageparameter</i>, der die eigene Implementierung enthält.
com.top_logic.service.openapi.server.parameter.CookieParameter = Cookie-Parameter
com.top_logic.service.openapi.server.parameter.CookieParameter.tooltip = Parameter, der als Cookie-Wert angegeben werden muss.
com.top_logic.service.openapi.server.parameter.HeaderParameter = Kopfzeilen-Parameter
com.top_logic.service.openapi.server.parameter.HeaderParameter.tooltip = Parameter, der als Header-Wert erwartet wird.
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter = Mehrteilige Body-Parameter
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter$BodyPart = Body-Anteil
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter$BodyPart.tooltip = Teilkonfiguration für <i>Mehrteilige Body-Parameter</i>. <p> Ein <i>Body-Teil</i> definiert den Namen des Feldes, das in einer multipart/form-data-Anfrage enthalten sein kann, ob das Feld obligatorisch ist und welches Format der Inhalt haben muss. </p>
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter.BodyPart.name.tooltip = Der Name des Body-Parameters.
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter.Config.multiple.tooltip = Es gibt nur einen Body.
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter.Config.name.tooltip = Der Name des <i>Mehrteilige Body-Parameters</i> kann verwendet werden, um auf alle Teile des Body zuzugreifen. Es ist möglich, sowohl auf die deklarierten Teile als auch auf die nicht deklarierten Teile zuzugreifen. <p> Der Wert ist eine Abbildung des Feldnamens in der Body-Anfrage auf den Wert des Feldes. </p>
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter.Config.parts = Teile
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter.Config.parts.tooltip = Die Teile, die für diesen <i>Mehrteilige Body-Parameter</i> zulässig sind.
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter.tooltip = Interpretiert den Multipart-Body der Anfrage als Parameter. <p> Dies ermöglicht es, den Inhalt der Ressource z. B. in einer <i>Put-Anfrage</i> aus dem Methodenrumpf zu lesen. </p>
com.top_logic.service.openapi.server.parameter.ParameterFormat = Format der Parameter
com.top_logic.service.openapi.server.parameter.ParameterFormat.BINARY = Byte-Folge
com.top_logic.service.openapi.server.parameter.ParameterFormat.BINARY.tooltip = Eine Folge von Bytes.
com.top_logic.service.openapi.server.parameter.ParameterFormat.BOOLEAN = Wahrheitswert
com.top_logic.service.openapi.server.parameter.ParameterFormat.BOOLEAN.tooltip = Ein boolescher Wert.
com.top_logic.service.openapi.server.parameter.ParameterFormat.BYTE = Base64-kodierte Bytes
com.top_logic.service.openapi.server.parameter.ParameterFormat.BYTE.tooltip = Eine base64-kodierte Folge von Bytes.
com.top_logic.service.openapi.server.parameter.ParameterFormat.DATE = Datum
com.top_logic.service.openapi.server.parameter.ParameterFormat.DATE.tooltip = Ein Datumswert.
com.top_logic.service.openapi.server.parameter.ParameterFormat.DATE_TIME = Datum mit Uhrzeit
com.top_logic.service.openapi.server.parameter.ParameterFormat.DATE_TIME.tooltip = Ein Datumswert mit Uhrzeit.
com.top_logic.service.openapi.server.parameter.ParameterFormat.DOUBLE = Double
com.top_logic.service.openapi.server.parameter.ParameterFormat.DOUBLE.tooltip = Eine Fließkommazahl mit 64 Bit.
com.top_logic.service.openapi.server.parameter.ParameterFormat.FLOAT = Float
com.top_logic.service.openapi.server.parameter.ParameterFormat.FLOAT.tooltip = Eine Fließkommazahl mit 32 Bit.
com.top_logic.service.openapi.server.parameter.ParameterFormat.INTEGER = Integer
com.top_logic.service.openapi.server.parameter.ParameterFormat.INTEGER.tooltip = Ein Integer-Wert mit 32 Bit.
com.top_logic.service.openapi.server.parameter.ParameterFormat.LONG = Long
com.top_logic.service.openapi.server.parameter.ParameterFormat.LONG.tooltip = Ein Integer-Wert mit 64 Bit.
com.top_logic.service.openapi.server.parameter.ParameterFormat.OBJECT = Objekt
com.top_logic.service.openapi.server.parameter.ParameterFormat.OBJECT.tooltip = Ein JSON-Objekt.
com.top_logic.service.openapi.server.parameter.ParameterFormat.STRING = Zeichenfolge
com.top_logic.service.openapi.server.parameter.ParameterFormat.STRING.tooltip = Eine beliebige Zeichenkette.
com.top_logic.service.openapi.server.parameter.ParameterFormat.tooltip = Mögliche Formate der Anfrageparameter.
com.top_logic.service.openapi.server.parameter.ParameterReference = Parameter-Referenz
com.top_logic.service.openapi.server.parameter.ParameterReference.Config.name.tooltip = Der Name des referenzierten Parameters. Die Parameter, auf die verwiesen werden kann, sind in den globalen Parametern der <i>OpenAPI-Serverkonfiguration</i> zu finden.
com.top_logic.service.openapi.server.parameter.ParameterReference.Config.owner = Eigentümer
com.top_logic.service.openapi.server.parameter.ParameterReference.Config.owner.tooltip = Der Container dieser <i>Konfiguration</i>.
com.top_logic.service.openapi.server.parameter.ParameterReference.tooltip = Verweis auf eine global definierte <i>Konfiguration</i>.
com.top_logic.service.openapi.server.parameter.ParameterUsedIn = Parameter verwendet in
com.top_logic.service.openapi.server.parameter.ParameterUsedIn.tooltip = Anmerkung für <i>Anfrageparameter</i>, die definiert, wo der Parameter erwartet wird.
com.top_logic.service.openapi.server.parameter.ParameterUsedIn.value = Wert
com.top_logic.service.openapi.server.parameter.ParameterUsedIn.value.tooltip = Der <i>Parameterort</i>, an dem der kommentierte <i>Anfrageparameter</i> erwartet wird.
com.top_logic.service.openapi.server.parameter.PathParameter = Pfad-Parameter
com.top_logic.service.openapi.server.parameter.PathParameter.Config.multiple.tooltip = Ob mehrere Pfadeinträge konsumiert werden. <p> Der Wert eines Parameters mit der Option <i>Multiple</i> ist eine Liste von Werten. Ein Pfadparameter mit der Option Multiple muss der letzte Pfadparameter in der Liste der Parameter sein, da er alle Pfadeinträge verbraucht. </p>
com.top_logic.service.openapi.server.parameter.PathParameter.Config.required.tooltip = Ein Pfadparameter ist immer erforderlich.
com.top_logic.service.openapi.server.parameter.PathParameter.tooltip = <i>Anforderungsparameter</i> aus dem Pfad der aufgerufenen URL.
com.top_logic.service.openapi.server.parameter.QueryParameter = Abfrage-Parameter
com.top_logic.service.openapi.server.parameter.QueryParameter.Config.multiple.tooltip = Ob mehrere Abfrageargumente mit demselben Namen zulässig sind. <p> Der Wert eines Parameters mit der Option <i>Multiple</i> ist eine Liste von Werten. Wenn kein Abfrageparameter mit dem angegebenen Namen angegeben wird, wird eine leere Liste als Wert verwendet. </p>
com.top_logic.service.openapi.server.parameter.QueryParameter.tooltip = <i>Abfrageparameter</i> aus den Abfrageargumenten der Anfrage-URL.
com.top_logic.service.openapi.server.parameter.ReferencedParameter = Parameter-Referenz
com.top_logic.service.openapi.server.parameter.ReferencedParameter.parameter-definition = Definition des Parameter
com.top_logic.service.openapi.server.parameter.ReferencedParameter.parameter-definition.tooltip = Definition des referenzierten Parameters.
com.top_logic.service.openapi.server.parameter.ReferencedParameter.reference-name = Referenzname
com.top_logic.service.openapi.server.parameter.ReferencedParameter.reference-name.tooltip = Name der Parameterreferenz.
com.top_logic.service.openapi.server.parameter.ReferencedParameter.tooltip = Verweis auf einen <i>konkreten Anfrageparameter</i>.
com.top_logic.service.openapi.server.parameter.RequestBodyParameter = Anfrageinhalt
com.top_logic.service.openapi.server.parameter.RequestBodyParameter.Config.multiple.tooltip = Es gibt nur einen Körper.
com.top_logic.service.openapi.server.parameter.RequestBodyParameter.tooltip = Interpretiert den Body der Anfrage als Parameter. <p> Dies ermöglicht es, den Inhalt der Ressource z.B. in einer <i>Put-Anfrage</i> aus dem Methodenkörper zu lesen. </p>
com.top_logic.service.openapi.server.parameter.RequestParameter = Anfrage-Parameter
com.top_logic.service.openapi.server.parameter.RequestParameter.Config.body-parameter = Body Parameter
com.top_logic.service.openapi.server.parameter.RequestParameter.Config.body-parameter.tooltip = Angabe, ob dieser Parameter ein Body-Parameter ist. Ein Body-Parameter darf höchstens einmal in der Parameterliste vorkommen.
com.top_logic.service.openapi.server.parameter.RequestParameter.Config.name.tooltip = Der Name des Parameters. <p> Bei Parameternamen wird zwischen Groß- und Kleinschreibung unterschieden. Der Name des Parameters bestimmt seinen Namen in der API (z. B. im Falle eines Parameters für ein Abfrageargument) und seinen Namen für den Zugriff auf ihn in der Implementierung der Dienstmethode. </p>
com.top_logic.service.openapi.server.parameter.RequestParameter.tooltip = Basisklasse für Parser für Anfrageparameter.
com.top_logic.service.openapi.server.script.HTTPResponse$Builder = Bauherr
com.top_logic.service.openapi.server.script.HTTPResponse$Builder.tooltip = <i>Einfacher Methodenersteller</i>, der eine <i>HTTP-Antwort</i> erstellt.
