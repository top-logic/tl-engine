class.com.top_logic.demo.I18NConstants.GENERATED_DEMO_TYPES = Generated demo types.
class.com.top_logic.demo.layout.form.demo.I18NConstants.ACCESS_RIGHTS = Access Rights
class.com.top_logic.demo.layout.form.demo.I18NConstants.ACCESS_RIGHTS.tooltip = Here is a descriptive text about access rights.
class.com.top_logic.demo.layout.form.demo.I18NConstants.ADMINISTRATION = Administration
class.com.top_logic.demo.layout.form.demo.I18NConstants.ADMINISTRATION.tooltip = Here is a descriptive text about Administration.
class.com.top_logic.demo.layout.form.demo.I18NConstants.BASISADMINISTRATION = Basisadministration
class.com.top_logic.demo.layout.form.demo.I18NConstants.BASISADMINISTRATION.tooltip = Here is a descriptive text about basisadministration.
class.com.top_logic.demo.layout.form.demo.I18NConstants.CUSTOMIZED_NO_OPTION_MEGAMENU = Modified no selection
class.com.top_logic.demo.layout.form.demo.I18NConstants.CUSTOMIZED_NO_OPTION_MEGAMENU.tooltip = Modified tooltip from no selection.
class.com.top_logic.demo.layout.form.demo.I18NConstants.DELETED_VIEW = Deleted View
class.com.top_logic.demo.layout.form.demo.I18NConstants.DEVELOPMENT = Development
class.com.top_logic.demo.layout.form.demo.I18NConstants.DEVELOPMENT.tooltip = Here is a descriptive text about development.
class.com.top_logic.demo.layout.form.demo.I18NConstants.MONITOR = Monitor
class.com.top_logic.demo.layout.form.demo.I18NConstants.MONITOR.tooltip = Here is a descriptive text about monitor.
class.com.top_logic.demo.layout.form.demo.I18NConstants.PERMISSIONS = Permissions
class.com.top_logic.demo.layout.form.demo.I18NConstants.PERMISSIONS.tooltip = Here is a descriptive text about permissions.
class.com.top_logic.demo.layout.form.demo.I18NConstants.TECHNICAL_ADMINISTRATION = Technical Administration
class.com.top_logic.demo.layout.form.demo.I18NConstants.TECHNICAL_ADMINISTRATION.tooltip = Here is a descriptive text about Tech.Administration. This section is intentionally made long. Tests the grid.
com.top_logic.demo.api.CustomAuthentication = Custom authentication
com.top_logic.demo.api.CustomAuthentication.Config.header = Header
com.top_logic.demo.api.CustomAuthentication.Config.header.tooltip = The header that contains the secret.
com.top_logic.demo.api.CustomAuthentication.Config.lookup-user = Lookup user
com.top_logic.demo.api.CustomAuthentication.Config.lookup-user.tooltip = A function looking up a user for a given secret.
com.top_logic.demo.api.CustomAuthentication.tooltip = Demo for a custom authentication mechanism for an <i>OpenAPI</i> interface.
com.top_logic.demo.chart.DemoChartComponent = Demo chart component
com.top_logic.demo.chart.DemoChartComponent.Config.max-height = Maximum height
com.top_logic.demo.chart.DemoChartComponent.Config.max-width = Maximum width
com.top_logic.demo.chart.DemoChartComponent.Config.min-height = Minimum height
com.top_logic.demo.chart.DemoChartComponent.Config.min-width = Minimum width
com.top_logic.demo.chart.DemoChartComponent.tooltip = Demo chart creator for test scenarios of an <i>image control</i>.
com.top_logic.demo.chart.flex.ChartRef = Chart reference
com.top_logic.demo.chart.flex.ChartRef.tooltip = <i>Configuration item</i> referencing a chart configuration file.
com.top_logic.demo.chart.flex.ChartSelector = Chart selector
com.top_logic.demo.chart.flex.ChartSelector.Config.charts = Charts
com.top_logic.demo.chart.flex.ChartSelector.Config.charts.tooltip = The chart XML configurations files relative to <code>"/WEB-INF/charts"</code>.
com.top_logic.demo.chart.flex.ChartSelector.Config.multi = Multiple
com.top_logic.demo.chart.flex.ChartSelector.Config.multi.tooltip = Whether to allow selecting multiple charts. <p> With multi selection enabled, a <i>multiple chart model</i> is accepted instead of a <i>chart model</i>. </p>
com.top_logic.demo.chart.flex.ChartSelector.tooltip = Component allowing to select one or many configured charts. <p> When a chart is selected, this component propagates the chart to a display component through a selection relation. </p>
com.top_logic.demo.chart.flex.DemoInteractiveChartSelector = Demo interactive chart selector
com.top_logic.demo.chart.flex.DemoInteractiveChartSelector.Config.charts = Charts
com.top_logic.demo.chart.flex.DemoInteractiveChartSelector.Config.target = Target
com.top_logic.demo.chart.flex.ElementDatePartition = Element date partition
com.top_logic.demo.chart.flex.ElementDatePartition.Config.date-filter = Date filter
com.top_logic.demo.chart.flex.ElementDatePartition.Config.date-filter.tooltip = Gets the date filter.
com.top_logic.demo.chart.flex.ElementDatePartition.tooltip = <i>Partition function</i> for report dates.
com.top_logic.demo.chart.flex.RootNodeProducer = Root node producer
com.top_logic.demo.chart.flex.TreeInfoDataSource = Tree info data source
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.data-source = Data source
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.data-source.tooltip = Gets the data source.
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.icon-count = Icon count
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.icon-count.tooltip = Gets the icon count.
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.max-element-count = Maximum element count
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.max-element-count.tooltip = Gets the maximum element count
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.max-tree-depth = Maximum tree depth
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.max-tree-depth.tooltip = Gets the max tree depth.
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.suppress-name = Suppress name
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.suppress-name.tooltip = Flag whether to suppress name. NOTE: please set this only to true if only status report of ONE element is shown. E.g. Project overview information. Then the name is suppressed.
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.tree-depth = Tree depth
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.tree-depth.tooltip = Gets the tree depth.
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.tree-filter = Tree filter
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.tree-filter.tooltip = Gets the tree filter.
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.visible-number-of-objects = Visible number of objects
com.top_logic.demo.chart.flex.TreeInfoDataSource.Config.visible-number-of-objects.tooltip = Gets the visible number of objects.
com.top_logic.demo.chart.flex.TreeInfoDataSource.tooltip = <i>Chart data source</i> for status report chart.
com.top_logic.demo.chart.flex.TreeInfoDatesPartition = Tree info dates partition
com.top_logic.demo.chart.flex.TreeInfoDatesPartition$TreeInfoIndexFunction = Tree info index function
com.top_logic.demo.chart.flex.TreeInfoDatesPartition$TreeInfoIndexFunction.tooltip = <i>Aggregation function</i> for tree info charts.
com.top_logic.demo.chart.flex.TreeInfoDatesPartition.tooltip = <i>Partition function</i> for status report chart.
com.top_logic.demo.knowledge.test.layout.DynamicTreeDemo = Dynamic tree demo
com.top_logic.demo.knowledge.test.layout.DynamicTreeDemo$AddNodeCommand = Add node command
com.top_logic.demo.knowledge.test.layout.DynamicTreeDemo$DelNodeCommand = Del node command
com.top_logic.demo.knowledge.test.layout.DynamicTreeDemo$SetUserObjectCommand = Set user object command
com.top_logic.demo.knowledge.test.layout.DynamicTreeDemo$SetUserObjectCommand.tooltip = A Private command to store the value from the <i>form tree</i> back to the model. In a more realistic case this could be an <i>apply command handler</i>.
com.top_logic.demo.knowledge.test.layout.DynamicTreeDemo.tooltip = Example of a dynamically modifiable Tree.
com.top_logic.demo.knowledge.test.layout.EditTreeDemo = Edit tree demo
com.top_logic.demo.knowledge.test.layout.EditTreeDemo.tooltip = Example how an editable Tree can be used.
com.top_logic.demo.layout.contextMenu.ShowComponentInfoCommand = Show component info command
com.top_logic.demo.layout.contextMenu.ShowComponentInfoCommand.tooltip = Demo for a type and component specific context menu entry.
com.top_logic.demo.layout.contextMenu.ShowInfoCommand = Show info command
com.top_logic.demo.layout.contextMenu.ShowInfoCommand.tooltip = Demo for a type-specific context menu entry.
com.top_logic.demo.layout.demo.DemoAJAXProgressComponent = Demo AJAX progress component
com.top_logic.demo.layout.demo.DemoAJAXProgressComponent$ResetProgressBar = Reset progress bar
com.top_logic.demo.layout.demo.DemoAJAXProgressComponent$ResetProgressBar.tooltip = Called by the resetProgressBar-Command to reset the state of the DemoProgressBar and invalidate the component.
com.top_logic.demo.layout.demo.DemoAJAXProgressComponent.tooltip = Demo implementation of a the AJAXProgressComponent.
com.top_logic.demo.layout.demo.DemoOpenProgressComponent = Demo open progress component
com.top_logic.demo.layout.demo.DemoOpenProgressComponent.tooltip = <i>Form component</i> for opening a <i>demo progress component</i>.
com.top_logic.demo.layout.demo.DemoPersonResourceProvider = Demo person resource provider
com.top_logic.demo.layout.demo.DemoPersonResourceProvider.Config.goto-self-target = Goto self target
com.top_logic.demo.layout.demo.DemoPersonResourceProvider.Config.goto-self-target.tooltip = Component to go to when the user executes a Goto to his own account.
com.top_logic.demo.layout.demo.DemoPersonResourceProvider.tooltip = <i>Person resource provider</i> generating links that opens the "edit current person" dialog for current person.
com.top_logic.demo.layout.demo.DemoProgressComponent = Demo progress component
com.top_logic.demo.layout.demo.DemoProgressComponent$DemoProgressCommandHandler = Demo progress command handler
com.top_logic.demo.layout.demo.DemoProgressComponent$DemoProgressCommandHandler.tooltip = Starts the demo activity and opens a progress dialog for it.
com.top_logic.demo.layout.demo.DemoProgressComponent.DemoProgressCommandHandler.Config.progress-component = Progress component
com.top_logic.demo.layout.demo.DemoProgressComponent.tooltip = Demonstration of how to use the <i>progress component</i>.
com.top_logic.demo.layout.demo.DemoTabbingComponent = Demo tabbing component
com.top_logic.demo.layout.demo.DemoTabbingComponent.tooltip = <i>Form component</i> for manually executed test cases, concerning client-side focus restore and tabbing between <i>form fields</i>.
com.top_logic.demo.layout.demo.DummyEditComponent = Dummy edit component
com.top_logic.demo.layout.demo.DummyEditComponent$DummyApplyCommand = Dummy apply command
com.top_logic.demo.layout.demo.DummyEditComponent$DummyApplyCommand.tooltip = Apply command for this component. Does actually nothing.
com.top_logic.demo.layout.demo.DummyEditComponent$DummyDeleteCommand = Dummy delete command
com.top_logic.demo.layout.demo.DummyEditComponent$DummyDeleteCommand.tooltip = Delete command for this component. Does actually nothing.
com.top_logic.demo.layout.demo.DummyEditComponent.tooltip = <i>Edit component</i> that provides mode switch buttons without actually saving any changes. <p> Note: Only for testing form elements. </p>
com.top_logic.demo.layout.demo.LRMDemoFormComponent = LRM demo form component
com.top_logic.demo.layout.demo.LRMDemoFormComponent.tooltip = Demo From Component for testing.
com.top_logic.demo.layout.demo.SeparateWindowPartnerTestComponent = Separate window partner test component
com.top_logic.demo.layout.demo.SeparateWindowPartnerTestComponent.tooltip = <i>Form component</i> for demonstrating partner relations in <i>window components</i>.
com.top_logic.demo.layout.demo.dialog.DemoDialog = Demo dialog
com.top_logic.demo.layout.demo.dialog.DemoDialog.Config.displayWithoutModel.tooltip = A <i>demo dialog</i> typically does not have a model.
com.top_logic.demo.layout.demo.dialog.DemoDialog.tooltip = <i>Form component</i> demonstrating various dialogs.
com.top_logic.demo.layout.demo.dialog.ToggleDialogMaximality = Toggle dialog maximality
com.top_logic.demo.layout.demo.dialog.ToggleDialogMaximality.tooltip = <i>Command handler</i> toggling the maximality of the top level dialog.
com.top_logic.demo.layout.demo.export.SimpleFixedTablePPTExporter = Simple fixed table PPT exporter
com.top_logic.demo.layout.demo.export.SimpleFixedTablePPTExporter.Config.columns = Columns
com.top_logic.demo.layout.demo.export.SimpleFixedTablePPTExporter.Config.columns.tooltip = Number of columns to export.
com.top_logic.demo.layout.demo.export.SimpleFixedTablePPTExporter.Config.fixed-table-marker = Fixed table marker
com.top_logic.demo.layout.demo.export.SimpleFixedTablePPTExporter.Config.fixed-table-marker.tooltip = Name of the marker in the template that represents the upper left corner of the table to export to. Must start with <code>"FIXEDTABLE_"</code>
com.top_logic.demo.layout.demo.export.SimpleFixedTablePPTExporter.Config.relative-template-path = Relative template path
com.top_logic.demo.layout.demo.export.SimpleFixedTablePPTExporter.Config.relative-template-path.tooltip = Name of the path relative to <code>webinf://reportTemplates</code> in which the template file lives.
com.top_logic.demo.layout.demo.export.SimpleFixedTablePPTExporter.Config.rows = Rows
com.top_logic.demo.layout.demo.export.SimpleFixedTablePPTExporter.Config.rows.tooltip = Number of rows to export.
com.top_logic.demo.layout.demo.export.SimpleFixedTablePPTExporter.Config.template-file-name = Template file name
com.top_logic.demo.layout.demo.export.SimpleFixedTablePPTExporter.Config.template-file-name.tooltip = Name of the template file used to export.
com.top_logic.demo.layout.demo.export.SimpleFixedTablePPTExporter.tooltip = <i>Command handler</i> exporting to PPT and replaces a "FIXEDTABLE", with simple content.
com.top_logic.demo.layout.demo.table.ClearSelectionCommand = Clear selection command
com.top_logic.demo.layout.demo.table.ClearSelectionCommand.tooltip = <i>Command</i> clearing the selection of it's selectable component.
com.top_logic.demo.layout.demo.table.DemoFormulaTables = Demo formula tables
com.top_logic.demo.layout.demo.table.DemoFormulaTables$FocusTableCommand = Focus table command
com.top_logic.demo.layout.demo.table.DemoFormulaTables$FocusTableCommand.tooltip = <i>Command handler</i> that focused a configured table.
com.top_logic.demo.layout.demo.table.DemoFormulaTables.FocusTableCommand.Config.table = Table
com.top_logic.demo.layout.demo.table.DemoFormulaTables.FocusTableCommand.Config.table.tooltip = Name of the table to focus.
com.top_logic.demo.layout.demo.table.DemoFormulaTables.tooltip = The class <i>demo formula tables</i> is the underlying component to show tables in formulas
com.top_logic.demo.layout.demo.table.DemoMultipleTablesComponent = Demo multiple tables component
com.top_logic.demo.layout.demo.table.DemoMultipleTablesComponent$RebuildTable = Rebuild table
com.top_logic.demo.layout.demo.table.DemoMultipleTablesComponent$RebuildTable.tooltip = <i>Command</i> dropping a table field and building a new one.
com.top_logic.demo.layout.demo.table.DemoMultipleTablesComponent.tooltip = <i>Form component</i> with two <i>table field</i> displayed with <i>separate table control provider</i>. <p> Regression test case for Ticket #19916. </p>
com.top_logic.demo.layout.demo.table.DemoRemoveRowCommand = Demo remove row command
com.top_logic.demo.layout.demo.table.DemoRemoveRowCommand.tooltip = <i>Command</i> that removes the selected row from a <i>table component</i>.
com.top_logic.demo.layout.demo.tile.CustomDemoATile = Custom demo A tile
com.top_logic.demo.layout.demo.tile.CustomDemoATile.model-name = Model name
com.top_logic.demo.layout.demo.tile.CustomDemoATile.model-name.tooltip = The <i>model name</i> of the displayed object.
com.top_logic.demo.layout.demo.tile.CustomDemoATile.tooltip = <i>Component parameters</i> for defining a <i>model name</i> of a <code>"A"</code>
com.top_logic.demo.layout.demo.tile.NumberDocumentsPreview = Number documents preview
com.top_logic.demo.layout.demo.tile.NumberDocumentsPreview.tooltip = <i>Label based preview</i> displaying the number folders and documents in a <i>web folder</i>.
com.top_logic.demo.layout.dynamic.demo.DemoResolver = Demo resolver
com.top_logic.demo.layout.dynamic.demo.DemoResolver.tooltip = <i>Layout resolver</i> for <i>dynamic layout select component</i>.
com.top_logic.demo.layout.dynamic.demo.DynamicLayoutSelectComponent = Dynamic layout select component
com.top_logic.demo.layout.dynamic.demo.DynamicLayoutSelectComponent.Config.layouts = Layouts
com.top_logic.demo.layout.dynamic.demo.DynamicLayoutSelectComponent.Config.layouts.tooltip = Names of layout files to be able to switch to. Format has to be as a reference in a layout XML has.
com.top_logic.demo.layout.dynamic.demo.DynamicLayoutSelectComponent.tooltip = <p> Component displaying a <i>select field</i> to select layout file displayed in a <i>dynamic layout container</i>. </p>
com.top_logic.demo.layout.form.declarative.config.DemoDeclarativeConstraints = Demo declarative constraints
com.top_logic.demo.layout.form.declarative.config.DemoDeclarativeConstraints.greater-than-ten = Greater than ten
com.top_logic.demo.layout.form.declarative.config.DemoDeclarativeConstraints.greater-than-ten.tooltip = Value that must be greater than 10.
com.top_logic.demo.layout.form.declarative.config.DemoDeclarativeConstraints.start = Start
com.top_logic.demo.layout.form.declarative.config.DemoDeclarativeConstraints.start.tooltip = A word alphabetically before <i>Stop</i>.
com.top_logic.demo.layout.form.declarative.config.DemoDeclarativeConstraints.stop = Stop
com.top_logic.demo.layout.form.declarative.config.DemoDeclarativeConstraints.stop.tooltip = A word alphabetically after <i>Start</i>.
com.top_logic.demo.layout.form.declarative.config.DemoDeclarativeConstraints.tooltip = Demo form part with constraints.
com.top_logic.demo.layout.form.declarative.config.DemoDeclarativeConstraintsBase.only-letters = Only letters
com.top_logic.demo.layout.form.declarative.config.DemoDeclarativeConstraintsBase.only-letters.tooltip = A string containing only letters from A to Z.
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes = Non nullable object types
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.instance-list = Instance list
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.instance-list.tooltip = Demo for a list of <i>configured instances</i>.
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.instance-map = Instance map
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.instance-map.tooltip = Demo for a map of <i>configured instances</i> indexed by one of their common properties.
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.monomorphic-list = Monomorphic list
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.monomorphic-list.tooltip = A monomorphic list.
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.monomorphic-map = Monomorphic map
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.monomorphic-map.tooltip = A monomorphic map.
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.polymorphic-list = Polymorphic list
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.polymorphic-list.tooltip = Demo of a list property where multiple subtypes can be entered as elements to the list.
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.polymorphic-map = Polymorphic map
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.polymorphic-map.tooltip = Demo of a map property where multiple subtypes can be entered as entries to the map.
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.polymorphic-type-map = Polymorphic type map
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.polymorphic-type-map.tooltip = Demo of a map property with subtype options indexed by type.
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.tooltip = <i>Type demos</i> part for demonstrating how object values are displayed when they are <i>non nullable</i>. This requires them to have a non-null default value.
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.value-instances = Value instances
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.value-instances.tooltip = Demo for displaying a plain select field for entering a list of pre-configured instances.
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.value-items = Value items
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.value-items.tooltip = Demo for displaying a plain select field for entering a list of pre-configured items.
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes = Nullable object types
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.config-item = Configuration item
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.config-item.tooltip = An example for a <i>demo configuration item</i> displayed without polymorphism.
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.configured-instance = Configured instance
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.configured-instance.tooltip = An example for a <i>demo configured instance</i>.
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.date = Date
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.date.tooltip = An example for a <i>date</i> value.
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.enum = Enum
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.enum.tooltip = An example for a <i>demo enum</i> value.
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.expr = Expression
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.expr.tooltip = An example for a <i>expression</i>.
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.java-class = Java class
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.java-class.tooltip = An example for a JAVA class object value.
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.singleton = Singleton
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.singleton.tooltip = A singleton object which is displayed as "value".
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.string = String
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.string.tooltip = An example for a <i>string</i> value.
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.tooltip = <i>Type demos</i> part for demonstrating how primitive values are displayed when they are <i>nullable</i>.
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypesWithNonNullDefault = Nullable object types with non null default
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypesWithNonNullDefault.tooltip = <i>Type demos</i> part for demonstrating how object values are displayed when they are <i>nullable</i> but have a non-null default value.
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypesWithNullDefault = Nullable object types with null default
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypesWithNullDefault.tooltip = <i>Type demos</i> part for demonstrating how object values are displayed when they are <i>nullable</i> and have null as default value.
com.top_logic.demo.layout.form.declarative.config.ObjectTypesMandatory = Object types mandatory
com.top_logic.demo.layout.form.declarative.config.ObjectTypesMandatory.mandatory-polymorphic-list = Mandatory polymorphic list
com.top_logic.demo.layout.form.declarative.config.ObjectTypesMandatory.mandatory-polymorphic-list.tooltip = Demo of a mandatory list property where multiple subtypes can be entered as elements to the list.
com.top_logic.demo.layout.form.declarative.config.ObjectTypesMandatory.mandatory-polymorphic-map = Mandatory polymorphic map
com.top_logic.demo.layout.form.declarative.config.ObjectTypesMandatory.mandatory-polymorphic-map.tooltip = Demo of a mandatory map property where multiple subtypes can be entered as entries to the map.
com.top_logic.demo.layout.form.declarative.config.ObjectTypesMandatory.string-configured-mandatory = String configured mandatory
com.top_logic.demo.layout.form.declarative.config.ObjectTypesMandatory.string-configured-mandatory.tooltip = Property that is set <i>mandatory</i> in the configuration.
com.top_logic.demo.layout.form.declarative.config.ObjectTypesMandatory.tooltip = <i>Type demos</i> part for demonstrating how object values are displayed when they are <i>mandatory</i>.
com.top_logic.demo.layout.form.declarative.config.ObjectTypesOptions = Object types options
com.top_logic.demo.layout.form.declarative.config.ObjectTypesOptions.demo-value = Demo value
com.top_logic.demo.layout.form.declarative.config.ObjectTypesOptions.demo-value.tooltip = Value with a built-in option provider.
com.top_logic.demo.layout.form.declarative.config.ObjectTypesOptions.enums = Enums
com.top_logic.demo.layout.form.declarative.config.ObjectTypesOptions.enums.tooltip = A property for a <i>list</i> of <i>demo enums</i>.
com.top_logic.demo.layout.form.declarative.config.ObjectTypesOptions.tooltip = <i>Type demos</i> part for demonstrating how object values are displayed when they have <i>options</i>.
com.top_logic.demo.layout.form.declarative.config.ObjectTypesReadOnly = Object types read only
com.top_logic.demo.layout.form.declarative.config.ObjectTypesReadOnly.config-item-view = Configuration item view
com.top_logic.demo.layout.form.declarative.config.ObjectTypesReadOnly.config-item-view.tooltip = Allows editing the contents of a referenced other item.
com.top_logic.demo.layout.form.declarative.config.ObjectTypesReadOnly.tooltip = <i>Type demos</i> part for demonstrating how object values are displayed when they are <i>read only</i>.
com.top_logic.demo.layout.form.declarative.config.ObjectTypesWholeLine = Object types whole line
com.top_logic.demo.layout.form.declarative.config.ObjectTypesWholeLine.tooltip = <i>Type demos</i> part for demonstrating how object values are displayed when rendered over whole line.
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes = Primitive object types
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.boolean-object = Boolean object
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.byte-object = Byte object
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.character-object = Character object
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.double-object = Double object
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.float-object = Float object
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.integer-object = Integer object
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.long-object = Long object
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.short-object = Short object
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.time-object = Time object
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.time-object.tooltip = Specialized long property that is entered in a time format "1h 15min".
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.tooltip = <i>Type demos</i> part for demonstrating how primitive value objects are displayed.
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypesNonNullDefault = Primitive object types non null default
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypesNonNullDefault.tooltip = <i>Type demos</i> part for demonstrating how primitive value objects are displayed when they have a non-null default value.
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes = Primitive types
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.binaries = Binaries
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.binaries.tooltip = Upload of multiple XML files.
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.binary-primitive = Binary primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.binary-primitive.tooltip = A binary data upload.
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.boolean-primitive = Boolean primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.byte-primitive = Byte primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.character-primitive = Character primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.double-primitive = Double primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.float-primitive = Float primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.icon-primitive = Icon primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.icon-primitive.tooltip = An icon property.
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.integer-primitive = Integer primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.list-primitive = List primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.list-primitive.tooltip = A list of simple strings.
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.long-primitive = Long primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.map-primitive = Map primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.map-primitive.tooltip = A map of string to integer.
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.paint-primitive = Paint primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.paint-primitive.tooltip = Demo for a custom primitive type that is entered as raw configuration value.
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.reskey-html-primitive = Resource key HTML primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.reskey-html-primitive.tooltip = An internationalized structured text.
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.reskey-multiline-primitive = Resource key multiline primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.reskey-multiline-primitive.tooltip = An internationalized multi-line text.
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.reskey-primitive = Resource key primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.reskey-primitive.tooltip = An internationalized string.
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.short-primitive = Short primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.time-primitive = Time primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.time-primitive.tooltip = Specialized long property that is entered in a time format "1h 15min".
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.tooltip = <i>Type demos</i> part for demonstrating how primitive values are displayed .
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.xml-primitive = XML primitive
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.xml-primitive.tooltip = An XML fragment in a string property.
com.top_logic.demo.layout.form.declarative.config.TypeDemos = Type demos
com.top_logic.demo.layout.form.declarative.config.TypeDemos.constraints = Constraints
com.top_logic.demo.layout.form.declarative.config.TypeDemos.non-nullable-object-types = Non nullable object types
com.top_logic.demo.layout.form.declarative.config.TypeDemos.nullable-object-types = Nullable object types
com.top_logic.demo.layout.form.declarative.config.TypeDemos.nullable-object-types-with-non-null-default = Nullable object types with non null default
com.top_logic.demo.layout.form.declarative.config.TypeDemos.nullable-object-types-with-null-default = Nullable object types with null default
com.top_logic.demo.layout.form.declarative.config.TypeDemos.object-types-mandatory = Object types mandatory
com.top_logic.demo.layout.form.declarative.config.TypeDemos.object-types-options = Object types options
com.top_logic.demo.layout.form.declarative.config.TypeDemos.object-types-read-only = Object types read only
com.top_logic.demo.layout.form.declarative.config.TypeDemos.object-types-whole-line = Object types whole line
com.top_logic.demo.layout.form.declarative.config.TypeDemos.object-types-whole-line.tooltip = <i>Type demos</i> part for demonstrating how object values are displayed when rendered over whole line.
com.top_logic.demo.layout.form.declarative.config.TypeDemos.primitive-object-types = Primitive object types
com.top_logic.demo.layout.form.declarative.config.TypeDemos.primitive-object-types-non-null-default = Primitive object types non null default
com.top_logic.demo.layout.form.declarative.config.TypeDemos.primitive-types = Primitive types
com.top_logic.demo.layout.form.declarative.config.TypeDemos.tooltip = Demonstrated how the different types are displayed.
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties = Test de facto monomorphic properties
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties$B = B
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties$B.tooltip = The single concrete (instantiable) configuration that is <i>a</i>-like.
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties$Impl = Implementation
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties$Impl.tooltip = Single implementation of <i>f</i>.
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.A.x = X
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.B.y = Y
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.Impl.Config.message = Message
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.a-mandatory = A mandatory
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.a-mandatory.tooltip = Mandatory <i>a</i>-like configuration.
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.a-optional = A optional
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.a-optional.tooltip = Optional <i>a</i>-like configuration.
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.as = As
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.as.tooltip = List of <i>a</i>-like configurations.
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.i-instance-mandatory = I instance mandatory
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.i-instance-mandatory.tooltip = Mandatory direct instance of <i>f</i>.
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.i-instance-optional = I instance optional
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.i-instance-optional.tooltip = Optional direct instance of <i>f</i>.
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.i-instances = I instances
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.i-instances.tooltip = List of direct instances of <i>f</i>.
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.i-mandatory = I mandatory
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.i-mandatory.tooltip = Mandatory configuration of implementation of <i>f</i>.
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.i-optional = I optional
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.i-optional.tooltip = Optional configuration of implementation of <i>f</i>.
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.is = Is
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.is.tooltip = List of implementations of <i>f</i>.
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.tooltip = Test case for editing properties that are defined polymorphic but are de-facto monomorphic, since there is only a single implementation option.
com.top_logic.demo.layout.form.declarative.values.AbstractDemoConfigItem.first = First
com.top_logic.demo.layout.form.declarative.values.AbstractDemoConfigItem.first.tooltip = Some property.
com.top_logic.demo.layout.form.declarative.values.AbstractDemoConfigItem.second = Second
com.top_logic.demo.layout.form.declarative.values.AbstractDemoConfigItem.second.tooltip = Some other property.
com.top_logic.demo.layout.form.declarative.values.AbstractDemoExtendedConfig.extended = Extended
com.top_logic.demo.layout.form.declarative.values.AbstractDemoExtendedConfig.extended.tooltip = An option only available, if <i>demo configured extended instance</i> (instead of <i>demo configured instance</i> is choosen.
com.top_logic.demo.layout.form.declarative.values.DemoConfigItem = Demo configuration item
com.top_logic.demo.layout.form.declarative.values.DemoConfigItem.min-uuid-size = Minimum uuid size
com.top_logic.demo.layout.form.declarative.values.DemoConfigItem.min-uuid-size.tooltip = Minimum length of <i>Preinitialized uuid</i>.
com.top_logic.demo.layout.form.declarative.values.DemoConfigItem.preinitialized-uuid = Preinitialized uuid
com.top_logic.demo.layout.form.declarative.values.DemoConfigItem.preinitialized-uuid.tooltip = Property containing a unique identifier (UUID) which is pre-initialized with a random value.
com.top_logic.demo.layout.form.declarative.values.DemoConfigItem.tooltip = A <i>configuration item</i> that serves as example value for <i>configuration item</i>-valued properties.
com.top_logic.demo.layout.form.declarative.values.DemoConfiguredExtendedInstance = Demo configured extended instance
com.top_logic.demo.layout.form.declarative.values.DemoConfiguredExtendedInstance.tooltip = <i>Demo default configured instance</i> with an extended configuration option.
com.top_logic.demo.layout.form.declarative.values.DemoConfiguredInstance = Demo configured instance
com.top_logic.demo.layout.form.declarative.values.DemoConfiguredInstance.tooltip = A <i>polymorphic configuration</i> that serves as example value for <i>polymorphic configuration</i>-valued properties.
com.top_logic.demo.layout.form.declarative.values.DemoDefaultConfiguredInstance = Demo default configured instance
com.top_logic.demo.layout.form.declarative.values.DemoDefaultConfiguredInstance.tooltip = Concrete <i>demo configured instance</i>.
com.top_logic.demo.layout.form.declarative.values.DemoEnum = Demo enum
com.top_logic.demo.layout.form.declarative.values.DemoEnum.FIRST = First
com.top_logic.demo.layout.form.declarative.values.DemoEnum.SECOND = Second
com.top_logic.demo.layout.form.declarative.values.DemoEnum.THIRD = Third
com.top_logic.demo.layout.form.declarative.values.DemoEnum.tooltip = An <i>enum</i> that serves as example values for <i>enum</i>-valued properties.
com.top_logic.demo.layout.form.declarative.values.DemoExtendedConfigItem = Demo extended configuration item
com.top_logic.demo.layout.form.declarative.values.DemoExtendedConfigItem.tooltip = Extended <i>demo configuration item</i> configuration.
com.top_logic.demo.layout.form.declarative.values.DemoUnconfiguredInstance = Demo unconfigured instance
com.top_logic.demo.layout.form.declarative.values.DemoUnconfiguredInstance.tooltip = <i>Demo configured instance</i> without options.
com.top_logic.demo.layout.form.demo.DemoOrderForm = Demo order form
com.top_logic.demo.layout.form.demo.DemoOrderForm$AjaxApply = Ajax apply
com.top_logic.demo.layout.form.demo.DemoOrderForm$ApplyCommand = Apply command
com.top_logic.demo.layout.form.demo.DemoOrderForm$ExternalCheck = External check
com.top_logic.demo.layout.form.demo.DemoOrderForm$ExternalLegacyCheck = External legacy check
com.top_logic.demo.layout.form.demo.DemoOrderForm$FillInDefaultValuesAction = Fill in default values action
com.top_logic.demo.layout.form.demo.DemoOrderForm$LegacyCommand = Legacy command
com.top_logic.demo.layout.form.demo.DemoOrderForm$NewAddressAction = New address action
com.top_logic.demo.layout.form.demo.DemoOrderForm$ToggleNameVisibility = Toggle name visibility
com.top_logic.demo.layout.form.demo.DemoOrderForm.tooltip = Demo of AJAX-enabled forms.
com.top_logic.demo.layout.form.demo.EmptyForm = Empty form
com.top_logic.demo.layout.form.demo.EmptyForm.tooltip = Test component with an empty <i>form context</i>.
com.top_logic.demo.layout.form.demo.FailingFormDemo = Failing form demo
com.top_logic.demo.layout.form.demo.FailingFormDemo.tooltip = Test case of <i>form component</i> failing while creating the <i>form context</i>.
com.top_logic.demo.layout.form.demo.PersonAjaxForm = Person ajax form
com.top_logic.demo.layout.form.demo.PersonAjaxForm$ApplyCommandHandler = Apply command handler
com.top_logic.demo.layout.form.demo.PersonAjaxForm$GotoPerson = Goto person
com.top_logic.demo.layout.form.demo.PersonAjaxForm$GotoPerson.tooltip = Executes an goto for the model of the component, to a given view.
com.top_logic.demo.layout.form.demo.PersonAjaxForm$PersonMailToProvider = Person mail to provider
com.top_logic.demo.layout.form.demo.PersonAjaxForm$PersonMailToProvider.tooltip = <i>Person resource provider</i> creating Mail-to links.
com.top_logic.demo.layout.form.demo.PersonAjaxForm.GotoPerson.Config.targetComponent = Target component
com.top_logic.demo.layout.form.demo.PersonAjaxForm.GotoPerson.Config.targetComponent.tooltip = Name of the component to go to.
com.top_logic.demo.layout.form.demo.PersonAjaxForm.tooltip = Allow <i>goto handler</i> from Person via this component.
com.top_logic.demo.layout.form.demo.TestAJAXEditComponent = Test AJAX edit component
com.top_logic.demo.layout.form.demo.TestAJAXEditComponent$ApplyCommand = Apply command
com.top_logic.demo.layout.form.demo.TestAJAXEditComponent$ApplyCommand.tooltip = "Configuration" frontend for <i>store command</i> that makes it an "apply command". Is configured in top-logic.local.xml
com.top_logic.demo.layout.form.demo.TestAJAXEditComponent$SaveCommand = Save command
com.top_logic.demo.layout.form.demo.TestAJAXEditComponent$SaveCommand.tooltip = "Configuration" frontend for <i>store command</i> that makes it an "save command". Is configured in top-logic.local.xml
com.top_logic.demo.layout.form.demo.TestAJAXEditComponent$StoreCommand = Store command
com.top_logic.demo.layout.form.demo.TestAJAXEditComponent$StoreCommand.tooltip = Note: This class must be public, because it is created by <i>command handler factory</i> using Java reflection.
com.top_logic.demo.layout.form.demo.TestAJAXEditComponent.tooltip = <i>Component</i> testing basic AJAX submissions.
com.top_logic.demo.layout.form.demo.TestBoxesComponent = Test boxes component
com.top_logic.demo.layout.form.demo.TestBoxesComponent.tooltip = Test for box layout with input fields.
com.top_logic.demo.layout.form.demo.TestBoxesComponentNoDisplay = Test boxes component no display
com.top_logic.demo.layout.form.demo.TestBoxesComponentNoDisplay.tooltip = Test for box layout with input fields.
com.top_logic.demo.layout.form.demo.TestBoxesComponentReactive = Test boxes component reactive
com.top_logic.demo.layout.form.demo.TestBoxesComponentReactive.tooltip = Test reactive behavior of box layout with input fields.
com.top_logic.demo.layout.form.demo.TestControlsForm = Test controls form
com.top_logic.demo.layout.form.demo.TestControlsForm$ChangeValues = Change values
com.top_logic.demo.layout.form.demo.TestControlsForm$ChangeValues.tooltip = Action that programatically changes values in all test fields.
com.top_logic.demo.layout.form.demo.TestControlsForm$CheckAll = Check all
com.top_logic.demo.layout.form.demo.TestControlsForm$CheckAll.tooltip = <i>Command</i> checking each <i>form field</i> for errors.
com.top_logic.demo.layout.form.demo.TestControlsForm$GotoPersonComponent = Goto person component
com.top_logic.demo.layout.form.demo.TestControlsForm$GotoPersonComponent.tooltip = Component shown in dialog. Only creates a command field to go to current user.
com.top_logic.demo.layout.form.demo.TestControlsForm$ResetValues = Reset values
com.top_logic.demo.layout.form.demo.TestControlsForm$ResetValues.tooltip = Action that resets all test fields to their default value.
com.top_logic.demo.layout.form.demo.TestControlsForm$SetDisabled = Set disabled
com.top_logic.demo.layout.form.demo.TestControlsForm$SetDisabled.tooltip = Action that disables all test fields.
com.top_logic.demo.layout.form.demo.TestControlsForm$SetEditable = Set editable
com.top_logic.demo.layout.form.demo.TestControlsForm$SetEditable.tooltip = Action that makes all test fields editable.
com.top_logic.demo.layout.form.demo.TestControlsForm$SetImmutable = Set immutable
com.top_logic.demo.layout.form.demo.TestControlsForm$SetImmutable.tooltip = Action that makes all test fields immutable.
com.top_logic.demo.layout.form.demo.TestControlsForm$SetInvisible = Set invisible
com.top_logic.demo.layout.form.demo.TestControlsForm$SetInvisible.tooltip = Action that makes all test fields invisible.
com.top_logic.demo.layout.form.demo.TestControlsForm$ToggleBlocked = Toggle blocked
com.top_logic.demo.layout.form.demo.TestControlsForm$ToggleBlocked.tooltip = Action that blocks the values of all test fields.
com.top_logic.demo.layout.form.demo.TestControlsForm$ToggleFrozen = Toggle frozen
com.top_logic.demo.layout.form.demo.TestControlsForm$ToggleFrozen.tooltip = Action that blocks the values of all test fields.
com.top_logic.demo.layout.form.demo.TestControlsForm$ToggleMandatory = Toggle mandatory
com.top_logic.demo.layout.form.demo.TestControlsForm$ToggleMandatory.tooltip = Action that toggles the mandatory property of all test fields.
com.top_logic.demo.layout.form.demo.TestControlsForm$ToggleVeto = Toggle veto
com.top_logic.demo.layout.form.demo.TestControlsForm$ToggleVeto.tooltip = Action that adds/removes a value veto listener to/from all test fields.
com.top_logic.demo.layout.form.demo.TestControlsForm.Config.webFolder = Web folder
com.top_logic.demo.layout.form.demo.TestControlsForm.tooltip = Show / Test several examples of <i>form members</i>
com.top_logic.demo.layout.form.demo.TestCustomConfirmComponent = Test custom confirm component
com.top_logic.demo.layout.form.demo.TestCustomConfirmComponent$Apply = Apply
com.top_logic.demo.layout.form.demo.TestCustomConfirmComponent.tooltip = <i>Edit component</i> demonstrating a custom conditional confirmation upon save and apply.
com.top_logic.demo.layout.form.demo.TestDynamicToolbarTitle = Test dynamic toolbar title
com.top_logic.demo.layout.form.demo.TestDynamicToolbarTitle.tooltip = Test class to test dynamic toolbar.
com.top_logic.demo.layout.form.demo.TestLayoutProblems = Test layout problems
com.top_logic.demo.layout.form.demo.TestLayoutProblems$Ticket2725_Command = Ticket2725 command
com.top_logic.demo.layout.form.demo.TestLayoutProblems.tooltip = The class <i>test layout problems</i> is a demo <i>form component</i> to test layout problems.
com.top_logic.demo.layout.form.demo.TestPageLayoutEdit = Test page layout edit
com.top_logic.demo.layout.form.demo.TestPageLayoutEdit$Apply = Apply
com.top_logic.demo.layout.form.demo.TestPageLayoutEdit$Apply.tooltip = Dummy apply for <i>test page layout edit</i>.
com.top_logic.demo.layout.form.demo.TestPageLayoutEdit.tooltip = Test <i>edit component</i> providing several fields for testing.
com.top_logic.demo.layout.form.demo.TestTableViewPaneComponent = Test table view pane component
com.top_logic.demo.layout.form.demo.TestTableViewPaneComponent.Config.columns = Columns
com.top_logic.demo.layout.form.demo.TestTableViewPaneComponent.Config.rowBuilder = Row builder
com.top_logic.demo.layout.form.demo.TestTableViewPaneComponent.tooltip = Component for testing display behaviour of tables using manual setup of <i>client display data</i>
com.top_logic.demo.layout.form.demo.model.DemoButtonComponent = Demo button component
com.top_logic.demo.layout.form.demo.model.DemoButtonComponent.tooltip = The class <i>demo button component</i> is a demo class for toggling buttons in a <i>button bar</i>.
com.top_logic.demo.layout.form.demo.model.DemoFormTemplate = Demo form template
com.top_logic.demo.layout.form.demo.model.DemoFormTemplate$ApplyCommand = Apply command
com.top_logic.demo.layout.form.demo.model.DemoFormTemplate$ApplyCommand.tooltip = The <i>apply command</i> sets the selected numbers of rows and columns, respectively.
com.top_logic.demo.layout.form.demo.model.DemoFormTemplate.tooltip = The <i>demo form template</i> is used to render a dynamic table of <i>string fields</i>. One easily select the number of rows and columns which has to be displayed.
com.top_logic.demo.layout.gantt.DemoGanttFilterComponent = Demo Gantt filter component
com.top_logic.demo.layout.gantt.DemoGanttFilterComponent.tooltip = Demo <i>Gantt chart filter component</i>.
com.top_logic.demo.layout.scripting.action.excel.RenameElementOp = Rename element
com.top_logic.demo.layout.scripting.action.excel.RenameElementOp.tooltip = An example of a <i>committing Excel action</i> that renames the object given as context.
com.top_logic.demo.layout.scripting.action.excel.params.RenameParameters = Rename parameters
com.top_logic.demo.layout.scripting.action.excel.params.RenameParameters.neuerName = Neuer name
com.top_logic.demo.layout.scripting.action.excel.params.RenameParameters.neuerName.tooltip = The name of the element. <p> The 'name' annotation is not needed here, as the property name would be 'newName' anyway. It is only here as an example, that and how it can be used. </p>
com.top_logic.demo.layout.scripting.action.excel.params.RenameParameters.tooltip = The parameters beyond the 'context' column, for renaming something. <p> The parameters in or before the 'context' column are stored directly in the action config interface. </p>
com.top_logic.demo.layout.security.DemoSecurityAssistentController = Demo security assistent controller
com.top_logic.demo.layout.security.DemoSecurityAssistentController.Config.firstStep = First step
com.top_logic.demo.layout.security.DemoSecurityAssistentController.Config.secondStep = Second step
com.top_logic.demo.layout.security.EditAComponent = Edit A component
com.top_logic.demo.layout.security.EditAComponent.tooltip = Component for security demonstrations. Shows only elements of type 'DemoSecurity.A'.
com.top_logic.demo.layout.security.EditBComponent = Edit B component
com.top_logic.demo.layout.security.EditBComponent.tooltip = Component for security demonstrations. Shows only elements of type 'DemoSecurity.B'.
com.top_logic.demo.layout.security.EditParentComponent = Edit parent component
com.top_logic.demo.layout.security.EditParentComponent$GotoParentHandler = Goto parent handler
com.top_logic.demo.layout.security.EditParentComponent$GotoParentHandler.tooltip = Opens the parent of the selected model in a certain dialog. Security is checked on the target-component. If the target-component can not display the parent-object, the command can not be executed.
com.top_logic.demo.layout.security.EditParentComponent.tooltip = Component for security demonstrations. Shows the parent of the Master-Selection.
com.top_logic.demo.mig.html.layout.demo.AJAXDemo = AJAX demo
com.top_logic.demo.mig.html.layout.demo.AJAXDemo$IllegalAjaxRequest = Illegal ajax request
com.top_logic.demo.mig.html.layout.demo.AJAXDemo$IllegalAjaxResponse = Illegal ajax response
com.top_logic.demo.mig.html.layout.demo.AJAXDemo$NoAjaxResponse = No ajax response
com.top_logic.demo.mig.html.layout.demo.AJAXDemo$TestCommand = Test command
com.top_logic.demo.mig.html.layout.demo.AJAXDemo.tooltip = <i>Component</i> demonstrating basic AJAX interactions.
com.top_logic.demo.model.annotations.DemoDeleteConstraint = Demo delete constraint
com.top_logic.demo.model.annotations.DemoDeleteConstraint.tooltip = Example for a <i>delete constraint</i> implemented in code. <p> Note: A better alternative is to use configured constraints: <i>delete constraint by expression</i>. </p>
com.top_logic.demo.model.struct.DemoVec = Demo vec
com.top_logic.demo.model.struct.DemoVec.tooltip = Demo for a structured configuration type as part of a persistent model.
com.top_logic.demo.model.struct.DemoVec.x = X
com.top_logic.demo.model.struct.DemoVec.x.tooltip = The X coordinate.
com.top_logic.demo.model.struct.DemoVec.y = Y
com.top_logic.demo.model.struct.DemoVec.y.tooltip = The Y coordinate.
com.top_logic.demo.model.types.util.CreateLGridChildHandler = Create L grid child handler
com.top_logic.demo.model.types.util.CreateLGridChildHandler.tooltip = <i>Command</i> that creates <i>demo plain A</i> child objects of <i>demo types L</i> nodes.
com.top_logic.demo.model.types.util.CyclicDemoTreeBuilder = Cyclic demo tree builder
com.top_logic.demo.model.types.util.CyclicDemoTreeBuilder.tooltip = <i>Demo tree builder</i> that treats objects of type <code>"A"</code> in the attribute <code>"list"</code> as children.
com.top_logic.demo.model.types.util.DeleteMailsCommand = Delete mails command
com.top_logic.demo.model.types.util.DeleteMailsCommand.tooltip = <i>Command handler</i> deleting all mails of the model of the component.
com.top_logic.demo.model.types.util.DemoTreeBuilder = Demo tree builder
com.top_logic.demo.model.types.util.DemoTreeBuilder.Config.all-types = All types
com.top_logic.demo.model.types.util.DemoTreeBuilder.tooltip = <i>Tree model builder</i> that creates a joined tree from the <i>demo types factory</i> structure with <i>demo plain factory</i> objects linked from <i>demo types L</i> nodes.
com.top_logic.demo.model.types.util.EncryptedLongMapping = Encrypted long mapping
com.top_logic.demo.model.types.util.EncryptedLongMapping.tooltip = The class <i>encrypted long mapping</i> encoded long values using <i>base64</i> encoding of them.
com.top_logic.demo.model.types.util.TypeGenerator$GenerateDemoTypes = Generate demo types
com.top_logic.demo.table.DemoStructuredEditComponent = Demo structured edit component
com.top_logic.demo.table.DemoStructuredEditComponent.tooltip = <i>Object structure edit component</i>, with a enhanced <i>table declaration provider</i>
com.top_logic.demo.table.DemoTableRenderer = Demo table renderer
com.top_logic.demo.table.DemoTableRenderer.tooltip = The class <i>demo table renderer</i> writes different content for different header rows.
com.top_logic.demo.table.DemoTreeTableEditComponent = Demo tree table edit component
com.top_logic.demo.table.DemoTreeTableEditComponent.tooltip = <i>Edit component</i>, which displays a tree based table.
com.top_logic.demo.table.ToggleRootVisibilityCommand = Toggle root visibility command
com.top_logic.demo.table.ToggleRootVisibilityCommand.tooltip = Makes the root of the tree (in-)visible.
com.top_logic.demo.tool.boundsec.assistent.demo.DemoAssistentController = Demo assistent controller
com.top_logic.demo.tool.boundsec.assistent.demo.DemoAssistentController.Config.steps = Steps
com.top_logic.demo.tool.boundsec.assistent.demo.DemoAssistentController.tooltip = For testing. Please see the Specification and the FeatureAPI since the Javadoc is incomplete.
com.top_logic.demo.tool.boundsec.assistent.demo.DemoFileUploadComponent = Demo file upload component
com.top_logic.demo.tool.boundsec.assistent.demo.DemoFileUploadComponent.tooltip = For testing!
com.top_logic.demo.tool.boundsec.assistent.demo.TestingNameInputComponent = Testing name input component
com.top_logic.demo.tool.boundsec.assistent.demo.TestingNameInputComponent.tooltip = For testing!
