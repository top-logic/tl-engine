class.com.top_logic.model.search.expr.I18NConstants.ERROR_NOT_A_TYPE__VAL_EXPR = The value "{0}" is not a type in expression: {1}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_AMBIGUOUS_ARGUMENT__FUN_NAME = An argument must only be defined once in a function call. Argument "{1}" of function "{0}" is defined more than once.
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_INVALID_NAMED_ARGUMENT_ORDER = Positional arguments must occur only at the beginning of the arguments list.
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_MANDATORY_ARGUMENT__ARG_EXPR = The argument "{0}" is mandatory in expression "{1}".
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_NO_NAMED_ARGUMENTS__FUN_NAME = There is no named argument "{1}" in function "{0}". The function has no named arguments.
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_NO_SUCH_NAMED_ARGUMENT__FUN_NAME_AVAIL = No such named argument "{1}" in function "{0}". Possible arguments are: {2}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_SINGLE_ARGUMENT_EXPECTED__CNT_EXPR = Only a single argument is expected but got {0} in: {1}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_TWO_ARGUMENTS_EXPECTED__CNT_EXPR = Two arguments expected but got {0} in: {1}
class.com.top_logic.model.search.expr.config.operations.binary.I18NConstants.ERROR_INVALID_CONTENT_TYPE_SPECIFIED__VALUE_MSG = Invalid content type "{0}" specified: {1}
class.com.top_logic.model.search.expr.config.operations.revision.I18NConstants.ERROR_NEGATIVE_COMMIT_NR__EXPR_COMMIT = The given commit number {1} must not be negative: {0}
class.com.top_logic.model.search.expr.config.operations.revision.I18NConstants.ERROR_REVISION_ARGUMENT_NULL__EXPR = The given revision is null in: {0}.
class.com.top_logic.model.search.expr.config.operations.revision.I18NConstants.ERROR_UNKNOWN_COMMIT_NR__EXPR_COMMIT = The given commit number {1} is unknown: {0}
class.com.top_logic.model.search.providers.I18NConstants.CREATE_OBJECT_DEFAULT_LABEL = Create Object
class.com.top_logic.model.search.providers.I18NConstants.CREATE_OBJECT_DEFAULT_LABEL.help = Default label for opening a generic create dialog.
class.com.top_logic.model.search.providers.I18NConstants.NEW_LINE = New row
class.com.top_logic.model.search.ui.selector.I18NConstants.EXECUTING_STORED_QUERY_FAILED = Executing the stored query failed
com.top_logic.model.search.ModelBasedSearch = Model based search
com.top_logic.model.search.ModelBasedSearch$SearchConfig = Search configuration
com.top_logic.model.search.ModelBasedSearch$SearchConfig.tooltip = The configuration of a model based search. <p> There can be different searches (for example: normal user, power user, developer) in one application. To configure these searches, the actual search configuration is extracted to this interface and the <i>model based search</i> module can have various of these configs. </p>
com.top_logic.model.search.ModelBasedSearch.Config.searches = Searches
com.top_logic.model.search.ModelBasedSearch.Config.searches.tooltip = There can be different searches (for example: normal user, power user, developer) in one application.
com.top_logic.model.search.ModelBasedSearch.SearchConfig.additional-predefined-parameters = Additional predefined parameters
com.top_logic.model.search.ModelBasedSearch.SearchConfig.additional-predefined-parameters.tooltip = <i>Supplier search expression builder</i> in addition to those registered in <i>Methods</i> (<i>search builder configuration</i>).
com.top_logic.model.search.ModelBasedSearch.SearchConfig.combinators = Combinators
com.top_logic.model.search.ModelBasedSearch.SearchConfig.combinators.tooltip = The <i>search expression combinators</i> that should be available in the search.
com.top_logic.model.search.ModelBasedSearch.SearchConfig.disable-optimizations = Disable optimizations
com.top_logic.model.search.ModelBasedSearch.SearchConfig.disable-optimizations.tooltip = Enable optimizations. <p> Disabling the optimizations can be useful for example for debugging. </p>
com.top_logic.model.search.ModelBasedSearch.SearchConfig.disabled-predefined-parameters = Disabled predefined parameters
com.top_logic.model.search.ModelBasedSearch.SearchConfig.disabled-predefined-parameters.tooltip = <i>Supplier search expression builder</i> to disable from those registered in <i>Methods</i> (<i>search builder configuration</i>).
com.top_logic.model.search.ModelBasedSearch.SearchConfig.include-subtype-usages = Include subtype usages
com.top_logic.model.search.ModelBasedSearch.SearchConfig.include-subtype-usages.tooltip = Whether usages of subtypes should be included, when usages of a type are displayed.
com.top_logic.model.search.ModelBasedSearch.SearchConfig.max-attributes-shown = Maximum attributes shown
com.top_logic.model.search.ModelBasedSearch.SearchConfig.max-attributes-shown.tooltip = If there are no main properties defined for a type, this is the maximum number of attributes for <i>Attribute</i> (<i>attribute filter</i>) that are offered before the user selects the <i>attribute filter</i>. <p> The other attributes are offered once the user selects the <i>attribute filter</i>. </p>
com.top_logic.model.search.ModelBasedSearch.tooltip = The module of the model based search. <p> Holds the config options for the search. This has two advantages. First, without this module, they would be distributed all over the subpackages, hidden for example in option providers. Second, this allows multiple search configurations. For example one for the normal users, one for power users and one for developers. </p>
com.top_logic.model.search.annotate.CodeEditorLanguage = Code editor language
com.top_logic.model.search.annotate.CodeEditorLanguage.tooltip = <i>Attribute annotation</i> to set for a <code>Code</code> attribute to select the code editor language.
com.top_logic.model.search.annotate.CodeEditorLanguage.value = Value
com.top_logic.model.search.annotate.CodeEditorLanguage.value.tooltip = The code editor language to use for the annotated attribute.
com.top_logic.model.search.annotate.TLNumberOfEditorRows = Number of editor rows
com.top_logic.model.search.annotate.TLNumberOfEditorRows.max = Maximum
com.top_logic.model.search.annotate.TLNumberOfEditorRows.max.tooltip = Maximum number of editor rows that are displayed.
com.top_logic.model.search.annotate.TLNumberOfEditorRows.min = Minimum
com.top_logic.model.search.annotate.TLNumberOfEditorRows.min.tooltip = Minimum number of editor rows that are displayed.
com.top_logic.model.search.annotate.TLNumberOfEditorRows.tooltip = <i>Annotation</i> that defines the number of displayed rows for Expr attributes.
com.top_logic.model.search.annotate.TLSearchOptions = Search options
com.top_logic.model.search.annotate.TLSearchOptions$ConfiguredLiterals = Configured literals
com.top_logic.model.search.annotate.TLSearchOptions$ConfiguredLiterals.tooltip = Default <i>Literals</i> (<i>search options</i>) implementation.
com.top_logic.model.search.annotate.TLSearchOptions$ConfiguredOperators = Configured operators
com.top_logic.model.search.annotate.TLSearchOptions$ConfiguredOperators.tooltip = Default <i>Operators</i> (<i>search options</i>) implementation.
com.top_logic.model.search.annotate.TLSearchOptions$DummyValueContext = Dummy value context
com.top_logic.model.search.annotate.TLSearchOptions$DummyValueContext.tooltip = <i>Value context</i> implementation that allows configuring <i>search expressions</i> inside model annotations.
com.top_logic.model.search.annotate.TLSearchOptions.ConfiguredLiterals.Config.literals = Literals
com.top_logic.model.search.annotate.TLSearchOptions.ConfiguredOperators.Config.operators = Operators
com.top_logic.model.search.annotate.TLSearchOptions.literals = Literals
com.top_logic.model.search.annotate.TLSearchOptions.literals.tooltip = Factory for value options in the search UI for the annotated <i>primitive</i> type.
com.top_logic.model.search.annotate.TLSearchOptions.operators = Operators
com.top_logic.model.search.annotate.TLSearchOptions.operators.tooltip = Factory for <i>operator</i> options in the search UI for the annotated <i>primitive</i> type.
com.top_logic.model.search.annotate.TLSearchOptions.tooltip = Search-customization for <i>primitive</i> types.
com.top_logic.model.search.constraint.DeleteConstraintByExpression = Delete constraint by expression
com.top_logic.model.search.constraint.DeleteConstraintByExpression.Config.expr = Expression
com.top_logic.model.search.constraint.DeleteConstraintByExpression.Config.expr.tooltip = Function that is called on an object that is checked for deletion. <p> To allow deletion, <code>true</code> or <code>null</code> must be returned. Any other value denies deletion. A returned string message or resource key that explains why the instance cannot be deleted is used to show the user why the action could not be performed. </p>
com.top_logic.model.search.constraint.DeleteConstraintByExpression.tooltip = <i>Delete constraint</i> that can be configured through a search expression.
com.top_logic.model.search.expr.Add$Builder = Builder
com.top_logic.model.search.expr.Add$Builder.tooltip = <i>Method builder</i> creating <i>add</i>.
com.top_logic.model.search.expr.ArithmeticExpr$Op = Op
com.top_logic.model.search.expr.ArithmeticExpr$Op.tooltip = The arithmetic operator.
com.top_logic.model.search.expr.ArithmeticExpr.Op.ADD = Add
com.top_logic.model.search.expr.ArithmeticExpr.Op.ADD.tooltip = Addition
com.top_logic.model.search.expr.ArithmeticExpr.Op.DIV = Div
com.top_logic.model.search.expr.ArithmeticExpr.Op.DIV.tooltip = Division
com.top_logic.model.search.expr.ArithmeticExpr.Op.MOD = Mod
com.top_logic.model.search.expr.ArithmeticExpr.Op.MOD.tooltip = Modulo operation
com.top_logic.model.search.expr.ArithmeticExpr.Op.MUL = Mul
com.top_logic.model.search.expr.ArithmeticExpr.Op.MUL.tooltip = Multiplication
com.top_logic.model.search.expr.ArithmeticExpr.Op.SUB = Sub
com.top_logic.model.search.expr.ArithmeticExpr.Op.SUB.tooltip = Subtraction
com.top_logic.model.search.expr.CalendarField$Builder = Builder
com.top_logic.model.search.expr.CalendarField$Builder.tooltip = <i>Method builder</i> creating a <i>calendar field</i>.
com.top_logic.model.search.expr.CalendarField$Field = Field
com.top_logic.model.search.expr.CalendarField$Field.tooltip = Specification of the <i>calendar</i> field to access.
com.top_logic.model.search.expr.CalendarField.Builder.Config.field = Field
com.top_logic.model.search.expr.CalendarField.Builder.Config.field.tooltip = The <i>calendar</i> field to access.
com.top_logic.model.search.expr.CalendarField.Field.AM_PM = Am pm
com.top_logic.model.search.expr.CalendarField.Field.AM_PM.tooltip = See <code>9</code>
com.top_logic.model.search.expr.CalendarField.Field.DAY = Day
com.top_logic.model.search.expr.CalendarField.Field.DAY.tooltip = See <code>5</code>
com.top_logic.model.search.expr.CalendarField.Field.DAY_OF_WEEK = Day of week
com.top_logic.model.search.expr.CalendarField.Field.DAY_OF_WEEK.tooltip = See <code>7</code>
com.top_logic.model.search.expr.CalendarField.Field.DAY_OF_WEEK_IN_MONTH = Day of week in month
com.top_logic.model.search.expr.CalendarField.Field.DAY_OF_WEEK_IN_MONTH.tooltip = See <code>8</code>
com.top_logic.model.search.expr.CalendarField.Field.DAY_OF_YEAR = Day of year
com.top_logic.model.search.expr.CalendarField.Field.DAY_OF_YEAR.tooltip = See <code>6</code>
com.top_logic.model.search.expr.CalendarField.Field.DST_OFFSET = Dst offset
com.top_logic.model.search.expr.CalendarField.Field.DST_OFFSET.tooltip = See <code>16</code>
com.top_logic.model.search.expr.CalendarField.Field.ERA = Era
com.top_logic.model.search.expr.CalendarField.Field.ERA.tooltip = See <code>0</code>
com.top_logic.model.search.expr.CalendarField.Field.HOUR = Hour
com.top_logic.model.search.expr.CalendarField.Field.HOUR.tooltip = See <code>11</code>
com.top_logic.model.search.expr.CalendarField.Field.HOUR_12 = Hour 12
com.top_logic.model.search.expr.CalendarField.Field.HOUR_12.tooltip = See <code>10</code>
com.top_logic.model.search.expr.CalendarField.Field.MILLISECOND = Millisecond
com.top_logic.model.search.expr.CalendarField.Field.MILLISECOND.tooltip = See <code>14</code>
com.top_logic.model.search.expr.CalendarField.Field.MINUTE = Minute
com.top_logic.model.search.expr.CalendarField.Field.MINUTE.tooltip = See <code>12</code>
com.top_logic.model.search.expr.CalendarField.Field.MONTH = Month
com.top_logic.model.search.expr.CalendarField.Field.MONTH.tooltip = See <code>2</code>
com.top_logic.model.search.expr.CalendarField.Field.SECOND = Second
com.top_logic.model.search.expr.CalendarField.Field.SECOND.tooltip = See <code>13</code>
com.top_logic.model.search.expr.CalendarField.Field.WEEK = Week
com.top_logic.model.search.expr.CalendarField.Field.WEEK.tooltip = See <code>3</code>
com.top_logic.model.search.expr.CalendarField.Field.WEEK_OF_MONTH = Week of month
com.top_logic.model.search.expr.CalendarField.Field.WEEK_OF_MONTH.tooltip = See <code>4</code>
com.top_logic.model.search.expr.CalendarField.Field.YEAR = Year
com.top_logic.model.search.expr.CalendarField.Field.YEAR.tooltip = See <code>1</code>
com.top_logic.model.search.expr.CalendarField.Field.ZONE_OFFSET = Zone offset
com.top_logic.model.search.expr.CalendarField.Field.ZONE_OFFSET.tooltip = See <code>15</code>
com.top_logic.model.search.expr.CalendarUpdate$Builder = Builder
com.top_logic.model.search.expr.CalendarUpdate$Builder.tooltip = <i>Method builder</i> creating a <i>calendar update</i>.
com.top_logic.model.search.expr.CalendarUpdate$Op = Op
com.top_logic.model.search.expr.CalendarUpdate$Op.tooltip = <i>Calendar</i> update operation.
com.top_logic.model.search.expr.CalendarUpdate.Builder.Config.field = Field
com.top_logic.model.search.expr.CalendarUpdate.Builder.Config.field.tooltip = The <i>calendar</i> field to update.
com.top_logic.model.search.expr.CalendarUpdate.Builder.Config.op = Op
com.top_logic.model.search.expr.CalendarUpdate.Builder.Config.op.tooltip = The operation to perform.
com.top_logic.model.search.expr.CalendarUpdate.Op.ADD = Add
com.top_logic.model.search.expr.CalendarUpdate.Op.ADD.tooltip = Adds the given value to the given <i>calendar</i> field.
com.top_logic.model.search.expr.CalendarUpdate.Op.SET = Set
com.top_logic.model.search.expr.CalendarUpdate.Op.SET.tooltip = Sets the <i>calendar</i> field to the new value.
com.top_logic.model.search.expr.CompareKind = Compare kind
com.top_logic.model.search.expr.CompareKind.GE = Ge
com.top_logic.model.search.expr.CompareKind.GE.tooltip = The left-hand side is greater or equal to the right-hand side.
com.top_logic.model.search.expr.CompareKind.GT = Gt
com.top_logic.model.search.expr.CompareKind.GT.tooltip = The left-hand side is greater to the right-hand side.
com.top_logic.model.search.expr.CompareKind.LE = Le
com.top_logic.model.search.expr.CompareKind.LE.tooltip = The left-hand side is less than or equal to the right-hand side.
com.top_logic.model.search.expr.CompareKind.LT = Lt
com.top_logic.model.search.expr.CompareKind.LT.tooltip = The left-hand side is less than the right-hand side.
com.top_logic.model.search.expr.CompareKind.tooltip = Kind of <i>compare</i> operators with full comparable comparison.
com.top_logic.model.search.expr.Concat$Builder = Builder
com.top_logic.model.search.expr.Concat$Builder.tooltip = <i>Method builder</i> creating <i>concat</i>.
com.top_logic.model.search.expr.CreateObject$Builder = Builder
com.top_logic.model.search.expr.CreateObject$Builder.tooltip = Builder creating a <i>create object</i> expression.
com.top_logic.model.search.expr.DateExpr$Builder = Builder
com.top_logic.model.search.expr.DateExpr$Builder.tooltip = <i>Method builder</i> creating <i>date expression</i>.
com.top_logic.model.search.expr.DateFormatExpr$Builder = Builder
com.top_logic.model.search.expr.DateFormatExpr$Builder.tooltip = <i>Method builder</i> for <i>date format expression</i>.
com.top_logic.model.search.expr.DateTimeExpr$Builder = Builder
com.top_logic.model.search.expr.DateTimeExpr$Builder.tooltip = <i>Method builder</i> creating <i>date time expression</i>.
com.top_logic.model.search.expr.DeleteObject$Builder = Builder
com.top_logic.model.search.expr.DeleteObject$Builder.tooltip = Builder creating a <i>delete object</i> expression.
com.top_logic.model.search.expr.DynamicAll$Builder = Builder
com.top_logic.model.search.expr.DynamicAll$Builder.tooltip = <i>Simple method builder</i> creating <i>dynamic all</i>.
com.top_logic.model.search.expr.DynamicGet$Builder = Builder
com.top_logic.model.search.expr.DynamicGet$Builder.tooltip = <i>Simple method builder</i> creating <i>dynamic get</i>.
com.top_logic.model.search.expr.DynamicReferers$Builder = Builder
com.top_logic.model.search.expr.DynamicReferers$Builder.tooltip = <i>Simple method builder</i> creating <i>dynamic referers</i>.
com.top_logic.model.search.expr.DynamicSet$Builder = Builder
com.top_logic.model.search.expr.DynamicSet$Builder.tooltip = <i>Simple method builder</i> creating <i>dynamic set</i>.
com.top_logic.model.search.expr.ElementAt$Builder = Builder
com.top_logic.model.search.expr.ElementAt$Builder.tooltip = <i>Method builder</i> creating <i>element at</i>.
com.top_logic.model.search.expr.ElementIndex$Builder = Builder
com.top_logic.model.search.expr.ElementIndex$Builder.tooltip = <i>Method builder</i> creating <i>element index</i>.
com.top_logic.model.search.expr.FirstElement$Builder = Builder
com.top_logic.model.search.expr.FirstElement$Builder.tooltip = <i>Method builder</i> creating <i>first element</i>.
com.top_logic.model.search.expr.FormatExpr$Builder = Builder
com.top_logic.model.search.expr.FormatExpr$Builder.tooltip = <i>Method builder</i> for <i>format expressions</i>.
com.top_logic.model.search.expr.Info$Builder = Builder
com.top_logic.model.search.expr.Info$Builder.tooltip = <i>Method builder</i> creating <i>info</i>.
com.top_logic.model.search.expr.LastElement$Builder = Builder
com.top_logic.model.search.expr.LastElement$Builder.tooltip = <i>Method builder</i> creating <i>last element</i>.
com.top_logic.model.search.expr.Log$Builder = Builder
com.top_logic.model.search.expr.Log$Builder.tooltip = <i>Method builder</i> creating <i>log</i>.
com.top_logic.model.search.expr.MessageFormatExpr$Builder = Builder
com.top_logic.model.search.expr.MessageFormatExpr$Builder.tooltip = <i>Method builder</i> for <i>message format expression</i>.
com.top_logic.model.search.expr.NumerFormatExpr$Builder = Builder
com.top_logic.model.search.expr.NumerFormatExpr$Builder.tooltip = <i>Method builder</i> for <i>numer format expression</i>.
com.top_logic.model.search.expr.ParseExpr$Builder = Builder
com.top_logic.model.search.expr.ParseExpr$Builder.tooltip = <i>Method builder</i> for <i>parse expressions</i>.
com.top_logic.model.search.expr.ReduceOperation$Builder = Builder
com.top_logic.model.search.expr.ReduceOperation$Builder.tooltip = Builder creating a <i>create object</i> expression.
com.top_logic.model.search.expr.ResolveModelPart$Builder = Builder
com.top_logic.model.search.expr.ResolveModelPart$Builder.tooltip = <i>Method builder</i> creating <i>resolve model part</i>.
com.top_logic.model.search.expr.Reverse$Builder = Builder
com.top_logic.model.search.expr.Reverse$Builder.tooltip = <i>Method builder</i> creating <i>reverse</i>.
com.top_logic.model.search.expr.Sleep$Builder = Builder
com.top_logic.model.search.expr.Sleep$Builder.tooltip = <i>Method builder</i> creating <i>sleep</i>.
com.top_logic.model.search.expr.SubList$Builder = Builder
com.top_logic.model.search.expr.SubList$Builder.tooltip = <i>Method builder</i> creating <i>sub list</i>.
com.top_logic.model.search.expr.Throw$Builder = Builder
com.top_logic.model.search.expr.Throw$Builder.tooltip = <i>Method builder</i> creating <i>throw</i>.
com.top_logic.model.search.expr.ToDate$Builder = Builder
com.top_logic.model.search.expr.ToDate$Builder.tooltip = <i>Method builder</i> creating <i>to date</i>.
com.top_logic.model.search.expr.ToMillis$Builder = Builder
com.top_logic.model.search.expr.ToMillis$Builder.tooltip = <i>Method builder</i> creating <i>to millis</i>.
com.top_logic.model.search.expr.ToString$Builder = Builder
com.top_logic.model.search.expr.ToString$Builder.tooltip = <i>Method builder</i> for <i>to string</i>.
com.top_logic.model.search.expr.ToSystemCalendar$Builder = Builder
com.top_logic.model.search.expr.ToSystemCalendar$Builder.tooltip = <i>Method builder</i> creating a <i>to system calendar</i>.
com.top_logic.model.search.expr.ToUserCalendar$Builder = Builder
com.top_logic.model.search.expr.ToUserCalendar$Builder.tooltip = <i>Method builder</i> creating <i>to user calendar</i>.
com.top_logic.model.search.expr.config.SearchBuilder = Search builder
com.top_logic.model.search.expr.config.SearchBuilder.Config.method-resolvers = Method resolvers
com.top_logic.model.search.expr.config.SearchBuilder.Config.method-resolvers.tooltip = Resolvers for dynamically defined methods.
com.top_logic.model.search.expr.config.SearchBuilder.Config.methods = Methods
com.top_logic.model.search.expr.config.SearchBuilder.Config.methods.tooltip = Method plug-ins.
com.top_logic.model.search.expr.config.SearchBuilder.tooltip = <i>Expression visitor</i> that creates operational <i>search expression</i> from an <i>expression</i> parse tree.
com.top_logic.model.search.expr.config.dom.Expr$Add = Add
com.top_logic.model.search.expr.config.dom.Expr$Add.tooltip = Addition.
com.top_logic.model.search.expr.config.dom.Expr$And = And
com.top_logic.model.search.expr.config.dom.Expr$And.tooltip = Boolean and operator.
com.top_logic.model.search.expr.config.dom.Expr$Apply = Apply
com.top_logic.model.search.expr.config.dom.Expr$Apply.tooltip = Function application.
com.top_logic.model.search.expr.config.dom.Expr$Arg = Argument
com.top_logic.model.search.expr.config.dom.Expr$Arg.tooltip = An argument to a (built-in) method call.
com.top_logic.model.search.expr.config.dom.Expr$Assign = Assign
com.top_logic.model.search.expr.config.dom.Expr$Assign.tooltip = Binding of the value of an expression to a local variable.
com.top_logic.model.search.expr.config.dom.Expr$At = At
com.top_logic.model.search.expr.config.dom.Expr$At.tooltip = Index access to a collection value.
com.top_logic.model.search.expr.config.dom.Expr$Attribute = Attribute
com.top_logic.model.search.expr.config.dom.Expr$Attribute.tooltip = An attribute of a <i>start tag</i>.
com.top_logic.model.search.expr.config.dom.Expr$AttributeContents = Attribute contents
com.top_logic.model.search.expr.config.dom.Expr$AttributeContents.tooltip = Collection of <i>attribute content</i> for attributes that are composed of multiple parts.
com.top_logic.model.search.expr.config.dom.Expr$Block = Block
com.top_logic.model.search.expr.config.dom.Expr$Block.tooltip = Direct access to the context value.
com.top_logic.model.search.expr.config.dom.Expr$Cmp = Cmp
com.top_logic.model.search.expr.config.dom.Expr$Cmp.tooltip = Compare operator.
com.top_logic.model.search.expr.config.dom.Expr$Define = Define
com.top_logic.model.search.expr.config.dom.Expr$Define.tooltip = Binding of a value to a context variable.
com.top_logic.model.search.expr.config.dom.Expr$Div = Div
com.top_logic.model.search.expr.config.dom.Expr$Div.tooltip = Division.
com.top_logic.model.search.expr.config.dom.Expr$EmbeddedExpression = Embedded expression
com.top_logic.model.search.expr.config.dom.Expr$EmbeddedExpression.tooltip = An <i>expression</i> embedded within a <i>HTML</i> macro.
com.top_logic.model.search.expr.config.dom.Expr$EndTag = End tag
com.top_logic.model.search.expr.config.dom.Expr$EndTag.tooltip = A HTML end tag.
com.top_logic.model.search.expr.config.dom.Expr$Eq = Eq
com.top_logic.model.search.expr.config.dom.Expr$Eq.tooltip = Equality comparison.
com.top_logic.model.search.expr.config.dom.Expr$False = False
com.top_logic.model.search.expr.config.dom.Expr$False.tooltip = The boolean <code>false</code> literal.
com.top_logic.model.search.expr.config.dom.Expr$Html = HTML
com.top_logic.model.search.expr.config.dom.Expr$Html.tooltip = A HTML macro with potentially <i>embedded expressions</i>.
com.top_logic.model.search.expr.config.dom.Expr$Method = Method
com.top_logic.model.search.expr.config.dom.Expr$Method.tooltip = A method invocation with instance syntax <code>self.method(...)</code>.
com.top_logic.model.search.expr.config.dom.Expr$Mod = Mod
com.top_logic.model.search.expr.config.dom.Expr$Mod.tooltip = Modulo operation.
com.top_logic.model.search.expr.config.dom.Expr$ModuleLiteral = Module literal
com.top_logic.model.search.expr.config.dom.Expr$ModuleLiteral.tooltip = <i>Model literal</i> referencing a <i>module</i>.
com.top_logic.model.search.expr.config.dom.Expr$Mul = Mul
com.top_logic.model.search.expr.config.dom.Expr$Mul.tooltip = Multiplication.
com.top_logic.model.search.expr.config.dom.Expr$Not = Not
com.top_logic.model.search.expr.config.dom.Expr$Not.tooltip = Boolean not operator.
com.top_logic.model.search.expr.config.dom.Expr$Null = Null
com.top_logic.model.search.expr.config.dom.Expr$Null.tooltip = The <code>null</code> literal.
com.top_logic.model.search.expr.config.dom.Expr$NumberLiteral = Number literal
com.top_logic.model.search.expr.config.dom.Expr$NumberLiteral.tooltip = A <i>number</i> literal.
com.top_logic.model.search.expr.config.dom.Expr$Or = Or
com.top_logic.model.search.expr.config.dom.Expr$Or.tooltip = Boolean or operator.
com.top_logic.model.search.expr.config.dom.Expr$PartLiteral = Part literal
com.top_logic.model.search.expr.config.dom.Expr$PartLiteral.tooltip = <i>Model literal</i> referencig a <i>type part</i>.
com.top_logic.model.search.expr.config.dom.Expr$ResKeyLiteral = Resource key literal
com.top_logic.model.search.expr.config.dom.Expr$ResKeyLiteral$LangStringConfig = Lang string configuration
com.top_logic.model.search.expr.config.dom.Expr$ResKeyLiteral$LangStringConfig.tooltip = A language tagged string.
com.top_logic.model.search.expr.config.dom.Expr$ResKeyLiteral.tooltip = A string literal in multiple languages.
com.top_logic.model.search.expr.config.dom.Expr$ResKeyReference = Resource key reference
com.top_logic.model.search.expr.config.dom.Expr$ResKeyReference.tooltip = A reference to a <i>resource key</i>.
com.top_logic.model.search.expr.config.dom.Expr$SingletonLiteral = Singleton literal
com.top_logic.model.search.expr.config.dom.Expr$SingletonLiteral.tooltip = <i>Model literal</i> referencing a singleton.
com.top_logic.model.search.expr.config.dom.Expr$StartTag = Start tag
com.top_logic.model.search.expr.config.dom.Expr$StartTag.tooltip = A HTML start tag.
com.top_logic.model.search.expr.config.dom.Expr$StaticMethod = Static method
com.top_logic.model.search.expr.config.dom.Expr$StaticMethod.tooltip = A method invocation with static syntax <code>method(...)</code>.
com.top_logic.model.search.expr.config.dom.Expr$StringLiteral = String literal
com.top_logic.model.search.expr.config.dom.Expr$StringLiteral.tooltip = A <i>string</i> literal.
com.top_logic.model.search.expr.config.dom.Expr$Sub = Sub
com.top_logic.model.search.expr.config.dom.Expr$Sub.tooltip = Subtraction.
com.top_logic.model.search.expr.config.dom.Expr$TextContent = Text content
com.top_logic.model.search.expr.config.dom.Expr$TextContent.tooltip = Textual content of a <i>HTML</i> macro.
com.top_logic.model.search.expr.config.dom.Expr$True = True
com.top_logic.model.search.expr.config.dom.Expr$True.tooltip = The boolean <code>true</code> literal.
com.top_logic.model.search.expr.config.dom.Expr$Tuple = Tuple
com.top_logic.model.search.expr.config.dom.Expr$Tuple$Coord = Coord
com.top_logic.model.search.expr.config.dom.Expr$Tuple$Coord.tooltip = A single coordinate producing values in a <i>tuple</i>.
com.top_logic.model.search.expr.config.dom.Expr$Tuple.tooltip = Cross product of set expressions creating tuple lists.
com.top_logic.model.search.expr.config.dom.Expr$TypeLiteral = Type literal
com.top_logic.model.search.expr.config.dom.Expr$TypeLiteral.tooltip = <i>Model literal</i> referencing a <i>type</i>.
com.top_logic.model.search.expr.config.dom.Expr$Var = Var
com.top_logic.model.search.expr.config.dom.Expr$Var.tooltip = A variable reference.
com.top_logic.model.search.expr.config.dom.Expr$Wrapped = Wrapped
com.top_logic.model.search.expr.config.dom.Expr$Wrapped.tooltip = <i>Expression</i> wrapper. <p> Useful for the top-level property of a configuration item to allow using custom tag names for selecting the top-level type or as result from a parser to keep the originally formatted source code. </p>
com.top_logic.model.search.expr.config.dom.Expr.AbstractMethod.args = Arguments
com.top_logic.model.search.expr.config.dom.Expr.AbstractMethod.args.tooltip = The arguments to pass to the invokation.
com.top_logic.model.search.expr.config.dom.Expr.AbstractMethod.name = Name
com.top_logic.model.search.expr.config.dom.Expr.AbstractMethod.name.tooltip = The name of the method to call.
com.top_logic.model.search.expr.config.dom.Expr.AbstractTag.tag = Tag
com.top_logic.model.search.expr.config.dom.Expr.AbstractTag.tag.tooltip = The tag name.
com.top_logic.model.search.expr.config.dom.Expr.AbstractTypeLiteral.module = Module
com.top_logic.model.search.expr.config.dom.Expr.AbstractTypeLiteral.module.tooltip = The owning <i>module</i> of the referenced model part.
com.top_logic.model.search.expr.config.dom.Expr.Apply.arg = Argument
com.top_logic.model.search.expr.config.dom.Expr.Apply.arg.tooltip = The argument to pass to <i>Function</i>.
com.top_logic.model.search.expr.config.dom.Expr.Apply.fun = Function
com.top_logic.model.search.expr.config.dom.Expr.Apply.fun.tooltip = The function to invoke with <i>Argument</i>.
com.top_logic.model.search.expr.config.dom.Expr.Arg.name = Name
com.top_logic.model.search.expr.config.dom.Expr.Arg.name.tooltip = An optional name in case of a named argument. <p> If the name is <code>null</code>, a positional argument was given. </p>
com.top_logic.model.search.expr.config.dom.Expr.Arg.value = Value
com.top_logic.model.search.expr.config.dom.Expr.Arg.value.tooltip = The argument value.
com.top_logic.model.search.expr.config.dom.Expr.Assign.expr = Expression
com.top_logic.model.search.expr.config.dom.Expr.Assign.expr.tooltip = The expression delivering the value that is bound to the variable with <i>Name</i>.
com.top_logic.model.search.expr.config.dom.Expr.Assign.name = Name
com.top_logic.model.search.expr.config.dom.Expr.Assign.name.tooltip = The name of the variable that is bound.
com.top_logic.model.search.expr.config.dom.Expr.At.index = Index
com.top_logic.model.search.expr.config.dom.Expr.At.index.tooltip = The index expression.
com.top_logic.model.search.expr.config.dom.Expr.At.self = Self
com.top_logic.model.search.expr.config.dom.Expr.At.self.tooltip = The collection being accessed.
com.top_logic.model.search.expr.config.dom.Expr.Attribute.name = Name
com.top_logic.model.search.expr.config.dom.Expr.Attribute.name.tooltip = The attribute name.
com.top_logic.model.search.expr.config.dom.Expr.Attribute.value = Value
com.top_logic.model.search.expr.config.dom.Expr.Attribute.value.tooltip = The attribute value.
com.top_logic.model.search.expr.config.dom.Expr.AttributeContents.values = Values
com.top_logic.model.search.expr.config.dom.Expr.AttributeContents.values.tooltip = Sequence of <i>attribute content</i> values to be expanded within the attribute.
com.top_logic.model.search.expr.config.dom.Expr.Block.contents = Contents
com.top_logic.model.search.expr.config.dom.Expr.Block.contents.tooltip = The contents to be executed in sequence.
com.top_logic.model.search.expr.config.dom.Expr.Cmp.kind = Kind
com.top_logic.model.search.expr.config.dom.Expr.Cmp.kind.tooltip = The comparison to perform.
com.top_logic.model.search.expr.config.dom.Expr.Define.expr = Expression
com.top_logic.model.search.expr.config.dom.Expr.Define.expr.tooltip = The expression to evaluate with the variable binding in scope.
com.top_logic.model.search.expr.config.dom.Expr.Define.name = Name
com.top_logic.model.search.expr.config.dom.Expr.Define.name.tooltip = The variable name to which the context value is bound.
com.top_logic.model.search.expr.config.dom.Expr.EmbeddedExpression.expr = Expression
com.top_logic.model.search.expr.config.dom.Expr.EmbeddedExpression.expr.tooltip = The expression to be evaluated.
com.top_logic.model.search.expr.config.dom.Expr.Html.contents = Contents
com.top_logic.model.search.expr.config.dom.Expr.Html.contents.tooltip = The HTML contents.
com.top_logic.model.search.expr.config.dom.Expr.Method.self = Self
com.top_logic.model.search.expr.config.dom.Expr.Method.self.tooltip = The value to invoke the method on.
com.top_logic.model.search.expr.config.dom.Expr.ModuleLiteral.name = Name
com.top_logic.model.search.expr.config.dom.Expr.ModuleLiteral.name.tooltip = The module name.
com.top_logic.model.search.expr.config.dom.Expr.Not.expr = Expression
com.top_logic.model.search.expr.config.dom.Expr.Not.expr.tooltip = The negated boolean value.
com.top_logic.model.search.expr.config.dom.Expr.NumberLiteral.value = Value
com.top_logic.model.search.expr.config.dom.Expr.NumberLiteral.value.tooltip = The literal value.
com.top_logic.model.search.expr.config.dom.Expr.Operation.operands = Operands
com.top_logic.model.search.expr.config.dom.Expr.Operation.operands.tooltip = The operands to be combined in this <i>operation</i>.
com.top_logic.model.search.expr.config.dom.Expr.PartLiteral.name = Name
com.top_logic.model.search.expr.config.dom.Expr.PartLiteral.name.tooltip = The name of the referenced <i>type part</i>.
com.top_logic.model.search.expr.config.dom.Expr.PartLiteral.type = Type
com.top_logic.model.search.expr.config.dom.Expr.PartLiteral.type.tooltip = The owning type name.
com.top_logic.model.search.expr.config.dom.Expr.ResKeyLiteral.key = Key
com.top_logic.model.search.expr.config.dom.Expr.ResKeyLiteral.key.tooltip = Name of the key relative to the surrounding <i>resource key literal</i>.
com.top_logic.model.search.expr.config.dom.Expr.ResKeyLiteral.suffixes = Suffixes
com.top_logic.model.search.expr.config.dom.Expr.ResKeyLiteral.suffixes.tooltip = Suffix <i>resource key literal</i> indexed by their <i>Key</i>.
com.top_logic.model.search.expr.config.dom.Expr.ResKeyLiteral.values = Values
com.top_logic.model.search.expr.config.dom.Expr.ResKeyLiteral.values.tooltip = Translations in different languages.
com.top_logic.model.search.expr.config.dom.Expr.ResKeyReference.key = Key
com.top_logic.model.search.expr.config.dom.Expr.ResKeyReference.key.tooltip = The key.
com.top_logic.model.search.expr.config.dom.Expr.SingletonLiteral.module = Module
com.top_logic.model.search.expr.config.dom.Expr.SingletonLiteral.module.tooltip = The module name.
com.top_logic.model.search.expr.config.dom.Expr.SingletonLiteral.name = Name
com.top_logic.model.search.expr.config.dom.Expr.SingletonLiteral.name.tooltip = The singleton name.
com.top_logic.model.search.expr.config.dom.Expr.StartTag.attributes = Attributes
com.top_logic.model.search.expr.config.dom.Expr.StartTag.attributes.tooltip = Attributes of <i>Tag</i>
com.top_logic.model.search.expr.config.dom.Expr.StartTag.empty = Empty
com.top_logic.model.search.expr.config.dom.Expr.StartTag.empty.tooltip = Whether the tag is empty (has no explicit end tag).
com.top_logic.model.search.expr.config.dom.Expr.StringLiteral.value = Value
com.top_logic.model.search.expr.config.dom.Expr.StringLiteral.value.tooltip = The literal value.
com.top_logic.model.search.expr.config.dom.Expr.TextContent.value = Value
com.top_logic.model.search.expr.config.dom.Expr.TextContent.value.tooltip = The literal text.
com.top_logic.model.search.expr.config.dom.Expr.Tuple.Coord.expr = Expression
com.top_logic.model.search.expr.config.dom.Expr.Tuple.Coord.expr.tooltip = The <i>expression</i> producing the set of values for this coordinate. <p> The expression may contain free variables referring to the names of preceding coordinates of the surrounding <i>tuple</i>. During execution, these variables are bound to the actual values of the preceding coordinates to the produce concrete tuple value. </p>
com.top_logic.model.search.expr.config.dom.Expr.Tuple.Coord.name = Name
com.top_logic.model.search.expr.config.dom.Expr.Tuple.Coord.name.tooltip = The name of the coordinate.
com.top_logic.model.search.expr.config.dom.Expr.Tuple.Coord.optional = Optional
com.top_logic.model.search.expr.config.dom.Expr.Tuple.Coord.optional.tooltip = Whether the <code>null</code> value is produced, if <i>Expression</i> generates the empty list. <p> If a <i>tuple</i> has a non-optional coordinate whose <i>Expression</i> generates the empty list, the result of the <i>tuple</i> expression is empty. </p>
com.top_logic.model.search.expr.config.dom.Expr.Tuple.coords = Coords
com.top_logic.model.search.expr.config.dom.Expr.Tuple.coords.tooltip = The coordinates the resulting tuples are composed of.
com.top_logic.model.search.expr.config.dom.Expr.TypeLiteral.name = Name
com.top_logic.model.search.expr.config.dom.Expr.TypeLiteral.name.tooltip = The type name.
com.top_logic.model.search.expr.config.dom.Expr.Var.name = Name
com.top_logic.model.search.expr.config.dom.Expr.Var.name.tooltip = Name of the referenced context variable.
com.top_logic.model.search.expr.config.dom.Expr.Wrapped.expr = Expression
com.top_logic.model.search.expr.config.dom.Expr.Wrapped.expr.tooltip = The wrapped <i>expression</i>.
com.top_logic.model.search.expr.config.dom.Expr.Wrapped.src = Src
com.top_logic.model.search.expr.config.dom.Expr.Wrapped.src.tooltip = The original source code of <i>Expression</i>, when created from a parser, <code>null</code> otherwise.
com.top_logic.model.search.expr.config.operations.AbstractMethodBuilder = Method builder
com.top_logic.model.search.expr.config.operations.AbstractMethodBuilder.tooltip = Base class for <i>method builders</i>.
com.top_logic.model.search.expr.config.operations.AbstractSimpleMethodBuilder = Simple method builder
com.top_logic.model.search.expr.config.operations.AbstractSimpleMethodBuilder.tooltip = <i>Method builder</i> without additional configuration.
com.top_logic.model.search.expr.config.operations.AliasResolver$Builder = Builder
com.top_logic.model.search.expr.config.operations.AliasResolver$Builder.tooltip = <i>Simple method builder</i> creating <i>alias resolver</i>.
com.top_logic.model.search.expr.config.operations.AllBuilder = All builder
com.top_logic.model.search.expr.config.operations.AllBuilder.tooltip = <i>Method builder</i> creating <i>all</i> expressions.
com.top_logic.model.search.expr.config.operations.ApplyBuilder = Apply builder
com.top_logic.model.search.expr.config.operations.ApplyBuilder.tooltip = <i>Method builder</i> creating <i>call</i> expressions.
com.top_logic.model.search.expr.config.operations.AssociationNavigationBuilder = Association navigation builder
com.top_logic.model.search.expr.config.operations.AssociationNavigationBuilder.tooltip = <i>Method builder</i> creating <i>association navigation</i> expressions.
com.top_logic.model.search.expr.config.operations.Attribute$Builder = Builder
com.top_logic.model.search.expr.config.operations.Attribute$Builder.tooltip = <i>Method builder</i> creating <i>attribute</i>.
com.top_logic.model.search.expr.config.operations.ComparatorBuilder = Comparator builder
com.top_logic.model.search.expr.config.operations.ComparatorBuilder.tooltip = Short-cut for creating a comparator function from an accessor functions.
com.top_logic.model.search.expr.config.operations.CompareBuilder = Compare builder
com.top_logic.model.search.expr.config.operations.CompareBuilder.tooltip = <i>Method builder</i> creating <i>compare</i> expressions.
com.top_logic.model.search.expr.config.operations.CompareOpBuilder = Compare builder
com.top_logic.model.search.expr.config.operations.CompareOpBuilder.Config.operator = Operator
com.top_logic.model.search.expr.config.operations.CompareOpBuilder.Config.operator.tooltip = The comparison operator.
com.top_logic.model.search.expr.config.operations.CompareOpBuilder.tooltip = <i>Method builder</i> creating <i>compare</i> expressions.
com.top_logic.model.search.expr.config.operations.Container$Builder = Builder
com.top_logic.model.search.expr.config.operations.Container$Builder.tooltip = <i>Method builder</i> creating <i>container</i>.
com.top_logic.model.search.expr.config.operations.ContainerReference$Builder = Builder
com.top_logic.model.search.expr.config.operations.ContainerReference$Builder.tooltip = <i>Method builder</i> creating <i>container reference</i>.
com.top_logic.model.search.expr.config.operations.ContainsAllBuilder = Contains all builder
com.top_logic.model.search.expr.config.operations.ContainsAllBuilder.tooltip = <i>Method builder</i> creating <i>contains all</i> expressions.
com.top_logic.model.search.expr.config.operations.ContainsElementBuilder = Contains element builder
com.top_logic.model.search.expr.config.operations.ContainsElementBuilder.tooltip = <i>Method builder</i> creating <i>contains element</i> expressions.
com.top_logic.model.search.expr.config.operations.ContainsSomeBuilder = Contains some builder
com.top_logic.model.search.expr.config.operations.ContainsSomeBuilder.tooltip = <i>Method builder</i> creating <i>contains some</i> expressions.
com.top_logic.model.search.expr.config.operations.Copy$Builder = Builder
com.top_logic.model.search.expr.config.operations.Copy$Builder.tooltip = <i>Method builder</i> creating <i>copy</i>.
com.top_logic.model.search.expr.config.operations.Count$Builder = Builder
com.top_logic.model.search.expr.config.operations.Count$Builder.tooltip = <i>Method builder</i> creating <i>count</i>.
com.top_logic.model.search.expr.config.operations.DayBuilder = Day builder
com.top_logic.model.search.expr.config.operations.DayBuilder.tooltip = <i>Method builder</i> creating <i>get day</i> expressions.
com.top_logic.model.search.expr.config.operations.DescBuilder = Desc builder
com.top_logic.model.search.expr.config.operations.DescBuilder.tooltip = <i>Method builder</i> creating <i>desc</i> expressions.
com.top_logic.model.search.expr.config.operations.EmptySetBuilder = Empty set builder
com.top_logic.model.search.expr.config.operations.EmptySetBuilder.tooltip = <i>Method builder</i> creating <i>search expressions</i> representing the empty set.
com.top_logic.model.search.expr.config.operations.EqualsUnversioned$Builder = Builder
com.top_logic.model.search.expr.config.operations.EqualsUnversioned$Builder.tooltip = <i>Method builder</i> creating <i>equals unversioned</i>.
com.top_logic.model.search.expr.config.operations.FilterBuilder = Filter builder
com.top_logic.model.search.expr.config.operations.FilterBuilder.tooltip = <i>Method builder</i> creating <i>filter</i> expressions.
com.top_logic.model.search.expr.config.operations.FlattenBuilder = Flatten builder
com.top_logic.model.search.expr.config.operations.FlattenBuilder.tooltip = <i>Method builder</i> creating <i>flatten</i> expressions.
com.top_logic.model.search.expr.config.operations.ForeachBuilder = Foreach builder
com.top_logic.model.search.expr.config.operations.ForeachBuilder.tooltip = <i>Method builder</i> creating <i>foreach</i> expressions.
com.top_logic.model.search.expr.config.operations.GetBuilder = Get builder
com.top_logic.model.search.expr.config.operations.GetBuilder.tooltip = <i>Method builder</i> creating <i>access</i> or <i>dynamic get</i> expressions.
com.top_logic.model.search.expr.config.operations.IconBuilder$Builder = Builder
com.top_logic.model.search.expr.config.operations.IconBuilder$Builder.tooltip = <i>Simple method builder</i> creating <i>icon builder</i>.
com.top_logic.model.search.expr.config.operations.IfElseBuilder = If else builder
com.top_logic.model.search.expr.config.operations.IfElseBuilder.tooltip = <i>Method builder</i> creating <i>if else</i> expressions.
com.top_logic.model.search.expr.config.operations.InstanceOfBuilder = Instance of builder
com.top_logic.model.search.expr.config.operations.InstanceOfBuilder.tooltip = <i>Method builder</i> creating <i>instance of</i> expressions.
com.top_logic.model.search.expr.config.operations.IntersectionBuilder = Intersection builder
com.top_logic.model.search.expr.config.operations.IntersectionBuilder.tooltip = <i>Method builder</i> creating <i>intersection</i> expressions.
com.top_logic.model.search.expr.config.operations.IsDateEqualBuilder = Is date equal builder
com.top_logic.model.search.expr.config.operations.IsDateEqualBuilder.tooltip = <i>Method builder</i> creating a <i>search expression</i> for comparing <i>date</i> values.
com.top_logic.model.search.expr.config.operations.IsDateGreaterBuilder = Is date greater builder
com.top_logic.model.search.expr.config.operations.IsDateGreaterBuilder.tooltip = <i>Method builder</i> creating a <i>search expression</i> for comparing <i>date</i> values.
com.top_logic.model.search.expr.config.operations.IsEmptyBuilder = Is empty builder
com.top_logic.model.search.expr.config.operations.IsEmptyBuilder.tooltip = <i>Method builder</i> creating <i>is empty</i> expressions.
com.top_logic.model.search.expr.config.operations.IsEqualBuilder = Is equal builder
com.top_logic.model.search.expr.config.operations.IsEqualBuilder.tooltip = <i>Method builder</i> creating <i>is equal</i> expressions.
com.top_logic.model.search.expr.config.operations.IsFloatEqualBuilder = Is float equal builder
com.top_logic.model.search.expr.config.operations.IsFloatEqualBuilder.tooltip = <i>Method builder</i> creating <i>is float equal builder</i> expressions.
com.top_logic.model.search.expr.config.operations.IsFloatGreaterBuilder = Is float greater builder
com.top_logic.model.search.expr.config.operations.IsFloatGreaterBuilder.tooltip = <i>Method builder</i> creating <i>is float greater builder</i> expressions.
com.top_logic.model.search.expr.config.operations.IsStringEqualBuilder = Is string equal builder
com.top_logic.model.search.expr.config.operations.IsStringEqualBuilder.tooltip = <i>Method builder</i> creating <i>is string equal</i> expressions.
com.top_logic.model.search.expr.config.operations.IsStringGreaterBuilder = Is string greater builder
com.top_logic.model.search.expr.config.operations.IsStringGreaterBuilder.tooltip = <i>Method builder</i> creating <i>is string greater</i> expressions.
com.top_logic.model.search.expr.config.operations.LengthBuilder = Length builder
com.top_logic.model.search.expr.config.operations.LengthBuilder.tooltip = <i>Method builder</i> creating <i>length</i> expressions.
com.top_logic.model.search.expr.config.operations.ListBuilder = List builder
com.top_logic.model.search.expr.config.operations.ListBuilder.tooltip = <i>Method builder</i> creating <i>list expression</i> expressions.
com.top_logic.model.search.expr.config.operations.NoArgMethodBuilder = No argument method builder
com.top_logic.model.search.expr.config.operations.NoArgMethodBuilder.tooltip = <i>Method builder</i> for methods without arguments.
com.top_logic.model.search.expr.config.operations.RecursionBuilder = Recursion builder
com.top_logic.model.search.expr.config.operations.RecursionBuilder.tooltip = <i>Method builder</i> creating <i>recursion</i> expressions.
com.top_logic.model.search.expr.config.operations.ReferersBuilder = Referers builder
com.top_logic.model.search.expr.config.operations.ReferersBuilder.tooltip = <i>Method builder</i> creating <i>referers</i> or <i>dynamic referers</i> expressions.
com.top_logic.model.search.expr.config.operations.ResKeyArgumentsBuilder = Resource key arguments builder
com.top_logic.model.search.expr.config.operations.ResKeyArgumentsBuilder.tooltip = <i>Method builder</i> creating <i>resource key arguments</i> expressions.
com.top_logic.model.search.expr.config.operations.ResourceBuilder$Builder = Builder
com.top_logic.model.search.expr.config.operations.ResourceBuilder$Builder.tooltip = <i>Simple method builder</i> creating <i>resource builder</i>.
com.top_logic.model.search.expr.config.operations.RoundBuilder = Round builder
com.top_logic.model.search.expr.config.operations.RoundBuilder.tooltip = <i>Method builder</i> creating <i>round</i> expressions.
com.top_logic.model.search.expr.config.operations.SetBuilder = Set builder
com.top_logic.model.search.expr.config.operations.SetBuilder.tooltip = <i>Method builder</i> creating <i>update</i> expressions.
com.top_logic.model.search.expr.config.operations.SingleArgMethodBuilder = Single argument method builder
com.top_logic.model.search.expr.config.operations.SingleArgMethodBuilder.tooltip = <i>Method builder</i> for methods with a single argument.
com.top_logic.model.search.expr.config.operations.SingleElementBuilder = Single element builder
com.top_logic.model.search.expr.config.operations.SingleElementBuilder.tooltip = <i>Method builder</i> creating <i>single element</i> expressions.
com.top_logic.model.search.expr.config.operations.SingletonBuilder = Singleton builder
com.top_logic.model.search.expr.config.operations.SingletonBuilder.tooltip = <i>Method builder</i> creating <i>singleton</i> expressions.
com.top_logic.model.search.expr.config.operations.SizeBuilder = Size builder
com.top_logic.model.search.expr.config.operations.SizeBuilder.tooltip = <i>Method builder</i> creating <i>size</i> expressions.
com.top_logic.model.search.expr.config.operations.SortBuilder = Sort builder
com.top_logic.model.search.expr.config.operations.SortBuilder.tooltip = <i>Method builder</i> creating <i>sort</i> expressions.
com.top_logic.model.search.expr.config.operations.StringContainsBuilder = String contains builder
com.top_logic.model.search.expr.config.operations.StringContainsBuilder.tooltip = <i>Method builder</i> creating <i>string contains builder</i> expressions.
com.top_logic.model.search.expr.config.operations.StringEndsWithBuilder = String ends with builder
com.top_logic.model.search.expr.config.operations.StringEndsWithBuilder.tooltip = <i>Method builder</i> creating <i>string ends with</i> expressions.
com.top_logic.model.search.expr.config.operations.StringStartsWithBuilder = String starts with builder
com.top_logic.model.search.expr.config.operations.StringStartsWithBuilder.tooltip = <i>Method builder</i> creating <i>string starts with</i> expressions.
com.top_logic.model.search.expr.config.operations.ToBoolean$Builder = Builder
com.top_logic.model.search.expr.config.operations.ToBoolean$Builder.tooltip = <i>Simple method builder</i> creating <i>to list</i>.
com.top_logic.model.search.expr.config.operations.ToList$Builder = Builder
com.top_logic.model.search.expr.config.operations.ToList$Builder.tooltip = <i>Simple method builder</i> creating <i>to list</i>.
com.top_logic.model.search.expr.config.operations.ToSet$Builder = Builder
com.top_logic.model.search.expr.config.operations.ToSet$Builder.tooltip = <i>Simple method builder</i> creating <i>to set</i>.
com.top_logic.model.search.expr.config.operations.TwoArgMethodBuilder = Two argument method builder
com.top_logic.model.search.expr.config.operations.TwoArgMethodBuilder.tooltip = <i>Method builder</i> for methods with a single argument.
com.top_logic.model.search.expr.config.operations.TwoArgOptionalBooleanMethodBuilder = Two argument optional boolean method builder
com.top_logic.model.search.expr.config.operations.TwoArgOptionalBooleanMethodBuilder.tooltip = <i>Method builder</i> for methods with a single argument.
com.top_logic.model.search.expr.config.operations.Type$Builder = Builder
com.top_logic.model.search.expr.config.operations.Type$Builder.tooltip = <i>Method builder</i> creating <i>type</i>.
com.top_logic.model.search.expr.config.operations.UnionBuilder = Union builder
com.top_logic.model.search.expr.config.operations.UnionBuilder.tooltip = <i>Method builder</i> creating <i>unions</i>.
com.top_logic.model.search.expr.config.operations.arithmetic.Ceil$Builder = Builder
com.top_logic.model.search.expr.config.operations.arithmetic.Ceil$Builder.tooltip = <i>Method builder</i> creating <i>ceil</i>.
com.top_logic.model.search.expr.config.operations.arithmetic.Floor$Builder = Builder
com.top_logic.model.search.expr.config.operations.arithmetic.Floor$Builder.tooltip = <i>Method builder</i> creating <i>floor</i>.
com.top_logic.model.search.expr.config.operations.arithmetic.NextId$Builder = Builder
com.top_logic.model.search.expr.config.operations.arithmetic.NextId$Builder.tooltip = <i>Method builder</i> creating <i>next ID</i>.
com.top_logic.model.search.expr.config.operations.binary.Binary$Builder = Builder
com.top_logic.model.search.expr.config.operations.binary.Binary$Builder.tooltip = <i>Method builder</i> creating <i>binary</i> data.
com.top_logic.model.search.expr.config.operations.binary.ZipArchive$Builder = Builder
com.top_logic.model.search.expr.config.operations.binary.ZipArchive$Builder.tooltip = <i>Method builder</i> creating <i>zip archive</i> expressions.
com.top_logic.model.search.expr.config.operations.binary.ZipEntry$Builder = Builder
com.top_logic.model.search.expr.config.operations.binary.ZipEntry$Builder.tooltip = <i>Method builder</i> creating <i>zip entry</i> instances.
com.top_logic.model.search.expr.config.operations.cache.GroupBy$Builder = Builder
com.top_logic.model.search.expr.config.operations.cache.GroupBy$Builder.tooltip = <i>Method builder</i> creating <i>group by</i>.
com.top_logic.model.search.expr.config.operations.cache.IndexBy$Builder = Builder
com.top_logic.model.search.expr.config.operations.cache.IndexBy$Builder.tooltip = <i>Method builder</i> creating <i>index by</i>.
com.top_logic.model.search.expr.config.operations.cache.IndexReduce$Builder = Builder
com.top_logic.model.search.expr.config.operations.cache.IndexReduce$Builder.tooltip = <i>Method builder</i> creating <i>index reduce</i>.
com.top_logic.model.search.expr.config.operations.regex.Regex$Builder = Builder
com.top_logic.model.search.expr.config.operations.regex.Regex$Builder.tooltip = <i>Method builder</i> creating <i>regular expression</i>.
com.top_logic.model.search.expr.config.operations.regex.RegexEnd$Builder = Builder
com.top_logic.model.search.expr.config.operations.regex.RegexEnd$Builder.tooltip = <i>Method builder</i> creating <i>regular expression end</i>.
com.top_logic.model.search.expr.config.operations.regex.RegexGroup$Builder = Builder
com.top_logic.model.search.expr.config.operations.regex.RegexGroup$Builder.tooltip = <i>Method builder</i> creating <i>regular expression group</i>.
com.top_logic.model.search.expr.config.operations.regex.RegexReplace$Builder = Builder
com.top_logic.model.search.expr.config.operations.regex.RegexReplace$Builder.tooltip = <i>Method builder</i> creating <i>regular expression replace</i>.
com.top_logic.model.search.expr.config.operations.regex.RegexSearch$Builder = Builder
com.top_logic.model.search.expr.config.operations.regex.RegexSearch$Builder.tooltip = <i>Method builder</i> creating <i>regular expression search</i>.
com.top_logic.model.search.expr.config.operations.regex.RegexStart$Builder = Builder
com.top_logic.model.search.expr.config.operations.regex.RegexStart$Builder.tooltip = <i>Method builder</i> creating <i>regular expression start</i>.
com.top_logic.model.search.expr.config.operations.revision.CreateRevision$Builder = Builder
com.top_logic.model.search.expr.config.operations.revision.CreateRevision$Builder.tooltip = <i>Simple method builder</i> creating <i>create revision</i>.
com.top_logic.model.search.expr.config.operations.revision.CurrentRevision$Builder = Builder
com.top_logic.model.search.expr.config.operations.revision.CurrentRevision$Builder.tooltip = <i>Simple method builder</i> creating <i>current revision</i>.
com.top_logic.model.search.expr.config.operations.revision.GetRevision$Builder = Builder
com.top_logic.model.search.expr.config.operations.revision.GetRevision$Builder.tooltip = <i>Simple method builder</i> creating <i>get revision</i>.
com.top_logic.model.search.expr.config.operations.revision.InCurrent$Builder = Builder
com.top_logic.model.search.expr.config.operations.revision.InCurrent$Builder.tooltip = <i>Simple method builder</i> creating <i>in current</i>.
com.top_logic.model.search.expr.config.operations.revision.InRevision$Builder = Builder
com.top_logic.model.search.expr.config.operations.revision.InRevision$Builder.tooltip = <i>Simple method builder</i> creating <i>in revision</i>.
com.top_logic.model.search.expr.config.operations.revision.ModifiedRevision$Builder = Builder
com.top_logic.model.search.expr.config.operations.revision.ModifiedRevision$Builder.tooltip = <i>Simple method builder</i> creating <i>modified revision</i>.
com.top_logic.model.search.expr.config.operations.revision.RevisionAt$Builder = Builder
com.top_logic.model.search.expr.config.operations.revision.RevisionAt$Builder.tooltip = <i>Simple method builder</i> creating <i>revision at</i>.
com.top_logic.model.search.expr.config.operations.revision.RevisionForCommit$Builder = Builder
com.top_logic.model.search.expr.config.operations.revision.RevisionForCommit$Builder.tooltip = <i>Simple method builder</i> creating <i>revision for commit</i>.
com.top_logic.model.search.expr.config.operations.string.Internationalize$Builder = Builder
com.top_logic.model.search.expr.config.operations.string.Internationalize$Builder.tooltip = <i>Simple method builder</i> creating an <i>internationalize</i> function.
com.top_logic.model.search.expr.config.operations.string.SubString$Builder = Builder
com.top_logic.model.search.expr.config.operations.string.SubString$Builder.tooltip = <i>Method builder</i> creating <i>sub string</i>.
com.top_logic.model.search.expr.config.operations.string.ToLowerCase$Builder = Builder
com.top_logic.model.search.expr.config.operations.string.ToLowerCase$Builder.tooltip = <i>Method builder</i> creating <i>to lower case</i>.
com.top_logic.model.search.expr.config.operations.string.ToUpperCase$Builder = Builder
com.top_logic.model.search.expr.config.operations.string.ToUpperCase$Builder.tooltip = <i>Method builder</i> creating <i>to upper case</i>.
com.top_logic.model.search.expr.config.operations.string.Translate$Builder = Builder
com.top_logic.model.search.expr.config.operations.string.Translate$Builder.tooltip = <i>Simple method builder</i> creating an <i>translate</i> function.
com.top_logic.model.search.expr.config.operations.struct.GetKey$Builder = Builder
com.top_logic.model.search.expr.config.operations.struct.GetKey$Builder.tooltip = <i>Method builder</i> creating <i>get key</i>.
com.top_logic.model.search.expr.config.operations.struct.GetValue$Builder = Builder
com.top_logic.model.search.expr.config.operations.struct.GetValue$Builder.tooltip = <i>Method builder</i> creating <i>get value</i>.
com.top_logic.model.search.expr.config.operations.struct.KeySet$Builder = Builder
com.top_logic.model.search.expr.config.operations.struct.KeySet$Builder.tooltip = <i>Method builder</i> creating <i>key set</i>.
com.top_logic.model.search.expr.config.operations.struct.NewStruct$Builder = Builder
com.top_logic.model.search.expr.config.operations.struct.NewStruct$Builder.tooltip = <i>Method builder</i> creating <i>new struct</i>.
com.top_logic.model.search.expr.config.operations.struct.StructTypeDef$Builder = Builder
com.top_logic.model.search.expr.config.operations.struct.StructTypeDef$Builder.tooltip = <i>Method builder</i> creating <i>struct type def</i>.
com.top_logic.model.search.expr.config.operations.struct.Values$Builder = Builder
com.top_logic.model.search.expr.config.operations.struct.Values$Builder.tooltip = <i>Method builder</i> creating <i>values</i>.
com.top_logic.model.search.expr.config.operations.web.ContextPath$Builder = Builder
com.top_logic.model.search.expr.config.operations.web.ContextPath$Builder.tooltip = <i>Method builder</i> creating <i>context path</i>.
com.top_logic.model.search.expr.reductions.Average$Builder = Builder
com.top_logic.model.search.expr.reductions.Average$Builder.tooltip = <i>Method builder</i> creating <i>average</i>.
com.top_logic.model.search.expr.reductions.Max$Builder = Builder
com.top_logic.model.search.expr.reductions.Max$Builder.tooltip = <i>Method builder</i> creating <i>maximum</i>.
com.top_logic.model.search.expr.reductions.Min$Builder = Builder
com.top_logic.model.search.expr.reductions.Min$Builder.tooltip = <i>Method builder</i> creating <i>minimum</i>.
com.top_logic.model.search.expr.reductions.Sum$Builder = Builder
com.top_logic.model.search.expr.reductions.Sum$Builder.tooltip = <i>Method builder</i> creating <i>sum</i>.
com.top_logic.model.search.expr.supplier.SearchExpressionCurrentPerson = Search expression current person
com.top_logic.model.search.expr.supplier.SearchExpressionCurrentPerson.tooltip = <i>Supplier search expression builder</i> for the current <i>person</i>.
com.top_logic.model.search.expr.supplier.SearchExpressionNow = Search expression now
com.top_logic.model.search.expr.supplier.SearchExpressionNow.tooltip = <i>Supplier search expression builder</i> for the current date and time.
com.top_logic.model.search.expr.supplier.SearchExpressionToday = Search expression today
com.top_logic.model.search.expr.supplier.SearchExpressionToday.tooltip = <i>Supplier search expression builder</i> for the current day.
com.top_logic.model.search.expr.supplier.SupplierSearchExpressionBuilder = Supplier search expression builder
com.top_logic.model.search.expr.supplier.SupplierSearchExpressionBuilder.tooltip = <i>Method builder</i> creating <i>supplier search expression</i>.
com.top_logic.model.search.fieldprovider.SearchExpressionFieldProvider = Search expression field provider
com.top_logic.model.search.fieldprovider.SearchExpressionFieldProvider.tooltip = <i>Field provider</i> that adds editor configuration options, for instance the maximal displayed lines, to the fields properties.
com.top_logic.model.search.form.DisplayDocumentBuilder = Display document builder
com.top_logic.model.search.form.DisplayDocumentBuilder.Config.document = Document
com.top_logic.model.search.form.DisplayDocumentBuilder.Config.document.tooltip = Search expression used to calculate the document to be displayed from the business model.
com.top_logic.model.search.form.DisplayDocumentBuilder.tooltip = <i>Display document builder</i> computing the document to display using an <i>expression</i> from the given business model.
com.top_logic.model.search.form.DocumentTilePreview = Document tile preview
com.top_logic.model.search.form.DocumentTilePreview.Config.document = Document
com.top_logic.model.search.form.DocumentTilePreview.Config.document.tooltip = Search expression used to calculate the document to be displayed from the business model.
com.top_logic.model.search.form.DocumentTilePreview.Config.model = Model
com.top_logic.model.search.form.DocumentTilePreview.Config.model.tooltip = Search expression used to calculate the model that is used to determine document from.
com.top_logic.model.search.form.DocumentTilePreview.tooltip = Tile preview to display a PDF document as preview in a tile.
com.top_logic.model.search.form.ExprBasedTilePreview = Expression based tile preview
com.top_logic.model.search.form.ExprBasedTilePreview.Config.description = Description
com.top_logic.model.search.form.ExprBasedTilePreview.Config.description.tooltip = <i>Expression</i> computing the description of the preview. <p> The expression is expected to accept one input element, the model returned by <i>Model</i>. It is expected that the <i>expression</i> returns an Object, that can be displayed as textual value, e.g. a <i>resource key</i> or plain string. </p>
com.top_logic.model.search.form.ExprBasedTilePreview.Config.icon.tooltip = Actually unused.
com.top_logic.model.search.form.ExprBasedTilePreview.Config.image = Image
com.top_logic.model.search.form.ExprBasedTilePreview.Config.image.tooltip = <i>Expression</i> computing the icon of the preview. <p> The expression is expected to accept one input element, the model returned by <i>Model</i>. It is expected that the <i>expression</i> returns either a <i>theme image</i> or the source for an image, e.g. "css:fas fa-bug". </p>
com.top_logic.model.search.form.ExprBasedTilePreview.Config.label = Label
com.top_logic.model.search.form.ExprBasedTilePreview.Config.label.tooltip = <i>Expression</i> computing the label of the preview. <p> The expression is expected to accept one input element, the model returned by <i>Model</i>. It is expected that the <i>expression</i> returns an Object, that can be displayed as textual value, e.g. a <i>resource key</i> or plain string. </p>
com.top_logic.model.search.form.ExprBasedTilePreview.Config.model = Model
com.top_logic.model.search.form.ExprBasedTilePreview.Config.model.tooltip = <i>Model spec</i> that is used to compute <i>Label</i>, <i>Description</i>, and <i>Image</i> from.
com.top_logic.model.search.form.ExprBasedTilePreview.tooltip = <i>Label based preview</i> whose label, description, and image are computed by some configured expressions.
com.top_logic.model.search.form.GalleryPreview = Gallery preview
com.top_logic.model.search.form.GalleryPreview.Config.gallery-attribute = Gallery attribute
com.top_logic.model.search.form.GalleryPreview.Config.gallery-attribute.tooltip = Name of the gallery attribute whose value is used to create the preview.
com.top_logic.model.search.form.GalleryPreview.Config.icon = Icon
com.top_logic.model.search.form.GalleryPreview.Config.icon.tooltip = Icon that is displayed when no image can be determined from the model. <p> That may happen when the given model is not of the correct <i>Type</i>, or the gallery attribute is currently not filled. </p>
com.top_logic.model.search.form.GalleryPreview.Config.type.tooltip = The type from which the gallery attribute is taken.
com.top_logic.model.search.form.GalleryPreview.tooltip = Preview displaying the first image of an gallery attribute as preview.
com.top_logic.model.search.locking.LockStrategyByExpression = Lock strategy by expression
com.top_logic.model.search.locking.LockStrategyByExpression.Config.objects = Objects
com.top_logic.model.search.locking.LockStrategyByExpression.Config.objects.tooltip = Function that produces a set of objects for which tokens of kind <i>Kind</i> should be allocated.
com.top_logic.model.search.locking.LockStrategyByExpression.tooltip = <i>Lock strategy</i> that selects its scope with a search expression.
com.top_logic.model.search.migration.DefaultByExpressionProcessor = Default by expression processor
com.top_logic.model.search.migration.DefaultByExpressionProcessor.tooltip = Migrates the <i>computed default value</i> by removing the value for ui configuration property using the given rewriter.
com.top_logic.model.search.persistency.attribute.AbstractExpressionAttribute = Expression attribute
com.top_logic.model.search.persistency.attribute.AbstractExpressionAttribute.Config.expr = Expression
com.top_logic.model.search.persistency.attribute.AbstractExpressionAttribute.Config.expr.tooltip = The expression that computes the attribute value. <p> The expression is expected to be a function that takes the context object that declares the attribute as single argument. </p>
com.top_logic.model.search.persistency.attribute.AbstractExpressionAttribute.tooltip = <i>Derived storage</i> for an attribute that is based on a configured search expression.
com.top_logic.model.search.persistency.attribute.macro.MacroAttribute = Macro attribute
com.top_logic.model.search.persistency.attribute.macro.MacroAttribute.tooltip = <i>Derived storage</i> that renders the expansion of a search expression macro. <p> The value of a <i>macro attribute</i> is a <i>search expression</i> that invokes the configured expression on the object defining the attribute. </p>
com.top_logic.model.search.providers.AccessorByExpression = Accessor by expression
com.top_logic.model.search.providers.AccessorByExpression.Config.getter = Getter
com.top_logic.model.search.providers.AccessorByExpression.Config.getter.tooltip = The getter function retrieving the column value. <p> The expression is expected to be a two-argument function receiving the row object as first argument and the column name as second argument. </p>
com.top_logic.model.search.providers.AccessorByExpression.Config.setter = Setter
com.top_logic.model.search.providers.AccessorByExpression.Config.setter.tooltip = Optional setter function. <p> The expression is expected to be a three-argument function <code>row -> value -> column -> {...}</code> receiving the row object as first argument, the new value to set as second argument and the column name as third argument. </p>
com.top_logic.model.search.providers.AccessorByExpression.tooltip = Configurable <i>accessor</i> using TL-Script expressions.
com.top_logic.model.search.providers.AttributeByExpression = Attribute by expression
com.top_logic.model.search.providers.AttributeByExpression.tooltip = <i>Attribute value locator</i> that can be configured using search expressions.
com.top_logic.model.search.providers.AttributeValueBindingByExpression = Attribute value binding by expression
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.key-attributes = Key attributes
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.key-attributes.tooltip = The attribute names to store retrieved key values in. <p> If more than one attribute name is configured, the <i>Key function</i> is expected to compute a list with as many entries as key attribute names are given. </p> <p> If only a single key attribute name is given, the <i>Key function</i> may compute a single value to use as key. </p>
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.key-fun = Key function
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.key-fun.tooltip = Function computing a key from a given object. <p> The function must retrieve as many values as <i>Key attributes</i> contains names. </p> <p> If multiple key values are returned, they must be wrapped in a list. The result may contain key values of any type (including <code>null</code>), but only their canonical string-representation is stored and passed to <i>Resolver function</i> later on for retrieval. </p>
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.reference-tag = Reference tag
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.reference-tag.tooltip = The tag name to use for storing multiple references for a multiple attribute.
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.resolver-fun = Resolver function
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.resolver-fun.tooltip = Function resolving an object given as many values as <i>Key attributes</i> contains names. <p> If <i>Key attributes</i> contains a single name, a one-argument function is expected. If <i>Key attributes</i> contains <code>n</code> names, a <code>n</code>-argument function is expected. All key arguments passed in are either of type <i>string</i> or <code>null</code>. </p>
com.top_logic.model.search.providers.AttributeValueBindingByExpression.tooltip = <i>Attribute value binding</i> using configured key extractor and key resolver functions in TL-Script.
com.top_logic.model.search.providers.AttributeValueLocatorByExpression = Attribute value locator by expression
com.top_logic.model.search.providers.AttributeValueLocatorByExpression.Config.expr = Expression
com.top_logic.model.search.providers.AttributeValueLocatorByExpression.Config.expr.tooltip = Function resolving an object. <p> The function expects the base object as single argument. </p>
com.top_logic.model.search.providers.AttributeValueLocatorByExpression.tooltip = <i>Attribute value locator</i> that can be implemented with a TL-Script expression.
com.top_logic.model.search.providers.BidirectionalTransformLinkingByExpression = Bidirectional transform linking by expression
com.top_logic.model.search.providers.BidirectionalTransformLinkingByExpression.Config.function = Function
com.top_logic.model.search.providers.BidirectionalTransformLinkingByExpression.Config.function.tooltip = The transformation to apply to the value of the input channel. <p> The function receives the value of the input channel as first argument and the old channel value as second argument. </p>
com.top_logic.model.search.providers.BidirectionalTransformLinkingByExpression.Config.inverse-function = Inverse function
com.top_logic.model.search.providers.BidirectionalTransformLinkingByExpression.Config.inverse-function.tooltip = The transformation back to obtain the value for the input channel. <p> The function receives the value of the transformed channel as first argument. </p>
com.top_logic.model.search.providers.BidirectionalTransformLinkingByExpression.tooltip = <i>Channel linking</i> that creates a <i>bidirectional transforming channel</i> applying the forward and backward transformation implemented in TL-Script.
com.top_logic.model.search.providers.CommandHandlerByExpression = Command handler by expression
com.top_logic.model.search.providers.CommandHandlerByExpression.Config.close-dialog = Close dialog
com.top_logic.model.search.providers.CommandHandlerByExpression.Config.close-dialog.tooltip = Whether to close an active dialog, this <i>command handler</i> is executed in. <p> This flag has no meaning, when the command is not executed within a dialog. </p>
com.top_logic.model.search.providers.CommandHandlerByExpression.Config.operation = Operation
com.top_logic.model.search.providers.CommandHandlerByExpression.Config.operation.tooltip = The operation to perform. <p> The expression is expected to be a function taking the <i>Target</i> model as single argument. The function may return an arbitrary result. The result produced is passed to potential <i>Post create actions</i> configured. </p>
com.top_logic.model.search.providers.CommandHandlerByExpression.tooltip = <i>Command handler</i> that takes the target model as single argument and performs a model operation. <p> The model operation can be configured with a TL-Script expression. </p>
com.top_logic.model.search.providers.ComputedColumnProviderByExpression = Computed column provider by expression
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.accessor = Accessor
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.accessor.tooltip = Function retrieving the column's value. <p> The function expects the row object as single argument. </p> <p> The result of the function is displayed in the table cell defined by this column provider and the given row object. </p>
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.columnType = Column type
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.columnType.tooltip = Type of the values displayed in this column.
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.columnVisibility = Column visibility
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.columnVisibility.tooltip = The visibility of the created column.
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.updater = Updater
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.updater.tooltip = Optional operation storing an updated column value. <p> If no operation is given, the column cannot be edited. </p> <p> The operation expects the row object as first argument and the new value that should be stored as second argument. </p> <p> The operation is executed, when an edited row is saved and the user has edited the displayed value. </p>
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.tooltip = <i>Table configuration provider</i> that adds a single computed column to a table or grid.
com.top_logic.model.search.providers.ConstraintCheckByExpression = Constraint check by expression
com.top_logic.model.search.providers.ConstraintCheckByExpression.Config.check = Check
com.top_logic.model.search.providers.ConstraintCheckByExpression.Config.check.tooltip = Function testing a certain consistency constraint on an object. <p> The function expects the current value of the context attribute as first argument and the base object defining the attribute as second argument. A failure is signaled by returning an internationalized text describing the problem. A <code>null</code> value is interpreted as success: </p> <code>value -> object -> [expression computing <i>resource key</i>]</code> <p> The context attribute is the attribute, this <i>constraint check</i> algorithm is annotated to. It's value is the main value to check. Any check failure messages are reported at the input field for this context attribute, if the check is performed in the user interface. </p>
com.top_logic.model.search.providers.ConstraintCheckByExpression.tooltip = <i>Constraint check</i> that can be parameterized by TL-Script expressions.
com.top_logic.model.search.providers.CreateTypeOptionsByExpression = Dynamic type options
com.top_logic.model.search.providers.CreateTypeOptionsByExpression.Config.default-type = Default type
com.top_logic.model.search.providers.CreateTypeOptionsByExpression.Config.default-type.tooltip = Function selecting the default create type for the given context. <p> The function expects two arguments. The first argument is the context model and the second argument is the list of possible create types computed by <i>Possible types</i>. The function result is expected to be the type that should be created by default, if the user does not choose from <i>Possible types</i>. </p> <p> If not given, the default is to choose the first type returned from the <i>Possible types</i>. </p>
com.top_logic.model.search.providers.CreateTypeOptionsByExpression.Config.include-subtypes = Include subtypes
com.top_logic.model.search.providers.CreateTypeOptionsByExpression.Config.include-subtypes.tooltip = Whether to automatically add all sub-types for classes returned by <i>Possible types</i>.
com.top_logic.model.search.providers.CreateTypeOptionsByExpression.Config.possible-types = Possible types
com.top_logic.model.search.providers.CreateTypeOptionsByExpression.Config.possible-types.tooltip = Function computing possible create types for the given context. <p> The function expects the context model as single argument. The function is expected to return a list of types that can be instantiated in this context. </p>
com.top_logic.model.search.providers.CreateTypeOptionsByExpression.tooltip = <i>Create type options</i> implementation that can be parameterized with TL-Script expressions.
com.top_logic.model.search.providers.DefaultByExpression = Computed default value
com.top_logic.model.search.providers.DefaultByExpression.Config.in-transaction = In transaction
com.top_logic.model.search.providers.DefaultByExpression.Config.in-transaction.tooltip = Whether the computation in <i>Value</i> should be delayed until the create transaction is performed. <p> This setting is necessary, if the script in <i>Value</i> performs operation that can only be executed when in transaction context (e.g. <code>new</code>). </p> <p> When setting this option, it is advisable to hide the property in the create dialog using the annotation <i>create visibility</i>. </p>
com.top_logic.model.search.providers.DefaultByExpression.Config.value = Value
com.top_logic.model.search.providers.DefaultByExpression.Config.value.tooltip = Function computing the default value for the annotated attribute. <p> The function is expected to accept the context object of the newly created object as single argument. The context object of the new object is passed to the <code>new</code> function at the location, where the object is created. In tree structures, the context object is typically the parent node of the newly created node. </p>
com.top_logic.model.search.providers.DefaultByExpression.tooltip = <i>Default provider</i> retrieving the default value from an expression.
com.top_logic.model.search.providers.DropTargetByExpressionConfig.canDrop = Can drop
com.top_logic.model.search.providers.DropTargetByExpressionConfig.canDrop.tooltip = Function checking whether a drop in the context of a referenced element can be performed.
com.top_logic.model.search.providers.DropTargetByExpressionConfig.handleDrop = Handle drop
com.top_logic.model.search.providers.DropTargetByExpressionConfig.handleDrop.tooltip = Operation executing a drop in the context of a referenced element. <p> The arguments depend on the concrete handler sub class. </p> <p> The value returned from the function is passed to potential post-drop actions. </p>
com.top_logic.model.search.providers.DropTargetByExpressionConfig.postCreateActions = Post-drop actions
com.top_logic.model.search.providers.DropTargetByExpressionConfig.postCreateActions.tooltip = Actions to be executed after the dragged element is dropped. <p> These actions get as model the object which is returned by the configured drop functionality. </p>
com.top_logic.model.search.providers.DynamicColumnProviderByExpression = Dynamic column provider by expression
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.accessor = Accessor
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.accessor.tooltip = Function retrieving the column's value. <p> The function expects two arguments. The first argument is the row object. The second argument is the column object as retrieved by the <i>Columns</i> function. </p> <p> The result of the function is displayed in the table cell defined by the given row and column object. </p>
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columnLabel = Column label
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columnLabel.tooltip = Optional function computing the column label. <p> The function expects two arguments. The first argument is one of the column objects as returned by the <i>Columns</i> function. The second argument is the component's model. </p> <p> The column name is expected as result. The result can either be an internationalization resource, a string, or any other object whose textual representation can be shown in the column header. </p> <p> If no label function is specified, the textual representation of the column object as computed by the <i>Columns</i> function is used as label. </p>
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columnType = Column type
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columnType.tooltip = Type of the values displayed in a certain column. <p> If all columns have the same value type, a model type literal can be given, e.g. `tl.core:Integer`. If columns have different types, a function can be specified that computes the column type. </p> <p> The type function expects two arguments. The first argument is one of the column objects as returned by the <i>Columns</i> function. The second argument is the component's model. </p> <p> The result of the type function must be reference to a <i>TopLogic</i> type (a primitive type such as `tl.core:Integer`, an enumeration or any other class type. </p>
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columnVisibility = Column visibility
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columnVisibility.tooltip = The visibility of the created columns.
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columns = Columns
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columns.tooltip = Function computing columns. <p> A column is an arbitrary object that identifies the column. This column object is passed to the other functions for label computation, and value storage and retrieval. </p> <p> The columns function expects the component's model as single argument. Expected as result is an arbitrary list of objects that serve as representatives for the generated table columns. </p>
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.idPrefix = ID prefix
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.idPrefix.tooltip = Common technical prefix that is added to each technical column name of all columns created by this provider.
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.updater = Updater
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.updater.tooltip = Optional operation storing an updated column value. <p> If no operation is given, the column cannot be edited. </p> <p> The operation expects three arguments. The first argument is the row object. The second argument is the column object as retrieved by the <i>Columns</i> function. The third argument is the new value that should be stored. </p> <p> The operation is executed, when an edited row is saved and the user has edited the displayed value. </p>
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.tooltip = <i>Table configuration provider</i> that adds a dynamic number of additional columns to its table.
com.top_logic.model.search.providers.ExecutabilityByExpression = Executability by expression
com.top_logic.model.search.providers.ExecutabilityByExpression.Config.decision = Decision
com.top_logic.model.search.providers.ExecutabilityByExpression.Config.decision.tooltip = Function deciding whether a command can currently be executed. <p> The function takes the target model of the command as single argument. To allow execution, <code>true</code> or <code>null</code> must be returned. Any other value denies execution. If <i>Show disabled</i> is configured to be <code>true</code>, a non-<code>null</code> function result is used as reason for the disabled state show to the user. It's best to return a <i>resource key</i> with an internationalized reason. A string result is used as not internationalized text. Any other value produces no reason. </p>
com.top_logic.model.search.providers.ExecutabilityByExpression.Config.show-disabled = Show disabled
com.top_logic.model.search.providers.ExecutabilityByExpression.Config.show-disabled.tooltip = Whether a non-executable command is displayed in disabled state. <p> A value of <code>false</code> means to hide a non-executable command. If a disabled command is shown, <i>Decision</i> should provide a reason for the non-executability. </p>
com.top_logic.model.search.providers.ExecutabilityByExpression.tooltip = <i>Executability rule</i> that can be parameterized with a TL-Script expression.
com.top_logic.model.search.providers.FilterByExpression = Filter by expression
com.top_logic.model.search.providers.FilterByExpression.Config.predicate = Predicate
com.top_logic.model.search.providers.FilterByExpression.Config.predicate.tooltip = The function deciding whether the second argument is a valid option for the attribute of the object given as first argument.
com.top_logic.model.search.providers.FilterByExpression.tooltip = <i>Object value filter</i> that can be configured dynamically using search expressions for restricting the options.
com.top_logic.model.search.providers.GenericCreateHandlerByExpression = Generic create handler by expression
com.top_logic.model.search.providers.GenericCreateHandlerByExpression.Config.linkOperation = Link operation
com.top_logic.model.search.providers.GenericCreateHandlerByExpression.Config.linkOperation.tooltip = Optional operation linking the newly created object to its create context. <p> A function with three arguments is expected. The first argument is the container of the new object, the second argument is the newly created object itself and the third argument is the creation context. The creation context is the model on which this create handler is executed. Normally, this is the model of the creation component on which this component where this handler is registered. In special cases, the creation context can be customised by Setting <i>Target</i> to indicate where the creation context should be obtained from. </p>
com.top_logic.model.search.providers.GenericCreateHandlerByExpression.tooltip = <i>Generic create handler</i> that allows linking newly created objects to their context using a TL-Script operation.
com.top_logic.model.search.providers.GridApplyHandlerByExpression = Grid apply handler by expression
com.top_logic.model.search.providers.GridApplyHandlerByExpression.Config.can-edit = Can edit
com.top_logic.model.search.providers.GridApplyHandlerByExpression.Config.can-edit.tooltip = Function deciding whether the selected row can be edited. <p> The function expects two arguments. The first argument is the row object in question. The second argument is the the component's model. </p>
com.top_logic.model.search.providers.GridApplyHandlerByExpression.Config.post-apply-script = Post apply script
com.top_logic.model.search.providers.GridApplyHandlerByExpression.Config.post-apply-script.tooltip = Script that is executed after the edited model has been updated with new values from the form and before the apply transaction completes. <p> The script expects the edited object as first argument and the components base model as second argument. </p>
com.top_logic.model.search.providers.GridApplyHandlerByExpression.tooltip = <i>Grid apply handler</i> that can be parameterized by TL-Script.
com.top_logic.model.search.providers.GridCreateHandlerByExpression = New row
com.top_logic.model.search.providers.GridCreateHandlerByExpression.Config.createContext = Container
com.top_logic.model.search.providers.GridCreateHandlerByExpression.Config.createContext.tooltip = Function providing the container of the object to create. <p> Typically, the container of an object has a composition reference that contains the object. During creation, the new object is not yet part of any composition reference, but it pretends to be part of the computed container object. This is useful, if the default value computations of attributes refer to the <code>tContainer()</code> function of the object being created. When providing a create context to a new object, the <code>tContainer()</code> function of that object being created will return the provided create context. </p> <p> The function takes the <i>Target</i> model of the command as argument. </p> <p> If not given, the component's model is used by default. </p>
com.top_logic.model.search.providers.GridCreateHandlerByExpression.Config.createType = Create type
com.top_logic.model.search.providers.GridCreateHandlerByExpression.Config.createType.tooltip = Qualified name of the <i>type</i> to create.
com.top_logic.model.search.providers.GridCreateHandlerByExpression.Config.initOperation = Init operation
com.top_logic.model.search.providers.GridCreateHandlerByExpression.Config.initOperation.tooltip = Optional function linking the new object to its context. <p> The function takes three arguments. The first argument is the container object which is calculated in <i>container</i>, the second argument is the newly created object and the third argument is the target model of the command. </p> <p> If the result of the function is either a <i>resource key</i> or <i>string</i> it is interpreted as error description and the allocation fails with this message. </p> <p> When this operation is invoked, the field values entered in the UI have already been applied to the newly created object. </p>
com.top_logic.model.search.providers.GridCreateHandlerByExpression.tooltip = <i>Grid create handler</i> that can be parameterized with TL-Script expressions.
com.top_logic.model.search.providers.GridDragSourceByExpression = Custom grid drag
com.top_logic.model.search.providers.GridDragSourceByExpression.tooltip = Drag operation for grids that can be completely configured using model queries.
com.top_logic.model.search.providers.GridDropTargetByExpression = Grid drop target by expression
com.top_logic.model.search.providers.GridDropTargetByExpression.tooltip = <i>Table drop target</i> for grids that can be completely configured using model queries.
com.top_logic.model.search.providers.IconProviderByExpression = Icon provider by expression
com.top_logic.model.search.providers.IconProviderByExpression.Config.icon = Icon
com.top_logic.model.search.providers.IconProviderByExpression.Config.icon.tooltip = Function computing the icon for a given object. <p> The function expects the object the icon is requested for as single argument. The function result must be either the icon itself or a string representing the icon resource. </p> <p> A icon reference can be retrieved from a model attribute of type <code>tl.core:Icon</code>. A valid icon resource would be "css:fas fa-car-side". </p> <p> If the function returns <code>null</code>, the static icon of the type is used that is defined for the object's type. </p>
com.top_logic.model.search.providers.IconProviderByExpression.tooltip = <i>Icon provider</i> that can be parameterized with a TL-Script expression.
com.top_logic.model.search.providers.LabelByExpression = Label by expression
com.top_logic.model.search.providers.LabelByExpression.Config.css-class = Css class
com.top_logic.model.search.providers.LabelByExpression.Config.css-class.tooltip = CSS class to return for each object. If not set, the value from the inner provider is used.
com.top_logic.model.search.providers.LabelByExpression.Config.image = Image
com.top_logic.model.search.providers.LabelByExpression.Config.image.tooltip = A constant image that is used for all objects. If not set, the value from the inner provider is used.
com.top_logic.model.search.providers.LabelByExpression.Config.inner = Inner
com.top_logic.model.search.providers.LabelByExpression.Config.inner.tooltip = Configuration of the <i>resource provider</i> to get other properties than label and tooltip from.
com.top_logic.model.search.providers.LabelByExpression.Config.label = Label
com.top_logic.model.search.providers.LabelByExpression.Config.label.tooltip = The expression that is executed with the object for which the label is required. <p> It is expected that the <i>expression</i> uses one argument. </p>
com.top_logic.model.search.providers.LabelByExpression.Config.tooltip = Tooltip
com.top_logic.model.search.providers.LabelByExpression.Config.tooltip.tooltip = The expression that is executed with the object for which the tooltip is required. <p> It is expected that the <i>expression</i> uses one argument. </p>
com.top_logic.model.search.providers.LabelByExpression.tooltip = <i>Proxy resource provider</i> which computes the label and tooltip from the base object using an <i>expression</i>. Other methods are delegated to a configured <i>resource provider</i>.
com.top_logic.model.search.providers.LabelProviderByExpression = Label provider by expression
com.top_logic.model.search.providers.LabelProviderByExpression.Config.label = Label
com.top_logic.model.search.providers.LabelProviderByExpression.Config.label.tooltip = Function computing the label of a given object. <p> The function expects the object for which a label is required as single argument. The result of the function is displayed as label. </p>
com.top_logic.model.search.providers.LabelProviderByExpression.tooltip = <i>Label provider</i> that can be implemented with a <i>TL-Script</i> expression.
com.top_logic.model.search.providers.ListModelByExpression = List model by expression
com.top_logic.model.search.providers.ListModelByExpression.Config.elements = Elements
com.top_logic.model.search.providers.ListModelByExpression.Config.elements.tooltip = Expression retrieving list elements in the context of the component's model. <p> The expression is expected to be a function taking the component's model as single argument. </p> <p> Example: To retrieve all elements with a specific type, for instance all Demo A, you have to write: <pre> <code>all(`DemoTypes:DemoTypes.A`)</code> </pre> as shortcut for <pre> <code>model -> all(`DemoTypes:DemoTypes.A`)</code> </pre> </p>
com.top_logic.model.search.providers.ListModelByExpression.Config.modelForElement = Model for element
com.top_logic.model.search.providers.ListModelByExpression.Config.modelForElement.tooltip = Function retrieving a component model for an element to select. <h3>Parameters</h3> <table class="tlDocTable"> <thead> <tr> <th>Name</th> <th>Beschreibung</th> </tr> </thead> <tbody> <tr> <td><code>selection</code></td> <td>A new selection that should be set in the component. Note: In a component supporting multiple selection, this may be a collection of elements.</td> </tr> <tr> <td><code>model</code></td> <td>The current component's model.</td> </tr> </tbody> </table> <h3>Result</h3> <p> The component's new model adjusted to the given new selection to set. The new model should be chosen so that the function "list elements" will compute a list that contains the given selection. </p> <p> Note: In the argument order, the component's model goes last to allow leaving out this argument definition if the argument is not required. </p>
com.top_logic.model.search.providers.ListModelByExpression.Config.supportsElement = Supports element
com.top_logic.model.search.providers.ListModelByExpression.Config.supportsElement.tooltip = Function deciding whether some (new/changed) object should (now) be part of the collection of objects being shown. <p> This is the case, if the object in question would (now) be included in the result of the evaluation of the <i>Elements</i> function, when re-evaluating it. </p> <p> The function is expected take two arguments, the potential list element as first argument and the current component model as second argument. </p>
com.top_logic.model.search.providers.ListModelByExpression.Config.supportsModel = Supports model
com.top_logic.model.search.providers.ListModelByExpression.Config.supportsModel.tooltip = Function deciding whether some object can be used as component model. <p> The expression is expected to be a function taking the candidate for the component's model as single argument. </p> Example: To accept only component models of type <code>DemoTypes:DemoTypes.A</code>, you have to use the predicate: <pre> <code>model -> $model.instanceOf(`DemoTypes:DemoTypes.A`)</code> </pre>
com.top_logic.model.search.providers.ListModelByExpression.tooltip = <i>List model builder</i> that can be completely configured using model queries.
com.top_logic.model.search.providers.ListSelectionProviderByExpression = List selection provider by expression
com.top_logic.model.search.providers.ListSelectionProviderByExpression.Config.function = Function
com.top_logic.model.search.providers.ListSelectionProviderByExpression.Config.function.tooltip = Function computing a default selection. <h3>Parameters</h3> <table> <tr> <th>Name</th> <th>Description</th> </tr> <tr> <td><code>options</code></td> <td>The list of all available options</td> </tr> <tr> <td><code>model</code></td> <td>The current component's model</td> </tr> <tr> <td><code>lastSelection</code></td> <td>The last active selection, or <code>null</code>, if this is the initial selection, or the last selected object was deleted</td> </tr> </table> <h3>Result</h3> <p> The element from the given options that should be selected by default. </p>
com.top_logic.model.search.providers.ListSelectionProviderByExpression.tooltip = <i>List selection provider</i> that can be parameterized with a <i>TLScript</i> expression.
com.top_logic.model.search.providers.MarkerFactoryByExpression = Marker factory by expression
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.disabled = Disabled
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.disabled.tooltip = The getter function retrieving the value of the boolean "disabled" <p> If disabled is true all <i>calendar control</i> fields out of range will be disabled a cannot be selected </p>
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.in-range-css = In range css
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.in-range-css.tooltip = The getter function retrieving the value of the CSS-Class for <i>calendar control</i> fields in time range.
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.lower-bound = Lower bound
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.lower-bound.tooltip = The getter function retrieving the lower bound date value. <p> The expression is expected to be a one-argument function receiving the object with the date attribute. </p>
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.out-of-range-css = Out of range css
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.out-of-range-css.tooltip = The getter function retrieving the value of the CSS-Class for <i>calendar control</i> fields out of time range.
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.overlap = Overlap
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.overlap.tooltip = The getter function retrieving the value of the boolean "overlap". <p> When overlap is true given <i>calendar control</i> fields don't have to be completely in the range of upperBound and lowerBound to be "in range". </p>
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.upper-bound = Upper bound
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.upper-bound.tooltip = The getter function retrieving the upper bound date value. <p> The expression is expected to be a one-argument function receiving the object with the date attribute. </p>
com.top_logic.model.search.providers.MarkerFactoryByExpression.tooltip = Configurable <i>marker factory</i> using TL-Script expressions.
com.top_logic.model.search.providers.ModelProviderByExpression = Model provider by expression
com.top_logic.model.search.providers.ModelProviderByExpression.Config.expr = Expression
com.top_logic.model.search.providers.ModelProviderByExpression.Config.expr.tooltip = The expression to evaluate. <p> The resulting value is used as (initial) component model of the component using this provider. </p>
com.top_logic.model.search.providers.ModelProviderByExpression.tooltip = <i>Model provider</i> that can be parameterized with a TL-Script expression.
com.top_logic.model.search.providers.MonomorphicCreateFormBuilderByExpression = Monomorphic create form builder by expression
com.top_logic.model.search.providers.MonomorphicCreateFormBuilderByExpression$UIOptions = UI options
com.top_logic.model.search.providers.MonomorphicCreateFormBuilderByExpression$UIOptions.tooltip = Configuration options for <i>monomorphic create form builder</i> that are directly user-configurable.
com.top_logic.model.search.providers.MonomorphicCreateFormBuilderByExpression.WithInitialization.initialization = Initialization
com.top_logic.model.search.providers.MonomorphicCreateFormBuilderByExpression.WithInitialization.initialization.tooltip = Operation filling the form with initial values. <p> Expected is a function taking two arguments. The first argument is the form object, the second argument is the context model of the component. </p>
com.top_logic.model.search.providers.MonomorphicCreateFormBuilderByExpression.tooltip = <i>Monomorphic create form builder</i> that allows to initialize the displayed form with a TL-Script expression.
com.top_logic.model.search.providers.OntoTreeDropByExpression = Custom drop onto tree node
com.top_logic.model.search.providers.OntoTreeDropByExpression.Config.canDrop.tooltip = Function checking if a drop onto the referenced node can be performed. <p> The function receives the dragged elements as first argument and the referenced node as second argument. </p>
com.top_logic.model.search.providers.OntoTreeDropByExpression.Config.handleDrop.tooltip = Function executing a drop onto the referenced node. <p> The function receives the dragged elements as first argument and the referenced node as second argument. </p> <p> The value returned from the function is passed to potential post-drop actions. </p>
com.top_logic.model.search.providers.OntoTreeDropByExpression.tooltip = <i>Tree drop target</i> occurs onto referenced target node itself.
com.top_logic.model.search.providers.OptionsByExpression = Options by expression
com.top_logic.model.search.providers.OptionsByExpression.Config.function = Function
com.top_logic.model.search.providers.OptionsByExpression.Config.function.tooltip = The function that is executed with the object containing the property for which options are to be computed as single argument.
com.top_logic.model.search.providers.OptionsByExpression.tooltip = <i>Generator</i> that can be configured dynamically using search expressions for finding the options.
com.top_logic.model.search.providers.OrderedTreeDropActionOp = Ordered tree drop action
com.top_logic.model.search.providers.OrderedTreeDropActionOp.OrderedTreeDropAction.drop-position-parent = Drop position parent
com.top_logic.model.search.providers.OrderedTreeDropActionOp.OrderedTreeDropAction.drop-position-parent.tooltip = The parent of the business object that marks the drop position.
com.top_logic.model.search.providers.OrderedTreeDropActionOp.tooltip = A specialization of the <i>tree drop action</i> for the <i>custom drop beside or in tree node</i>.
com.top_logic.model.search.providers.OrderedTreeDropByExpression = Custom drop beside or in tree node
com.top_logic.model.search.providers.OrderedTreeDropByExpression.Config.canDrop.tooltip = Function checking if a drop before a reference node can be performed. <p> The function receives the dragged elements as first argument, the parent of the referenced node as second argument and the referenced node itself as third argument. </p> <p> The referenced node is the node before the dragged elements are dropped. If the referenced node is <code>null</code>, then the dragged elements are dropped at the end of the referenced parent's child nodes. </p>
com.top_logic.model.search.providers.OrderedTreeDropByExpression.Config.handleDrop.tooltip = Function executing a drop of dragged elements just before a reference node. <p> The function receives the dragged elements as first argument, the parent of the referenced node as second argument and the referenced node itself as third argument. </p> <p> The referenced node is the node before the dragged elements are dropped. If the referenced node is <code>null</code>, then the dragged elements are dropped at the end of the referenced parent's child nodes. </p> <p> The value returned from the function is passed to a potential post-drop actions. </p>
com.top_logic.model.search.providers.OrderedTreeDropByExpression.tooltip = <i>Tree drop target</i> occurs before, after or within the referenced target node itself.
com.top_logic.model.search.providers.PolymorphicCreateFormBuilderByExpression = Polymorphic create form builder by expression
com.top_logic.model.search.providers.PolymorphicCreateFormBuilderByExpression.tooltip = <i>Create form builder</i> that can be parameterized with a <em>TLScript</em> initializer function.
com.top_logic.model.search.providers.ScriptTask = Script task
com.top_logic.model.search.providers.ScriptTask.Config.script = Script
com.top_logic.model.search.providers.ScriptTask.Config.script.tooltip = Script to execute with the configured <i>Schedules</i>.
com.top_logic.model.search.providers.ScriptTask.tooltip = Task that allows to periodically execute custom scripts.
com.top_logic.model.search.providers.ScriptValueNaming$Name = Name
com.top_logic.model.search.providers.ScriptValueNaming$Name.tooltip = Configuration options for <i>script value naming</i>.
com.top_logic.model.search.providers.ScriptValueNaming.Name.expr = Expression
com.top_logic.model.search.providers.ScriptValueNaming.Name.expr.tooltip = The expression to evaluate to retrieve the value.
com.top_logic.model.search.providers.SecurityObjectByExpression = Security object by expression
com.top_logic.model.search.providers.SecurityObjectByExpression.Config.function = Function
com.top_logic.model.search.providers.SecurityObjectByExpression.Config.function.tooltip = Function that computes the security object from the given model. <p> The function is expected to accept one parameter, the model for which a security object is required. It must return the security object for the given model. </p>
com.top_logic.model.search.providers.SecurityObjectByExpression.tooltip = <i>Security object provider</i> computing the security object by evaluating an <i>expression</i> on the base model.
com.top_logic.model.search.providers.SequenceNameByExpression = Sequence name by expression
com.top_logic.model.search.providers.SequenceNameByExpression.Config.sequence-name = Sequence name
com.top_logic.model.search.providers.SequenceNameByExpression.Config.sequence-name.tooltip = Function computing the sequence name for a given context. <p> The function expects the creation context of an object as single argument. The result of the function is an identifier for the sequence. A new sequence of numbers is started for each unique value returned from this function. </p>
com.top_logic.model.search.providers.SequenceNameByExpression.tooltip = <i>Dynamic sequence name</i> that can be implemented with a <i>TL-Script</i> expression.
com.top_logic.model.search.providers.TableCommandProviderByExpression = Table command provider by expression
com.top_logic.model.search.providers.TableCommandProviderByExpression$Config$ExecutabilityExpression = Executability expression
com.top_logic.model.search.providers.TableCommandProviderByExpression$Config$ExecutabilityExpression.tooltip = Configuration options for a TL-Script executability function.
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.ExecutabilityExpression.decision = Decision
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.ExecutabilityExpression.decision.tooltip = Function deciding whether a command can currently be executed. <p> The function takes two arguments: A list of all table rows as first argument and the current selection set as second argument. </p> <p> To allow execution, <code>true</code> must be returned. Any other value denies execution. If <i>Show disabled</i> is configured to be <code>true</code>, a non-<code>null</code> function result is used as reason for the disabled state show to the user. It's best to return a <i>resource key</i> with an internationalized reason. A string result is used as not internationalized text. Any other value produces no reason. </p>
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.ExecutabilityExpression.show-disabled = Show disabled
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.ExecutabilityExpression.show-disabled.tooltip = Whether a non-executable command is displayed in disabled state. <p> A value of <code>false</code> means to hide a non-executable command. If a disabled command is shown, <i>Decision</i> should provide a reason for the non-executability. </p>
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.executability = Executability
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.executability.tooltip = Whether the command can be executed. <p> All <i>executability expressions</i> are executed before the <i>Implementation</i>. If any of them return a non-<code>true</code> result, the command is not allowed to execute. </p>
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.implementation = Implementation
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.implementation.tooltip = The command script. <p> The script is evaluated in a transaction context. The script expects two arguments. The first argument is the list of all rows displayed in the table. The second argument is the set of selected rows. </p>
com.top_logic.model.search.providers.TableCommandProviderByExpression.tooltip = <i>Table command provider</i> that can be parameterized with TL-Script expressions.
com.top_logic.model.search.providers.TableDragSourceByExpression = Table drag source by expression
com.top_logic.model.search.providers.TableDragSourceByExpression.Config.canDrag = Can drag
com.top_logic.model.search.providers.TableDragSourceByExpression.Config.canDrag.tooltip = Function checking if a given table row can be dragged. <p> The function receives a table row. </p>
com.top_logic.model.search.providers.TableDragSourceByExpression.Config.dragEnabled = Drag enabled
com.top_logic.model.search.providers.TableDragSourceByExpression.Config.dragEnabled.tooltip = Whether dragging from the given table is enabled.
com.top_logic.model.search.providers.TableDragSourceByExpression.tooltip = <i>Table drag source</i> that can be completely configured using model queries.
com.top_logic.model.search.providers.TableDropTargetByExpression = Table drop target by expression
com.top_logic.model.search.providers.TableDropTargetByExpression.Config.canDrop.tooltip = Function checking if a drop in the context of a referenced row can be performed. <p> The function receives the dragged elements as first argument and a referenced row as second argument. </p> <p> Depending on the <i>Drop type</i> setting, the drop operation happens either just before the referenced row (or at the end of all rows in case of a <code>null</code> referenced row) in case of an ordered drop, or on the referenced row, otherwise. </p> <p> The function is expected to return a boolean value, <code>true</code> if the drop can be performed and <code>false</code> otherwise. </p>
com.top_logic.model.search.providers.TableDropTargetByExpression.Config.dropType = Drop type
com.top_logic.model.search.providers.TableDropTargetByExpression.Config.dropType.tooltip = Specifies if the drop occurs ordered, i.e. before or after, or on the referenced row itself.
com.top_logic.model.search.providers.TableDropTargetByExpression.Config.handleDrop.tooltip = Function executing a drop in the context of a referenced row. <p> The function receives the dragged elements as first argument and a referenced row as second argument. </p> <p> Depending on the <i>Drop type</i> setting, the drop operation happens either just before the referenced row (or at the end of all rows in case of a <code>null</code> referenced row) in case of an ordered drop, or on the referenced row, otherwise. </p> <p> The value returned from the function is passed to potential post-drop actions. </p>
com.top_logic.model.search.providers.TableDropTargetByExpression.tooltip = <i>Table drop target</i> that can be completely configured using model queries.
com.top_logic.model.search.providers.TitleByExpression = Title by expression
com.top_logic.model.search.providers.TitleByExpression.Config.expr = Expression
com.top_logic.model.search.providers.TitleByExpression.Config.expr.tooltip = Function computing the label for the <i>Model</i> object. <p> The function is expected to take the <i>Model</i> object as argument and return a label for the given object. The computed label can either be a literal <i>string</i> value or a <i>resource key</i> for internationalization. </p> <p> If <i>Key</i> is also given, the computed label is passed as single argument value to the configured <i>resource key</i> for dynamic embedding. In that case, the text in <i>Key</i> is expected to contain a placeholder <code>{0}</code> where the computed label is to be inserted. </p>
com.top_logic.model.search.providers.TitleByExpression.tooltip = <i>Model title</i> computing the title for the component by applying an <i>expression</i> on the channel of the component.
com.top_logic.model.search.providers.TransactionHandlerByExpression = Transaction handler by expression
com.top_logic.model.search.providers.TransactionHandlerByExpression$UIOptions = UI options
com.top_logic.model.search.providers.TransactionHandlerByExpression$UIOptions.tooltip = Configuration options for <i>transaction handler by expression</i> that are directly configurable.
com.top_logic.model.search.providers.TransactionHandlerByExpression.UIOptions.operation = Operation
com.top_logic.model.search.providers.TransactionHandlerByExpression.UIOptions.operation.tooltip = The operation to execute in a transaction context. <p> Expected is a function taking two arguments. The first argument is the form object providing the user input in its attributes. The second argument is the context model of the command. </p> <p> If the function produces some result, this result is passed to the configured post create actions. For example, this allows to select an object that was created within the transaction. </p>
com.top_logic.model.search.providers.TransactionHandlerByExpression.tooltip = <i>Command handler</i> executing a custom transaction with form input.
com.top_logic.model.search.providers.TransformLinkingByExpression = Transform linking by expression
com.top_logic.model.search.providers.TransformLinkingByExpression.Config.function = Function
com.top_logic.model.search.providers.TransformLinkingByExpression.Config.function.tooltip = The transformation to apply to the value of the input channel. <p> The function receives the value of the input channel as first argument and the old channel value as second argument. </p>
com.top_logic.model.search.providers.TransformLinkingByExpression.tooltip = <i>Channel linking</i> that creates a <i>transforming channel</i> applying a function implemented in TL-Script.
com.top_logic.model.search.providers.TreeDragSourceByExpression = Tree drag source by expression
com.top_logic.model.search.providers.TreeDragSourceByExpression.Config.canDrag = Can drag
com.top_logic.model.search.providers.TreeDragSourceByExpression.Config.canDrag.tooltip = Function checking if a given tree node can be dragged. <p> The function receives a tree node. </p>
com.top_logic.model.search.providers.TreeDragSourceByExpression.Config.dragEnabled = Drag enabled
com.top_logic.model.search.providers.TreeDragSourceByExpression.Config.dragEnabled.tooltip = Whether dragging from the given tree is enabled.
com.top_logic.model.search.providers.TreeDragSourceByExpression.tooltip = <i>Tree drag source</i> that can be completely configured using model queries.
com.top_logic.model.search.providers.TreeDropActionOp = Tree drop action
com.top_logic.model.search.providers.TreeDropActionOp.TreeDropAction.drop-position.tooltip = The business object that marks the drop position.
com.top_logic.model.search.providers.TreeDropActionOp.tooltip = <i>Drop action</i> for dropping an object in a tree with a TL-Script based drop handler. <p> The drop handler has to be a <i>tree drop target by expression</i> handler. </p>
com.top_logic.model.search.providers.TreeDropTargetByExpression = Tree drop target by expression
com.top_logic.model.search.providers.TreeDropTargetByExpression.tooltip = <i>Tree drop target</i> that can be completely configured using model queries.
com.top_logic.model.search.providers.TreeModelByExpression = Tree model by expression
com.top_logic.model.search.providers.TreeModelByExpression.Config.children = Children
com.top_logic.model.search.providers.TreeModelByExpression.Config.children.tooltip = Function resolving the children of a given object in this tree. <p> The function receives a tree node as first argument and the component model as second argument. As result, a list of children nodes of the given tree node is expected. A result of <code>null</code> or the empty list means that the given node is a leaf node. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.finite = Finite
com.top_logic.model.search.providers.TreeModelByExpression.Config.finite.tooltip = Whether it is possible to expand all nodes. <p> This option might only be enabled, if the tree is guaranteed to be finite. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.leafPredicate = Leaf predicate
com.top_logic.model.search.providers.TreeModelByExpression.Config.leafPredicate.tooltip = Function checking whether a given node is a leaf node. <p> A leaf node is not further queried for <i>Children</i>. Visually there is no difference between a leaf node and a non leaf node that has no <i>Children</i>. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.modelPredicate = Model predicate
com.top_logic.model.search.providers.TreeModelByExpression.Config.modelPredicate.tooltip = Predicate that decides whether a given object is a valid input for <i>Root node</i>.
com.top_logic.model.search.providers.TreeModelByExpression.Config.modelQuery = Model query
com.top_logic.model.search.providers.TreeModelByExpression.Config.modelQuery.tooltip = Function retrieving a valid component model from an object for which <i>Node predicate</i> returns <code>true</code>. <p> A valid component model is an object, for which <i>Model predicate</i> returns <code>true</code>. </p> <p> The function receives the potential tree node as first argument and the current component model as second argument. The function is expected to return an object for which <i>Model predicate</i> returns <code>true</code>. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.nodePredicate = Node predicate
com.top_logic.model.search.providers.TreeModelByExpression.Config.nodePredicate.tooltip = Function checking whether a given object is part of this tree. <p> When e.g. an object creation is observed, the new object is inserted into this tree, if the following holds: The <i>Node predicate</i> returns <code>true</code> for the new object. The root node of this tree can be reached by recursively calling <i>Parents</i> on the newly created object. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.nodesToUpdate = Nodes to update
com.top_logic.model.search.providers.TreeModelByExpression.Config.nodesToUpdate.tooltip = Function computing the additional nodes to update if a given object changes. <p> In a tree, the direct parents and children of the corresponding nodes are updated by default. </p> <p> The function receives the changed business object as first argument and the current component model as second argument. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.parents = Parents
com.top_logic.model.search.providers.TreeModelByExpression.Config.parents.tooltip = Function resolving the parent node(s) in this tree. <p> As first argument the function takes an object for which <i>Node predicate</i> yields <code>true</code>. The component model is passed as second argument. The function must return a list of those nodes in this tree for which the given object is in the collection computed by <i>Children</i>. A single result is not required to be wrapped into a list. A result of <code>null</code> is interpreted as empty list. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.rootNode = Root node
com.top_logic.model.search.providers.TreeModelByExpression.Config.rootNode.tooltip = Mapping function that receives the component model returns the root node of this tree. <p> The input component model was accepted by <i>Model predicate</i> before. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.typesToObserve = Types to observe
com.top_logic.model.search.providers.TreeModelByExpression.Config.typesToObserve.tooltip = The types whose instances have to be observed for <i>Nodes to update</i> to be triggered.
com.top_logic.model.search.providers.TreeModelByExpression.tooltip = <i>Tree model builder</i> that can be completely configured using model queries.
com.top_logic.model.search.providers.TreeOptionsByExpression = Tree options by expression
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.children = Children
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.children.tooltip = Function resolving the children of a given object in this tree. <p> The function receives a tree node as first argument and the current object being edited or created as second argument. As result, a list of children nodes of the given tree node is expected. A result of <code>null</code> or the empty list means that the given node is a leaf node. </p>
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.parents = Parents
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.parents.tooltip = Function resolving the parent node(s) in this tree. <p> The function receives a tree node as first argument and the current object being edited or created as second argument. The function must return a list of those nodes in this tree for which the given object is in the collection computed by <i>Children</i>. </p>
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.rootNode = Root node
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.rootNode.tooltip = Function resolving the root node of this tree. <p> The function receives the current object being edited or created as first argument. </p>
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.selection-filter = Selection filter
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.selection-filter.tooltip = Filter, which determines, which nodes are selectable. <p> The function receives a tree node as first argument and the current object being edited or created as second argument. The function returns true if the given node can be selected, otherwise false. </p>
com.top_logic.model.search.providers.TreeOptionsByExpression.tooltip = <i>Generator</i> that can be configured dynamically using search expressions for providing tree like options.
com.top_logic.model.search.providers.TreeTableDragSourceByExpression = Tree table drag source by expression
com.top_logic.model.search.providers.TreeTableDragSourceByExpression.tooltip = <i>Table drag source by expression</i> for tree tables.
com.top_logic.model.search.providers.TreeTableDropTargetByExpression = Tree table drop target by expression
com.top_logic.model.search.providers.TreeTableDropTargetByExpression.tooltip = <i>Table drop target</i> for tree tables that can be completely configured using model queries.
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression = Additional header control provider by expression
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.cssClass = Css class
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.cssClass.tooltip = Additional CSS class for the rendered control.
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.label = Label
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.label.tooltip = The TL-Script expression for the label. <p> This script is called with a single argument: The <i>list</i> of column values. </p> <p> The result of the script is converted to a <i>string</i> with the <i>meta label provider</i>. </p> <p> If not set, only the label <i>Resource key</i> is written. </p>
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.resKey = Resource key
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.resKey.tooltip = The <i>resource key</i> for the label. <p> The tooltip <i>resource key</i> is derived from this setting with the <code>.tooltip</code> suffix. If a value is given, both translations (with and without the <code>.tooltip</code> suffix) must be given. </p> <p> If this is not set, only the <i>Tooltip</i> script is written </p>
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.tooltip = Tooltip
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.tooltip.tooltip = The TL-Script expression for the tooltip. <p> This script is called with a single parameter: The <i>list</i> of column values. </p> <p> The result of the script is converted to a <i>string</i> with the <i>meta label provider</i>. </p> <p> If the value is not set, only the static <i>Resource key</i> tooltip is written. </p>
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.useRowObjects = Use row objects
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.useRowObjects.tooltip = Whether the <i>Label</i> and <i>Tooltip</i> scripts should get the row objects instead of the column values as input.
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.tooltip = The <i>control provider</i> for <i>additional header control by expression</i>.
com.top_logic.model.search.tiles.AbstractPreviewContent = Preview content
com.top_logic.model.search.tiles.AbstractPreviewContent.tooltip = Superclass for <i>content</i>, that create the frame of the preview content.
com.top_logic.model.search.tiles.DynamicTilePreviewText = Dynamic tile preview text
com.top_logic.model.search.tiles.DynamicTilePreviewText.Config.text = Text
com.top_logic.model.search.tiles.DynamicTilePreviewText.Config.text.tooltip = Expression computing the textual content from the model of the preview. <p> The expression is expected to accept one input element, the model of the preview. It is expected that the <i>expression</i> returns an Object, that can be displayed as textual value, e.g. a <i>resource key</i> or plain string. </p>
com.top_logic.model.search.tiles.DynamicTilePreviewText.tooltip = <i>Text</i> computing the text using an <i>expression</i> from the model.
com.top_logic.model.search.tiles.FormPreviewContent = Form preview content
com.top_logic.model.search.tiles.FormPreviewContent.Config.attributes = Attributes
com.top_logic.model.search.tiles.FormPreviewContent.Config.attributes.tooltip = The attributes of <i>Type</i> which are displayed in the form.
com.top_logic.model.search.tiles.FormPreviewContent.Config.icon = Icon
com.top_logic.model.search.tiles.FormPreviewContent.Config.icon.tooltip = Icon that is displayed when the given model is not of the expected <i>Type</i>.
com.top_logic.model.search.tiles.FormPreviewContent.tooltip = <i>Preview content</i> displaying a form as preview. <p> A <i>form preview content</i> displays some attributes of the given model in a simple form as preview. </p>
com.top_logic.model.search.tiles.ImageContentProvider = Image content provider
com.top_logic.model.search.tiles.ImageContentProvider.Config.image = Image
com.top_logic.model.search.tiles.ImageContentProvider.Config.image.tooltip = <i>Expression</i> computing the icon of the preview. <p> The expression is expected to accept one input element, the model for the preview. It is expected that the <i>expression</i> returns either a <i>theme image</i> or the source for an image, e.g. "css:fas fa-bug". </p>
com.top_logic.model.search.tiles.ImageContentProvider.tooltip = <i>Content</i> using a configured image as content of the preview.
com.top_logic.model.search.tiles.ModelBasedTilePreview = Model based tile preview
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.content-preview = Content preview
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.content-preview.tooltip = Configuration of the content preview. <p> The preview is created with the model returned by <i>Model</i>. </p>
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.description = Description
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.description.tooltip = Configuration of the description of the preview. <p> The description is created with the model returned by <i>Model</i>. </p>
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.icon.tooltip = Actually unused.
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.label = Label
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.label.tooltip = Configuration of the label of the preview. When nothing is configured, the name of the component is used as label. <p> The label is created with the model returned by <i>Model</i>. </p>
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.model = Model
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.model.tooltip = <i>Model spec</i> that is used to compute <i>Label</i>, <i>Description</i>, and <i>Content preview</i> from. <p> If no model is specified, the model of the tile is used. For example, if the tile represents a business object, this object is used as the model. </p>
com.top_logic.model.search.tiles.ModelBasedTilePreview.tooltip = <i>Label based preview</i> whose parts (label, description, and actual preview) are configired separately.
com.top_logic.model.search.tiles.SimpleStaticTilePreviewText = Simple static tile preview text
com.top_logic.model.search.tiles.SimpleStaticTilePreviewText.Config.text = Text
com.top_logic.model.search.tiles.SimpleStaticTilePreviewText.Config.text.tooltip = <i>Resource key</i> for the internationalized text. <p> The <i>resource key</i> may have one free variable ({0}) which is filled with the default translation of the preview model. </p>
com.top_logic.model.search.tiles.SimpleStaticTilePreviewText.tooltip = <i>Text</i> computing the text using an configured <i>resource key</i>.
com.top_logic.model.search.tiles.StaticImageContentProvider = Static image content provider
com.top_logic.model.search.tiles.StaticImageContentProvider.Config.image = Image
com.top_logic.model.search.tiles.StaticImageContentProvider.Config.image.tooltip = Image to display in the content area of the tile preview.
com.top_logic.model.search.tiles.StaticImageContentProvider.tooltip = <i>Preview content</i> delivering a static configured image.
com.top_logic.model.search.tiles.TableContentProvider = Table content provider
com.top_logic.model.search.tiles.TableContentProvider$TableConfig = Table configuration
com.top_logic.model.search.tiles.TableContentProvider$TableConfig.tooltip = Configuration of the table to display in the preview area.
com.top_logic.model.search.tiles.TableContentProvider.TableConfig.attributes = Attributes
com.top_logic.model.search.tiles.TableContentProvider.TableConfig.attributes.tooltip = The attributes of <i>Type</i> which are displayed as columns in the table.
com.top_logic.model.search.tiles.TableContentProvider.TableConfig.rows = Rows
com.top_logic.model.search.tiles.TableContentProvider.TableConfig.rows.tooltip = <i>Expression</i> that computes the rows to be displayed in the table based on the model of the preview.
com.top_logic.model.search.tiles.TableContentProvider.TableConfig.title = Title
com.top_logic.model.search.tiles.TableContentProvider.TableConfig.title.tooltip = <i>Expression</i> that computes an optional title to be displayed in the table based on the model of the preview. <p> It is expected that the result is convertable to <i>resource key</i>. </p>
com.top_logic.model.search.tiles.TableContentProvider.tooltip = <i>Content</i> rendering a configured table in the preview area.
com.top_logic.model.search.ui.ExpertSearchExpressionEditor = Expert search expression editor
com.top_logic.model.search.ui.ExpertSearchExpressionEditor$SearchConfig = Search configuration
com.top_logic.model.search.ui.ExpertSearchExpressionEditor$SearchConfig.tooltip = GUI model which is displayed in the <i>expert search expression editor</i>.
com.top_logic.model.search.ui.ExpertSearchExpressionEditor.SearchConfig.search-expression = Search expression
com.top_logic.model.search.ui.ExpertSearchExpressionEditor.SearchConfig.search-expression.tooltip = The search expression to execute.
com.top_logic.model.search.ui.ExpertSearchExpressionEditor.tooltip = Code editor to create TLScript based <i>search expressions</i>.
com.top_logic.model.search.ui.GUISearchExpressionEditor = GUI search expression editor
com.top_logic.model.search.ui.GUISearchExpressionEditor.Config.searchName = Search name
com.top_logic.model.search.ui.GUISearchExpressionEditor.Config.searchName.tooltip = The name of the search configuration to be used.
com.top_logic.model.search.ui.GUISearchExpressionEditor.tooltip = GUI based editor to create SearchExpressions.
com.top_logic.model.search.ui.RefreshSearchHandler = Refresh search handler
com.top_logic.model.search.ui.RefreshSearchHandler.tooltip = Actualize the search results.
com.top_logic.model.search.ui.SearchComponent = Search component
com.top_logic.model.search.ui.SearchComponent.Config.searchExpressionEditorsTabbarName = Search expression editors tabbar name
com.top_logic.model.search.ui.SearchComponent.Config.searchExpressionEditorsTabbarName.tooltip = Name of the GUI search component.
com.top_logic.model.search.ui.SearchComponent.Config.searchExpressionSelectorName = Search expression selector name
com.top_logic.model.search.ui.SearchComponent.Config.searchExpressionSelectorName.tooltip = Name of the SearchSelector component.
com.top_logic.model.search.ui.SearchComponent.tooltip = <i>Layout component</i> for <i>model</i>-based search.
com.top_logic.model.search.ui.SearchResultTable = Search result table
com.top_logic.model.search.ui.SearchResultTable.tooltip = Component displaying a search result.
com.top_logic.model.search.ui.TLScriptCodeEditorControl$PopupCP = Popup CP
com.top_logic.model.search.ui.TLScriptCodeEditorControl$PopupCP.tooltip = <i>Control provider</i> displaying a <i>script code editor control</i> in a popup.
com.top_logic.model.search.ui.help.HelpPageIndex = Help page index
com.top_logic.model.search.ui.help.HelpPageIndex.tooltip = Index of help pages for display in the TL-Script editor as context sensitive help.
com.top_logic.model.search.ui.model.AbstractStep.expected-multiplicity = Expected multiplicity
com.top_logic.model.search.ui.model.AbstractStep.expected-multiplicity.tooltip = The expected multiplicity of the complete <i>navigation value</i> expression, this <i>step</i> is part of.
com.top_logic.model.search.ui.model.AbstractStep.expected-type = Expected type
com.top_logic.model.search.ui.model.AbstractStep.expected-type.tooltip = The expected type of the complete <i>navigation value</i> expression, this <i>step</i> is part of.
com.top_logic.model.search.ui.model.AbstractStep.next = Next
com.top_logic.model.search.ui.model.AbstractStep.next.tooltip = The next (optional) navigation step.
com.top_logic.model.search.ui.model.AbstractTypeSearch.type = Type
com.top_logic.model.search.ui.model.AbstractTypeSearch.type.tooltip = The type of objects being searched.
com.top_logic.model.search.ui.model.AssociationBased = Association based
com.top_logic.model.search.ui.model.AssociationBased.incoming-part = Incoming part
com.top_logic.model.search.ui.model.AssociationBased.incoming-part.tooltip = The incoming <i>association end</i>. <p> The result is the <i>Outgoing part</i>, while the <i>Incoming part</i> points to the context object. </p>
com.top_logic.model.search.ui.model.AssociationBased.outgoing-part = Outgoing part
com.top_logic.model.search.ui.model.AssociationBased.outgoing-part.tooltip = The outgoing <i>association end</i>.
com.top_logic.model.search.ui.model.AssociationBased.tooltip = A <i>search part</i> that is based on using a <i>association</i>.
com.top_logic.model.search.ui.model.AssociationFilter = Association filter
com.top_logic.model.search.ui.model.AssociationFilter.tooltip = An <i>association based</i> <i>navigating filter</i>.
com.top_logic.model.search.ui.model.AssociationStep = Association step
com.top_logic.model.search.ui.model.AssociationStep.tooltip = An <i>association based</i> <i>navigation step</i> expression.
com.top_logic.model.search.ui.model.AttributeBased.attribute = Attribute
com.top_logic.model.search.ui.model.AttributeBased.attribute.tooltip = The <i>structured type part</i> this <i>attribute based</i> is about.
com.top_logic.model.search.ui.model.AttributeFilter = Attribute filter
com.top_logic.model.search.ui.model.AttributeFilter.tooltip = An <i>attribute based</i> <i>navigating filter</i>.
com.top_logic.model.search.ui.model.AttributeStep = Attribute step
com.top_logic.model.search.ui.model.AttributeStep.tooltip = An <i>attribute based</i> <i>navigation step</i> expression.
com.top_logic.model.search.ui.model.CombinationExpression.combinator = Combinator
com.top_logic.model.search.ui.model.CombinationExpression.combinator.tooltip = The <i>search expression combinator</i> defines how the expressions should be combined into a single expression.
com.top_logic.model.search.ui.model.CombinedFilter = Combined filter
com.top_logic.model.search.ui.model.CombinedFilter.tooltip = <i>Search filter</i> consisting of a combination of inner filters.
com.top_logic.model.search.ui.model.CombinedOperator$Impl = Implementation
com.top_logic.model.search.ui.model.CombinedOperator$Impl.tooltip = <i>Implementation</i> for <i>combined operator</i>.
com.top_logic.model.search.ui.model.ContextFilter = Context filter
com.top_logic.model.search.ui.model.ContextFilter.context-expression = Context expression
com.top_logic.model.search.ui.model.ContextFilter.context-expression.tooltip = Referenced expression with matching type from some <i>Context</i> ancestor.
com.top_logic.model.search.ui.model.ContextFilter.tooltip = <i>Search filter</i> that matches exactly a certain object from a search expression in its context. <p> This is not a test of one of the attributes of an object, but a test about the object (identity) itself. </p> <p> <i>Reference value</i> represents the starting point of a navigation. </p>
com.top_logic.model.search.ui.model.ContextFilter.type = Type
com.top_logic.model.search.ui.model.ContextFilter.type.tooltip = The type of the context expression.
com.top_logic.model.search.ui.model.FilterContainer.filters = Filters
com.top_logic.model.search.ui.model.FilterContainer.filters.tooltip = List of <i>search filter</i> to apply to the context objects.
com.top_logic.model.search.ui.model.FilterContainer.name.tooltip = The name for the sub-search is filled automatically.
com.top_logic.model.search.ui.model.IncomingReferenceBased = Incoming reference based
com.top_logic.model.search.ui.model.IncomingReferenceBased.reference = Reference
com.top_logic.model.search.ui.model.IncomingReferenceBased.reference.tooltip = The <i>reference</i> that is navigated backwards.
com.top_logic.model.search.ui.model.IncomingReferenceBased.tooltip = A <i>search part</i> that is based on using an incoming <i>reference</i>.
com.top_logic.model.search.ui.model.IncomingReferenceFilter = Incoming reference filter
com.top_logic.model.search.ui.model.IncomingReferenceFilter.tooltip = <i>Search filter</i> that matches objects that are referenced from other objects in a certain reference-valued attribute.
com.top_logic.model.search.ui.model.IncomingReferenceStep = Incoming reference step
com.top_logic.model.search.ui.model.IncomingReferenceStep.tooltip = A <i>incoming reference based</i> <i>navigation step</i> expression.
com.top_logic.model.search.ui.model.NamedDefinition.name = Name
com.top_logic.model.search.ui.model.NamedDefinition.name.tooltip = Name for referring to the context object from inner expressions.
com.top_logic.model.search.ui.model.NavigationValue = Navigation value
com.top_logic.model.search.ui.model.NavigationValue.base = Base
com.top_logic.model.search.ui.model.NavigationValue.base.tooltip = Reference to some context object to start the navigation with.
com.top_logic.model.search.ui.model.NavigationValue.tooltip = <i>Right hand side</i> that produces a comparison value by navigating properties of some named context object.
com.top_logic.model.search.ui.model.OperatorContainer.comparisons = Comparisons
com.top_logic.model.search.ui.model.OperatorContainer.comparisons.tooltip = The <i>operators</i> to execute on the property value.
com.top_logic.model.search.ui.model.PredefinedReferenceValue = Predefined reference value
com.top_logic.model.search.ui.model.PredefinedReferenceValue.tooltip = A <i>reference value</i> to a predefined value with an internationalized name.
com.top_logic.model.search.ui.model.QueryValue = Query value
com.top_logic.model.search.ui.model.QueryValue.part = Part
com.top_logic.model.search.ui.model.QueryValue.part.tooltip = The property to evaluate on the result set. <p> All objects are in the result set that are of the owning type of the <i>Part</i> and match the <i>Filters</i>. </p>
com.top_logic.model.search.ui.model.QueryValue.tooltip = Value set retrieved from evaluating a property of all result objects of a sub-query.
com.top_logic.model.search.ui.model.ReferenceValue = Reference value
com.top_logic.model.search.ui.model.ReferenceValue.name = Name
com.top_logic.model.search.ui.model.ReferenceValue.name.tooltip = The <i>Name</i> (<i>named definition</i>) of the expression referred to.
com.top_logic.model.search.ui.model.ReferenceValue.tooltip = Reference to some definition expression. <p> This represents the starting point of a navigation. </p> <p> <i>Context filter</i> has a similar function: "The tested object is one of the context values." It is therefore not a test of one of the attributes, but a test about the object (identity) itself. </p>
com.top_logic.model.search.ui.model.Search = Search
com.top_logic.model.search.ui.model.Search.config-name.tooltip = See: <i>Configuration name</i> <p> All other <i>search parts</i> navigate to their container to get the value of this property. But this is the top-level <i>search part</i>, it has no container. Therefore, the value has to be set explicitly. </p>
com.top_logic.model.search.ui.model.Search.predefined-parameters = Predefined parameters
com.top_logic.model.search.ui.model.Search.predefined-parameters.tooltip = A <i>list</i> of predefined parameters. <p> These parameters are the same for every query. </p>
com.top_logic.model.search.ui.model.Search.tooltip = Top-level search UI model.
com.top_logic.model.search.ui.model.SubQuery = Sub query
com.top_logic.model.search.ui.model.SubQuery.tooltip = <i>Right hand side</i> that selects the compare object dynamically with a nested query.
com.top_logic.model.search.ui.model.SubSearch = Sub search
com.top_logic.model.search.ui.model.SubSearch.tooltip = <i>Search parts</i> that represent a complete search expression.
com.top_logic.model.search.ui.model.TranslatedSearchPart = Translated search part
com.top_logic.model.search.ui.model.TranslatedSearchPart.tooltip = A <i>search part</i> that has an internationalized name.
com.top_logic.model.search.ui.model.TranslatedSearchPart.translation = Translation
com.top_logic.model.search.ui.model.TranslatedSearchPart.translation.tooltip = The internationalized name.
com.top_logic.model.search.ui.model.TupleSearch = Tuple search
com.top_logic.model.search.ui.model.TupleSearch$CoordDef = Coord def
com.top_logic.model.search.ui.model.TupleSearch$CoordDef$InlineTypeSearch = Inline type search
com.top_logic.model.search.ui.model.TupleSearch$CoordDef$InlineTypeSearch.tooltip = UI part representing a coordinate expression.
com.top_logic.model.search.ui.model.TupleSearch$CoordDef.tooltip = Definition of a tuples coordinate values.
com.top_logic.model.search.ui.model.TupleSearch$NullableSpec = Nullable spec
com.top_logic.model.search.ui.model.TupleSearch$NullableSpec.tooltip = Option whether a tuple's coordinate is filled with <code>null</code>, if no matches are found for that coordinate.
com.top_logic.model.search.ui.model.TupleSearch.CoordDef.expr = Expression
com.top_logic.model.search.ui.model.TupleSearch.CoordDef.expr.tooltip = UI for entering the expression for creating values for this coordinate.
com.top_logic.model.search.ui.model.TupleSearch.CoordDef.nullable = Nullable
com.top_logic.model.search.ui.model.TupleSearch.CoordDef.nullable.tooltip = Whether this coordinate is optional or mandatory.
com.top_logic.model.search.ui.model.TupleSearch.NullableSpec.MANDATORY = Mandatory
com.top_logic.model.search.ui.model.TupleSearch.NullableSpec.MANDATORY.tooltip = The coordinate is mandatory. If no match is found, no tuple result is produced.
com.top_logic.model.search.ui.model.TupleSearch.NullableSpec.NULLABLE = Nullable
com.top_logic.model.search.ui.model.TupleSearch.NullableSpec.NULLABLE.tooltip = The coordinate is optional. If no match is found for that coordinate, it is filled with <code>null</code>.
com.top_logic.model.search.ui.model.TupleSearch.coords = Coords
com.top_logic.model.search.ui.model.TupleSearch.coords.tooltip = Definition of the tuple's coordinates.
com.top_logic.model.search.ui.model.TupleSearch.tooltip = UI for creating a tuple search expression.
com.top_logic.model.search.ui.model.TypeCheckStep = Type check step
com.top_logic.model.search.ui.model.TypeCheckStep.tooltip = An <i>type check based</i> <i>navigation step</i> expression.
com.top_logic.model.search.ui.model.TypeSearch = Type search
com.top_logic.model.search.ui.model.TypeSearch.tooltip = Top-level search for objects of a specified type.
com.top_logic.model.search.ui.model.UnionSearch.unions = Unions
com.top_logic.model.search.ui.model.UnionSearch.unions.tooltip = The result of this <i>search</i> is the union of the results of the <i>type searches</i>.
com.top_logic.model.search.ui.model.ValueContext.value-multiplicity = Value multiplicity
com.top_logic.model.search.ui.model.ValueContext.value-multiplicity.tooltip = The multiplicity of the value type. <p> false: Only a single value. true: Multiple values. </p>
com.top_logic.model.search.ui.model.ValueContext.value-type = Value type
com.top_logic.model.search.ui.model.ValueContext.value-type.tooltip = The <i>type</i> that this expression is about.
com.top_logic.model.search.ui.model.literal.LiteralBooleanValue = Literal boolean value
com.top_logic.model.search.ui.model.literal.LiteralBooleanValue.tooltip = <i>Literal primitive value</i> describing a literal boolean value.
com.top_logic.model.search.ui.model.literal.LiteralDateTimeValue = Literal date time value
com.top_logic.model.search.ui.model.literal.LiteralDateTimeValue.tooltip = <i>Literal primitive value</i> describing a literal date with time value.
com.top_logic.model.search.ui.model.literal.LiteralDateValue = Literal date value
com.top_logic.model.search.ui.model.literal.LiteralDateValue.tooltip = <i>Literal primitive value</i> describing a literal date value.
com.top_logic.model.search.ui.model.literal.LiteralFloatValue = Literal float value
com.top_logic.model.search.ui.model.literal.LiteralFloatValue.tooltip = <i>Literal primitive value</i> describing a literal float value.
com.top_logic.model.search.ui.model.literal.LiteralIntegerValue = Literal integer value
com.top_logic.model.search.ui.model.literal.LiteralIntegerValue.tooltip = <i>Literal primitive value</i> describing a literal integer value. <p> It uses <i>long</i> instead of <i>integer</i> to cover as many integer number types as possible. </p>
com.top_logic.model.search.ui.model.literal.LiteralObjectSet = Literal object set
com.top_logic.model.search.ui.model.literal.LiteralObjectSet.objects = Objects
com.top_logic.model.search.ui.model.literal.LiteralObjectSet.objects.tooltip = The literal example set.
com.top_logic.model.search.ui.model.literal.LiteralObjectSet.tooltip = <i>Right hand side</i> describing a literal set of compare objects.
com.top_logic.model.search.ui.model.literal.LiteralObjectValue = Literal object value
com.top_logic.model.search.ui.model.literal.LiteralObjectValue.object = Object
com.top_logic.model.search.ui.model.literal.LiteralObjectValue.object.tooltip = The literal example set.
com.top_logic.model.search.ui.model.literal.LiteralObjectValue.tooltip = <i>Right hand side</i> describing a literal compare object.
com.top_logic.model.search.ui.model.literal.LiteralPrimitiveValue.compare-value = Compare value
com.top_logic.model.search.ui.model.literal.LiteralPrimitiveValue.compare-value.tooltip = The actual value to compare with. <p> Note: The property cannot be declared statically <i>mandatory</i> because this would prevent configuring template values in e.g. y <i>search options</i> with non-set values. </p>
com.top_logic.model.search.ui.model.literal.LiteralStringValue = Literal string value
com.top_logic.model.search.ui.model.literal.LiteralStringValue.tooltip = <i>Literal primitive value</i> describing a literal string value.
com.top_logic.model.search.ui.model.operator.AbstractFloatCompare.precision = Precision
com.top_logic.model.search.ui.model.operator.AbstractFloatCompare.precision.tooltip = The number of decimal digits after the dot that are relevant for the comparison.
com.top_logic.model.search.ui.model.operator.AbstractStringCompare.case-sensitive = Case sensitive
com.top_logic.model.search.ui.model.operator.AbstractStringCompare.case-sensitive.tooltip = Whether the comparison should consider upper and lower case letters different.
com.top_logic.model.search.ui.model.operator.BooleanCompare$Impl = Implementation
com.top_logic.model.search.ui.model.operator.BooleanCompare$Impl.tooltip = <i>Implementation</i> for <i>boolean compare</i>.
com.top_logic.model.search.ui.model.operator.BooleanCompare$Kind = Kind
com.top_logic.model.search.ui.model.operator.BooleanCompare$Kind.tooltip = Kind of <i>boolean compare</i> comparison.
com.top_logic.model.search.ui.model.operator.BooleanCompare.Kind.EQUALS = Equals
com.top_logic.model.search.ui.model.operator.BooleanCompare.Kind.EQUALS.tooltip = For a match, the compared values must be equal.
com.top_logic.model.search.ui.model.operator.BooleanCompare.Kind.NOT_EQUALS = Not equals
com.top_logic.model.search.ui.model.operator.BooleanCompare.Kind.NOT_EQUALS.tooltip = For a match, the compared values must not be equal.
com.top_logic.model.search.ui.model.operator.BooleanCompare.kind = Kind
com.top_logic.model.search.ui.model.operator.BooleanCompare.kind.tooltip = Kind of comparison.
com.top_logic.model.search.ui.model.operator.ComparableCompare$Impl = Implementation
com.top_logic.model.search.ui.model.operator.ComparableCompare$Impl.tooltip = <i>Implementation</i> for <i>comparable compare</i>.
com.top_logic.model.search.ui.model.operator.ComparableCompare.kind = Kind
com.top_logic.model.search.ui.model.operator.ComparableCompare.kind.tooltip = Kind of comparison.
com.top_logic.model.search.ui.model.operator.ComparableRangeCompare$Impl = Implementation
com.top_logic.model.search.ui.model.operator.ComparableRangeCompare$Impl.tooltip = <i>Implementation</i> for <i>comparable range compare</i>.
com.top_logic.model.search.ui.model.operator.ComparableRangeCompare.kind = Kind
com.top_logic.model.search.ui.model.operator.ComparableRangeCompare.kind.tooltip = Kind of comparison.
com.top_logic.model.search.ui.model.operator.DateCompare$Impl = Implementation
com.top_logic.model.search.ui.model.operator.DateCompare$Impl.tooltip = <i>Implementation</i> for <i>date compare</i>.
com.top_logic.model.search.ui.model.operator.DateCompare.kind = Kind
com.top_logic.model.search.ui.model.operator.DateCompare.kind.tooltip = Kind of comparison.
com.top_logic.model.search.ui.model.operator.DateRangeCompare$Impl = Implementation
com.top_logic.model.search.ui.model.operator.DateRangeCompare$Impl.tooltip = <i>Implementation</i> for <i>date range compare</i>.
com.top_logic.model.search.ui.model.operator.DateRangeCompare.kind = Kind
com.top_logic.model.search.ui.model.operator.DateRangeCompare.kind.tooltip = Kind of comparison.
com.top_logic.model.search.ui.model.operator.Empty$Impl = Implementation
com.top_logic.model.search.ui.model.operator.Empty$Impl.tooltip = <i>Implementation</i> for <i>empty</i>.
com.top_logic.model.search.ui.model.operator.FilterCompare$Impl = Implementation
com.top_logic.model.search.ui.model.operator.FilterCompare$Impl.tooltip = <i>Implementation</i> for <i>filter compare</i>.
com.top_logic.model.search.ui.model.operator.FilterCompare$Kind = Kind
com.top_logic.model.search.ui.model.operator.FilterCompare$Kind.tooltip = Filter strategy.
com.top_logic.model.search.ui.model.operator.FilterCompare.Kind.ALL = All
com.top_logic.model.search.ui.model.operator.FilterCompare.Kind.ALL.tooltip = Filter only matches, if all elements match all <i>Filters</i> (<i>filter container</i>).
com.top_logic.model.search.ui.model.operator.FilterCompare.Kind.ONE = One
com.top_logic.model.search.ui.model.operator.FilterCompare.Kind.ONE.tooltip = Filter matches, if at least one element matches all <i>Filters</i> (<i>filter container</i>).
com.top_logic.model.search.ui.model.operator.FilterCompare.kind = Kind
com.top_logic.model.search.ui.model.operator.FilterCompare.kind.tooltip = <i>Kind</i> of filter strategy.
com.top_logic.model.search.ui.model.operator.FilterCompareSingleton$Impl = Implementation
com.top_logic.model.search.ui.model.operator.FilterCompareSingleton$Impl.tooltip = <i>Implementation</i> for <i>filter compare singleton</i>.
com.top_logic.model.search.ui.model.operator.FloatCompare$Impl = Implementation
com.top_logic.model.search.ui.model.operator.FloatCompare$Impl.tooltip = <i>Implementation</i> for <i>float compare</i>.
com.top_logic.model.search.ui.model.operator.FloatCompare$Kind = Kind
com.top_logic.model.search.ui.model.operator.FloatCompare$Kind.tooltip = Kind of a <i>float compare</i>.
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.EQUALS = Equals
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.EQUALS.tooltip = For a match, both values must be equal.
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.GE = Ge
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.GE.tooltip = For a match, the left value must be greater or equal to the right value.
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.GT = Gt
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.GT.tooltip = For a match, the left value must be greater than the right value.
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.LE = Le
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.LE.tooltip = For a match, the left value must be lower or equal to the right value.
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.LT = Lt
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.LT.tooltip = For a match, the left value must be lower than the right value.
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.NOT_EQUALS = Not equals
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.NOT_EQUALS.tooltip = For a match, the compared values must not be equal.
com.top_logic.model.search.ui.model.operator.FloatCompare.kind = Kind
com.top_logic.model.search.ui.model.operator.FloatCompare.kind.tooltip = Kind of comparison.
com.top_logic.model.search.ui.model.operator.FloatRangeCompare$Impl = Implementation
com.top_logic.model.search.ui.model.operator.FloatRangeCompare$Impl.tooltip = <i>Implementation</i> for <i>float range compare</i>.
com.top_logic.model.search.ui.model.operator.FloatRangeCompare.kind = Kind
com.top_logic.model.search.ui.model.operator.FloatRangeCompare.kind.tooltip = Kind of comparison.
com.top_logic.model.search.ui.model.operator.IntegerCompare$Impl = Implementation
com.top_logic.model.search.ui.model.operator.IntegerCompare$Impl.tooltip = <i>Implementation</i> for <i>integer compare</i>.
com.top_logic.model.search.ui.model.operator.IntegerCompare$Kind = Kind
com.top_logic.model.search.ui.model.operator.IntegerCompare$Kind.tooltip = Kind of an integer comparison.
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.EQUALS = Equals
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.EQUALS.tooltip = For a match, both values must be equal.
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.GE = Ge
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.GE.tooltip = For a match, the left value must be greater or equal to the right value.
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.GT = Gt
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.GT.tooltip = For a match, the left value must be greater than the right value.
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.LE = Le
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.LE.tooltip = For a match, the left value must be lower or equal to the right value.
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.LT = Lt
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.LT.tooltip = For a match, the left value must be lower than the right value.
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.NOT_EQUALS = Not equals
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.NOT_EQUALS.tooltip = For a match, both values must be different.
com.top_logic.model.search.ui.model.operator.IntegerCompare.kind = Kind
com.top_logic.model.search.ui.model.operator.IntegerCompare.kind.tooltip = Kind of comparison.
com.top_logic.model.search.ui.model.operator.IntegerRangeCompare$Impl = Implementation
com.top_logic.model.search.ui.model.operator.IntegerRangeCompare$Impl.tooltip = <i>Implementation</i> for <i>integer range compare</i>.
com.top_logic.model.search.ui.model.operator.IntegerRangeCompare.kind = Kind
com.top_logic.model.search.ui.model.operator.IntegerRangeCompare.kind.tooltip = Kind of comparison.
com.top_logic.model.search.ui.model.operator.NotEmpty$Impl = Implementation
com.top_logic.model.search.ui.model.operator.NotEmpty$Impl.tooltip = <i>Implementation</i> for <i>not empty</i>.
com.top_logic.model.search.ui.model.operator.ObjectCompare.compare-objects = Compare objects
com.top_logic.model.search.ui.model.operator.ObjectCompare.compare-objects.tooltip = Description of the right hand side object set to compare with.
com.top_logic.model.search.ui.model.operator.Operator$Impl = Implementation
com.top_logic.model.search.ui.model.operator.Operator$Impl.tooltip = Algorithm constructing <i>search expressions</i> for its operator configuration.
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind = Primitive compare kind
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.EQUALS = Equals
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.EQUALS.tooltip = The values equal each other.
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.GE = Ge
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.GE.tooltip = The left-hand side is greater or equal to the right-hand side.
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.GT = Gt
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.GT.tooltip = The left-hand side is greater to the right-hand side.
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.LE = Le
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.LE.tooltip = The left-hand side is less than or equal to the right-hand side.
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.LT = Lt
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.LT.tooltip = The left-hand side is less than the right-hand side.
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.NOT_EQUALS = Not equals
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.NOT_EQUALS.tooltip = The left-hand side not equals the right-hand side.
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.tooltip = Kind of comparison.
com.top_logic.model.search.ui.model.operator.PrimitiveRangeCompare.lower-bound = Lower bound
com.top_logic.model.search.ui.model.operator.PrimitiveRangeCompare.lower-bound.tooltip = The lower bound of the range.
com.top_logic.model.search.ui.model.operator.PrimitiveRangeCompare.upper-bound = Upper bound
com.top_logic.model.search.ui.model.operator.PrimitiveRangeCompare.upper-bound.tooltip = The upper bound of the range.
com.top_logic.model.search.ui.model.operator.PrimitiveValueCompare.comparison-value = Comparison value
com.top_logic.model.search.ui.model.operator.PrimitiveValueCompare.comparison-value.tooltip = Specification of right hand side value used for comparison.
com.top_logic.model.search.ui.model.operator.RangeCompareKind = Range compare kind
com.top_logic.model.search.ui.model.operator.RangeCompareKind.IN_RANGE = In range
com.top_logic.model.search.ui.model.operator.RangeCompareKind.IN_RANGE.tooltip = Check that the value is within the range.
com.top_logic.model.search.ui.model.operator.RangeCompareKind.NOT_IN_RANGE = Not in range
com.top_logic.model.search.ui.model.operator.RangeCompareKind.NOT_IN_RANGE.tooltip = Check that the value is not within the range.
com.top_logic.model.search.ui.model.operator.RangeCompareKind.tooltip = Kind of <i>integer range compare</i> comparison.
com.top_logic.model.search.ui.model.operator.SetCompare$Impl = Implementation
com.top_logic.model.search.ui.model.operator.SetCompare$Impl.tooltip = <i>Implementation</i> for <i>set compare</i>.
com.top_logic.model.search.ui.model.operator.SetCompare$Operation = Operation
com.top_logic.model.search.ui.model.operator.SetCompare$Operation.tooltip = Compare operations on object references.
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.ALL_CONTAINED_IN = All contained in
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.ALL_CONTAINED_IN.tooltip = All attribute values are contained in the literal set. <p> The attribute set is a subset of the literal set: for all x in attribute: x in literal set. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.CONTAINS_ALL = Contains all
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.CONTAINS_ALL.tooltip = The attribute value set contains all of the objects given in the literal set. <p> The literal set is a subset of the attribute set: for all x in literal set: x in attribute. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.CONTAINS_NONE = Contains none
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.CONTAINS_NONE.tooltip = The attribute value set contains none of the objects given in the literal set. <p> The attribute set and the literal set have an empty intersection: for all x in literal set: not x in attribute. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.CONTAINS_SOME = Contains some
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.CONTAINS_SOME.tooltip = The attribute value set contains at least one object given in the literal set. <p> The attribute set and the literal set have a non-empty intersection: exists x in attribute: x in literal set. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.EQUALS = Equals
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.EQUALS.tooltip = The attribute value is equal to the given literal set. <p> <i>All contained in</i> and <i>contains all</i>. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.NOT_ALL_CONTAINED_IN = Not all contained in
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.NOT_ALL_CONTAINED_IN.tooltip = The attribute value(s) is/are not all contained in the literal set. <p> The attribute set is not a subset of the literal set: exists x in attribute: x not in literal set. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.NOT_CONTAINS_ALL = Not contains all
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.NOT_CONTAINS_ALL.tooltip = The attribute value set contains all of the objects given in the literal set. <p> The literal set is not a subset of the attribute set: exists x in literal set: x in attribute. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.NOT_EQUALS = Not equals
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.NOT_EQUALS.tooltip = The attribute value is not equal to the given literal set. <p> <i>Not all contained in</i> or <i>not contains all</i>. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.operation = Operation
com.top_logic.model.search.ui.model.operator.SetCompare.operation.tooltip = The comparison operation.
com.top_logic.model.search.ui.model.operator.SingletonCompare$Impl = Implementation
com.top_logic.model.search.ui.model.operator.SingletonCompare$Impl.tooltip = <i>Implementation</i> for <i>singleton compare</i>.
com.top_logic.model.search.ui.model.operator.SingletonCompare.operation = Operation
com.top_logic.model.search.ui.model.operator.SingletonCompare.operation.tooltip = The comparison operation.
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation = Singleton compare operation
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.CONTAINED_IN = Contained in
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.CONTAINED_IN.tooltip = The attribute value is contained in the literal set.
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.EQUALS = Equals
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.EQUALS.tooltip = The attribute value is equal to the object on the right side.
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.NOT_CONTAINED_IN = Not contained in
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.NOT_CONTAINED_IN.tooltip = The attribute value is not contained in the literal set.
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.NOT_EQUALS = Not equals
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.NOT_EQUALS.tooltip = The attribute value is not equal to the right side.
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.tooltip = Compare operations on object references.
com.top_logic.model.search.ui.model.operator.StringCompare$Impl = Implementation
com.top_logic.model.search.ui.model.operator.StringCompare$Impl.tooltip = <i>Implementation</i> for <i>string compare</i>.
com.top_logic.model.search.ui.model.operator.StringCompare$Kind = Kind
com.top_logic.model.search.ui.model.operator.StringCompare$Kind.tooltip = Kind of <i>string compare</i> comparison.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.CONTAINS = Contains
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.CONTAINS.tooltip = For a match, the left string must contain the right one as substring.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.ENDS_WITH = Ends with
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.ENDS_WITH.tooltip = For a match, the left string must have the right one as suffix.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.EQUALS = Equals
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.EQUALS.tooltip = For a match, both strings must be equal.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.GE = Ge
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.GE.tooltip = For a match, the left string must be greater or equal to the right one in alphabetical order.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.GT = Gt
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.GT.tooltip = For a match, the left string must be greater than the right one in alphabetical order.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.LE = Le
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.LE.tooltip = For a match, the left string must be lower or equal to the right one in alphabetical order.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.LT = Lt
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.LT.tooltip = For a match, the left string must be lower than the right one in alphabetical order.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_CONTAINS = Not contains
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_CONTAINS.tooltip = For a match, the left string must not contain the right one as subsequence.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_ENDS_WITH = Not ends with
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_ENDS_WITH.tooltip = For a match, the left string must <b>not</b> have the right one as suffix.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_EQUALS = Not equals
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_EQUALS.tooltip = For a match, both strings must be different.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_STARTS_WITH = Not starts with
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_STARTS_WITH.tooltip = For a match, the left string must <b>not</b> have the right one as prefix.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.STARTS_WITH = Starts with
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.STARTS_WITH.tooltip = For a match, the left string must have the right one as prefix.
com.top_logic.model.search.ui.model.operator.StringCompare.kind = Kind
com.top_logic.model.search.ui.model.operator.StringCompare.kind.tooltip = Kind of comparison.
com.top_logic.model.search.ui.model.operator.StringRangeCompare$Impl = Implementation
com.top_logic.model.search.ui.model.operator.StringRangeCompare$Impl.tooltip = <i>Implementation</i> for <i>string range compare</i>.
com.top_logic.model.search.ui.model.operator.StringRangeCompare.kind = Kind
com.top_logic.model.search.ui.model.operator.StringRangeCompare.kind.tooltip = Kind of comparison.
com.top_logic.model.search.ui.model.operator.TypeCheck$Impl = Implementation
com.top_logic.model.search.ui.model.operator.TypeCheck$Impl.tooltip = <i>Implementation</i> for <i>type check</i>.
com.top_logic.model.search.ui.model.operator.TypeCheckBased.type-cast = Type cast
com.top_logic.model.search.ui.model.operator.TypeCheckBased.type-cast.tooltip = The type to which the <i>Context</i> is cast.
com.top_logic.model.search.ui.model.parameters.PredefinedSearchParameter = Predefined search parameter
com.top_logic.model.search.ui.model.parameters.PredefinedSearchParameter.tooltip = A <i>search parameter</i> that is not defined by the user but built-in.
com.top_logic.model.search.ui.model.parameters.PredefinedSearchParameter.value = Value
com.top_logic.model.search.ui.model.parameters.PredefinedSearchParameter.value.tooltip = The value of the parameter.
com.top_logic.model.search.ui.model.structure.InheritedContextType = Inherited context type
com.top_logic.model.search.ui.model.structure.InheritedContextType.tooltip = <i>Value context</i> models that use the <i>Value type</i> of the <i>Context</i>.
com.top_logic.model.search.ui.model.structure.SearchPart.config-name = Configuration name
com.top_logic.model.search.ui.model.structure.SearchPart.config-name.tooltip = The name of the configuration of this <i>search part</i> tree.
com.top_logic.model.search.ui.model.structure.SearchPart.context = Context
com.top_logic.model.search.ui.model.structure.SearchPart.context.tooltip = The parent <i>search part</i> this <i>search part</i> lives in.
com.top_logic.model.search.ui.model.structure.WithValueContext.context-multiplicity = Context multiplicity
com.top_logic.model.search.ui.model.structure.WithValueContext.context-multiplicity.tooltip = <i>Value multiplicity</i> (<i>value context</i>) of <i>Context</i>.
com.top_logic.model.search.ui.model.structure.WithValueContext.context-type = Context type
com.top_logic.model.search.ui.model.structure.WithValueContext.context-type.tooltip = <i>Value type</i> (<i>value context</i>) of <i>Context</i>.
com.top_logic.model.search.ui.model.structure.WithValueContext.context.tooltip = The <i>value context</i> this <i>search part</i> lives in.
com.top_logic.model.search.ui.selector.DeleteSearchCommand = Delete search command
com.top_logic.model.search.ui.selector.DeleteSearchCommand.tooltip = The <i>command</i> that deletes the selected <i>search expression</i>.
com.top_logic.model.search.ui.selector.ResetSearchCommand = Reset search command
com.top_logic.model.search.ui.selector.ResetSearchCommand.tooltip = The <i>command</i> that resets the search to the selected <i>search expression implementation</i>.
com.top_logic.model.search.ui.selector.SaveSearchCommand = Save search command
com.top_logic.model.search.ui.selector.SaveSearchCommand.tooltip = The <i>command</i> that saves the search configured in the given <i>GUI search expression editor</i>.
com.top_logic.model.search.ui.selector.SearchAndReportConfig = Search and report configuration
com.top_logic.model.search.ui.selector.SearchAndReportConfig.chart = Chart
com.top_logic.model.search.ui.selector.SearchAndReportConfig.chart.tooltip = Never null.
com.top_logic.model.search.ui.selector.SearchAndReportConfig.expert-search = Expert search
com.top_logic.model.search.ui.selector.SearchAndReportConfig.expert-search.tooltip = TLScript search expression.
com.top_logic.model.search.ui.selector.SearchAndReportConfig.search = Search
com.top_logic.model.search.ui.selector.SearchAndReportConfig.search.tooltip = Never null.
com.top_logic.model.search.ui.selector.SearchAndReportConfig.tooltip = The combination of a <i>search</i> expression and a <i>chart configuration</i>. <p> This type has to be a subtype of <i>search part</i>, as it contains a <i>search</i>, and that is a <i>search part</i> itself, declaring a container property of type <i>search part</i>. It is therefore not allowed to put it into a container that is not a <i>search part</i>, as that would violate the container property type. </p>
com.top_logic.model.search.ui.selector.SearchAndReportConfig.type = Type
com.top_logic.model.search.ui.selector.SearchAndReportConfig.type.tooltip = Where the search expression is created.
com.top_logic.model.search.ui.selector.SearchSelectorComponent = Search selector component
com.top_logic.model.search.ui.selector.SearchSelectorComponent.Config.reportComponent = Report component
com.top_logic.model.search.ui.selector.SearchSelectorComponent.Config.search-expression-provider = Search expression provider
com.top_logic.model.search.ui.selector.SearchSelectorComponent.Config.search-expression-provider.tooltip = Provides the <i>search expressions</i> that the user can choose from.
com.top_logic.model.search.ui.selector.SearchSelectorComponent.tooltip = A <i>form component</i> for managing <i>search expression implementations</i>.
com.top_logic.model.search.ui.selector.SearchType = Search type
com.top_logic.model.search.ui.selector.SearchType.EXPERT = Expert
com.top_logic.model.search.ui.selector.SearchType.EXPERT.tooltip = Created in the expert TLScript ACE editor.
com.top_logic.model.search.ui.selector.SearchType.NORMAL = Normal
com.top_logic.model.search.ui.selector.SearchType.NORMAL.tooltip = Created in the standard search expression GUI.
com.top_logic.model.search.ui.selector.SearchType.tooltip = Describes where the search expression is created.
com.top_logic.model.search.ui.selector.saveas.SaveSearchAsCommand = Save search as command
com.top_logic.model.search.ui.selector.saveas.SaveSearchAsCommand.tooltip = The <i>save expression command</i> that saves the search configured in the given <i>GUI search expression editor</i> under a new name.
com.top_logic.model.search.ui.selector.saveas.SaveSearchAsComponent = Save search as component
com.top_logic.model.search.ui.selector.saveas.SaveSearchAsComponent.tooltip = <i>Create component</i> for saving a search expression under a new name.
com.top_logic.model.search.ui.selector.saveas.SaveSearchAsOpenDialogCommand = Save search as open dialog command
com.top_logic.model.search.ui.selector.saveas.SaveSearchAsOpenDialogCommand.tooltip = <i>Command handler</i> to open the "save search as" dialog.
