class.com.top_logic.basic.config.constraint.annotation.I18NConstants.ERROR_REGEXP_CONSTRAINT_VIOLATED__PATTERN_INPUT = The value "{1}" does not match the pattern "{0}".
class.com.top_logic.basic.config.constraint.impl.I18NConstants.NO_EMAIL_FORMAT_INVALID_DOMAIN_PART__VALUE__PART_CHARS = The value {0} is not a valid email address: Allowed characters for the domain part of an email are {1}.
class.com.top_logic.basic.config.constraint.impl.I18NConstants.NO_EMAIL_FORMAT_INVALID_LOCAL_PART__VALUE__PART_CHARS = The value {0} is not a valid email address: Allowed characters for the local part of an email are {1}.
class.com.top_logic.basic.config.constraint.impl.I18NConstants.NO_EMAIL_FORMAT_MULTIPLE_AT_SIGNS__VALUE = The value {0} is not a valid email address: Multiple '@' signs.
class.com.top_logic.basic.config.constraint.impl.I18NConstants.NO_EMAIL_FORMAT_NO_AT_SIGN__VALUE = The value {0} is not a valid email address: No '@' sign.
class.com.top_logic.basic.config.constraint.impl.I18NConstants.NO_URL_FORMAT_NO_PROTOCOL__VALUE = The value {0} is not a valid URL: No protocol given.
class.com.top_logic.basic.config.constraint.impl.I18NConstants.NO_URL_FORMAT_UNKNOWN_PROTOCOL__VALUE__PROTOCOL = The value {0} is not a valid URL: Unknown protocol: {1}
class.com.top_logic.basic.config.constraint.impl.I18NConstants.NO_URL_FORMAT__VALUE__MESSAGE = The value {0} is not a valid URL: {1}
class.com.top_logic.basic.config.format.I18NConstants.ERROR_ENUM_TYPE_MISMATCH__EXPECTED_CONFIGURED = Enumeration constant of wrong type configured, expected was {0}, configured is {1}.
class.com.top_logic.basic.json.I18NConstants.ERROR_INVALID_CHARACTER__CHARACTER = Invalid character ''{0}''.
class.com.top_logic.basic.json.I18NConstants.ERROR_INVALID_DATE_FORMAT = Invalid date format.
class.com.top_logic.basic.json.I18NConstants.ERROR_INVALID_NUMBER_FORMAT = Invalid number format.
class.com.top_logic.basic.json.I18NConstants.ERROR_INVALID_UNICODE_ESCAPE = Invalid unicode escape.
class.com.top_logic.basic.json.I18NConstants.ERROR_MISSING_MAP_KEY = Expected map key.
class.com.top_logic.basic.json.I18NConstants.ERROR_MISSING_MAP_KEY_NAME = Expected map key name.
class.com.top_logic.basic.json.I18NConstants.ERROR_READING_SOURCE = Reading source failed.
class.com.top_logic.basic.json.I18NConstants.ERROR_UNEXPECTED_END_OF_INPUT = Unexpected end of input.
class.com.top_logic.basic.json.I18NConstants.ERROR_UNEXPECTED_INPUT = Unexpected contents at end.
class.com.top_logic.basic.json.I18NConstants.ERROR_UNEXPECTED_VALUE__EXPECTED_ACUTAL = Expected ''{0}'' but got ''{1}''.
class.com.top_logic.basic.json.I18NConstants.ERROR_UNTERMINATED_STRING_ESCAPE = Unterminated string escape.
class.com.top_logic.basic.json.I18NConstants.ERROR_UNTERMINATED_STRING_VALUE = Unterminated string value.
class.com.top_logic.basic.json.I18NConstants.ERROR_UNTERMINATED_UNICODE_ESCAPE = Unterminated unicode escape.
class.com.top_logic.basic.json.I18NConstants.PARSE_ERROR__MESSAGE_POSITION = Parse error at position {1}: {0}
class.com.top_logic.basic.json.I18NConstants.PARSE_ERROR__MESSAGE__BEFORE_PROBLEM__AFTER_PROBLEM = {0} Problematic characters around: ''{1} <> {2}''.
class.com.top_logic.basic.translation.I18NConstants.ERROR_EXPECTED_SOURCE_AND_TARGET_LANGUAGE = Expected source and target language separated by white space.
com.top_logic.basic.CalledByReflection = Called by reflection
com.top_logic.basic.CalledByReflection.tooltip = Annotation that warns about a method that is called by reflection.
com.top_logic.basic.CalledFromJSP = Called from JSP
com.top_logic.basic.CalledFromJSP.tooltip = Annotation that warns about a method that is called directly from within a JSP.
com.top_logic.basic.Day = Day
com.top_logic.basic.Day.FRIDAY = Friday
com.top_logic.basic.Day.FRIDAY.tooltip = Representation of Friday
com.top_logic.basic.Day.MONDAY = Monday
com.top_logic.basic.Day.MONDAY.tooltip = Representation of Monday
com.top_logic.basic.Day.SATURDAY = Saturday
com.top_logic.basic.Day.SATURDAY.tooltip = Representation of Saturday
com.top_logic.basic.Day.SUNDAY = Sunday
com.top_logic.basic.Day.SUNDAY.tooltip = Representation of Sunday
com.top_logic.basic.Day.THURSDAY = Thursday
com.top_logic.basic.Day.THURSDAY.tooltip = Representation of Thursday
com.top_logic.basic.Day.TUESDAY = Tuesday
com.top_logic.basic.Day.TUESDAY.tooltip = Representation of Tuesday
com.top_logic.basic.Day.WEDNESDAY = Wednesday
com.top_logic.basic.Day.WEDNESDAY.tooltip = Representation of Wednesday
com.top_logic.basic.Day.tooltip = Representation of the days in a week.
com.top_logic.basic.Month = Month
com.top_logic.basic.Month.APRIL = April
com.top_logic.basic.Month.APRIL.tooltip = Representation of April
com.top_logic.basic.Month.AUGUST = August
com.top_logic.basic.Month.AUGUST.tooltip = Representation of August
com.top_logic.basic.Month.DECEMBER = December
com.top_logic.basic.Month.DECEMBER.tooltip = Representation of December
com.top_logic.basic.Month.FEBRUARY = February
com.top_logic.basic.Month.FEBRUARY.tooltip = Representation of February
com.top_logic.basic.Month.JANUARY = January
com.top_logic.basic.Month.JANUARY.tooltip = Representation of January
com.top_logic.basic.Month.JULY = July
com.top_logic.basic.Month.JULY.tooltip = Representation of July
com.top_logic.basic.Month.JUNE = June
com.top_logic.basic.Month.JUNE.tooltip = Representation of June
com.top_logic.basic.Month.MARCH = March
com.top_logic.basic.Month.MARCH.tooltip = Representation of March
com.top_logic.basic.Month.MAY = May
com.top_logic.basic.Month.MAY.tooltip = Representation of May
com.top_logic.basic.Month.NOVEMBER = November
com.top_logic.basic.Month.NOVEMBER.tooltip = Representation of November
com.top_logic.basic.Month.OCTOBER = October
com.top_logic.basic.Month.OCTOBER.tooltip = Representation of October
com.top_logic.basic.Month.SEPTEMBER = September
com.top_logic.basic.Month.SEPTEMBER.tooltip = Representation of September
com.top_logic.basic.Month.UNDECIMBER = Undecimber
com.top_logic.basic.Month.UNDECIMBER.tooltip = Value of the month indicating the thirteenth month of the year. Although <code>GregorianCalendar</code> does not use this value, lunar calendars do.
com.top_logic.basic.Month.tooltip = Representation of the months in a year.
com.top_logic.basic.Settings = Settings
com.top_logic.basic.Settings.Config.temp-dir = Temporary directory
com.top_logic.basic.Settings.Config.temp-dir.tooltip = The temporary directory of the application. <p> If a relative path is given, it is resolved relative to the Java temporary directory (given in the system property <code>"java.io.tmpdir"</code>). </p> <p> If this option is empty, a unique directory is created within the Java temporary directory. It is highly recommended to keep this default setting. </p>
com.top_logic.basic.Settings.Config.temp-image-path = Temporary image path
com.top_logic.basic.Settings.Config.temp-image-path.tooltip = The resource directory where temporary images of the application are created for download. <p> The value is a resource name (starting with a '/' character) that denotes the location of the temporary image folder relative to the root of web application. </p>
com.top_logic.basic.Settings.tooltip = Global application configuration.
com.top_logic.basic.SystemProperties = System properties
com.top_logic.basic.SystemProperties.Config.system-properties = System properties
com.top_logic.basic.SystemProperties.Config.system-properties.tooltip = System properties.
com.top_logic.basic.SystemProperties.tooltip = <i>System properties</i> reads a section with system properties from the configuration and transforms the read properties to system properties. No system properties are set in top-logic, but some examples are provided. This may not work with a Security manager, as this may break global security.
com.top_logic.basic.TypeKeyRegistry = Type key registry
com.top_logic.basic.TypeKeyRegistry.Config.provider = Provider
com.top_logic.basic.TypeKeyRegistry.Config.provider.tooltip = Configuration of the <i>type key provider</i> to use.
com.top_logic.basic.TypeKeyRegistry.tooltip = Configurable static facade for <i>type key provider</i>.
com.top_logic.basic.annotation.FrameworkInternal = Framework internal
com.top_logic.basic.annotation.FrameworkInternal.tooltip = Annotation for types that are designed to be only used framework-internally. <p> The application must not use or override an annotated element. </p>
com.top_logic.basic.annotation.InApp = In app
com.top_logic.basic.annotation.InApp.classifiers = Classifiers
com.top_logic.basic.annotation.InApp.classifiers.tooltip = List of classifiers selecting valid usage scenarios of the annotated implementation. <p> The empty list of classifiers means either "valid in all situations" regardless of the classifiers required or "not acceptable at all", depending on the acceptable classifiers annotation. </p>
com.top_logic.basic.annotation.InApp.priority = Priority
com.top_logic.basic.annotation.InApp.priority.tooltip = The priority of the annotated implementation. <p> The UI selects the implementation with the highest priority as default value for a mandatory property. </p>
com.top_logic.basic.annotation.InApp.tooltip = Annotation for an implementation class that can be selected for in-app development.
com.top_logic.basic.annotation.InApp.value = Value
com.top_logic.basic.annotation.InApp.value.tooltip = Whether the annotated implementation is usable for in-app development.
com.top_logic.basic.col.ComparatorProxy = Comparator proxy
com.top_logic.basic.col.ComparatorProxy.Config.base-comparator = Base comparator
com.top_logic.basic.col.ComparatorProxy.Config.base-comparator.tooltip = The delegate <i>comparator</i>.
com.top_logic.basic.col.ComparatorProxy.tooltip = <i>Comparator</i> delegating to another <i>comparator</i> implementation.
com.top_logic.basic.col.ConfiguredStringMapping = Configured string mapping
com.top_logic.basic.col.ConfiguredStringMapping.Config.default-value = Default value
com.top_logic.basic.col.ConfiguredStringMapping.Config.default-value.tooltip = The default value when the key is not contained in <i>Entry set</i>. <p> Value is ignored when <i>No default value</i> is set. </p>
com.top_logic.basic.col.ConfiguredStringMapping.Config.entry-set = Entry set
com.top_logic.basic.col.ConfiguredStringMapping.Config.entry-set.tooltip = The base map.
com.top_logic.basic.col.ConfiguredStringMapping.Config.no-default-value = No default value
com.top_logic.basic.col.ConfiguredStringMapping.Config.no-default-value.tooltip = Use input as output when the key is not contained in <i>Entry set</i>
com.top_logic.basic.col.ConfiguredStringMapping.tooltip = <i>Map based mapping</i> with configured base map and default.
com.top_logic.basic.col.InverseComparator = Inverse comparator
com.top_logic.basic.col.InverseComparator.tooltip = <i>Comparator</i> inverting the result of an inner comparator.
com.top_logic.basic.col.MappedComparator = Mapped comparator
com.top_logic.basic.col.MappedComparator.Config.globalOrder = Global order
com.top_logic.basic.col.MappedComparator.Config.globalOrder.tooltip = Additional <i>comparator</i>, that is used, when comparison of objects by <i>Value order</i> treats two objects as equal. Can be used to establish an stable order, even for equal objects. <i>Equality</i> is used by default.
com.top_logic.basic.col.MappedComparator.Config.mapping = Mapping
com.top_logic.basic.col.MappedComparator.Config.mapping.tooltip = <i>Mapping</i>, whose mapping output is used for comparison by <i>Value order</i>.
com.top_logic.basic.col.MappedComparator.Config.valueOrder = Value order
com.top_logic.basic.col.MappedComparator.Config.valueOrder.tooltip = <i>Comparator</i>, that is used for comparison of output objects of given <i>Mapping</i>. <i>Comparable comparator</i> is used as default.
com.top_logic.basic.col.MappedComparator.tooltip = <i>Comparator</i> that compares objects according to some aspect retrieved by a <i>mapping</i> from the compared objects.
com.top_logic.basic.col.NullSafeComparator = Null safe comparator
com.top_logic.basic.col.NullSafeComparator.Config.null-is-smallest = Null is smallest
com.top_logic.basic.col.NullSafeComparator.Config.null-is-smallest.tooltip = Whether <code>null</code> values appear before each other values.
com.top_logic.basic.col.NullSafeComparator.tooltip = Proxy <i>comparator</i> that makes a base <i>comparator</i> <code>null</code>-safe.
com.top_logic.basic.col.diff.op.DiffOp$Kind = Kind
com.top_logic.basic.col.diff.op.DiffOp$Kind.tooltip = Kind of supported operations.
com.top_logic.basic.col.diff.op.DiffOp.Kind.CREATE = Create
com.top_logic.basic.col.diff.op.DiffOp.Kind.CREATE.tooltip = Creation of a new item.
com.top_logic.basic.col.diff.op.DiffOp.Kind.DELETE = Delete
com.top_logic.basic.col.diff.op.DiffOp.Kind.DELETE.tooltip = Deletion of an old item.
com.top_logic.basic.col.diff.op.DiffOp.Kind.MOVE = Move
com.top_logic.basic.col.diff.op.DiffOp.Kind.MOVE.tooltip = Moving an old item to a new position.
com.top_logic.basic.col.diff.op.DiffOp.Kind.UPDATE = Update
com.top_logic.basic.col.diff.op.DiffOp.Kind.UPDATE.tooltip = The item is left as is with a potential internal update.
com.top_logic.basic.col.filter.ANDFilter = AND filter
com.top_logic.basic.col.filter.ANDFilter.tooltip = Combine two <i>filters</i> using logical AND.
com.top_logic.basic.col.filter.ClassFilter = Class filter
com.top_logic.basic.col.filter.ClassFilter.Config.type = Type
com.top_logic.basic.col.filter.ClassFilter.Config.type.tooltip = The required Java type of accepted objects.
com.top_logic.basic.col.filter.ClassFilter.tooltip = Filters objects based on their classes. Only those objects are accepted by this filter that are instances of a given class (or interface) or its subclasses (or subinterfaces).
com.top_logic.basic.col.filter.CompositeFilterConfig.filters = Filters
com.top_logic.basic.col.filter.CompositeFilterConfig.filters.tooltip = The inner filters to combine with the boolean and operation.
com.top_logic.basic.col.filter.DelegatingFilterConfig.filter = Filter
com.top_logic.basic.col.filter.DelegatingFilterConfig.filter.tooltip = The inner <i>filter</i> to delegate to.
com.top_logic.basic.col.filter.FilterRegistry$Config = Configuration
com.top_logic.basic.col.filter.FilterRegistry$Config.tooltip = Configuration interface defining the filters in the application.
com.top_logic.basic.col.filter.FilterRegistry$NamedFilter = Named filter
com.top_logic.basic.col.filter.FilterRegistry$NamedFilter.tooltip = The configuration of a <i>filter</i> with name.
com.top_logic.basic.col.filter.FilterRegistry.Config.filters = Filters
com.top_logic.basic.col.filter.FilterRegistry.Config.filters.tooltip = The filter in the application indexed by their name.
com.top_logic.basic.col.filter.FilterRegistry.NamedFilter.filter = Filter
com.top_logic.basic.col.filter.FilterRegistry.NamedFilter.filter.tooltip = The <i>filter</i> of this configuration.
com.top_logic.basic.col.filter.InstanceFilter = Instance filter
com.top_logic.basic.col.filter.InstanceFilter.Config.type = Type
com.top_logic.basic.col.filter.InstanceFilter.Config.type.tooltip = The Java type of accepted objects.
com.top_logic.basic.col.filter.InstanceFilter.tooltip = A <i>filter</i> for accepting object of a given Java type.
com.top_logic.basic.col.filter.MappingBasedFilter = Mapping based filter
com.top_logic.basic.col.filter.MappingBasedFilter.Config.mapping = Mapping
com.top_logic.basic.col.filter.MappingBasedFilter.Config.mapping.tooltip = The <i>mapping</i> to apply before filtering using <i>Filter</i>.
com.top_logic.basic.col.filter.MappingBasedFilter.tooltip = This <i>filter</i> uses a <i>mapping</i> to retrieve the value before check of fitting criteria.
com.top_logic.basic.col.filter.NOTFilter = NOT filter
com.top_logic.basic.col.filter.NOTFilter.tooltip = Reverse meaning of filter wrapped by this class.
com.top_logic.basic.col.filter.ORFilter = OR filter
com.top_logic.basic.col.filter.ORFilter.tooltip = Combine two <i>filters</i> using logical OR.
com.top_logic.basic.col.filter.PatternFilter = Pattern filter
com.top_logic.basic.col.filter.PatternFilter.Config.pattern = Pattern
com.top_logic.basic.col.filter.PatternFilter.Config.pattern.tooltip = The accepted <i>pattern</i>.
com.top_logic.basic.col.filter.PatternFilter.tooltip = This filter accepts Strings that are matched by a specified pattern. Non-Strings will be converted using toString(). <code>null</code> will never be matched.
com.top_logic.basic.col.filter.SetFilter = Set filter
com.top_logic.basic.col.filter.SetFilter.Config.values = Values
com.top_logic.basic.col.filter.SetFilter.Config.values.tooltip = The <i>set</i> of accepted <i>strings</i>.
com.top_logic.basic.col.filter.SetFilter.tooltip = <i>Filter</i> with pre-computed set of accepted objects.
com.top_logic.basic.col.filter.StartsWithFilter = Starts with filter
com.top_logic.basic.col.filter.StartsWithFilter.Config.ignore-case = Ignore case
com.top_logic.basic.col.filter.StartsWithFilter.Config.ignore-case.tooltip = Whether case should be ignored.
com.top_logic.basic.col.filter.StartsWithFilter.Config.prefix = Prefix
com.top_logic.basic.col.filter.StartsWithFilter.Config.prefix.tooltip = The accepted prefix.
com.top_logic.basic.col.filter.StartsWithFilter.tooltip = <i>Filter</i> accepting <i>objects</i> whose string-representation start with a given prefix.
com.top_logic.basic.col.filter.configurable.AbstractConfigurableFilter = Configurable filter
com.top_logic.basic.col.filter.configurable.AbstractConfigurableFilter.tooltip = The default base class for <i>configurable filters</i>.
com.top_logic.basic.col.filter.configurable.ConfigurableAndFilter = Configurable and filter
com.top_logic.basic.col.filter.configurable.ConfigurableAndFilter.tooltip = A <i>configurable filter</i> for 'and'. <p> The inner filters are asked in order. If one of them <i>falses</i> an object, the remaining filters are not asked. Only the filters that can filter an object are asked. </p> <p> Returns <i>inapplicable</i> if none of inner filters is applicable to the given object. </p>
com.top_logic.basic.col.filter.configurable.ConfigurableCompositeFilter = Configurable composite filter
com.top_logic.basic.col.filter.configurable.ConfigurableCompositeFilter.Config.filters = Filters
com.top_logic.basic.col.filter.configurable.ConfigurableCompositeFilter.Config.filters.tooltip = The inner <i>typed filters</i>.
com.top_logic.basic.col.filter.configurable.ConfigurableCompositeFilter.tooltip = A <i>configurable filter</i> combining a <i>list</i> of inner <i>configurable filters</i>. <p> The inner filters are asked in order. </p> <p> In contrast to the JavaDoc from <code>AbstractTypedFilter#matchesTypesafe(Object)</code> that method is called for null, too, to avoid code duplication. </p>
com.top_logic.basic.col.filter.configurable.ConfigurableNotFilter = Configurable not filter
com.top_logic.basic.col.filter.configurable.ConfigurableNotFilter.Config.filter = Filter
com.top_logic.basic.col.filter.configurable.ConfigurableNotFilter.Config.filter.tooltip = The inner <i>typed filter</i> whose result should be negated.
com.top_logic.basic.col.filter.configurable.ConfigurableNotFilter.tooltip = A <i>configurable filter</i> that negates its inner <i>configurable filter</i>. <p> <i>Inapplicable</i> stays INAPPLICABLE. </p>
com.top_logic.basic.col.filter.configurable.ConfigurableOrFilter = Configurable or filter
com.top_logic.basic.col.filter.configurable.ConfigurableOrFilter.tooltip = A <i>configurable composite filter</i> for 'or'. <p> The inner filters are asked in order. If one of them <i>trues</i> an object, the remaining filters are not asked. Only the filters that can filter an object are asked. </p> <p> Returns <i>inapplicable</i> if none of inner filters is applicable to the given object. </p>
com.top_logic.basic.col.filter.configurable.DoubleRangeFilter = Double range filter
com.top_logic.basic.col.filter.configurable.DoubleRangeFilter.Config.max = Maximum
com.top_logic.basic.col.filter.configurable.DoubleRangeFilter.Config.max.tooltip = The maximum accepted value.
com.top_logic.basic.col.filter.configurable.DoubleRangeFilter.Config.min = Minimum
com.top_logic.basic.col.filter.configurable.DoubleRangeFilter.Config.min.tooltip = The minimum accepted value.
com.top_logic.basic.col.filter.configurable.DoubleRangeFilter.tooltip = A <i>configurable filter</i> for accepting only double values within the given range. <p> Accepts <i>numbers</i> for convenience, not just <i>doubles</i>. </p>
com.top_logic.basic.col.filter.configurable.FileEndingFilter = File ending filter
com.top_logic.basic.col.filter.configurable.FileEndingFilter.tooltip = A <i>configurable filter</i> that filters <i>file</i> objects by the ending of their name.
com.top_logic.basic.col.filter.configurable.NamedEndingFilter = Named ending filter
com.top_logic.basic.col.filter.configurable.NamedEndingFilter.tooltip = A <i>configurable filter</i> that filters <i>named</i> objects by the ending of their name.
com.top_logic.basic.col.filter.configurable.StringEndingFilter.Config.allowed-endings = Allowed endings
com.top_logic.basic.col.filter.configurable.StringEndingFilter.Config.allowed-endings.tooltip = The endings which are accepted by the filter.
com.top_logic.basic.col.filter.typed.FilterResult = Filter result
com.top_logic.basic.col.filter.typed.FilterResult.FALSE = False
com.top_logic.basic.col.filter.typed.FilterResult.FALSE.tooltip = The filter did not accept the object.
com.top_logic.basic.col.filter.typed.FilterResult.INAPPLICABLE = Inapplicable
com.top_logic.basic.col.filter.typed.FilterResult.INAPPLICABLE.tooltip = The object has the wrong type and cannot be filtered.
com.top_logic.basic.col.filter.typed.FilterResult.TRUE = True
com.top_logic.basic.col.filter.typed.FilterResult.TRUE.tooltip = The filter accepted the object.
com.top_logic.basic.col.filter.typed.FilterResult.tooltip = Whether a <i>typed filter</i> accepts or rejects an object, or is not applicable.
com.top_logic.basic.col.filter.typed.TypedFilterAdapter = Typed filter adapter
com.top_logic.basic.col.filter.typed.TypedFilterAdapter.Config.default = Default
com.top_logic.basic.col.filter.typed.TypedFilterAdapter.Config.default.tooltip = This value is returned if the inner filter returns <i>inapplicable</i>.
com.top_logic.basic.col.filter.typed.TypedFilterAdapter.Config.filter = Filter
com.top_logic.basic.col.filter.typed.TypedFilterAdapter.Config.filter.tooltip = The <i>typed filter</i> whose result should adapted.
com.top_logic.basic.col.filter.typed.TypedFilterAdapter.tooltip = An adapter for using a <i>typed filter</i> where a <i>filter</i> is required.
com.top_logic.basic.col.filter.typed.TypingFilterAdapter = Typing filter adapter
com.top_logic.basic.col.filter.typed.TypingFilterAdapter.Config.filter = Filter
com.top_logic.basic.col.filter.typed.TypingFilterAdapter.Config.filter.tooltip = The <i>filter</i> whose result should adapted.
com.top_logic.basic.col.filter.typed.TypingFilterAdapter.Config.null-applicable = Null applicable
com.top_logic.basic.col.filter.typed.TypingFilterAdapter.Config.null-applicable.tooltip = Whether null is applicable and should be decided by <i>Filter</i>. <p> If null is applicable, the inner <i>Filter</i> is called with null. </p> <p> If null is not applicable, <i>inapplicable</i> is returned. </p>
com.top_logic.basic.col.filter.typed.TypingFilterAdapter.Config.type = Type
com.top_logic.basic.col.filter.typed.TypingFilterAdapter.Config.type.tooltip = The type supported by <i>Filter</i>.
com.top_logic.basic.col.filter.typed.TypingFilterAdapter.tooltip = An adapter for using a <i>filter</i> where a <i>typed filter</i> is required.
com.top_logic.basic.col.mapping.ConfigAsString = Configuration as string
com.top_logic.basic.col.mapping.ConfigAsString.Config.inner = Inner
com.top_logic.basic.col.mapping.ConfigAsString.Config.inner.tooltip = The function to apply to the XML-serialized version of the configuration.
com.top_logic.basic.col.mapping.ConfigAsString.Config.root-tag = Root tag
com.top_logic.basic.col.mapping.ConfigAsString.Config.root-tag.tooltip = The root tag that is given to the XML-serialized configuraiton.
com.top_logic.basic.col.mapping.ConfigAsString.Config.static-type = Static type
com.top_logic.basic.col.mapping.ConfigAsString.Config.static-type.tooltip = The expected static type of the value. <p> If the concrete type matches this value, no type annotation is serialized, see <code>"interface"</code>. </p>
com.top_logic.basic.col.mapping.ConfigAsString.tooltip = Configurable <i>mapping</i> rewriting <i>configuration items</i> by applying a function to the XML-serialized version of the configuration.
com.top_logic.basic.col.mapping.RegexPatternMapping = Regular expression pattern mapping
com.top_logic.basic.col.mapping.RegexPatternMapping.Config.pattern = Pattern
com.top_logic.basic.col.mapping.RegexPatternMapping.Config.pattern.tooltip = The pattern to match.
com.top_logic.basic.col.mapping.RegexPatternMapping.Config.replacement = Replacement
com.top_logic.basic.col.mapping.RegexPatternMapping.Config.replacement.tooltip = The replacement to insert replacing each matched region of the input.
com.top_logic.basic.col.mapping.RegexPatternMapping.tooltip = Configurable <i>mapping</i> replacing in text content using regular expressions.
com.top_logic.basic.config.AbstractConfiguredInstance = Configured instance
com.top_logic.basic.config.AbstractConfiguredInstance.tooltip = Common base class for <i>configured instance</i> implementations.
com.top_logic.basic.config.ApplicationConfig = Application configuration
com.top_logic.basic.config.ApplicationConfig$Config = Configuration
com.top_logic.basic.config.ApplicationConfig$Config$Defaults = Defaults
com.top_logic.basic.config.ApplicationConfig$Config$Defaults.tooltip = Definition of (primitive) default values for a configuration interface.
com.top_logic.basic.config.ApplicationConfig$Config$StringDefaultSpec = String default spec
com.top_logic.basic.config.ApplicationConfig$Config$StringDefaultSpec.tooltip = A single default value mapping.
com.top_logic.basic.config.ApplicationConfig$Config.tooltip = Global configuration settings of a TopLogic application.
com.top_logic.basic.config.ApplicationConfig.Config.Defaults.interface = Interface
com.top_logic.basic.config.ApplicationConfig.Config.Defaults.interface.tooltip = The configuration interface to define default values for.
com.top_logic.basic.config.ApplicationConfig.Config.Defaults.properties = Properties
com.top_logic.basic.config.ApplicationConfig.Config.Defaults.properties.tooltip = The formatted default value for a certain plain property.
com.top_logic.basic.config.ApplicationConfig.Config.StringDefaultSpec.value = Value
com.top_logic.basic.config.ApplicationConfig.Config.StringDefaultSpec.value.tooltip = The formatted default value of the property with name <i>Name</i>.
com.top_logic.basic.config.ApplicationConfig.Config.configs = Configs
com.top_logic.basic.config.ApplicationConfig.Config.configs.tooltip = Returns the stand alone configurations in the application
com.top_logic.basic.config.ApplicationConfig.Config.defaults = Defaults
com.top_logic.basic.config.ApplicationConfig.Config.defaults.tooltip = The configured defaults for the configuration interfaces.
com.top_logic.basic.config.ApplicationConfig.Config.services = Services
com.top_logic.basic.config.ApplicationConfig.Config.services.tooltip = The configuration of the services in the application. The key is the full qualified class name of some service and the value the corresponding configuration.
com.top_logic.basic.config.ApplicationConfig.tooltip = Holder of the configuration of the application.
com.top_logic.basic.config.ConfigBuilder = Configuration builder
com.top_logic.basic.config.ConfigBuilder.disable-checks = Disable checks
com.top_logic.basic.config.ConfigBuilder.disable-checks.tooltip = Disable the pre-instantiation checks, especially whether mandatory properties are set.
com.top_logic.basic.config.ConfigBuilder.tooltip = Mutable version of a <i>configuration item</i> for reflective construction. <p> Even if the <i>configuration item</i> interface does not declare setter methods, its initial values can be assigned through the creation of the <i>configuration item</i> instance through a <i>configuration builder</i>. </p>
com.top_logic.basic.config.ConfigurationChange$Kind = Kind
com.top_logic.basic.config.ConfigurationChange$Kind.tooltip = Kind of the change.
com.top_logic.basic.config.ConfigurationChange.Kind.ADD = Add
com.top_logic.basic.config.ConfigurationChange.Kind.ADD.tooltip = An element was added to a collection-valued (<i>list</i>, or <i>map</i>) property.
com.top_logic.basic.config.ConfigurationChange.Kind.REMOVE = Remove
com.top_logic.basic.config.ConfigurationChange.Kind.REMOVE.tooltip = An element was removed from a collection-valued (<i>list</i>, or <i>map</i>) property.
com.top_logic.basic.config.ConfigurationChange.Kind.SET = Set
com.top_logic.basic.config.ConfigurationChange.Kind.SET.tooltip = A atomic property (of kind <i>plain</i>, <i>complex</i>, or <i>item</i>) was updated. <p> Note: A collection-valued ((<i>list</i>, or <i>map</i>) property is never updated as a whole. </p>
com.top_logic.basic.config.ConfigurationDescriptorConfig = Configuration descriptor configuration
com.top_logic.basic.config.ConfigurationDescriptorConfig.abstract = Abstract
com.top_logic.basic.config.ConfigurationDescriptorConfig.abstract.tooltip = Whether the <i>configuration descriptor</i> is abstract.
com.top_logic.basic.config.ConfigurationDescriptorConfig.annotations = Annotations
com.top_logic.basic.config.ConfigurationDescriptorConfig.annotations.tooltip = <i>Annotations</i> (indexed by the type of the annotation) for this descriptor.
com.top_logic.basic.config.ConfigurationDescriptorConfig.extends = Extends
com.top_logic.basic.config.ConfigurationDescriptorConfig.extends.tooltip = The extended (programmatic) configurations.
com.top_logic.basic.config.ConfigurationDescriptorConfig.properties = Properties
com.top_logic.basic.config.ConfigurationDescriptorConfig.properties.tooltip = Definitions of the <i>property descriptor</i> for the configured <i>configuration descriptor</i>.
com.top_logic.basic.config.ConfigurationDescriptorConfig.res-prefix = Resource prefix
com.top_logic.basic.config.ConfigurationDescriptorConfig.res-prefix.tooltip = A resource prefix to get internationalised names for the properties of the configured <i>configuration descriptor</i>.
com.top_logic.basic.config.ConfigurationDescriptorConfig.tooltip = <i>Configuration item</i> describing a <i>configuration descriptor</i>.
com.top_logic.basic.config.Decision = Decision
com.top_logic.basic.config.Decision.DEFAULT = Default
com.top_logic.basic.config.Decision.DEFAULT.tooltip = There is no explicit decision. The default boolean value should be used.
com.top_logic.basic.config.Decision.FALSE = False
com.top_logic.basic.config.Decision.FALSE.tooltip = The decision is <code>false</code>.
com.top_logic.basic.config.Decision.TRUE = True
com.top_logic.basic.config.Decision.TRUE.tooltip = The decision is <code>true</code>.
com.top_logic.basic.config.Decision.tooltip = Enumeration representing a decision. <p> This enum represents a boolean decision with a default value. The default value <i>default</i> works as neutral element in each boolean operation. </p> <p> Moreover the enum has methods to convert a <i>decision</i> to a boolean value and to concatenate different <i>decision</i>. </p>
com.top_logic.basic.config.DeclarativeConfigDescriptorBuilder = Declarative configuration descriptor builder
com.top_logic.basic.config.DeclarativeConfigDescriptorBuilder.Config.descriptor = Descriptor
com.top_logic.basic.config.DeclarativeConfigDescriptorBuilder.Config.descriptor.tooltip = Configuration of the <i>configuration descriptor</i> to instantiate.
com.top_logic.basic.config.DeclarativeConfigDescriptorBuilder.tooltip = <i>Configured instance</i> holding a configured <i>configuration descriptor</i>.
com.top_logic.basic.config.EnabledConfiguration = Enabled configuration
com.top_logic.basic.config.EnabledConfiguration.enabled = Enabled
com.top_logic.basic.config.EnabledConfiguration.enabled.tooltip = Determines whether the represented identity is enabled or not.
com.top_logic.basic.config.EnabledConfiguration.name.tooltip = Returns the name of the entity which is enabled or not
com.top_logic.basic.config.EnabledConfiguration.tooltip = Configuration interface which can be used to mark some entity as enabled.
com.top_logic.basic.config.LabeledConfiguration = Labeled configuration
com.top_logic.basic.config.LabeledConfiguration.label = Label
com.top_logic.basic.config.LabeledConfiguration.label.tooltip = The label of this <i>configuration item</i>.
com.top_logic.basic.config.LabeledConfiguration.tooltip = The internationalised label of a configuration item. <p> The value of <i>Label</i> is the label that is displayed on the GUI to identify this <i>configuration item</i>. </p>
com.top_logic.basic.config.ListOperation = List operation
com.top_logic.basic.config.ListOperation.ADD = Add
com.top_logic.basic.config.ListOperation.ADD.tooltip = Used to indicate that the new entry must be added to the old list value. The position where the entry is added is given by a <i>position</i>.
com.top_logic.basic.config.ListOperation.ADD_OR_UPDATE = Add or update
com.top_logic.basic.config.ListOperation.ADD_OR_UPDATE.tooltip = Used to indicate that the new entry must be added to the old list value, if there is no corresponding entry for update. In that case the old entry is updated with the new entry. The position where the entry is added is given by a <i>position</i>. If the operation is is de facto an update the position is used to move the entry to.
com.top_logic.basic.config.ListOperation.REMOVE = Remove
com.top_logic.basic.config.ListOperation.REMOVE.tooltip = Used to indicate that the entry which has the same key property must be removed
com.top_logic.basic.config.ListOperation.UPDATE = Update
com.top_logic.basic.config.ListOperation.UPDATE.tooltip = Used to indicate that the entry which has the same key property must be updated by the new list value. If also a <i>position</i> is given, the entry is also moved.
com.top_logic.basic.config.ListOperation.tooltip = A <i>list operation</i> describes the kind of modification of a list valued property.
com.top_logic.basic.config.MapOperation = Map operation
com.top_logic.basic.config.MapOperation.ADD = Add
com.top_logic.basic.config.MapOperation.ADD.tooltip = Used to indicate that the new entry must be added to the <i>map</i>
com.top_logic.basic.config.MapOperation.ADD_OR_UPDATE = Add or update
com.top_logic.basic.config.MapOperation.ADD_OR_UPDATE.tooltip = Used to indicate that the new entry must be added to the <i>map</i>. If there is already an entry with the same key the entry is updated.
com.top_logic.basic.config.MapOperation.REMOVE = Remove
com.top_logic.basic.config.MapOperation.REMOVE.tooltip = Used to indicate that the entry which has the same key property must be removed
com.top_logic.basic.config.MapOperation.UPDATE = Update
com.top_logic.basic.config.MapOperation.UPDATE.tooltip = Used to indicate that the entry which has the same key property must be updated
com.top_logic.basic.config.MapOperation.tooltip = A <i>map operation</i> describes the kind of modification of a map valued property.
com.top_logic.basic.config.NamedConfiguration.name = Name
com.top_logic.basic.config.NamedConfiguration.name.tooltip = Name of the configured object.
com.top_logic.basic.config.NamedInstanceConfig = Named instance configuration
com.top_logic.basic.config.NamedInstanceConfig.impl = Implementation
com.top_logic.basic.config.NamedInstanceConfig.impl.tooltip = Configuration of the implementation class.
com.top_logic.basic.config.NamedInstanceConfig.tooltip = Configuration wrapper adding a name to an instance configuration.
com.top_logic.basic.config.NamedResource = Named resource
com.top_logic.basic.config.NamedResource.tooltip = <i>Resource declaration</i> that has a name. <p> Can be used to define resources indexed by names. </p>
com.top_logic.basic.config.PolymorphicConfiguration.class = Class
com.top_logic.basic.config.PolymorphicConfiguration.class.tooltip = The corresponding implementation class for this <i>configuration item</i>. <p> In a UI, the implementation class cannot be edited. Instead, the whole configuration item must be replaced with another implementation class. Otherwise, the properties defined by the item may be inconsistent with the requirements of the implementation class. </p>
com.top_logic.basic.config.Position = Position
com.top_logic.basic.config.Position.AFTER = After
com.top_logic.basic.config.Position.AFTER.tooltip = Indicates that the entry has to be moved directly after that element in the list whose serialized key property is the attribute value of the attribute <code>"reference"</code>
com.top_logic.basic.config.Position.BEFORE = Before
com.top_logic.basic.config.Position.BEFORE.tooltip = Indicates that the entry has to be moved directly before that element in the list whose serialized key property is the attribute value of the attribute <code>"reference"</code>
com.top_logic.basic.config.Position.BEGIN = Begin
com.top_logic.basic.config.Position.BEGIN.tooltip = Indicates that the entry has to be moved to the begin of the list.
com.top_logic.basic.config.Position.END = End
com.top_logic.basic.config.Position.END.tooltip = Indicates that the entry has to be moved to the end of the list.
com.top_logic.basic.config.Position.tooltip = Describes the position to which a list entry is moved during an update or where a new list entry is inserted.
com.top_logic.basic.config.PropertyDescriptorConfig = Property descriptor configuration
com.top_logic.basic.config.PropertyDescriptorConfig.annotations = Annotations
com.top_logic.basic.config.PropertyDescriptorConfig.annotations.tooltip = Additional <i>annotations</i> (indexed by the type of the annotation) for this property.
com.top_logic.basic.config.PropertyDescriptorConfig.default = Default
com.top_logic.basic.config.PropertyDescriptorConfig.default.tooltip = String representation of the default value of the property. <p> The resulting default value is parsed from the given string representation using the property's format. </p> <p> This is a short-cut for various default annotations depending on the properties <i>Type</i> including <i>string default</i>, <i>int default</i>, and so on. </p>
com.top_logic.basic.config.PropertyDescriptorConfig.element-type = Element type
com.top_logic.basic.config.PropertyDescriptorConfig.element-type.tooltip = The element type of a property of kind <i>list</i>, <i>array</i>, or <i>map</i>.
com.top_logic.basic.config.PropertyDescriptorConfig.instance-type = Instance type
com.top_logic.basic.config.PropertyDescriptorConfig.instance-type.tooltip = If <i>Type</i> is assignable to <i>polymorphic configuration</i>, the <i>Instance type</i> determines the concrete type of <i>polymorphic configuration</i>, e.g. if the type is actually <code>PolymorphicConfiguration&lt;Mapping&gt;</code> then the type is PolymorphicConfiguration and the instance type is <code>Mapping</code>.
com.top_logic.basic.config.PropertyDescriptorConfig.key-attribute = Key attribute
com.top_logic.basic.config.PropertyDescriptorConfig.key-attribute.tooltip = Name of key attribute of this <i>property descriptor</i> in case this property kind is a <i>map</i>. <p> This is a short-cut for the <i>key</i> annotation. </p>
com.top_logic.basic.config.PropertyDescriptorConfig.tooltip = Configuration describing a <i>property descriptor</i> of a <i>configuration descriptor configuration</i>.
com.top_logic.basic.config.PropertyDescriptorConfig.type = Type
com.top_logic.basic.config.PropertyDescriptorConfig.type.tooltip = The value type of this property.
com.top_logic.basic.config.PropertyKind = Property kind
com.top_logic.basic.config.PropertyKind.ARRAY = Array
com.top_logic.basic.config.PropertyKind.ARRAY.tooltip = The property contains configuration sub-structures (multiplicity 0..*). <p> The value of an <i>array</i> property are other <i>configuration items</i> technically organized in a Java array. </p>
com.top_logic.basic.config.PropertyKind.COMPLEX = Complex
com.top_logic.basic.config.PropertyKind.COMPLEX.tooltip = The property value cannot be represented by a plain string but is itself not an instance of <i>configuration item</i>.
com.top_logic.basic.config.PropertyKind.DERIVED = Derived
com.top_logic.basic.config.PropertyKind.DERIVED.tooltip = The property value is derived from other property values. <p> If a property on the path is null, the derived property is null, unless: <ul> <li>it is one of Java's primitive types. In this case, the implicit default value is used.</li> <li>it has an explicit default value annotation.</li> <li>it has a format or value binding annotation. In this case <code>ConfigurationValueProvider#defaultValue()</code> is used.</li> </ul> <b>This means, even types that normally have implicit defaults in the <i>typed configuration</i> can be null, when they are derived.</b> </p> <p> <i>Container</i> properties store the container of a <i>configuration part</i> and have this <i>property kind</i>, too, as they are not set-able, just like normal derived properties. </p>
com.top_logic.basic.config.PropertyKind.ITEM = Item
com.top_logic.basic.config.PropertyKind.ITEM.tooltip = The property value is a configuration sub-structure. <p> The value of an <i>item</i> property is another <i>configuration items</i> with multiplicity <code>0..1</code>. </p>
com.top_logic.basic.config.PropertyKind.LIST = List
com.top_logic.basic.config.PropertyKind.LIST.tooltip = The property contains configuration sub-structures (multiplicity 0..*). <p> The value of a <i>list</i> property are other <i>configuration items</i> technically organized in a Java <i>collection</i>. </p>
com.top_logic.basic.config.PropertyKind.MAP = Map
com.top_logic.basic.config.PropertyKind.MAP.tooltip = The property value is an indexed configuration sub-structure. reference to other <i>configuration items</i> with multiplicity > 1.
com.top_logic.basic.config.PropertyKind.PLAIN = Plain
com.top_logic.basic.config.PropertyKind.PLAIN.tooltip = The property value can be represented by a plain string value in a configuration file.
com.top_logic.basic.config.PropertyKind.REF = Reference
com.top_logic.basic.config.PropertyKind.REF.tooltip = The property value contains a reference to another item of its configuration instance structure, which is not a containment relation.
com.top_logic.basic.config.PropertyKind.tooltip = The kind of a <i>property descriptor</i> provides a coarse classification of properties by their value type.
com.top_logic.basic.config.ResourceDeclaration = Resource declaration
com.top_logic.basic.config.ResourceDeclaration.resource = Resource
com.top_logic.basic.config.ResourceDeclaration.resource.tooltip = The configured resource.
com.top_logic.basic.config.ResourceDeclaration.tooltip = Configuration of some resource.
com.top_logic.basic.config.StringMapConfig = String map configuration
com.top_logic.basic.config.StringMapConfig.tooltip = Configuration wrapper for a <i>string</i> to String <i>map</i>.
com.top_logic.basic.config.StringMapConfig.value = Value
com.top_logic.basic.config.StringMapConfig.value.tooltip = Value for the specific key.
com.top_logic.basic.config.annotation.Abstract = Abstract
com.top_logic.basic.config.annotation.Abstract.tooltip = Annotates <i>configuration item</i> interfaces to be intended as super-interfaces only. <p> <i>Configuration items</i> annotated <i>abstract</i> should not be instantiated directly. </p>
com.top_logic.basic.config.annotation.Binding = Binding
com.top_logic.basic.config.annotation.Binding.tooltip = Annotation class for annotating a custom <i>configuration value binding</i> to a property. <p> This annotation can also be used to define a <i>configuration value binding</i> for all objects of an annotated class. </p>
com.top_logic.basic.config.annotation.Binding.value = Value
com.top_logic.basic.config.annotation.Container = Container
com.top_logic.basic.config.annotation.Container.tooltip = Annotation to signal that a getter method delivers the (direct) container of a composite in a configuration hierarchy. <p> Note: To use a <i>container</i> property in a configuration item, the configuration interface must extends <i>configuration part</i>. </p>
com.top_logic.basic.config.annotation.DefaultContainer = Default container
com.top_logic.basic.config.annotation.DefaultContainer.tooltip = Annotation on a property getter of kind <i>item</i>, <i>array</i>, <i>list</i>, <i>map</i> signaling that the container tag can be omitted. <p> When a property is annotated <i>default container</i>, the configuration contents of the property can be directly placed inside the tag representing the owner of the property. Only a single property can be the default container. When inheriting from multiple sources, only one of them may have a default container property. </p> <p> An item declared as </p> <code style="white-space:pre"> interface A extends ConfigurationItem { &#64;DefaultContainer List&lt;B&gt; getBs(); } </code> <p> can be configured with </p> <xmp> <a> <b>...</b> <b>...</b> <b>...</b> </a> </xmp> <p> instead of </p> <xmp> <a> <bs> <b>...</b> <b>...</b> <b>...</b> </bs> </a> </xmp> <p> With a singleton instance property of kind <i>item</i>, <i>default container</i> is only useful, if the property also has a <i>subtypes</i> annotation, or its content types have custom <i>tag names</i>. Such custom tag names of content types are only considered in the context of <i>item</i> properties, if the property is the <i>default container</i>. </p> <p> An item declared as </p> <code style="white-space:pre"> interface A extends ConfigurationItem { &#64;DefaultContainer &#64;Subtypes({ &#64;Subtype(tag="c", type=C.class), &#64;Subtype(tag="d", type=D.class), }) B getB(); } </code> <p> can be configured with </p> <xmp> <a> <c>...</c> </a> </xmp> <p> instead of </p> <xmp> <a> <b config:interface="my.package.C">...</b> </a> </xmp> <p> Note: The new tags introduced by the combination of <i>subtypes</i> and <i>default container</i> must not conflict with other properties of the context type that declares the <i>default container</i> property. This is also true for <i>default container</i> properties of collection kind. </p>
com.top_logic.basic.config.annotation.Derived = Derived
com.top_logic.basic.config.annotation.Derived.args = Arguments
com.top_logic.basic.config.annotation.Derived.args.tooltip = Specification of <i>function</i> arguments.
com.top_logic.basic.config.annotation.Derived.fun = Function
com.top_logic.basic.config.annotation.Derived.fun.tooltip = The function class that computes the value of the annotated property.
com.top_logic.basic.config.annotation.Derived.tooltip = Marks a <i>configuration item</i> property as derived by the given <i>generic function</i> algorithm.
com.top_logic.basic.config.annotation.DerivedRef = Derived reference
com.top_logic.basic.config.annotation.DerivedRef.steps = Steps
com.top_logic.basic.config.annotation.DerivedRef.steps.tooltip = General path to the referenced property. <p> Properties of related models can be specified using a reference path to that property. </p>
com.top_logic.basic.config.annotation.DerivedRef.tooltip = Marks a <i>configuration item</i> property as derived by a simple path expression. <p> Annotating a property <i>derived reference</i> is a shortcut for using the <i>identity</i> function with a single path argument to another property. </p>
com.top_logic.basic.config.annotation.DerivedRef.value = Value
com.top_logic.basic.config.annotation.DerivedRef.value.tooltip = List of property names to navigate from the base model the annotated property is defined on.
com.top_logic.basic.config.annotation.Encrypted = Encrypted
com.top_logic.basic.config.annotation.Encrypted.tooltip = Annotation to mark properties whose values are encrypted in the configuration. <p> Values for annotated properties must be encoded using <code>ConfigurationEncryption#encrypt(String)</code> in the configuration. The property in the <i>configuration item</i> holds the unencrypted value. </p>
com.top_logic.basic.config.annotation.EntryTag = Entry tag
com.top_logic.basic.config.annotation.EntryTag.tooltip = Annotation of a custom entry name in the serialized form of a typed configuration property of kind <i>array</i>, <i>list</i> or <i>map</i>.
com.top_logic.basic.config.annotation.EntryTag.value = Value
com.top_logic.basic.config.annotation.EntryTag.value.tooltip = The entry tag name of the annotated property.
com.top_logic.basic.config.annotation.External = External
com.top_logic.basic.config.annotation.External.tooltip = Annotation to signal an external method in a configuration interface that is neither a primitive getter nor setter, but has a custom implementation (for convenient or cached access to configuration information).
com.top_logic.basic.config.annotation.Factory = Factory
com.top_logic.basic.config.annotation.Factory.tooltip = Annotation to signal that a type declares a factory for a (sub-) hierarchy, or a method is a factory method for a concrete instance.
com.top_logic.basic.config.annotation.Format = Format
com.top_logic.basic.config.annotation.Format.tooltip = Annotation class for annotating a custom <i>configuration value provider</i> to a property. <p> This annotation can also be used to define a <i>configuration value provider</i> for all objects of an annotated class. </p>
com.top_logic.basic.config.annotation.Format.value = Value
com.top_logic.basic.config.annotation.Hidden = Hidden
com.top_logic.basic.config.annotation.Hidden.tooltip = Annotating that hides a configuration property from the user interface by default. <p> The annotation can be specified at the property or at its value type. </p>
com.top_logic.basic.config.annotation.Hidden.value = Value
com.top_logic.basic.config.annotation.Hidden.value.tooltip = Whether the property should be hidden.
com.top_logic.basic.config.annotation.Id = ID
com.top_logic.basic.config.annotation.Id.tooltip = Annotation to mark a configuration property as identifier attribute. <p> The value of an identifier attribute uniquely identifies an instance instantiated from a <i>polymorphic configuration</i> carrying this attribute. Each configuration item may have at most one identifier attribute. Identifier attributes must only be declared in configurations extending <i>polymorphic configuration</i>. </p>
com.top_logic.basic.config.annotation.Id.value = Value
com.top_logic.basic.config.annotation.Id.value.tooltip = The type scope of the property annotated with <i>ID</i>. <p> Identifiers of scope <code>T</code> can only be resolved through <i>reference resolvers</i> with the same type. </p>
com.top_logic.basic.config.annotation.ImplClasses = Implementation classes
com.top_logic.basic.config.annotation.ImplClasses.tooltip = The <i>implementation classes</i> is an annotation for <i>implementation classes provider</i>
com.top_logic.basic.config.annotation.ImplClasses.value = Value
com.top_logic.basic.config.annotation.Indexed = Indexed
com.top_logic.basic.config.annotation.Indexed.collection = Collection
com.top_logic.basic.config.annotation.Indexed.collection.tooltip = Name of the property that defines the base collection for the annotated indexed access method.
com.top_logic.basic.config.annotation.Indexed.tooltip = That describes an indexed getter to a collection-valued property of the same type.
com.top_logic.basic.config.annotation.Inspectable = Inspectable
com.top_logic.basic.config.annotation.Inspectable.tooltip = Controls how a <i>field</i> as displayed in the object inspector.
com.top_logic.basic.config.annotation.Inspectable.value = Value
com.top_logic.basic.config.annotation.Inspectable.value.tooltip = Whether a field is displayed as public property. <p> If the value is <code>false</code>, the field is hidden from the inspector completely. </p>
com.top_logic.basic.config.annotation.InstanceFormat = Instance format
com.top_logic.basic.config.annotation.InstanceFormat.tooltip = Annotation for modifying an <i>item</i>, <i>array</i>, <i>list</i>, or <i>map</i> valued property to contain instances automatically instantiated from configurations.
com.top_logic.basic.config.annotation.Key = Key
com.top_logic.basic.config.annotation.Key.tooltip = Annotation class for annotating the property that is used for indexing a <i>map</i> property.
com.top_logic.basic.config.annotation.Key.value = Value
com.top_logic.basic.config.annotation.Label = Label
com.top_logic.basic.config.annotation.Label.tooltip = Annotation to a configuration property or type specifying an alternative label for display in the UI.
com.top_logic.basic.config.annotation.Label.value = Value
com.top_logic.basic.config.annotation.Label.value.tooltip = The (English) label of the annotated element when displayed in the UI.
com.top_logic.basic.config.annotation.ListBinding = List binding
com.top_logic.basic.config.annotation.ListBinding.attribute = Attribute
com.top_logic.basic.config.annotation.ListBinding.format = Format
com.top_logic.basic.config.annotation.ListBinding.tag = Tag
com.top_logic.basic.config.annotation.ListBinding.tooltip = Annotation class for annotating a <i>configuration value binding</i> which reads a list of tags and uses a <i>configuration value provider</i> for the single entries. If no <i>configuration value binding</i> is given, for simple types the default <i>configuration value provider</i> is used. If no tag is given a default tag name is expected. If no attribute is given value is expected.
com.top_logic.basic.config.annotation.Mandatory = Mandatory
com.top_logic.basic.config.annotation.Mandatory.tooltip = Annotation to mark a configuration property as mandatory <p> "Mandatory" means: When the <i>configuration item</i> is created, there has to be an explicit value for this property. This value is allowed to be null. To forbid null, use <i>non nullable</i>. </p>
com.top_logic.basic.config.annotation.MapBinding = Map binding
com.top_logic.basic.config.annotation.MapBinding.attribute = Attribute
com.top_logic.basic.config.annotation.MapBinding.attribute.tooltip = Name of the value attribute.
com.top_logic.basic.config.annotation.MapBinding.key = Key
com.top_logic.basic.config.annotation.MapBinding.key.tooltip = Name of the key attribute.
com.top_logic.basic.config.annotation.MapBinding.keyFormat = Key format
com.top_logic.basic.config.annotation.MapBinding.keyFormat.tooltip = Format of the key of the entry.
com.top_logic.basic.config.annotation.MapBinding.tag = Tag
com.top_logic.basic.config.annotation.MapBinding.tag.tooltip = Name of the tag holding the key and the value.
com.top_logic.basic.config.annotation.MapBinding.tooltip = Annotation class for annotating a <i>configuration value binding</i> which reads a list of tags and uses a <i>configuration value provider</i> for the single entries. If no <i>configuration value binding</i> is given, for simple types the default <i>configuration value provider</i> is used. If no tag is given a default tag name is expected. If no attribute is given value is expected. If no key attribute is given value is expected.
com.top_logic.basic.config.annotation.MapBinding.valueFormat = Value format
com.top_logic.basic.config.annotation.MapBinding.valueFormat.tooltip = Format of the value of the entry.
com.top_logic.basic.config.annotation.Name = Name
com.top_logic.basic.config.annotation.Name.tooltip = Annotation for a configuration property getter specifying the property name in the serialized form (XML) of a configuration.
com.top_logic.basic.config.annotation.Name.value = Value
com.top_logic.basic.config.annotation.Name.value.tooltip = The name of the attribute the annotated configuration property is configured with.
com.top_logic.basic.config.annotation.NonNullable = Non nullable
com.top_logic.basic.config.annotation.NonNullable.tooltip = The annotated property is <em>not</em> allowed to be null.
com.top_logic.basic.config.annotation.Nullable = Nullable
com.top_logic.basic.config.annotation.Nullable.tooltip = The annotated property is allowed to be null.
com.top_logic.basic.config.annotation.NumberOfRows = Number of rows
com.top_logic.basic.config.annotation.NumberOfRows.max = Maximum
com.top_logic.basic.config.annotation.NumberOfRows.max.tooltip = Maximum number of rows that are be displayed.
com.top_logic.basic.config.annotation.NumberOfRows.min = Minimum
com.top_logic.basic.config.annotation.NumberOfRows.min.tooltip = Minimum number of rows that are be displayed.
com.top_logic.basic.config.annotation.NumberOfRows.tooltip = Annotation class for annotating the number of displayed rows of type <code>Integer#TYPE</code>.
com.top_logic.basic.config.annotation.ReadOnly = Read only
com.top_logic.basic.config.annotation.ReadOnly$ReadOnlyMode = Read only mode
com.top_logic.basic.config.annotation.ReadOnly$ReadOnlyMode.tooltip = Mode for fine-grained control of the scope of a <i>read only</i> annotation.
com.top_logic.basic.config.annotation.ReadOnly.ReadOnlyMode.LOCAL = Local
com.top_logic.basic.config.annotation.ReadOnly.ReadOnlyMode.LOCAL.tooltip = The property itself cannot be edited, but if it has inner structure, those values can be edited if they are not annotated <i>read only</i> themselves.
com.top_logic.basic.config.annotation.ReadOnly.ReadOnlyMode.OFF = Off
com.top_logic.basic.config.annotation.ReadOnly.ReadOnlyMode.OFF.tooltip = The annotated property can be edited.
com.top_logic.basic.config.annotation.ReadOnly.ReadOnlyMode.ON = On
com.top_logic.basic.config.annotation.ReadOnly.ReadOnlyMode.ON.tooltip = The property and its potential contents are completely <i>read only</i>.
com.top_logic.basic.config.annotation.ReadOnly.tooltip = Annotating that prevents editing a configuration property in a user interface by default. <p> The annotation can be specified at the property or at its value type. </p>
com.top_logic.basic.config.annotation.ReadOnly.value = Value
com.top_logic.basic.config.annotation.ReadOnly.value.tooltip = The scope of the <i>read only</i> annotation. <p> The default value is <i>on</i> </p>
com.top_logic.basic.config.annotation.Ref = Reference
com.top_logic.basic.config.annotation.Ref.steps = Steps
com.top_logic.basic.config.annotation.Ref.steps.tooltip = General path to the referenced property. <p> Properties of related models can be specified using a reference path to that property. </p>
com.top_logic.basic.config.annotation.Ref.tooltip = Reference to another property of a <i>configuration item</i>. <p> Describes an access path (consecutive dereferencing of configuration properties) that yields a certain value. <br/> Example: <code>@Ref({ "foo", "bar", "fubar"})</code><br/> Means: <code>this.getFoo().getBar().getFubar()</code><br/> (Under the assumption that the properties have no other names annotated to them.) </p>
com.top_logic.basic.config.annotation.Ref.value = Value
com.top_logic.basic.config.annotation.Ref.value.tooltip = Simple path to the referenced property. <p> Properties of related models can be specified using a reference path to that property. </p> <p> This is a short-cut notation for <i>steps</i>. </p>
com.top_logic.basic.config.annotation.Reference = Reference
com.top_logic.basic.config.annotation.Reference.other = Other
com.top_logic.basic.config.annotation.Reference.other.tooltip = The name of the property in the referenced type that represents the inverse reference.
com.top_logic.basic.config.annotation.Reference.tooltip = Annotation to signal that a getter/setter method represents a reference-valued property that is not a regular containment.
com.top_logic.basic.config.annotation.Root = Root
com.top_logic.basic.config.annotation.Root.tooltip = Annotation to signal that a getter method delivers an ancestor in the containment hierarchy that serves as root of an <b>instance</b> (sub-) hierarchy. <p> A type may contain more than one <i>root</i> annotated getter and a return type of a <i>root</i> annotated getter may contain another <i>root</i> annotated getter. </p> <p> Note: The root <b>type</b> of a configuration hierarchy is defined by declaring a visit interface with a visitor of its hierarchy. </p>
com.top_logic.basic.config.annotation.SharedInstance = Shared instance
com.top_logic.basic.config.annotation.SharedInstance.tooltip = Annotation to a <i>configured instance</i> that marks it as being safe for sharing between different usages with identical configurations. <p> Only those classes must be marked as <i>shared instances</i> that have no state that can be modified after an instance is constructed. </p> <p> This annotation is not inherited. It must be repeated on each subclass that keeps the stateless property of its super class. </p>
com.top_logic.basic.config.annotation.Step = Step
com.top_logic.basic.config.annotation.Step.tooltip = Single step of a <i>reference</i> or <i>derived reference</i> path.
com.top_logic.basic.config.annotation.Step.type = Type
com.top_logic.basic.config.annotation.Step.type.tooltip = Expected base configuration type on which the property is declared. <p> If the actual base item, on which this step is evaluated is not of the specified type, this step evaluates to <code>null</code>. </p>
com.top_logic.basic.config.annotation.Step.value = Value
com.top_logic.basic.config.annotation.Step.value.tooltip = Name of the property to access in this step.
com.top_logic.basic.config.annotation.Subtypes = Subtypes
com.top_logic.basic.config.annotation.Subtypes$Subtype = Subtype
com.top_logic.basic.config.annotation.Subtypes$Subtype.tooltip = Binding of a configuration interface type to a tag name.
com.top_logic.basic.config.annotation.Subtypes.Subtype.tag = Tag
com.top_logic.basic.config.annotation.Subtypes.Subtype.tag.tooltip = The tag name to associate a certain <i>type</i> with.
com.top_logic.basic.config.annotation.Subtypes.Subtype.type = Type
com.top_logic.basic.config.annotation.Subtypes.Subtype.type.tooltip = The configuration interface type to instantiate for a certain element <i>tag</i>.
com.top_logic.basic.config.annotation.Subtypes.adjust = Adjust
com.top_logic.basic.config.annotation.Subtypes.adjust.tooltip = Whether the annotated <i>subtypes</i> are added to/replace the <i>tag names</i> of the types found by type index lookup.
com.top_logic.basic.config.annotation.Subtypes.tooltip = Annotation for a <i>array</i>, <i>list</i> or <i>map</i> valued configuration property getter to denote common element types.
com.top_logic.basic.config.annotation.Subtypes.value = Value
com.top_logic.basic.config.annotation.Subtypes.value.tooltip = Specification of bindings of element tags to common sub-types of the property element type.
com.top_logic.basic.config.annotation.TagName = Tag name
com.top_logic.basic.config.annotation.TagName.tooltip = Annotation of <i>configuration item</i> interfaces specifying a custom tag name. <p> The annotated custom tag name can be used in the context of other configurations instead of the <code>config:interface="..."</code> attribute for selecting the concrete configuration type. </p> <p> Note: The tag names must be unique in all contexts the annotated configuration interface may be used. </p>
com.top_logic.basic.config.annotation.TagName.value = Value
com.top_logic.basic.config.annotation.TagName.value.tooltip = The custom tag name to use as short-cut for the annotated <i>configuration item</i> interface.
com.top_logic.basic.config.annotation.ValueInitializer = Value initializer
com.top_logic.basic.config.annotation.ValueInitializer.tooltip = Annotation for a <i>configuration item</i> property getter method that associates a <i>property initializer</i> with that property. <p> Note: The annotated <i>property initializer</i> is only considered, if the configuration item with the annotated property is constructed in a declarative form. A <i>property initializer</i> is not used when constructing a plain configuration item by code. </p>
com.top_logic.basic.config.annotation.ValueInitializer.value = Value
com.top_logic.basic.config.annotation.ValueInitializer.value.tooltip = The <i>property initializer</i> to use for the annotated property.
com.top_logic.basic.config.annotation.defaults.BooleanDefault = Boolean default
com.top_logic.basic.config.annotation.defaults.BooleanDefault.tooltip = Annotation class for annotating a default value of type <code>Boolean#TYPE</code>.
com.top_logic.basic.config.annotation.defaults.BooleanDefault.value = Value
com.top_logic.basic.config.annotation.defaults.ByteDefault = Byte default
com.top_logic.basic.config.annotation.defaults.ByteDefault.tooltip = Annotation class for annotating a default value of type <code>Byte#TYPE</code>.
com.top_logic.basic.config.annotation.defaults.ByteDefault.value = Value
com.top_logic.basic.config.annotation.defaults.CharDefault = Char default
com.top_logic.basic.config.annotation.defaults.CharDefault.tooltip = Annotation class for annotating a default value of type <code>Character#TYPE</code>.
com.top_logic.basic.config.annotation.defaults.CharDefault.value = Value
com.top_logic.basic.config.annotation.defaults.ClassDefault = Class default
com.top_logic.basic.config.annotation.defaults.ClassDefault.tooltip = Annotation class for annotating a default value of type <i>class</i>. <p> This annotation can be annotated to functions (e. g. a property of the configuration) or to a field (e. g. when defining a theme variable in Icons class) to set its default value. </p>
com.top_logic.basic.config.annotation.defaults.ClassDefault.value = Value
com.top_logic.basic.config.annotation.defaults.ComplexDefault = Complex default
com.top_logic.basic.config.annotation.defaults.ComplexDefault.tooltip = Annotation specifying a <i>default value provider</i> for a <i>property descriptor</i>.
com.top_logic.basic.config.annotation.defaults.ComplexDefault.value = Value
com.top_logic.basic.config.annotation.defaults.ComplexDefault.value.tooltip = The implementation class of the <i>default value provider</i> to use.
com.top_logic.basic.config.annotation.defaults.DoubleDefault = Double default
com.top_logic.basic.config.annotation.defaults.DoubleDefault.tooltip = Annotation class for annotating a default value of type <code>Double#TYPE</code>.
com.top_logic.basic.config.annotation.defaults.DoubleDefault.value = Value
com.top_logic.basic.config.annotation.defaults.FloatDefault = Float default
com.top_logic.basic.config.annotation.defaults.FloatDefault.tooltip = Annotation class for annotating a default value of type <code>Float#TYPE</code>.
com.top_logic.basic.config.annotation.defaults.FloatDefault.value = Value
com.top_logic.basic.config.annotation.defaults.FormattedDefault = Formatted default
com.top_logic.basic.config.annotation.defaults.FormattedDefault.tooltip = Annotation to annotate a <i>string</i> which is interpreted by a <i>configuration value provider</i> in a property of kind <i>plain</i>.
com.top_logic.basic.config.annotation.defaults.FormattedDefault.value = Value
com.top_logic.basic.config.annotation.defaults.ImplementationClassDefault = Implementation class default
com.top_logic.basic.config.annotation.defaults.ImplementationClassDefault.tooltip = Annotation selecting a class to be used by default for a <i>property descriptor</i> that holds polymorphic configurations. <p> The annotated property must be declared of configuration type (or list, map, array of such type). </p> <p> If the declared type of the property is a subtype of <i>polymorphic configuration</i>, then the <i>value</i> selects the <i>Class</i> (<i>polymorphic configuration</i>) to be used if none is explicitly specified in the configuration. </p> <p> If the declared type of the annotated property is of plain <i>configuration item</i> type, the <i>value</i> specifies the configuration interface that is used for the property, if no explicit configuration type is specified in the configuration. </p>
com.top_logic.basic.config.annotation.defaults.ImplementationClassDefault.value = Value
com.top_logic.basic.config.annotation.defaults.ImplementationClassDefault.value.tooltip = The implementation class for a <i>polymorphic configuration</i> property, or the concrete configuration type for a general <i>configuration item</i> property if none is explicitly specified in the configuration. <p> If the configuration is edited in a UI, this value is used to select a default option for an otherwise mandatory property. </p>
com.top_logic.basic.config.annotation.defaults.InstanceDefault = Instance default
com.top_logic.basic.config.annotation.defaults.InstanceDefault.tooltip = Annotation to specify a class that should be instantiated as default value for a configuration property with <i>instance format</i>.
com.top_logic.basic.config.annotation.defaults.InstanceDefault.value = Value
com.top_logic.basic.config.annotation.defaults.InstanceDefault.value.tooltip = The default (singleton) class.
com.top_logic.basic.config.annotation.defaults.IntDefault = Int default
com.top_logic.basic.config.annotation.defaults.IntDefault.tooltip = Annotation class for annotating a default value of type <code>Integer#TYPE</code>.
com.top_logic.basic.config.annotation.defaults.IntDefault.value = Value
com.top_logic.basic.config.annotation.defaults.ItemDefault = Item default
com.top_logic.basic.config.annotation.defaults.ItemDefault.tooltip = Annotation class for marking a property which is of type <i>item</i> to have a default instance of that type as default value. The default value is unmodifiable.
com.top_logic.basic.config.annotation.defaults.ItemDefault.value = Value
com.top_logic.basic.config.annotation.defaults.ItemDefault.value.tooltip = The configuration interface to instantiate by default. <p> If none is given, the property type is used. If the given type is an implementation class, a <i>polymorphic configuration</i> filled with that implementation class is used. </p>
com.top_logic.basic.config.annotation.defaults.ListDefault = List default
com.top_logic.basic.config.annotation.defaults.ListDefault.tooltip = Default annotation for <i>property descriptor</i> of type <i>list</i>. <p> The value is a sequence of <i>configuration items</i> which are created and taken as default. If a class is not an extension of <i>configuration item</i> it is treated as shortcut for a <i>polymorphic configuration</i> with the given class as implementation class. </p>
com.top_logic.basic.config.annotation.defaults.ListDefault.value = Value
com.top_logic.basic.config.annotation.defaults.ListDefault.value.tooltip = Classes of the <i>configuration item</i> in the default value.
com.top_logic.basic.config.annotation.defaults.LongDefault = Long default
com.top_logic.basic.config.annotation.defaults.LongDefault.tooltip = Annotation class for annotating a default value of type <code>Long#TYPE</code>.
com.top_logic.basic.config.annotation.defaults.LongDefault.value = Value
com.top_logic.basic.config.annotation.defaults.NullDefault = Null default
com.top_logic.basic.config.annotation.defaults.NullDefault.tooltip = Annotation class for annotating a <code>null</code> default value. <p> Makes the property <i>nullable</i>. </p>
com.top_logic.basic.config.annotation.defaults.ShortDefault = Short default
com.top_logic.basic.config.annotation.defaults.ShortDefault.tooltip = Annotation class for annotating a default value of type <code>Short#TYPE</code>.
com.top_logic.basic.config.annotation.defaults.ShortDefault.value = Value
com.top_logic.basic.config.annotation.defaults.StringDefault = String default
com.top_logic.basic.config.annotation.defaults.StringDefault.tooltip = Annotation class for annotating a default value of type <i>string</i>.
com.top_logic.basic.config.annotation.defaults.StringDefault.value = Value
com.top_logic.basic.config.constraint.ConstraintAnnotation = Constraint annotation
com.top_logic.basic.config.constraint.ConstraintAnnotation.tooltip = Meta-annotation that makes an annotation interface defining a typed configuration property constraint. <p> Note: A <i>constraint annotation</i> must also be annotated as <i>retention</i> <i>runtime</i> and <i>target</i> <i>method</i>. </p>
com.top_logic.basic.config.constraint.ConstraintAnnotation.value = Value
com.top_logic.basic.config.constraint.ConstraintAnnotation.value.tooltip = The factory class that transforms the an annotation instance into a <i>constraint algorithm</i> implementation.
com.top_logic.basic.config.constraint.annotation.Bound = Bound
com.top_logic.basic.config.constraint.annotation.Bound.asWarning = As warning
com.top_logic.basic.config.constraint.annotation.Bound.asWarning.tooltip = Whether a potential constraint violation should be treated as warning (instead of as error).
com.top_logic.basic.config.constraint.annotation.Bound.comparison = Comparison
com.top_logic.basic.config.constraint.annotation.Bound.comparison.tooltip = The type of comparison to perform.
com.top_logic.basic.config.constraint.annotation.Bound.tooltip = Declares a static bound on a property. <p> If multiple independent <i>bounds</i> should be declared on a single property, these annotations can be nested within a <i>bounds</i> annotation. </p> <p> Dynamic bounds can be realized through a <i>comparison dependency</i>. </p>
com.top_logic.basic.config.constraint.annotation.Bound.value = Value
com.top_logic.basic.config.constraint.annotation.Bound.value.tooltip = The value to compare the value of the annotated property with.
com.top_logic.basic.config.constraint.annotation.Bounds = Bounds
com.top_logic.basic.config.constraint.annotation.Bounds.tooltip = Annotation declaring multiple <i>bound</i> annotations on a single property.
com.top_logic.basic.config.constraint.annotation.Bounds.value = Value
com.top_logic.basic.config.constraint.annotation.Bounds.value.tooltip = The multiple <i>bound</i> annotations to declare on a single property.
com.top_logic.basic.config.constraint.annotation.Comparision = Comparision
com.top_logic.basic.config.constraint.annotation.Comparision.GREATER = Greater
com.top_logic.basic.config.constraint.annotation.Comparision.GREATER.tooltip = The base value must be greater than the reference value.
com.top_logic.basic.config.constraint.annotation.Comparision.GREATER_OR_EQUAL = Greater or equal
com.top_logic.basic.config.constraint.annotation.Comparision.GREATER_OR_EQUAL.tooltip = The base value must be greater than or equal to the reference value.
com.top_logic.basic.config.constraint.annotation.Comparision.SMALLER = Smaller
com.top_logic.basic.config.constraint.annotation.Comparision.SMALLER.tooltip = The base value must be smaller than the reference value.
com.top_logic.basic.config.constraint.annotation.Comparision.SMALLER_OR_EQUAL = Smaller or equal
com.top_logic.basic.config.constraint.annotation.Comparision.SMALLER_OR_EQUAL.tooltip = The base value must be smaller than or equal to the reference value.
com.top_logic.basic.config.constraint.annotation.Comparision.tooltip = Type of comparison.
com.top_logic.basic.config.constraint.annotation.ComparisonDependencies = Comparison dependencies
com.top_logic.basic.config.constraint.annotation.ComparisonDependencies.tooltip = Annotation declaring multiple <i>comparison dependency</i> annotations on a single property.
com.top_logic.basic.config.constraint.annotation.ComparisonDependencies.value = Value
com.top_logic.basic.config.constraint.annotation.ComparisonDependencies.value.tooltip = The multiple <i>comparison dependency</i> annotations to declare on a single property.
com.top_logic.basic.config.constraint.annotation.ComparisonDependency = Comparison dependency
com.top_logic.basic.config.constraint.annotation.ComparisonDependency.asWarning = As warning
com.top_logic.basic.config.constraint.annotation.ComparisonDependency.asWarning.tooltip = Whether a potential constraint violation should be treated as warning (instead of as error).
com.top_logic.basic.config.constraint.annotation.ComparisonDependency.comparison = Comparison
com.top_logic.basic.config.constraint.annotation.ComparisonDependency.comparison.tooltip = The type of comparison to perform.
com.top_logic.basic.config.constraint.annotation.ComparisonDependency.other = Other
com.top_logic.basic.config.constraint.annotation.ComparisonDependency.other.tooltip = Reference to the other property compare the value of the annotated property with.
com.top_logic.basic.config.constraint.annotation.ComparisonDependency.symmetric = Symmetric
com.top_logic.basic.config.constraint.annotation.ComparisonDependency.symmetric.tooltip = Whether violations of this dependency should also be reported on the <i>other</i> property.
com.top_logic.basic.config.constraint.annotation.ComparisonDependency.tooltip = Declares a dependency between two properties. <p> A static bound on a property can be realized through a <i>bound</i> annotation. </p>
com.top_logic.basic.config.constraint.annotation.Constraint = Constraint
com.top_logic.basic.config.constraint.annotation.Constraint.args = Arguments
com.top_logic.basic.config.constraint.annotation.Constraint.args.tooltip = References to other configuration properties that are related to the annotated configuration property.
com.top_logic.basic.config.constraint.annotation.Constraint.asWarning = As warning
com.top_logic.basic.config.constraint.annotation.Constraint.asWarning.tooltip = Whether a potential constraint violation should be treated as warning (instead of as error).
com.top_logic.basic.config.constraint.annotation.Constraint.tooltip = Annotation of a constraint checking algorithm to a configuration property. <p> If multiple independent constraints should be declared on a single property, these annotations can be nested within a <i>constraints</i> annotation. </p> <p> If the annotated property overrides a property of a super-interface, all constraints declared on the overridden property are also active, unless <i>override constraints</i> is also given. </p> <p> If the <i>constraint algorithm</i> implementation needs parameterization, a custom constraint annotation type can be declared. This custom constraint annotation takes the parameters for the checking algorithm. To be picked up in the constraint creation process, the custom annotation must itself be annotated with <i>constraint annotation</i>. Note: A custom constraint annotation can only be declared once at a single property. </p>
com.top_logic.basic.config.constraint.annotation.Constraint.value = Value
com.top_logic.basic.config.constraint.annotation.Constraint.value.tooltip = Implementation of the constraint checking algorithm.
com.top_logic.basic.config.constraint.annotation.Constraints = Constraints
com.top_logic.basic.config.constraint.annotation.Constraints.tooltip = Multi-constraint annotation for the generic <i>constraint</i> annotation.
com.top_logic.basic.config.constraint.annotation.Constraints.value = Value
com.top_logic.basic.config.constraint.annotation.Constraints.value.tooltip = The multiple <i>constraints</i> on a single property.
com.top_logic.basic.config.constraint.annotation.OverrideConstraints = Override constraints
com.top_logic.basic.config.constraint.annotation.OverrideConstraints.tooltip = Marker annotation that deactivates inherited <i>constraint annotations</i>.
com.top_logic.basic.config.constraint.annotation.RegexpConstraint = Regular expression constraint
com.top_logic.basic.config.constraint.annotation.RegexpConstraint.asWarning = As warning
com.top_logic.basic.config.constraint.annotation.RegexpConstraint.asWarning.tooltip = Whether a constraint failure should be treated as warning instead of error.
com.top_logic.basic.config.constraint.annotation.RegexpConstraint.errorKey = Error key
com.top_logic.basic.config.constraint.annotation.RegexpConstraint.errorKey.tooltip = The <i>regular expression error key</i> that delivers the error message when the pattern in <i>value</i> does not match.
com.top_logic.basic.config.constraint.annotation.RegexpConstraint.tooltip = <i>Constraint annotation</i> that creates regular expression constraints for <i>string</i> -valued properties.
com.top_logic.basic.config.constraint.annotation.RegexpConstraint.value = Value
com.top_logic.basic.config.constraint.annotation.RegexpConstraint.value.tooltip = The regular expression that must match the value.
com.top_logic.basic.config.constraint.annotation.RegexpConstraints = Regular expression constraints
com.top_logic.basic.config.constraint.annotation.RegexpConstraints.tooltip = Multi-constraint annotation for the <i>regular expression constraint</i> annotation.
com.top_logic.basic.config.constraint.annotation.RegexpConstraints.value = Value
com.top_logic.basic.config.constraint.annotation.RegexpConstraints.value.tooltip = The multiple <i>regular expression constraints</i> on a single property.
com.top_logic.basic.config.container.ConfigPart = Configuration part
com.top_logic.basic.config.container.ConfigPart.container = Container
com.top_logic.basic.config.container.ConfigPart.container.tooltip = The configuration context, in which this <i>configuration item</i> lives. <p> <em>It is not allowed to build a cycle by putting a container into one of its (indirect) parts.</em> This is not checked though, for performance reasons. <br/> A configuration item lives in the context of another configuration, if it is assigned to a containment reference (of kind <i>item</i>, <i>array</i>, <i>list</i>, or <i>map</i>) of the other configuration. </p>
com.top_logic.basic.config.container.ConfigPart.tooltip = A <i>configuration item</i> which is part of an <i>configuration item</i> tree and has a reference to its parent in this tree. <p> It is recommend to define an explicit property which is annotated with <i>container</i>. </p>
com.top_logic.basic.config.customization.CustomizationContainer$PropertyCustomizationConfig = Property customization configuration
com.top_logic.basic.config.customization.CustomizationContainer$PropertyCustomizationConfig.tooltip = Customization of the annotations of a typed configuration property.
com.top_logic.basic.config.customization.CustomizationContainer$TypeCustomizationConfig = Type customization configuration
com.top_logic.basic.config.customization.CustomizationContainer$TypeCustomizationConfig.tooltip = Customization of the annotations of a <i>class</i>.
com.top_logic.basic.config.customization.CustomizationContainer.AnnotationContainer.annotations = Annotations
com.top_logic.basic.config.customization.CustomizationContainer.AnnotationContainer.annotations.tooltip = <i>Annotations</i> indexed by their class.
com.top_logic.basic.config.customization.CustomizationContainer.customizations = Customizations
com.top_logic.basic.config.customization.CustomizationContainer.customizations.tooltip = Collection of <i>customization configurations</i> indexed by the target of the customization.
com.top_logic.basic.config.equal.ConfigEquality$CompareMode = Compare mode
com.top_logic.basic.config.equal.ConfigEquality$CompareMode.tooltip = How should <i>configuration items</i> be compared?
com.top_logic.basic.config.equal.ConfigEquality.CompareMode.IDENTITY = Identity
com.top_logic.basic.config.equal.ConfigEquality.CompareMode.IDENTITY.tooltip = The <i>configuration items</i> are compared by identity.
com.top_logic.basic.config.equal.ConfigEquality.CompareMode.IGNORE = Ignore
com.top_logic.basic.config.equal.ConfigEquality.CompareMode.IGNORE.tooltip = The <i>configuration items</i> don't matter for the comparison.
com.top_logic.basic.config.equal.ConfigEquality.CompareMode.VALUE = Value
com.top_logic.basic.config.equal.ConfigEquality.CompareMode.VALUE.tooltip = The <i>configuration items</i> are compared by the values of their properties.
com.top_logic.basic.config.equal.EqualityByValue = Equality by value
com.top_logic.basic.config.equal.EqualityByValue.h-code.tooltip = Hash code base on the hash codes of the property values.
com.top_logic.basic.config.equal.EqualityByValue.tooltip = Super interface for <i>configuration item</i> which should be equal by value.
com.top_logic.basic.config.internal.gen.NoImplementationClassGeneration = No implementation class generation
com.top_logic.basic.config.internal.gen.NoImplementationClassGeneration.tooltip = Marks a <i>configuration item</i> interface that no implementation should be generated.
com.top_logic.basic.config.json.JsonBinding = JSON binding
com.top_logic.basic.config.json.JsonBinding.tooltip = Annotation for configuration properties to define a Json serialization of values of the annotated property.
com.top_logic.basic.config.json.JsonBinding.value = Value
com.top_logic.basic.config.json.JsonBinding.value.tooltip = Json serialization class for values of the annotated property.
com.top_logic.basic.config.misc.NamedRegexp = Named regular expression
com.top_logic.basic.config.misc.NamedRegexp.pattern = Pattern
com.top_logic.basic.config.misc.NamedRegexp.pattern.tooltip = The configured regular expression.
com.top_logic.basic.config.misc.NamedRegexp.tooltip = Configuration of a named regular expression.
com.top_logic.basic.config.order.DisplayInherited = Display inherited
com.top_logic.basic.config.order.DisplayInherited$DisplayStrategy = Display strategy
com.top_logic.basic.config.order.DisplayInherited$DisplayStrategy.tooltip = Option how to handle inherited properties of a class annotated with <i>display inherited</i>.
com.top_logic.basic.config.order.DisplayInherited.DisplayStrategy.APPEND = Append
com.top_logic.basic.config.order.DisplayInherited.DisplayStrategy.APPEND.tooltip = Append the properties of the inherited class to the properties of the class annotated with <i>display inherited</i>.
com.top_logic.basic.config.order.DisplayInherited.DisplayStrategy.IGNORE = Ignore
com.top_logic.basic.config.order.DisplayInherited.DisplayStrategy.IGNORE.tooltip = Ignore properties of inherited classes. <p> If a property of an inherited class should be displayed, it must be included in the list of property names given in the classes <i>display order</i> annotation. </p>
com.top_logic.basic.config.order.DisplayInherited.DisplayStrategy.PREPEND = Prepend
com.top_logic.basic.config.order.DisplayInherited.DisplayStrategy.PREPEND.tooltip = Prepend the properties of the inherited class to the properties of the class annotated with <i>display inherited</i>.
com.top_logic.basic.config.order.DisplayInherited.tooltip = Specifies, how inherited properties are handled, when a <i>configuration item</i> is used for describing a UI. <p> Note: This annotation is "inherited" to derived interfaces. This allows to define a consistent display policy (<i>append</i>, or <i>prepend</i>) among a hierarchy of configuration just at the root of the hierarchy. A value of <i>ignore</i> is only locally used for the annotated interface but not considered during determining the inherited strategy. </p> <p> If no annotation is given throughout the hierarchy, the default strategy is <i>prepend</i>. </p>
com.top_logic.basic.config.order.DisplayInherited.value = Value
com.top_logic.basic.config.order.DisplayInherited.value.tooltip = Strategy how to handle inherited properties.
com.top_logic.basic.config.order.DisplayOrder = Display order
com.top_logic.basic.config.order.DisplayOrder.tooltip = Specifies the display order of properties for a <i>configuration item</i>.
com.top_logic.basic.config.order.DisplayOrder.value = Value
com.top_logic.basic.config.order.DisplayOrder.value.tooltip = The order of property names for display. <p> Properties that are not listed are not displayed. </p>
com.top_logic.basic.config.template.TemplateExpression$GlobalConfig = Global configuration
com.top_logic.basic.config.template.TemplateExpression$GlobalConfig$FunctionDef = Function def
com.top_logic.basic.config.template.TemplateExpression$GlobalConfig$FunctionDef.tooltip = Definition of a single named function.
com.top_logic.basic.config.template.TemplateExpression$GlobalConfig.tooltip = Global configuration options for evaluation.
com.top_logic.basic.config.template.TemplateExpression.GlobalConfig.FunctionDef.impl = Implementation
com.top_logic.basic.config.template.TemplateExpression.GlobalConfig.FunctionDef.impl.tooltip = The function implementation.
com.top_logic.basic.config.template.TemplateExpression.GlobalConfig.functions = Functions
com.top_logic.basic.config.template.TemplateExpression.GlobalConfig.functions.tooltip = Definitions of functions accessible from templates.
com.top_logic.basic.encryption.DummyEncryptionService = Dummy encryption service
com.top_logic.basic.encryption.DummyEncryptionService.Config.algorithm = Algorithm
com.top_logic.basic.encryption.DummyEncryptionService.Config.algorithm.tooltip = Algorithm to be used.
com.top_logic.basic.encryption.DummyEncryptionService.Config.key = Key
com.top_logic.basic.encryption.DummyEncryptionService.Config.key.tooltip = Key to be used.
com.top_logic.basic.encryption.DummyEncryptionService.tooltip = <i>Encryption service</i> that is only for testing, since it uses a private key that is publicly available in the configuration.
com.top_logic.basic.encryption.EncryptionService = Encryption service
com.top_logic.basic.encryption.EncryptionService.Config.signature-digest-algorithm = Signature digest algorithm
com.top_logic.basic.encryption.EncryptionService.Config.signature-digest-algorithm.tooltip = The digest algorithm to produce (symmetric) signatures with.
com.top_logic.basic.encryption.EncryptionService.tooltip = Service that provides a symmetric key for encrypting application data.
com.top_logic.basic.encryption.SecureRandomService = Secure random service
com.top_logic.basic.encryption.SecureRandomService.Config.algorithm = Algorithm
com.top_logic.basic.encryption.SecureRandomService.Config.algorithm.tooltip = <i>Secure random</i> algorithm to use.
com.top_logic.basic.encryption.SecureRandomService.tooltip = Service that offers a seeded <i>secure random</i> implementation.
com.top_logic.basic.exception.ErrorSeverity = Error severity
com.top_logic.basic.exception.ErrorSeverity.ERROR = Error
com.top_logic.basic.exception.ErrorSeverity.ERROR.tooltip = A notice that a user request was not valid.
com.top_logic.basic.exception.ErrorSeverity.INFO = Info
com.top_logic.basic.exception.ErrorSeverity.INFO.tooltip = An informative notice.
com.top_logic.basic.exception.ErrorSeverity.SYSTEM_FAILURE = System failure
com.top_logic.basic.exception.ErrorSeverity.SYSTEM_FAILURE.tooltip = An indicator that the system failed to perform an otherwise valid user request.
com.top_logic.basic.exception.ErrorSeverity.WARNING = Warning
com.top_logic.basic.exception.ErrorSeverity.WARNING.tooltip = A warning notice that a user operation could not be performed.
com.top_logic.basic.exception.ErrorSeverity.tooltip = Classification of error severities that are communicated to the user.
com.top_logic.basic.format.AbstractDateFormatDefinition = Date format definition
com.top_logic.basic.format.AbstractDateFormatDefinition.Config.lenient = Lenient
com.top_logic.basic.format.AbstractDateFormatDefinition.Config.lenient.tooltip = Configured option whether to use lenient parsing for date and time formats by default.
com.top_logic.basic.format.AbstractDateFormatDefinition.Config.user-time-zone = User time zone
com.top_logic.basic.format.AbstractDateFormatDefinition.Config.user-time-zone.tooltip = Configuration option whether the format should use the <i>time zone</i> of the user.
com.top_logic.basic.format.AbstractDateFormatDefinition.tooltip = Base class for default date <i>format definitions</i>.
com.top_logic.basic.format.DateFormatDefinition = Internationalized date format
com.top_logic.basic.format.DateFormatDefinition.Config.style = Style
com.top_logic.basic.format.DateFormatDefinition.Config.style.tooltip = The style of the created <i>date format</i>.
com.top_logic.basic.format.DateFormatDefinition.tooltip = <i>Format definition</i> creating an official date format that adjusts to the user's locale.
com.top_logic.basic.format.DateStyle = Date style
com.top_logic.basic.format.DateStyle.FULL = Full
com.top_logic.basic.format.DateStyle.LONG = Long
com.top_logic.basic.format.DateStyle.MEDIUM = Medium
com.top_logic.basic.format.DateStyle.SHORT = Short
com.top_logic.basic.format.DateStyle.tooltip = Enumeration for <i>date format</i> styles.
com.top_logic.basic.format.DateTimeFormatDefinition = Internationalized date with time format
com.top_logic.basic.format.DateTimeFormatDefinition.Config.date-style = Date style
com.top_logic.basic.format.DateTimeFormatDefinition.Config.date-style.tooltip = The style of the created <i>date format</i>.
com.top_logic.basic.format.DateTimeFormatDefinition.Config.time-style = Time style
com.top_logic.basic.format.DateTimeFormatDefinition.Config.time-style.tooltip = The style of the created <i>date format</i>.
com.top_logic.basic.format.DateTimeFormatDefinition.tooltip = <i>Format definition</i> creating an official date-time format that adjusts to the user's locale.
com.top_logic.basic.format.DecimalFormatDefinition = Custom decimal format
com.top_logic.basic.format.DecimalFormatDefinition.Config.normalize = Normalize
com.top_logic.basic.format.DecimalFormatDefinition.Config.normalize.tooltip = Whether the parsed value should be rounded to the number of fractional digits given in the format definition.
com.top_logic.basic.format.DecimalFormatDefinition.Config.result-type = Result type
com.top_logic.basic.format.DecimalFormatDefinition.Config.result-type.tooltip = The result type the format should produced after parsing.
com.top_logic.basic.format.DecimalFormatDefinition.Config.rounding-mode = Rounding mode
com.top_logic.basic.format.DecimalFormatDefinition.Config.rounding-mode.tooltip = The <i>rounding mode</i> to use. <p> The default value is defined application-wide by the <i>format configurations</i>. </p>
com.top_logic.basic.format.DecimalFormatDefinition.tooltip = <i>Custom format definition</i> of a <i>decimal format</i> specified by a format.
com.top_logic.basic.format.FormatConfig = Format configuration
com.top_logic.basic.format.FormatConfig.lenient = Lenient
com.top_logic.basic.format.FormatConfig.lenient.tooltip = Configured option whether to use lenient parsing for date and time formats by default.
com.top_logic.basic.format.FormatConfig.rounding-mode = Rounding mode
com.top_logic.basic.format.FormatConfig.rounding-mode.tooltip = The <i>rounding mode</i> to use if a format does not define one.
com.top_logic.basic.format.FormatConfig.tooltip = Global default configuration for allocating various formats.
com.top_logic.basic.format.FormatDefinition = Format definition
com.top_logic.basic.format.FormatDefinition.tooltip = Configured definition (and factory) for a <i>format</i>. <p> Acutal formats are instantiated using <code>#newFormat(FormatConfig, TimeZone, Locale)</code>. </p>
com.top_logic.basic.format.GenericFormatDefinition = Generic format definition
com.top_logic.basic.format.GenericFormatDefinition.Config.format-class = Format class
com.top_logic.basic.format.GenericFormatDefinition.Config.format-class.tooltip = Class of the <i>format</i> to instantiate. It is expected that the class has a <i>string</i> constructor.
com.top_logic.basic.format.GenericFormatDefinition.tooltip = <i>Format definition</i> that creates the <i>format</i> by instantiating a <i>format</i> class. It is expected that the class has a <i>string</i> constructor.
com.top_logic.basic.format.NormalizingFormatDefinition = Format with separate parser
com.top_logic.basic.format.NormalizingFormatDefinition.Config.format = Format
com.top_logic.basic.format.NormalizingFormatDefinition.Config.format.tooltip = The format used to format objects for display.
com.top_logic.basic.format.NormalizingFormatDefinition.Config.parser = Parser
com.top_logic.basic.format.NormalizingFormatDefinition.Config.parser.tooltip = The format used to parse inputs, if <i>Format</i> fails to parse the input. <p> The format can be specified as alternative (simplified) format to make user input more convenient. E.g. when formatting a value with a currency symbol, it is best not to expect the user to enter that symbol, but complete the value with the currency symbol after the user has entered the plain number. To accomplish that, use a format with a currenc symbol and a parsing format without it. </p>
com.top_logic.basic.format.NormalizingFormatDefinition.tooltip = <i>Format definition</i> that allows to specify a separate format for parsing the value entered by a user.
com.top_logic.basic.format.NumberFormatDefinition = Internationalized number format
com.top_logic.basic.format.NumberFormatDefinition$NumberStyle = Number style
com.top_logic.basic.format.NumberFormatDefinition$NumberStyle.tooltip = Style definition of the <i>number format</i> to create.
com.top_logic.basic.format.NumberFormatDefinition.Config.result-type = Result type
com.top_logic.basic.format.NumberFormatDefinition.Config.result-type.tooltip = The result type the format should produced after parsing.
com.top_logic.basic.format.NumberFormatDefinition.Config.style = Style
com.top_logic.basic.format.NumberFormatDefinition.Config.style.tooltip = The style of the created <i>number format</i>.
com.top_logic.basic.format.NumberFormatDefinition.NumberStyle.CURRENCY = Currency
com.top_logic.basic.format.NumberFormatDefinition.NumberStyle.INTEGER = Integer
com.top_logic.basic.format.NumberFormatDefinition.NumberStyle.NUMBER = Number
com.top_logic.basic.format.NumberFormatDefinition.NumberStyle.PERCENT = Percent
com.top_logic.basic.format.NumberFormatDefinition.tooltip = <i>Format definition</i> creating an official <i>number format</i> that adjusts to the user's locale.
com.top_logic.basic.format.NumberFormatResult = Number format result
com.top_logic.basic.format.NumberFormatResult.DOUBLE = Double
com.top_logic.basic.format.NumberFormatResult.DOUBLE.tooltip = Always a <i>double</i> number.
com.top_logic.basic.format.NumberFormatResult.LONG = Long
com.top_logic.basic.format.NumberFormatResult.LONG.tooltip = Always a <i>long</i> number, parsing fails, if any fractional digits have been entered.
com.top_logic.basic.format.NumberFormatResult.NUMBER = Number
com.top_logic.basic.format.NumberFormatResult.NUMBER.tooltip = Any <i>number</i> depending on the actual user input.
com.top_logic.basic.format.NumberFormatResult.tooltip = Type of result a <i>number format</i> should produce.
com.top_logic.basic.format.PatternBasedFormatDefinition = Custom format definition
com.top_logic.basic.format.PatternBasedFormatDefinition.Config.pattern = Pattern
com.top_logic.basic.format.PatternBasedFormatDefinition.Config.pattern.tooltip = The pattern to create <i>format</i> from.
com.top_logic.basic.format.PatternBasedFormatDefinition.tooltip = <i>Format definition</i> creating <i>format</i> based on a given pattern
com.top_logic.basic.format.PercentFormatDefinition = Percentage format
com.top_logic.basic.format.PercentFormatDefinition.Config.format = Format
com.top_logic.basic.format.PercentFormatDefinition.Config.format.tooltip = The number format for parsing the percent value. <p> The parsed value is afterwards divided by 100 to create the percentage value. </p>
com.top_logic.basic.format.PercentFormatDefinition.tooltip = <i>Format definition</i> that wraps a number format with a value adjustment (division by 100.0).
com.top_logic.basic.format.SimpleDateFormatDefinition = Custom date format
com.top_logic.basic.format.SimpleDateFormatDefinition.Config.lenient = Lenient
com.top_logic.basic.format.SimpleDateFormatDefinition.Config.user-time-zone = User time zone
com.top_logic.basic.format.SimpleDateFormatDefinition.Config.user-time-zone.tooltip = Configuration option whether the format should use the <i>time zone</i> of the user.
com.top_logic.basic.format.SimpleDateFormatDefinition.tooltip = <i>Custom format definition</i> creating a date, date and time, or time format defined by a pattern.
com.top_logic.basic.format.TimeFormatDefinition = Internationalized time format
com.top_logic.basic.format.TimeFormatDefinition.Config.style = Style
com.top_logic.basic.format.TimeFormatDefinition.Config.style.tooltip = The style of the created <i>date format</i>.
com.top_logic.basic.format.TimeFormatDefinition.tooltip = <i>Format definition</i> creating an official time format that adjusts to the user's locale.
com.top_logic.basic.format.configured.FormatterService = Format configurations
com.top_logic.basic.format.configured.FormatterService$Config$FormatEntry = Format entry
com.top_logic.basic.format.configured.FormatterService$Config$FormatEntry.tooltip = Entry in the global list of application-wide defined formats.
com.top_logic.basic.format.configured.FormatterService.Config.FormatEntry.definition = Definition
com.top_logic.basic.format.configured.FormatterService.Config.FormatEntry.definition.tooltip = The format definition.
com.top_logic.basic.format.configured.FormatterService.Config.FormatEntry.id = ID
com.top_logic.basic.format.configured.FormatterService.Config.FormatEntry.id.tooltip = The internal ID for referencing this format.
com.top_logic.basic.format.configured.FormatterService.Config.FormatEntry.label = Label
com.top_logic.basic.format.configured.FormatterService.Config.FormatEntry.label.tooltip = The name of the format displayed in format selectors.
com.top_logic.basic.format.configured.FormatterService.Config.formats = Formats
com.top_logic.basic.format.configured.FormatterService.Config.formats.tooltip = <i>Format definitions</i> indexed by their IDs.
com.top_logic.basic.format.configured.FormatterService.tooltip = Service providing global formats referenced by other parts of the application. <p> E.g. format annotations to model elements can refere to formats defined here. </p>
com.top_logic.basic.html.SafeHTML = Safe HTML
com.top_logic.basic.html.SafeHTML.Config.allowed-attributes = Allowed attributes
com.top_logic.basic.html.SafeHTML.Config.allowed-attributes.tooltip = <i>List</i> of allowed attributes.
com.top_logic.basic.html.SafeHTML.Config.allowed-tags = Allowed tags
com.top_logic.basic.html.SafeHTML.Config.allowed-tags.tooltip = <i>List</i> of allowed tags.
com.top_logic.basic.html.SafeHTML.Config.attribute-checkers = Attribute checkers
com.top_logic.basic.html.SafeHTML.Config.attribute-checkers.tooltip = <i>Map</i> of <i>attribute checker's</i>.
com.top_logic.basic.html.SafeHTML.Config.disabled = Disabled
com.top_logic.basic.html.SafeHTML.Config.disabled.tooltip = Whether checking is disabled.
com.top_logic.basic.html.SafeHTML.tooltip = Utility to check HTML input to only contain safe contents.
com.top_logic.basic.i18n.I18NCheck = Internationalization check
com.top_logic.basic.i18n.I18NCheck.Config.checkers = Checkers
com.top_logic.basic.i18n.I18NCheck.Config.checkers.tooltip = Configurations of the <i>internationalization checker</i> to use.
com.top_logic.basic.i18n.I18NCheck.tooltip = Service checking the existence of all static resource keys in all languages.
com.top_logic.basic.io.BasicFileLog = Basic file log
com.top_logic.basic.io.BasicFileLog$LogType = Log type
com.top_logic.basic.io.BasicFileLog$LogType.tooltip = Configuration of a log type.
com.top_logic.basic.io.BasicFileLog.Config.basicPath = Basic path
com.top_logic.basic.io.BasicFileLog.Config.basicPath.tooltip = Getter for <code>"basicPath"</code>.
com.top_logic.basic.io.BasicFileLog.Config.logTypes = Log types
com.top_logic.basic.io.BasicFileLog.Config.logTypes.tooltip = Logs.
com.top_logic.basic.io.BasicFileLog.LogType.filename = Filename
com.top_logic.basic.io.BasicFileLog.LogType.filename.tooltip = The base name for the log file. <p> The base name is appended with a date to differentiate rotated log files. </p>
com.top_logic.basic.io.BasicFileLog.LogType.path = Path
com.top_logic.basic.io.BasicFileLog.LogType.path.tooltip = Getter for <code>"path"</code>.
com.top_logic.basic.io.BasicFileLog.LogType.suffix = Suffix
com.top_logic.basic.io.BasicFileLog.LogType.suffix.tooltip = Getter for <code>"suffix"</code>.
com.top_logic.basic.io.BasicFileLog.LogType.useYearMonth = Use year month
com.top_logic.basic.io.BasicFileLog.LogType.useYearMonth.tooltip = Getter for <code>"useYearMonth"</code>.
com.top_logic.basic.io.BasicFileLog.tooltip = This class has the ability to log strings into files. There are two mechanisms for logging: <ul> <li><code> appendIntoLogFile(String aBasicFileName, String aText) </code> for appending </li><li><code> logIntoNewFile(String aBasicFileName, String aText) </code> for creating a new log file </li></ul> <code>aText</code> is the text to log. <code>aBasicFileName</code> describes the type of the log. Some adaptions of the log path can be mode in the configuration of the <code>BasicFileLog</code>. <ul> <li> The main log path can be set, all other paths are relative to this one</li> <li> for every <code>aBasicFileName</code> a path can be set</li> <li> for every <code>aBasicFileName</code> the usage of year and month folders is possible. Year and month folder do the following: If a new file is created, the file is automatically stored in a folder with the name of the actual month. This folder is stored in a folder with the name of the actual year.</li> </ul> This class ins intended for small amounts of logging. It maximum throughput on a developer machine is around 120 (new) Files per second. * When logging more than 500 Messages per day you need some other approach.
com.top_logic.basic.io.FileCompiler = File compiler
com.top_logic.basic.io.FileCompiler.Config.always-check = Always check
com.top_logic.basic.io.FileCompiler.Config.always-check.tooltip = Whether the base files are checked for modification to re-compile the file.
com.top_logic.basic.io.FileCompiler.Config.base-dir = Base directory
com.top_logic.basic.io.FileCompiler.Config.base-dir.tooltip = Optional base path uses for all file names, default ""
com.top_logic.basic.io.FileCompiler.Config.check-interval = Check interval
com.top_logic.basic.io.FileCompiler.Config.check-interval.tooltip = Interval in ms when a check for modification occurs, i.e. if a base file changed, in at most this time the change is applied into the compiled file. <p> Only used when <i>Always check</i> is true. </p>
com.top_logic.basic.io.FileCompiler.Config.files = Files
com.top_logic.basic.io.FileCompiler.Config.files.tooltip = The named of the files to include into the compiled file.
com.top_logic.basic.io.FileCompiler.Config.is-deployed = Is deployed
com.top_logic.basic.io.FileCompiler.Config.is-deployed.tooltip = Flag if we are in a deployed state (= file was pre-compiled)
com.top_logic.basic.io.FileCompiler.Config.target = Target
com.top_logic.basic.io.FileCompiler.Config.target.tooltip = Name of generated File, relative to <i>Base directory</i>.
com.top_logic.basic.io.FileCompiler.tooltip = A File complier compiles a set of files into on (big) file. It is intended to be used with files like .js .css or similar that can be concatenated without losing semantics. This class only works with files found in the same <i>Base directory</i>. It is bases on Ideas found around the MultiLoaderFileManager.
com.top_logic.basic.io.file.FileNameConvention = File name convention
com.top_logic.basic.io.file.FileNameConvention.rules = Rules
com.top_logic.basic.io.file.FileNameConvention.rules.tooltip = The rules that this test checks.
com.top_logic.basic.io.file.FileNameConvention.tooltip = The conventions for file names in <i>TopLogic</i> based projects. <p> These conventions are tested by <code>TestFileNames</code>. But as that is a test class, it cannot be linked here. And this configuration cannot be moved to the test package, as the test configurations are not inherited: The same configuration had to be copied to each single project. </p>
com.top_logic.basic.io.file.FileNameRule = File name rule
com.top_logic.basic.io.file.FileNameRule.exceptions = Exceptions
com.top_logic.basic.io.file.FileNameRule.exceptions.tooltip = The regex <i>pattern</i> defining the exceptions. <p> Files matched by this regex are excluded from the rule. </p>
com.top_logic.basic.io.file.FileNameRule.regex = Regular expression
com.top_logic.basic.io.file.FileNameRule.regex.tooltip = The regex <i>pattern</i> that the file names have to match. <p> The file names are relative to the eclipse project. The path elements are guaranteed to be separated with a "/", independent of the operation system. </p>
com.top_logic.basic.io.file.FileNameRule.tooltip = The configuration of a single rule of the <i>file name convention</i>.
com.top_logic.basic.json.config.JSONBoolean = JSON boolean
com.top_logic.basic.json.config.JSONBoolean.tooltip = <i>JSON value</i> for a primitive boolean value.
com.top_logic.basic.json.config.JSONBoolean.value = Value
com.top_logic.basic.json.config.JSONBoolean.value.tooltip = The boolean value.
com.top_logic.basic.json.config.JSONFalse = JSON false
com.top_logic.basic.json.config.JSONFalse.tooltip = <i>JSON value</i> primitive for the boolean false.
com.top_logic.basic.json.config.JSONFloat = JSON float
com.top_logic.basic.json.config.JSONFloat.tooltip = <i>JSON value</i> primitive for a float value.
com.top_logic.basic.json.config.JSONFloat.value = Value
com.top_logic.basic.json.config.JSONFloat.value.tooltip = Float value.
com.top_logic.basic.json.config.JSONInteger = JSON integer
com.top_logic.basic.json.config.JSONInteger.tooltip = <i>JSON value</i> primitive for an integer value.
com.top_logic.basic.json.config.JSONInteger.value = Value
com.top_logic.basic.json.config.JSONInteger.value.tooltip = Integer value.
com.top_logic.basic.json.config.JSONList = JSON list
com.top_logic.basic.json.config.JSONList.content = Content
com.top_logic.basic.json.config.JSONList.content.tooltip = List of json objects.
com.top_logic.basic.json.config.JSONList.tooltip = <i>JSON value</i> for a list container.
com.top_logic.basic.json.config.JSONNull = JSON null
com.top_logic.basic.json.config.JSONNull.tooltip = <i>JSON value</i> primitive for null.
com.top_logic.basic.json.config.JSONObject = JSON object
com.top_logic.basic.json.config.JSONObject.properties = Properties
com.top_logic.basic.json.config.JSONObject.properties.tooltip = A map of properties for this json object.
com.top_logic.basic.json.config.JSONObject.tooltip = A json object consists of several properties. Json properties are written in key/value pairs. Keys must be <i>string's</i> and values are from <i>JSON value</i> type.
com.top_logic.basic.json.config.JSONProperty = JSON property
com.top_logic.basic.json.config.JSONProperty.key = Key
com.top_logic.basic.json.config.JSONProperty.key.tooltip = Key for this json property.
com.top_logic.basic.json.config.JSONProperty.tooltip = A json property consists of a key and <i>JSON value</i> value.
com.top_logic.basic.json.config.JSONProperty.value = Value
com.top_logic.basic.json.config.JSONProperty.value.tooltip = <i>JSON value</i> value of this property.
com.top_logic.basic.json.config.JSONString = JSON string
com.top_logic.basic.json.config.JSONString.tooltip = <i>JSON value</i> primitive for a string.
com.top_logic.basic.json.config.JSONString.value = Value
com.top_logic.basic.json.config.JSONString.value.tooltip = String value.
com.top_logic.basic.json.config.JSONTrue = JSON true
com.top_logic.basic.json.config.JSONTrue.tooltip = <i>JSON value</i> primitive for the boolean true.
com.top_logic.basic.keystorages.KeyStorageCheckerRegistry = Key storage checker registry
com.top_logic.basic.keystorages.KeyStorageCheckerRegistry.Config.checkers = Checkers
com.top_logic.basic.keystorages.KeyStorageCheckerRegistry.Config.checkers.tooltip = The <i>list</i> of <i>key storage checkers</i>.
com.top_logic.basic.keystorages.KeyStorageCheckerRegistry.tooltip = Registry for <i>key storage checker</i>.
com.top_logic.basic.keystorages.KeyStorageRegexChecker = Key storage regular expression checker
com.top_logic.basic.keystorages.KeyStorageRegexChecker.Config.check-key = Check key
com.top_logic.basic.keystorages.KeyStorageRegexChecker.Config.check-key.tooltip = Whether the key or the value should be checked. <p> "true" means, the key should be checked. "false" means, the value. </p>
com.top_logic.basic.keystorages.KeyStorageRegexChecker.Config.explanation = Explanation
com.top_logic.basic.keystorages.KeyStorageRegexChecker.Config.explanation.tooltip = Explanation for the error message, what is wrong, why and how to fix it.
com.top_logic.basic.keystorages.KeyStorageRegexChecker.Config.regex = Regular expression
com.top_logic.basic.keystorages.KeyStorageRegexChecker.Config.regex.tooltip = Entries containing this <i>pattern</i> are reported as errors.
com.top_logic.basic.keystorages.KeyStorageRegexChecker.tooltip = Checks that no entry matches the configured <i>pattern</i>.
com.top_logic.basic.listener.EventType$Bubble = Bubble
com.top_logic.basic.listener.EventType$Bubble.tooltip = Whether the event should "bubble", i.e. whether this event should also be send to listener of a parent. What exactly a "parent" is, if there is one, depends on the concrete <i>property observable</i>.
com.top_logic.basic.listener.EventType.Bubble.BUBBLE = Bubble
com.top_logic.basic.listener.EventType.Bubble.BUBBLE.tooltip = Return type to describe that the event is potentially relevant for a ancestor of the <i>property observable</i>.
com.top_logic.basic.listener.EventType.Bubble.CANCEL_BUBBLE = Cancel bubble
com.top_logic.basic.listener.EventType.Bubble.CANCEL_BUBBLE.tooltip = Return type to describe that the event must not be propagated to the ancestors of the <i>property observable</i>.
com.top_logic.basic.mime.MimeTypesModule = MIME types module
com.top_logic.basic.mime.MimeTypesModule.tooltip = Service resolving file extensions to content types.
com.top_logic.basic.module.ConfiguredManagedClass = Configured managed class
com.top_logic.basic.module.ConfiguredManagedClass.tooltip = The class <i>TopLogic service</i> that is constructed using the typed configuration.
com.top_logic.basic.module.ManagedClass = TopLogic service
com.top_logic.basic.module.ManagedClass.ServiceConfiguration.dependencies = Dependencies
com.top_logic.basic.module.ManagedClass.ServiceConfiguration.dependencies.tooltip = Returns the configured dependencies and whether the dependency is enabled or not. Dependencies are configured in the <i>service configuration</i> whereas it is used in its module. The reason is that the dependencies depend on the special implementation class.
com.top_logic.basic.module.ManagedClass.tooltip = Base class for services.
com.top_logic.basic.module.ModuleSystem = Module system
com.top_logic.basic.module.ModuleSystem$ModuleConfiguration = Module configuration
com.top_logic.basic.module.ModuleSystem$ModuleConfiguration.tooltip = Configuration of an module in the <i>module system</i>.
com.top_logic.basic.module.ModuleSystem.Config.modules = Modules
com.top_logic.basic.module.ModuleSystem.Config.modules.tooltip = List of modules known by <i>module system</i>.
com.top_logic.basic.module.ModuleSystem.ModuleConfiguration.key = Module
com.top_logic.basic.module.ModuleSystem.ModuleConfiguration.key.tooltip = The configured module.
com.top_logic.basic.module.ModuleSystem.ModuleConfiguration.value = Enabled
com.top_logic.basic.module.ModuleSystem.ModuleConfiguration.value.tooltip = Whether <i>module</i> should be started when the application starts.
com.top_logic.basic.module.ModuleSystem.tooltip = The class <i>module system</i> manages all configured services in the system.
com.top_logic.basic.module.ServiceDependencies = Service dependencies
com.top_logic.basic.module.ServiceDependencies.tooltip = The class <i>service dependencies</i> denotes all services which are necessary to start the annotated service.
com.top_logic.basic.module.ServiceDependencies.value = Value
com.top_logic.basic.module.ServiceExtensionPoint = Service extension point
com.top_logic.basic.module.ServiceExtensionPoint.tooltip = The class <i>service extension point</i> denotes the service which serves as extension point for the annotated service, i.e. the annotated service is an add on for the service given in <i>value</i>.
com.top_logic.basic.module.ServiceExtensionPoint.value = Value
com.top_logic.basic.module.ServiceExtensionPoint.value.tooltip = The class of the service for which the annotated class is an add on.
com.top_logic.basic.module.TypedRuntimeModule$ModuleConfiguration = Module configuration
com.top_logic.basic.module.TypedRuntimeModule$ModuleConfiguration.tooltip = Configuration of a <i>typed runtime module</i>
com.top_logic.basic.module.TypedRuntimeModule.ModuleConfiguration.enabled = Enabled
com.top_logic.basic.module.TypedRuntimeModule.ModuleConfiguration.enabled.tooltip = Whether this module is enabled
com.top_logic.basic.module.TypedRuntimeModule.ModuleConfiguration.instance = Instance
com.top_logic.basic.module.TypedRuntimeModule.ModuleConfiguration.instance.tooltip = The configuration for the actual service
com.top_logic.basic.module.TypedRuntimeModule.ModuleConfiguration.service-class = Service class
com.top_logic.basic.module.TypedRuntimeModule.ModuleConfiguration.service-class.tooltip = The class of the service, this module represents.
com.top_logic.basic.sched.SchedulerService = Scheduler service
com.top_logic.basic.sched.SchedulerService.Config.core-pool-size = Core pool size
com.top_logic.basic.sched.SchedulerService.Config.core-pool-size.tooltip = The number of threads to use.
com.top_logic.basic.sched.SchedulerService.tooltip = Service providing a singleton <i>scheduled executor service</i>.
com.top_logic.basic.sql.AbstractConfiguredConnectionPool = Configured connection pool
com.top_logic.basic.sql.AbstractConfiguredConnectionPool$ConnectionType = Connection type
com.top_logic.basic.sql.AbstractConfiguredConnectionPool$ConnectionType.tooltip = This enumeration provides constants for connection types.
com.top_logic.basic.sql.AbstractConfiguredConnectionPool$PoolSettings = Pool settings
com.top_logic.basic.sql.AbstractConfiguredConnectionPool$PoolSettings.tooltip = Typed configuration variant of <i>configuration</i>.
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.Config.debug-resources = Debug resources
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.Config.debug-resources.tooltip = Enable tracking borrow operations. <p> Each borrow operation associates the borrowed connection with the stack trace of the allocator. If a release error is detected, the stack trace of the allocator is available. </p> <p> Note: Enabling this option degrades system performance. </p>
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.Config.read-pool = Read pool
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.Config.read-pool.tooltip = Settings for pooling read connections.
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.Config.warn-nested-read-allocation = Warn nested read allocation
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.Config.warn-nested-read-allocation.tooltip = Warn, if read connection allocation is nested. <p> Note: Nesting read connection allocation cannot be avoided in all circumstances. Passing a read connection from the point of allocation to all usage locations is only a matter of optimization. Enabling this option allows finding such locations. </p>
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.Config.write-pool = Write pool
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.Config.write-pool.tooltip = Settings for pooling write connections.
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.ConnectionType.READ = Read
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.ConnectionType.READ.tooltip = A read-only connection.
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.ConnectionType.WRITE = Write
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.ConnectionType.WRITE.tooltip = A connection that can update the database.
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.PoolSettings.lifo = Lifo
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.PoolSettings.maxActive = Maximum active
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.PoolSettings.maxWait = Maximum wait
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.PoolSettings.minEvictableIdleTimeMillis = Minimum evictable idle time millis
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.PoolSettings.minIdle = Minimum idle
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.PoolSettings.numTestsPerEvictionRun = Number tests per eviction run
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.PoolSettings.softMinEvictableIdleTimeMillis = Soft minimum evictable idle time millis
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.PoolSettings.testOnBorrow = Test on borrow
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.PoolSettings.testOnReturn = Test on return
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.PoolSettings.testWhileIdle = Test while idle
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.PoolSettings.timeBetweenEvictionRunsMillis = Time between eviction runs millis
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.PoolSettings.whenExhaustedAction = When exhausted action
com.top_logic.basic.sql.AbstractConfiguredConnectionPool.tooltip = <i>Connection pool</i> base implementation that can be configured through a <i>configuration</i> configuration.
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase = Configured connection pool base
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase$DataSourceConfig$DriverOption = Driver option
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase$DataSourceConfig$DriverOption.tooltip = Single database driver option.
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase$DataSourceConfig$EncryptedDriverOption = Encrypted driver option
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase$DataSourceConfig$EncryptedDriverOption.tooltip = <i>Driver option</i> for passing protected password values.
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase.Config.data-source = Data source
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase.Config.data-source.tooltip = Settings for the underlying <i>data source</i>.
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase.Config.sql-dialect = Sql dialect
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase.Config.sql-dialect.tooltip = The SQL dialect to use. <p> If not given, it is guessed from <i>database meta data</i>. </p>
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase.DataSourceConfig.DriverOption.name.tooltip = Name of the driver option.
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase.DataSourceConfig.DriverOption.value = Value
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase.DataSourceConfig.DriverOption.value.tooltip = Generic value of the driver option.
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase.DataSourceConfig.driver-class = Driver class
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase.DataSourceConfig.driver-class.tooltip = The driver class to create for accessing the database. <p> Only relevant for non-JNDI datasources. </p>
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase.DataSourceConfig.jndi-name = Jndi name
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase.DataSourceConfig.jndi-name.tooltip = The name under which the datasource is looked up from JNDI service.
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase.DataSourceConfig.options = Options
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase.DataSourceConfig.options.tooltip = Generic options passed to the database driver. <p> Only relevant for non-JNDI datasources. </p>
com.top_logic.basic.sql.AbstractConfiguredConnectionPoolBase.tooltip = <i>Connection pool</i> with underlying <i>data source</i>.
com.top_logic.basic.sql.AbstractConnectionPool = Connection pool
com.top_logic.basic.sql.AbstractConnectionPool.tooltip = Base class for <i>connection pools</i> that can be created by the <i>connection pool registry</i>.
com.top_logic.basic.sql.CollationHint = Collation hint
com.top_logic.basic.sql.CollationHint.BINARY = Binary
com.top_logic.basic.sql.CollationHint.BINARY.tooltip = Binary collation consistent with <code>String#compareTo(String)</code>
com.top_logic.basic.sql.CollationHint.NATURAL = Natural
com.top_logic.basic.sql.CollationHint.NATURAL.tooltip = Natural language sort order.
com.top_logic.basic.sql.CollationHint.NONE = None
com.top_logic.basic.sql.CollationHint.NONE.tooltip = Default collation (column default, table default, connection default, or server default).
com.top_logic.basic.sql.CollationHint.tooltip = Specification of a collation for a collation sensitive operation.
com.top_logic.basic.sql.CommonConfiguredConnectionPool = Common configured connection pool
com.top_logic.basic.sql.CommonConfiguredConnectionPool.tooltip = <i>Connection pool</i> implementation that can be configured.
com.top_logic.basic.sql.ConnectionPoolRegistry = Connection pool registry
com.top_logic.basic.sql.ConnectionPoolRegistry$PoolAlias = Pool alias
com.top_logic.basic.sql.ConnectionPoolRegistry$PoolAlias.tooltip = Installs a pool with settings copied from another pool.
com.top_logic.basic.sql.ConnectionPoolRegistry.Config.pools = Pools
com.top_logic.basic.sql.ConnectionPoolRegistry.Config.pools.tooltip = Configuration for all managed pools.
com.top_logic.basic.sql.ConnectionPoolRegistry.PoolAlias.settings-from = Settings from
com.top_logic.basic.sql.ConnectionPoolRegistry.PoolAlias.settings-from.tooltip = The name of the pool from where settings are copied.
com.top_logic.basic.sql.ConnectionPoolRegistry.PoolConfig.dry-run = Dry run
com.top_logic.basic.sql.ConnectionPoolRegistry.PoolConfig.enabled = Enabled
com.top_logic.basic.sql.ConnectionPoolRegistry.PoolConfig.enabled.tooltip = Whether this pool setting is used at all. <p> Can be used to prevent pools from being installed. A disabled setting may be used in a <i>pool alias</i> to enable them under a different name. </p>
com.top_logic.basic.sql.ConnectionPoolRegistry.PoolConfig.init-during-startup = Init during startup
com.top_logic.basic.sql.ConnectionPoolRegistry.PoolConfig.init-during-startup.tooltip = Whether this pool should be initialized directly during startup. <p> If this setting is given, application startup fails, if the datasource for this pool is not available at application startup time. </p>
com.top_logic.basic.sql.ConnectionPoolRegistry.PoolConfig.name.tooltip = The name of the pool.
com.top_logic.basic.sql.ConnectionPoolRegistry.tooltip = Registry of configured <i>connection pools</i> of the application.
com.top_logic.basic.sql.DB2Helper = Db2helper
com.top_logic.basic.sql.DB2Helper.tooltip = This class helps using DB2. <p> It helps working around this _small_ differences in these drivers. </p>
com.top_logic.basic.sql.DBConstraintType = Database constraint type
com.top_logic.basic.sql.DBConstraintType.CASCADE = Cascade
com.top_logic.basic.sql.DBConstraintType.CASCADE.tooltip = If the target is deleted, the referring row is deleted as well. If the target is updated, the referring row is updated as well.
com.top_logic.basic.sql.DBConstraintType.CLEAR = Clear
com.top_logic.basic.sql.DBConstraintType.CLEAR.tooltip = If the target is deleted, the reference is cleared. If the target is updated, the reference is cleared.
com.top_logic.basic.sql.DBConstraintType.RESTRICT = Restrict
com.top_logic.basic.sql.DBConstraintType.RESTRICT.tooltip = The action is rejected, if the result would violate the constraint.
com.top_logic.basic.sql.DBConstraintType.tooltip = Actions for foreign key constraint.
com.top_logic.basic.sql.DBDeferability = Deferability
com.top_logic.basic.sql.DBDeferability.DEFERRED = Deferred
com.top_logic.basic.sql.DBDeferability.DEFERRED.tooltip = Constraint is checked during commit.
com.top_logic.basic.sql.DBDeferability.IMMEDIATE = Immediate
com.top_logic.basic.sql.DBDeferability.IMMEDIATE.tooltip = Constraint is checked on insert but can be deferred within a transaction.
com.top_logic.basic.sql.DBDeferability.STRICT = Strict
com.top_logic.basic.sql.DBDeferability.STRICT.tooltip = Constraint is checked on insert and cannot be deferred.
com.top_logic.basic.sql.DBDeferability.tooltip = Deferability of foreign key constraint.
com.top_logic.basic.sql.DBHelper = Database helper
com.top_logic.basic.sql.DBHelper.Config.adjust-from-connection = Adjust from connection
com.top_logic.basic.sql.DBHelper.Config.adjust-from-connection.tooltip = Whether to adjust settings by querying the database. <p> Automatic adjustment can be disabled, e.g. if the SQL settings are configured for a connection pool. </p>
com.top_logic.basic.sql.DBHelper.Config.max-number-batch-parameter = Maximum number batch parameter
com.top_logic.basic.sql.DBHelper.Config.max-number-batch-parameter.tooltip = Defines the number of parameter that can occur in one batch execution.
com.top_logic.basic.sql.DBHelper.Config.nvarchar-limit = Nvarchar limit
com.top_logic.basic.sql.DBHelper.Config.nvarchar-limit.tooltip = The number of characters supported in a NVARCHAR type (depends on the database characterset settings).
com.top_logic.basic.sql.DBHelper.Config.varchar-limit = Varchar limit
com.top_logic.basic.sql.DBHelper.Config.varchar-limit.tooltip = The number of characters supported in a VARCHAR type (depends on the database characterset settings).
com.top_logic.basic.sql.DBHelper.tooltip = This class is a generic helper class for JDBC drivers. <p> It helpes working around this _small_ differences in those SQL-drivers. </p>
com.top_logic.basic.sql.DBType = Database type
com.top_logic.basic.sql.DBType.BLOB = Blob
com.top_logic.basic.sql.DBType.BLOB.tooltip = Database type able to store a <code>byte[]</code> or <i>input stream</i> value.
com.top_logic.basic.sql.DBType.BOOLEAN = Boolean
com.top_logic.basic.sql.DBType.BOOLEAN.tooltip = Database type able to store a <code>boolean</code> value.
com.top_logic.basic.sql.DBType.BYTE = Byte
com.top_logic.basic.sql.DBType.BYTE.tooltip = Database type able to store a <code>byte</code> value.
com.top_logic.basic.sql.DBType.CHAR = Char
com.top_logic.basic.sql.DBType.CHAR.tooltip = Database type able to store a <code>char</code> value.
com.top_logic.basic.sql.DBType.CLOB = Clob
com.top_logic.basic.sql.DBType.CLOB.tooltip = Database type able to store a long <i>string</i> or <i>reader</i> value.
com.top_logic.basic.sql.DBType.DATE = Date
com.top_logic.basic.sql.DBType.DATE.tooltip = Database type able to store the day, month, year part of a <i>date</i> value.
com.top_logic.basic.sql.DBType.DATETIME = Datetime
com.top_logic.basic.sql.DBType.DATETIME.tooltip = Database type able to store a <i>date</i> value.
com.top_logic.basic.sql.DBType.DECIMAL = Decimal
com.top_logic.basic.sql.DBType.DECIMAL.tooltip = Database type able to store a <i>big decimal</i> value.
com.top_logic.basic.sql.DBType.DOUBLE = Double
com.top_logic.basic.sql.DBType.DOUBLE.tooltip = Database type able to store a <code>double</code> value.
com.top_logic.basic.sql.DBType.FLOAT = Float
com.top_logic.basic.sql.DBType.FLOAT.tooltip = Database type able to store a <code>float</code> value.
com.top_logic.basic.sql.DBType.ID = ID
com.top_logic.basic.sql.DBType.ID.tooltip = Database type able to store a <i>tlid</i> value.
com.top_logic.basic.sql.DBType.INT = Int
com.top_logic.basic.sql.DBType.INT.tooltip = Database type able to store an <code>int</code> value.
com.top_logic.basic.sql.DBType.LONG = Long
com.top_logic.basic.sql.DBType.LONG.tooltip = Database type able to store a <code>long</code> value.
com.top_logic.basic.sql.DBType.SHORT = Short
com.top_logic.basic.sql.DBType.SHORT.tooltip = Database type able to store a <code>short</code> value.
com.top_logic.basic.sql.DBType.STRING = String
com.top_logic.basic.sql.DBType.STRING.tooltip = Database type able to store a <i>string</i> value.
com.top_logic.basic.sql.DBType.TIME = Time
com.top_logic.basic.sql.DBType.TIME.tooltip = Database type able to store the hour, minute, second part of a <i>date</i> value.
com.top_logic.basic.sql.DBType.tooltip = Wrapper enumeration for a selection of type codes from <i>types</i> used in the <i>TopLogic</i> relational data binding.
com.top_logic.basic.sql.DataSourceFactory = Data source factory
com.top_logic.basic.sql.DataSourceFactory.tooltip = Factory for instantiation of <i>data source configurations</i>
com.top_logic.basic.sql.DefaultDataSourceFactory = Default data source factory
com.top_logic.basic.sql.DefaultDataSourceFactory.tooltip = <i>Data source factory</i> that locates the driver class by reflection.
com.top_logic.basic.sql.DirectConnectionPool = Direct connection pool
com.top_logic.basic.sql.DirectConnectionPool.tooltip = <i>Connection pool</i> that does not pool connections but forwards all requests to the underlying <i>data source</i>.
com.top_logic.basic.sql.ExhaustedAction = Exhausted action
com.top_logic.basic.sql.ExhaustedAction.block = Block
com.top_logic.basic.sql.ExhaustedAction.fail = Fail
com.top_logic.basic.sql.ExhaustedAction.grow = Grow
com.top_logic.basic.sql.ExhaustedAction.tooltip = <i>Enum</i> representing possible values from the <code>org.apache.commons.pool.impl.GenericObjectPool.Config#whenExhaustedAction</code> property.
com.top_logic.basic.sql.H2Helper = H2helper
com.top_logic.basic.sql.H2Helper.tooltip = <i>Database helper</i> for the H2 database engine.
com.top_logic.basic.sql.LoggingDataSourceFactory = Logging data source factory
com.top_logic.basic.sql.LoggingDataSourceFactory.tooltip = <i>Default data source factory</i> that wraps the native driver with a <i>logging data source proxy</i>.
com.top_logic.basic.sql.LoggingDataSourceProxy = Logging data source proxy
com.top_logic.basic.sql.LoggingDataSourceProxy$LoggingAnalyzer = Logging analyzer
com.top_logic.basic.sql.LoggingDataSourceProxy$LoggingAnalyzer.tooltip = <i>Aggregating analyzer</i> that writes information to the application log.
com.top_logic.basic.sql.LoggingDataSourceProxy$LoggingAnalyzerConfig = Logging analyzer configuration
com.top_logic.basic.sql.LoggingDataSourceProxy$LoggingAnalyzerConfig.tooltip = Configuration of <i>logging analyzer</i>
com.top_logic.basic.sql.LoggingDataSourceProxy.Config.enableOnStartup = Enable on startup
com.top_logic.basic.sql.LoggingDataSourceProxy.Config.enableOnStartup.tooltip = Whether to enable logging to the application log on application startup.
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.ignorePattern = Ignore pattern
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.ignorePattern.tooltip = Configuration option: Regular expression that matches <i>stack trace elements</i> whose <i>data source</i> activity should not be logged.
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.logAggregate = Log aggregate
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.logAggregate.tooltip = Configuration option: Whether to aggregate multiple similar requests to a single log entry.
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.logStacktrace = Log stacktrace
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.logStacktrace.tooltip = Configuration option: Whether the stack trace of the <i>data source</i> request should be logged to.
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.logTimeoutNanos = Log timeout nanos
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.logTimeoutNanos.tooltip = Configuration option: Nano seconds between two requests before aggregated log entries are flushed.
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.warnThresholdCallCount = Warn threshold call count
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.warnThresholdCallCount.tooltip = Configuration option: Number of calls of one SQL statement between two flushes, before a warning is logged and not just an info. <p> Value Ranges: </p> <ul> <li>Positive values: Warn if there are more than that many calls.</li> <li>0: Always warn.</li> <li>Negative values: Never warn because of the call count.</li> </ul>
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.warnThresholdCallCountSum = Warn threshold call count sum
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.warnThresholdCallCountSum.tooltip = Configuration option: Number of calls of all SQL statements between two flushes, before a warning is logged and not just an info. <p> Value Ranges: </p> <ul> <li>Positive values: Warn if there are more than that many calls.</li> <li>0: Always warn.</li> <li>Negative values: Never warn because of the call count.</li> </ul>
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.warnThresholdMillis = Warn threshold millis
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.warnThresholdMillis.tooltip = Configuration option: Milliseconds needed for the executions of one SQL statement between two flushes, before a warning is logged and not just an info. <p> Value Ranges: </p> <ul> <li>Positive values: Warn if there are more than that many calls.</li> <li>0: Always warn.</li> <li>Negative values: Never warn because of execution time.</li> </ul>
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.warnThresholdMillisSum = Warn threshold millis sum
com.top_logic.basic.sql.LoggingDataSourceProxy.LoggingAnalyzerConfig.warnThresholdMillisSum.tooltip = Configuration option: Milliseconds needed for the executions of all SQL statements between two flushes, before a warning is logged and not just an info. <p> Value Ranges: </p> <ul> <li>Positive values: Warn if there are more than that many calls.</li> <li>0: Always warn.</li> <li>Negative values: Never warn because of execution time.</li> </ul>
com.top_logic.basic.sql.LoggingDataSourceProxy.tooltip = <i>Data source</i> wrapper that logs all statements that are executed.
com.top_logic.basic.sql.MSAccessHelper = MS access helper
com.top_logic.basic.sql.MSAccessHelper.tooltip = Helper class in case you reall MUST access this thing..
com.top_logic.basic.sql.MSSQLHelper = MSSQL helper
com.top_logic.basic.sql.MSSQLHelper.tooltip = Database Helper for Microsoft SQL Server.
com.top_logic.basic.sql.MSSQLHelper90 = MSSQL helper90
com.top_logic.basic.sql.MSSQLHelper90.tooltip = <i>MSSQL helper</i> for MSSQLServer with version &lt;= 9.0 (MSSQLServer 2005). <p> Note: This is currently just a Marker helper to detect an old version and skip tests that do not work with MSSQL 2005. </p>
com.top_logic.basic.sql.MySQL55Helper = My sql55helper
com.top_logic.basic.sql.MySQL55Helper$MySQL55WithBackslashEscape = My sql55with backslash escape
com.top_logic.basic.sql.MySQL55Helper$MySQL55WithBackslashEscape.tooltip = <i>My SQL with backslash escape</i> variant for MySQL 5.5. server.
com.top_logic.basic.sql.MySQL55Helper.tooltip = MySQL helper for MySQL database in version 5.5. <p> A special MySQL for 5.5 is needed, because MySQL 5.5 does not allow milliseconds in TIMESTAMP columns, i.e. TIMESTAMP has granularity seconds. </p>
com.top_logic.basic.sql.MySQLHelper = My SQL helper
com.top_logic.basic.sql.MySQLHelper$MySQLWithBackslashEscape = My SQL with backslash escape
com.top_logic.basic.sql.MySQLHelper$MySQLWithBackslashEscape.tooltip = <i>My SQL helper</i> with backslash as escape symbol.
com.top_logic.basic.sql.MySQLHelper.tooltip = This class helps using MySQL <p> It helps working around this _small_ differences in these drivers. The thin driver descends from this class since it needs more help. </p>
com.top_logic.basic.sql.Oracle10Helper = Oracle10helper
com.top_logic.basic.sql.Oracle10Helper.tooltip = This class helps using Oracle and greater using any driver. Tested with oracle 10 - 12
com.top_logic.basic.sql.Oracle12Helper = Oracle12helper
com.top_logic.basic.sql.Oracle12Helper.tooltip = This class helps using Oracle driver 12 and higher with database version 12 and higher.
com.top_logic.basic.sql.Oracle12toLowerHelper = Oracle12to lower helper
com.top_logic.basic.sql.Oracle12toLowerHelper.tooltip = This class helps using Oracle driver 12 and higher with database version lower than 12.
com.top_logic.basic.sql.OracleHelper = Oracle helper
com.top_logic.basic.sql.OracleHelper.Config.charset = Charset
com.top_logic.basic.sql.OracleHelper.Config.charset.tooltip = The character set that is used by the server to encode NCHAR data.
com.top_logic.basic.sql.OracleHelper.tooltip = This class helps using Oracle before Version 10 using any driver. This implementation is only here to allow parts of TL to identify the Oracle DB.
com.top_logic.basic.sql.PostgreSQLHelper = Postgre SQL helper
com.top_logic.basic.sql.PostgreSQLHelper.tooltip = <i>Database helper</i> for the PostgreSQL database engine.
com.top_logic.basic.sql.SQLH$Config = Configuration
com.top_logic.basic.sql.SQLH$Config.tooltip = Configuration of <i>sqlh</i>
com.top_logic.basic.sql.SQLH.Config.mangle-with-unnecessary-underscores = Mangle with unnecessary underscores
com.top_logic.basic.sql.SQLH.Config.mangle-with-unnecessary-underscores.tooltip = Whether mangling database names should contain unnecessary underscores, e.g. "userID" is transformed to "USER_I_D".
com.top_logic.basic.thread.BasicThreadContextManager = Basic thread context manager
com.top_logic.basic.thread.BasicThreadContextManager.tooltip = Basic implementation of <i>thread context manager</i>.
com.top_logic.basic.thread.ThreadContextManager = Thread context manager
com.top_logic.basic.thread.ThreadContextManager.Config.debug-context-removal = Debug context removal
com.top_logic.basic.thread.ThreadContextManager.Config.debug-context-removal.tooltip = Option to remember for each remove operation the stack trace of the caller. <p> This is a debugging option to track duplicate context removal problems. </p>
com.top_logic.basic.thread.ThreadContextManager.tooltip = Manager for the creation of <i>thread context</i>.
com.top_logic.basic.time.TimeZones = Time zones
com.top_logic.basic.time.TimeZones$TimeZoneConfig = Time zone configuration
com.top_logic.basic.time.TimeZones$TimeZoneConfig.tooltip = Configuration of the a <i>time zone</i>.
com.top_logic.basic.time.TimeZones.Config.default-time-zone = Default time zone
com.top_logic.basic.time.TimeZones.Config.default-time-zone.tooltip = <i>Time zone</i> a newly created user has. <p> The default <i>time zone</i> must be one of the configured. </p>
com.top_logic.basic.time.TimeZones.Config.system-time-zone = System time zone
com.top_logic.basic.time.TimeZones.Config.system-time-zone.tooltip = <i>Time zone</i> in which the application stores and display dates. <p> The system <i>time zone</i> must be one of the configured. </p>
com.top_logic.basic.time.TimeZones.Config.time-zones = Time zones
com.top_logic.basic.time.TimeZones.Config.time-zones.tooltip = The <i>time zones</i> known by the system.
com.top_logic.basic.time.TimeZones.TimeZoneConfig.name.tooltip = ID of the configured <i>time zone</i>.
com.top_logic.basic.time.TimeZones.TimeZoneConfig.res-key = Resource key
com.top_logic.basic.time.TimeZones.TimeZoneConfig.res-key.tooltip = <i>Resource key</i> for the label of the configured <i>time zone</i>.
com.top_logic.basic.time.TimeZones.tooltip = Module handling time zones in <i>TopLogic</i>
com.top_logic.basic.translation.DeepLTranslationService = Deep L translation service
com.top_logic.basic.translation.DeepLTranslationService$Splitting = Splitting
com.top_logic.basic.translation.DeepLTranslationService$Splitting.tooltip = Possible values for sentence splitting.
com.top_logic.basic.translation.DeepLTranslationService.Config.glossaries = Glossaries
com.top_logic.basic.translation.DeepLTranslationService.Config.glossaries.tooltip = Mapping of translation directions to a glossary name to use. <p> A translation direction is the source language appended with the target language separated with white space. The translation from English to German would be specified as <code>en de</code>. </p>
com.top_logic.basic.translation.DeepLTranslationService.Config.ignore-tags = Ignore tags
com.top_logic.basic.translation.DeepLTranslationService.Config.ignore-tags.tooltip = Comma-separated list of XML tags that indicate text not to be translated.
com.top_logic.basic.translation.DeepLTranslationService.Config.non-splitting-tags = Non splitting tags
com.top_logic.basic.translation.DeepLTranslationService.Config.non-splitting-tags.tooltip = Comma-separated list of XML tags which never split sentences.
com.top_logic.basic.translation.DeepLTranslationService.Config.outline-detection = Outline detection
com.top_logic.basic.translation.DeepLTranslationService.Config.outline-detection.tooltip = Whether automatic outline detection is enabled.
com.top_logic.basic.translation.DeepLTranslationService.Config.split-sentences = Split sentences
com.top_logic.basic.translation.DeepLTranslationService.Config.split-sentences.tooltip = How input text is split into into sentences.
com.top_logic.basic.translation.DeepLTranslationService.Config.splitting-tags = Splitting tags
com.top_logic.basic.translation.DeepLTranslationService.Config.splitting-tags.tooltip = Comma-separated list of XML tags which always cause sentence splits.
com.top_logic.basic.translation.DeepLTranslationService.Config.tag-handling = Tag handling
com.top_logic.basic.translation.DeepLTranslationService.Config.tag-handling.tooltip = Whether XML processing is enabled.
com.top_logic.basic.translation.DeepLTranslationService.Splitting.INTERPUNCTATION_AND_NEWLINES = Interpunctation and newlines
com.top_logic.basic.translation.DeepLTranslationService.Splitting.INTERPUNCTATION_AND_NEWLINES.tooltip = Splits on interpunction and on newlines.
com.top_logic.basic.translation.DeepLTranslationService.Splitting.INTERPUNCTATION_ONLY = Interpunctation only
com.top_logic.basic.translation.DeepLTranslationService.Splitting.INTERPUNCTATION_ONLY.tooltip = Splits on interpunction only, ignoring newlines.
com.top_logic.basic.translation.DeepLTranslationService.Splitting.NO_SPLITTING = No splitting
com.top_logic.basic.translation.DeepLTranslationService.Splitting.NO_SPLITTING.tooltip = No splitting at all, whole input is treated as one sentence.
com.top_logic.basic.translation.DeepLTranslationService.tooltip = A <i>translation service</i> working with the <i>DeepL</i> API.
com.top_logic.basic.translation.TranslationService = Translation service
com.top_logic.basic.translation.TranslationService.Config.api-host = Api host
com.top_logic.basic.translation.TranslationService.Config.api-host.tooltip = URL prefix of the translation API.
com.top_logic.basic.translation.TranslationService.Config.api-key = Api key
com.top_logic.basic.translation.TranslationService.Config.api-key.tooltip = The API key to authenticate the requests.
com.top_logic.basic.translation.TranslationService.Config.max-accumulated-translation-size = Maximum accumulated translation size
com.top_logic.basic.translation.TranslationService.Config.max-accumulated-translation-size.tooltip = The maximum accumulated size of translations. <p> Means of limiting the costs of translations. The size is accumulated while the application is running, and reset to zero when it is stopped or restarted. </p> <p> Don't use this property to disable the service. </p> <p> Use the value <code>0</code> to make the maximal size infinite. </p>
com.top_logic.basic.translation.TranslationService.tooltip = A service for translation. <p> <b>Cautions:</b> <ul> <li>Every translation causes costs proportional to the number of translated characters and the total number is limited too.</li> <li>This service does no caching for translations, so for each call of translate, it establishes an <i>HTTPS URL connection</i> to access the translation (REST) API.</li> <li>Be advised to read the documentation for <i>configuration</i> and be careful with usage. For example, if API failed to translate, postpone the failed translation request instead of resending it again and again.</li> </ul> </p> <p> <b>Functionalities:</b> <ul> <li>In order to translate a (XML-structured) text, use: <ul> <li>translate(String, Locale)</li> <li>translate(String, Locale, Locale)</li> </ul> </li> <li>In order to determine, whether a language is supported, use isSupported(Locale).</li> </ul> </p>
com.top_logic.basic.treexf.Node$Kind = Kind
com.top_logic.basic.treexf.Node$Kind.tooltip = Kind of <i>node</i>.
com.top_logic.basic.treexf.Node.Kind.EXPR = Expression
com.top_logic.basic.treexf.Node.Kind.EXPR.tooltip = A <i>node</i> of <code>Node#kind()</code> expression represents a member of the wrapped expression language.
com.top_logic.basic.treexf.Node.Kind.VALUE = Value
com.top_logic.basic.treexf.Node.Kind.VALUE.tooltip = A <i>node</i> of <code>Node#kind()</code> value represents a primitive value of a property of a node in the wrapped expression language.
com.top_logic.basic.util.AllocationService = Allocation service
com.top_logic.basic.util.AllocationService.Config.max-request-size = Maximum request size
com.top_logic.basic.util.AllocationService.Config.max-request-size.tooltip = Maximum number of bytes allowed to be allocated for a single bulk user operation. <p> A value of <code>0</code> means "no limit". </p> <p> Due to VM constraints (multiple separate heap areas), it is in general not possible to allocate all the available memory at once in a continuous chunk. Not limiting the size of a single operation will lead to costly out of memory errors produced while trying to allocate an excessive amount of memory at once. </p>
com.top_logic.basic.util.AllocationService.Config.reserved-space-absolute = Reserved space absolute
com.top_logic.basic.util.AllocationService.Config.reserved-space-absolute.tooltip = The number of bytes that must not be used for bulk user operations. <p> The value must be </p>
com.top_logic.basic.util.AllocationService.Config.reserved-space-factor = Reserved space factor
com.top_logic.basic.util.AllocationService.Config.reserved-space-factor.tooltip = <i>Reserved space percent</i> as factor.
com.top_logic.basic.util.AllocationService.Config.reserved-space-percent = Reserved space percent
com.top_logic.basic.util.AllocationService.Config.reserved-space-percent.tooltip = Percentage of the maximum VM size that must not be used for bulk user operations.
com.top_logic.basic.util.AllocationService.tooltip = Service for conditionally performing bulk memory allocations for heap-intensive computations.
com.top_logic.basic.util.ResourcesModule = Resources module
com.top_logic.basic.util.ResourcesModule$Flags = Flags
com.top_logic.basic.util.ResourcesModule.Config.bundles = Bundles
com.top_logic.basic.util.ResourcesModule.Config.bundles.tooltip = Names of the bundles to read I18N from.
com.top_logic.basic.util.ResourcesModule.Config.default-locale = Default locale
com.top_logic.basic.util.ResourcesModule.Config.default-locale.tooltip = System locale used in contexts that are not related to a specific user.
com.top_logic.basic.util.ResourcesModule.Config.disable-system-messages = Disable system messages
com.top_logic.basic.util.ResourcesModule.Config.disable-system-messages.tooltip = Whether code-derived resources should not be loaded. <p> A resource is code-derived, if the English label is taken from the name of the implementing field, method or class and the tooltip is taken from the JavaDoc of it's declaration. </p>
com.top_logic.basic.util.ResourcesModule.Config.dynamic-storage = Dynamic storage
com.top_logic.basic.util.ResourcesModule.Config.dynamic-storage.tooltip = Name of the directory, where in-app dynamically created resources are stored.
com.top_logic.basic.util.ResourcesModule.Config.fallback-locale = Fallback locale
com.top_logic.basic.util.ResourcesModule.Config.fallback-locale.tooltip = Locale that is used as fallback locale, if the value for a key in the requested locale can not be found.
com.top_logic.basic.util.ResourcesModule.Config.supported-locales = Supported locales
com.top_logic.basic.util.ResourcesModule.Config.supported-locales.tooltip = Names of the supported <i>locales</i>.
com.top_logic.basic.util.ResourcesModule.Flags.always-show-keys = Always show keys
com.top_logic.basic.util.ResourcesModule.Flags.always-show-keys.tooltip = Whether to show always the key, regardless if an entry was found or not. The keys are prefixed with '*', if an entry was found, prefixed with '!' if no entry was found but a default value is used.
com.top_logic.basic.util.ResourcesModule.Flags.disable-fallback-to-default-language = Disable fallback to default language
com.top_logic.basic.util.ResourcesModule.Flags.disable-fallback-to-default-language.tooltip = Whether fallback to default language is disabled, if a key was not found.
com.top_logic.basic.util.ResourcesModule.Flags.error-on-missing-key = Error on missing key
com.top_logic.basic.util.ResourcesModule.Flags.error-on-missing-key.tooltip = Whether to log missing keys with error level.
com.top_logic.basic.util.ResourcesModule.Flags.log-deprecated-keys = Log deprecated keys
com.top_logic.basic.util.ResourcesModule.Flags.log-deprecated-keys.tooltip = Whether an error is logged, when a deprecated resource key is successfully resolved.
com.top_logic.basic.util.ResourcesModule.Flags.log-missing-keys = Log missing keys
com.top_logic.basic.util.ResourcesModule.Flags.log-missing-keys.tooltip = Whether a log entry is written, when a translation for a key is requested, but there is no translation.
com.top_logic.basic.util.ResourcesModule.tooltip = The class <i>resources module</i> manages <i>internationalization bundles</i>.
com.top_logic.basic.xml.NewLineStyle = New line style
com.top_logic.basic.xml.NewLineStyle.CR = Cr
com.top_logic.basic.xml.NewLineStyle.CR.tooltip = Mac style, use only a <code>carriage return</code> character.
com.top_logic.basic.xml.NewLineStyle.CR_LF = Cr lf
com.top_logic.basic.xml.NewLineStyle.CR_LF.tooltip = Windows style, use a combination of <code>carriage return</code> followed by a <code>line feed</code> character.
com.top_logic.basic.xml.NewLineStyle.LF = Lf
com.top_logic.basic.xml.NewLineStyle.LF.tooltip = Web/Unix style, use a single <code>line feed</code> character.
com.top_logic.basic.xml.NewLineStyle.SYSTEM = System
com.top_logic.basic.xml.NewLineStyle.SYSTEM.tooltip = Use the strategy defined by the server environment running the application.
com.top_logic.basic.xml.NewLineStyle.tooltip = Strategy to encode line breaks in text files.
com.top_logic.basic.xml.TagWriter$State = State
com.top_logic.basic.xml.TagWriter$State.tooltip = Abstract position within an XML document.
com.top_logic.basic.xml.TagWriter.State.ATTRIBUTE = Attribute
com.top_logic.basic.xml.TagWriter.State.ATTRIBUTE.tooltip = Within an common attribute value.
com.top_logic.basic.xml.TagWriter.State.ATTRIBUTE_START = Attribute start
com.top_logic.basic.xml.TagWriter.State.ATTRIBUTE_START.tooltip = Start of an attribute value.
com.top_logic.basic.xml.TagWriter.State.CDATA_CONTENT = Cdata content
com.top_logic.basic.xml.TagWriter.State.CDATA_CONTENT.tooltip = Within a CDATA section.
com.top_logic.basic.xml.TagWriter.State.CLASS_ATTRIBUTE = Class attribute
com.top_logic.basic.xml.TagWriter.State.CLASS_ATTRIBUTE.tooltip = Within an class attribute value.
com.top_logic.basic.xml.TagWriter.State.CLASS_ATTRIBUTE_START = Class attribute start
com.top_logic.basic.xml.TagWriter.State.CLASS_ATTRIBUTE_START.tooltip = Start of an class attribute value.
com.top_logic.basic.xml.TagWriter.State.COMMENT_CONTENT = Comment content
com.top_logic.basic.xml.TagWriter.State.COMMENT_CONTENT.tooltip = Within a comment.
com.top_logic.basic.xml.TagWriter.State.ELEMENT_CONTENT = Element content
com.top_logic.basic.xml.TagWriter.State.ELEMENT_CONTENT.tooltip = Within an element.
com.top_logic.basic.xml.TagWriter.State.JS_ATTRIBUTE_STRING = JavaScript attribute string
com.top_logic.basic.xml.TagWriter.State.JS_ATTRIBUTE_STRING.tooltip = Within a JavaScript string literal in an XML attribute.
com.top_logic.basic.xml.TagWriter.State.JS_CDATA_STRING = JavaScript cdata string
com.top_logic.basic.xml.TagWriter.State.JS_CDATA_STRING.tooltip = Within a JavaScript string literal textual element content.
com.top_logic.basic.xml.TagWriter.State.JS_ELEMENT_STRING = JavaScript element string
com.top_logic.basic.xml.TagWriter.State.JS_ELEMENT_STRING.tooltip = Within a JavaScript string literal textual element content.
com.top_logic.basic.xml.TagWriter.State.JS_SCRIPT_STRING = JavaScript script string
com.top_logic.basic.xml.TagWriter.State.JS_SCRIPT_STRING.tooltip = Within a JavaScript string literal in <i>script</i> content.
com.top_logic.basic.xml.TagWriter.State.SCRIPT = Script
com.top_logic.basic.xml.TagWriter.State.SCRIPT.tooltip = Within a script section. <p> In a script section, absolutely no quoting must occur, see <code>TagWriter#beginScript()</code>. </p>
com.top_logic.basic.xml.TagWriter.State.START_TAG = Start tag
com.top_logic.basic.xml.TagWriter.State.START_TAG.tooltip = Within a start tag.
com.top_logic.basic.xml.XMLPrettyPrinter$Config = Configuration
com.top_logic.basic.xml.XMLPrettyPrinter$Config.tooltip = Configuration of the <i>XML pretty printer</i>.
com.top_logic.basic.xml.XMLPrettyPrinter.Config.additional-namespaces = Additional namespaces
com.top_logic.basic.xml.XMLPrettyPrinter.Config.additional-namespaces.tooltip = Returns the additional namespaces to be written.
com.top_logic.basic.xml.XMLPrettyPrinter.Config.compact-single-line-text = Compact single line text
com.top_logic.basic.xml.XMLPrettyPrinter.Config.compact-single-line-text.tooltip = Whether elements with single-line text content should be rendered in one line.
com.top_logic.basic.xml.XMLPrettyPrinter.Config.empty-tags = Empty tags
com.top_logic.basic.xml.XMLPrettyPrinter.Config.empty-tags.tooltip = <i>Filter</i> that must accept a tag name to allow creating an empty tag.
com.top_logic.basic.xml.XMLPrettyPrinter.Config.encoding = Encoding
com.top_logic.basic.xml.XMLPrettyPrinter.Config.encoding.tooltip = The encoding used to produce the output.
com.top_logic.basic.xml.XMLPrettyPrinter.Config.indent-char = Indent char
com.top_logic.basic.xml.XMLPrettyPrinter.Config.indent-char.tooltip = The character to use for indentation.
com.top_logic.basic.xml.XMLPrettyPrinter.Config.indent-step = Indent step
com.top_logic.basic.xml.XMLPrettyPrinter.Config.indent-step.tooltip = The number of indent chars to use per level.
com.top_logic.basic.xml.XMLPrettyPrinter.Config.max-indent = Maximum indent
com.top_logic.basic.xml.XMLPrettyPrinter.Config.max-indent.tooltip = The maximum indentation depth.
com.top_logic.basic.xml.XMLPrettyPrinter.Config.new-line-style = New line style
com.top_logic.basic.xml.XMLPrettyPrinter.Config.new-line-style.tooltip = How new-lines are encoded.
com.top_logic.basic.xml.XMLPrettyPrinter.Config.no-attribute-indent = No attribute indent
com.top_logic.basic.xml.XMLPrettyPrinter.Config.no-attribute-indent.tooltip = Whether no indentation of attribute values must be written, i.e. there is an indentation between different tags, but no indentation between different attribute values.
com.top_logic.basic.xml.XMLPrettyPrinter.Config.no-indent = No indent
com.top_logic.basic.xml.XMLPrettyPrinter.Config.no-indent.tooltip = Whether in general no indentation must be written.
com.top_logic.basic.xml.XMLPrettyPrinter.Config.preserve-whitespace = Preserve whitespace
com.top_logic.basic.xml.XMLPrettyPrinter.Config.preserve-whitespace.tooltip = Whether white space in non-white-space-only text should be preserved.
com.top_logic.basic.xml.XMLPrettyPrinter.Config.structured-text = Structured text
com.top_logic.basic.xml.XMLPrettyPrinter.Config.structured-text.tooltip = Whether structure in text content (expressed with '{' and '}' characters) should influence indentation.
com.top_logic.basic.xml.XMLPrettyPrinter.Config.xml-header = XML header
com.top_logic.basic.xml.XMLPrettyPrinter.Config.xml-header.tooltip = Whether the XML header must be written for a <i>document</i>.
