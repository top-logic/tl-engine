Project = Typ Project
Project.all = Typ Project.all
ProjectRoot = Typ ProjectRoot
admin.security.attRoleClass.classifier_demo_attribute_classifier_global_booleanAttributes = Boole'sche Attribute
admin.security.attRoleClass.classifier_demo_attribute_classifier_global_stringAttributes = Textattribute
admin.security.attRoleClass.classifier_demo_attribute_classifier_local_dateAttributes = Datumsattribute
admin.security.attRoleClass.list_demo_attribute_classifier_global = Globale Attributtyp basierte Klassifikation
admin.security.attRoleClass.list_demo_attribute_classifier_global.field.classifier_demo_attribute_classifier_global_booleanAttributes = Boole'sche Attribute
admin.security.attRoleClass.list_demo_attribute_classifier_global.field.classifier_demo_attribute_classifier_global_stringAttributes = Textattribute
admin.security.attRoleClass.list_demo_attribute_classifier_global.name = Rolle
admin.security.attRoleClass.list_demo_attribute_classifier_local = Lokale Attributtyp basierte Klassifikation
admin.security.attRoleClass.list_demo_attribute_classifier_local.field.classifier_demo_attribute_classifier_local_dateAttributes = Datumsattribute
admin.security.attSec.classified.field.demo_attribute_classifier_global = Globale Attributtyp basierte Klassifikation
admin.security.attSec.classified.field.demo_attribute_classifier_local = Lokale Attributtyp basierte Klassifikation
admin.security.attSec.demo_attribute_classifier_global = Globale Attributtyp basierte Klassifikation
admin.security.attSec.demo_attribute_classifier_local = Lokale Attributtyp basierte Klassifikation
charts.demo.reporting.flex.interactive.interactive1.maxHashCode = Maximum des Hash-Codes
class.com.top_logic.demo.layout.demo.dnd.handlers.I18NConstants.COMPONENT_DROP__DATA_COMPONENT = ''{0}'' auf ''{1}'' fallen gelassen.
class.com.top_logic.demo.layout.demo.dnd.handlers.I18NConstants.INSERT_TABLE_ORDERED__DATA_POS_REF = ''{0}'' {1,choice,0#vor|1#nach} ''{2}'' eingefügt.
class.com.top_logic.demo.layout.demo.dnd.handlers.I18NConstants.INSERT_TREE_DEFAULT__DATA_REF = ''{0}'' in ''{1}'' eingefügt.
class.com.top_logic.demo.layout.demo.dnd.handlers.I18NConstants.INSERT_TREE_ORDERED__DATA_POS_REF = ''{0}'' {1,choice,0#vor|1#in|2#nach} ''{2}'' eingefügt.
class.com.top_logic.demo.layout.form.declarative.values.I18NConstants.ERROR_UUID_TOO_SHORT__UUID__MIN_SIZE = UUID "{0}" muss mindestens {1} Zeichen enthalten.
class.com.top_logic.demo.layout.form.demo.I18NConstants.PROGRESS_MESSAGE__NUM = Nachricht {0} der nebenläufigen Aufgabe.
class.com.top_logic.demo.layout.form.demo.I18NConstants.PROGRESS_MESSAGE__NUM.tooltip = Etwas <b>unerklärliches</b> ist passiert.
class.com.top_logic.demo.layout.form.demo.I18NConstants.PROGRESS_TITLE = Hintergrundaufgabe läuft
class.com.top_logic.demo.layout.form.demo.I18NConstants.TEST_ERROR_DESCRIPTION = Description Line1\nDescription Line2<br/>Description Line3
class.com.top_logic.demo.layout.form.demo.I18NConstants.TEST_ERROR_TITLE = Line1\nLine2<br/>Line3
class.com.top_logic.demo.layout.form.demo.I18NConstants.TEST_ERROR_TITLE__VALUE = Ein Problem ({0})
class.com.top_logic.demo.model.annotations.I18NConstants.ALTERNATIVE_PROTECTED__OBJ = Objekt ''{0}'' ist alternativ geschützt.
class.com.top_logic.demo.model.types.util.I18NConstants.DEMO_EXPORT_FAILURE__MSG = Der Export ist fehlgeschlagen: {0}
class.com.top_logic.demo.model.types.util.I18NConstants.DEMO_EXPORT_FILENAME__NAME = Eigenschaften von {0}
class.com.top_logic.demo.model.types.util.I18NConstants.NOT_EXECUTABLE_EMPTY_MAIL_FOLDER = Keine Mails im Mail Ordner.
class.com.top_logic.demo.model.types.util.I18NConstants.NOT_EXECUTABLE_NO_MAIL_FOLDER = Kein Mail Ordner.
class.com.top_logic.demo.model.types.util.I18NConstants.TYPE_GENERATOR.alreadyExists = Es gibt bereite ein Element mit dem Namen für das zu generierende Element.
class.com.top_logic.demo.model.types.util.I18NConstants.TYPE_GENERATOR.deletionFailed = Löschen von generierten Elementen fehlgeschlagen.
class.com.top_logic.demo.model.types.util.I18NConstants.TYPE_GENERATOR.generationFailed = Generierung fehlgeschlagen.
class.com.top_logic.demo.model.types.util.I18NConstants.TYPE_GENERATOR.noGenerated = Es gibt kein generiertes Element.
class.com.top_logic.demo.model.types.util.I18NConstants.TYPE_GENERATOR.notUniqueGenerated = Es gibt mehr als ein Element mit dem Namen des zu löschenden Elements.
class.com.top_logic.demo.model.types.util.I18NConstants.TYPE_GENERATOR_DIALOG.disabled = Das Feld muß eine Zahl größer als 0 enthalten
class.com.top_logic.demo.model.types.util.I18NConstants.TYPE_GENERATOR_DIALOG.generate = Generieren
class.com.top_logic.demo.model.types.util.I18NConstants.TYPE_GENERATOR_DIALOG.header = Geben Sie die Parameter für die Generierung ein:
class.com.top_logic.demo.model.types.util.I18NConstants.TYPE_GENERATOR_DIALOG.negative = Die Anzahl muß größer als 0 sein.
class.com.top_logic.demo.model.types.util.I18NConstants.TYPE_GENERATOR_DIALOG.numberChildren = Anzahl der generierten Kinder
class.com.top_logic.demo.model.types.util.I18NConstants.TYPE_GENERATOR_DIALOG.rootName = Name des generierten Wurzelelementes
class.com.top_logic.demo.model.types.util.I18NConstants.TYPE_GENERATOR_DIALOG.title = Automatisches Generieren von Elementen
class.com.top_logic.demo.table.I18NConstants.DEMO_TWO_FIELDS.date = Datum
class.com.top_logic.demo.table.I18NConstants.DEMO_TWO_FIELDS.text = Wert
class.com.top_logic.importer.dispatching.I18NConstants.IMPORTER_NAME.personCSV = Personen (CSV)
class.com.top_logic.importer.dispatching.I18NConstants.IMPORTER_NAME.personExcel = Personen (Excel)
com.top_logic.demo.layout.form.declarative.config.DemoDeclarativeConstraints.greater-than-ten = Größer zehn
com.top_logic.demo.layout.form.declarative.config.DemoDeclarativeConstraints.only-letters = Nur Buchstaben
com.top_logic.demo.layout.form.declarative.config.DemoDeclarativeConstraints.start = Von
com.top_logic.demo.layout.form.declarative.config.DemoDeclarativeConstraints.stop = Bis
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.instance-list = Instanz-Liste
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.instance-map = Instanz-Map
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.monomorphic-list = Monomorphe Liste
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.monomorphic-map = Monomorphe Map
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.polymorphic-list = Polymorphe Liste
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.polymorphic-map = Polymorphe Map
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.polymorphic-type-map = Polymorphe Typ-Map
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.value-instances = Instanz-Wert-Liste
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.value-instances.tooltip = Instanz-Liste annotiert mit <tt>@ItemDisplay(VALUE)</tt>.
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.value-items = Item-Wert-Liste
com.top_logic.demo.layout.form.declarative.config.NonNullableObjectTypes.value-items.tooltip = Item-Liste annotiert mit <tt>@ItemDisplay(VALUE)</tt>.
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.config-item = Unterkonfiguration
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.configured-instance = Konfigurierte Instanz
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.date = Date
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.enum = Enum
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.expr = Ausdruck
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.java-class = Class
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.singleton = Singleton
com.top_logic.demo.layout.form.declarative.config.NullableObjectTypes.string = String
com.top_logic.demo.layout.form.declarative.config.ObjectTypesMandatory.mandatory-polymorphic-list = Verpflichtende polymorphe Liste
com.top_logic.demo.layout.form.declarative.config.ObjectTypesMandatory.mandatory-polymorphic-map = Verpflichtende polymorphe Map
com.top_logic.demo.layout.form.declarative.config.ObjectTypesMandatory.string-configured-mandatory = String (mandatory konfiguriert)
com.top_logic.demo.layout.form.declarative.config.ObjectTypesOptions.demo-value = Demo-Value
com.top_logic.demo.layout.form.declarative.config.ObjectTypesOptions.enums = Enums
com.top_logic.demo.layout.form.declarative.config.ObjectTypesReadOnly.config-item-view = Eingeblendete Unterkonfiguration
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.boolean-object = Boolean Objekt
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.byte-object = Byte Objekt
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.character-object = Character Objekt
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.double-object = Double Objekt
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.float-object = Float Objekt
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.integer-object = Integer Objekt
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.long-object = Long Objekt
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.short-object = Short Objekt
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.time-object = Zeit Objekt
com.top_logic.demo.layout.form.declarative.config.PrimitiveObjectTypes.time-object.tooltip = Long-Property mit Zeit-Format "1h 10min".
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.binary-primitive = Binärdaten
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.boolean-primitive = Primitives Boolean
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.byte-primitive = Primitives Byte
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.character-primitive = Primitiver Character
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.double-primitive = Primitives Double
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.float-primitive = Primitives Float
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.icon-primitive = Icon
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.integer-primitive = Primitiver Integer
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.long-primitive = Primitives Long
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.paint-primitive = Hexadezimaler Farbwert
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.reskey-html-primitive = Internationalisierung HTML
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.reskey-multiline-primitive = Internationalisierung mehrzeilig
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.reskey-primitive = Internationalisierung
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.short-primitive = Primitives Short
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.time-primitive = Primitive Zeit
com.top_logic.demo.layout.form.declarative.config.PrimitiveTypes.time-primitive.tooltip = Long-Property mit Zeit-Format "1h 10min".
com.top_logic.demo.layout.form.declarative.config.TypeDemos.constraints = Constraints
com.top_logic.demo.layout.form.declarative.config.TypeDemos.non-nullable-object-types = Objekte (nicht leer)
com.top_logic.demo.layout.form.declarative.config.TypeDemos.nullable-object-types = Optionale Objekte
com.top_logic.demo.layout.form.declarative.config.TypeDemos.nullable-object-types-with-non-null-default = Objekte mit Default-Wert
com.top_logic.demo.layout.form.declarative.config.TypeDemos.nullable-object-types-with-null-default = Objekte mit leerem Default-Wert
com.top_logic.demo.layout.form.declarative.config.TypeDemos.object-types-mandatory = Verpflichtende Objekte
com.top_logic.demo.layout.form.declarative.config.TypeDemos.object-types-options = Objekte mit Auswahl
com.top_logic.demo.layout.form.declarative.config.TypeDemos.object-types-read-only = Objekte nur zur Anzeige
com.top_logic.demo.layout.form.declarative.config.TypeDemos.object-types-whole-line = Objekte über die komplette Zeile dargestellt
com.top_logic.demo.layout.form.declarative.config.TypeDemos.primitive-object-types = Objekt-Typen
com.top_logic.demo.layout.form.declarative.config.TypeDemos.primitive-object-types-non-null-default = Objekt-Typen mit Default-Wert
com.top_logic.demo.layout.form.declarative.config.TypeDemos.primitive-types = Primitive Typen
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties$B = B
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties$Impl = Impl
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties$Impl$Config = Impl-Config
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.A.x = X
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.B.y = Y
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.Impl.Config.message = Message
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.a-mandatory = Mandatory A
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.a-optional = Optional A
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.as = List of As
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.i-instance-mandatory = Mandatory Instance
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.i-instance-optional = Optional Instance
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.i-instances = Instances
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.i-mandatory = Mandatory Instance Config
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.i-optional = Optional Instance Config
com.top_logic.demo.layout.form.declarative.tests.TestDeFactoMonomorphicProperties.is = Instance Configs
com.top_logic.demo.layout.form.declarative.values.AbstractDemoConfigItem.first = Erste Property
com.top_logic.demo.layout.form.declarative.values.AbstractDemoConfigItem.second = Zweite Property
com.top_logic.demo.layout.form.declarative.values.AbstractDemoExtendedConfig.extended = Erweiterte Eigenschaft
com.top_logic.demo.layout.form.declarative.values.DemoConfigItem = Unterkonfiguration mit {first} und {second}
com.top_logic.demo.layout.form.declarative.values.DemoConfigItem.min-uuid-size = Minimale UUID-Größe
com.top_logic.demo.layout.form.declarative.values.DemoConfigItem.min-uuid-size.tooltip = Mindestlänge der <i>vorinitialisierten UUID</i>.
com.top_logic.demo.layout.form.declarative.values.DemoConfigItem.preinitialized-uuid = Vorinitialisierte UUID
com.top_logic.demo.layout.form.declarative.values.DemoConfigItem@option = Unterkonfiguration
com.top_logic.demo.layout.form.declarative.values.DemoConfiguredExtendedInstance = Erweitert konfigurierte Instanz mit {first}, {second} und {extended}
com.top_logic.demo.layout.form.declarative.values.DemoConfiguredExtendedInstance@option = Erweitert konfigurierte Instanz
com.top_logic.demo.layout.form.declarative.values.DemoDefaultConfiguredInstance = Konfigurierte Instanz mit {first} und {second}
com.top_logic.demo.layout.form.declarative.values.DemoDefaultConfiguredInstance@option = Konfigurierte Instanz
com.top_logic.demo.layout.form.declarative.values.DemoEnum.FIRST = Erster Wert
com.top_logic.demo.layout.form.declarative.values.DemoEnum.SECOND = Zweiter Wert
com.top_logic.demo.layout.form.declarative.values.DemoEnum.THIRD = Dritter Wert
com.top_logic.demo.layout.form.declarative.values.DemoExtendedConfigItem = Erweiterte Konfiguration ({first}, {second}, {extended})
com.top_logic.demo.layout.form.declarative.values.DemoExtendedConfigItem@option = Erweiterte Konfiguration
com.top_logic.demo.layout.form.declarative.values.DemoPolymorphicConfig = Instanzkonfiguration mit {first} und {second}
com.top_logic.demo.layout.form.declarative.values.DemoPolymorphicConfig@option = Instanzkonfiguration
com.top_logic.demo.layout.form.declarative.values.DemoSingletonFirst = Erstes Singleton
com.top_logic.demo.layout.form.declarative.values.DemoSingletonSecond = Zweites Singleton
com.top_logic.demo.layout.form.declarative.values.DemoSingletonThird = Drittes Singleton
com.top_logic.demo.layout.form.declarative.values.DemoUnconfiguredInstance = Instanz ohne Konfiguration
com.top_logic.demo.layout.form.demo.model.DemoPersonNaming = Person '{name["surname"]}, {name["givenName"]}'
com.top_logic.demo.layout.scripting.action.excel.RenameElementOp = Umbenennen von '{Kontext}' in "{Parameter.neuerName}"{Ergebnis ? { -> '{Ergebnis}'}}
com.top_logic.demo.model.annotations.DemoDeleteConstraint = Spezialimplementierung
com.top_logic.demo.model.annotations.DemoDeleteConstraint$Config = Spezialimplementierung
com.top_logic.demo.model.annotations.TLDemoNoOverrideAnnotation = Nicht überschreibbare Demo-Annotation
com.top_logic.demo.model.struct.DemoVec.x = X
com.top_logic.demo.model.struct.DemoVec.y = Y
demo.DemoPlain.edit.dialog.tabber = DemoPlain bearbeiten
demo.admin.mandator.list.edit.tabber = Gebundene Klassifikationen
demo.admin.mandator.list.edit.tree.title = Mandantenbaum
demo.command.saveIgnoreWarnings = Speichern ohne Warnungen
demo.command.saveIgnoreWarnings.tooltip = Speichern ohne Warnhinweise anzuzeigen.
demo.demoTypes.booleanAttributes = Boolean Attribute
demo.demoTypes.integerAttributes = Integer Attribute
demo.demoTypes.numericAttributes = Numerische Attribute
demo.demoTypes.primitiveAttributes = Primitive Attribute
demo.form.declarative.configured.tabber = Deklarative Form (konf. Typ)
demo.form.declarative.tabber = Deklarative Formdefinition
demo.form.testDeFactoMonomorphicProperties.tabber = Test de-facto monomorphic properties
demo.globalDialogs.DemoTypes.show.tabber = DemoTypes anzeigen
demo.globalDialogs.DemoTypes.show.title = DemoTypes Dialog-Anzeige
demo.news.tabber = Nachrichten
demo.reporting.flex.interactive.tabber = Interaktive Charts
demo.reporting.flex.multi.tabber = Chart-Mehrfachauswahl
demo.reporting.flex.static.tabber = Fixe Charts
demo.reporting.flex.staticCockpit.tabber = Chart-Cockpit
demo.reporting.flex.tabber = Chart-Beispiele
demo.structure.demoAspect.tabber = Aspektvererbung
demo.structure.demoPlain.tabber = Flache Typen
demo.structure.demoTypes.objectBrowser.tabber = Objektbrowser
demo.structure.demoTypes.tabber = Typendemo
demo.structure.demoTypes.tree.title = DemoTypes-Baum
demo.structure.tabber = Strukturen
demo.table.customizedSidebar.tabber = Konfigurierte Sidebar
demo.table.frozen.tabber = Frozen
demo.table.grid.tabber = Grid
demo.table.gridNoDetails.tabber = Grid ohne Detaildialoge
demo.table.gridNoDisabledMarker.tabber = Grid ohne disabled Marker
demo.table.simple.tabber = Einfach
demo.table.structureEdit.tabber = Struktureditor
demo.table.tree.tabber = Baumbasierte Tabelle
demo.technical.tabber = Technisches Demo
demo.test.FaultyComparatorTable.twoInputs = Zwei Felder
demo.test22708.tabber = #22708: Flaches B mit A Kind
demo.test22798.tabber = #22798: ResetInvisible TreeGrid
demo.tree.grid.tabber = Tree Grid
element.structure.edit.displayDialog_DemoTypesnewElementLayoutDialog = Neu...
element.structure.edit.displayDialog_DemoTypesnewElementLayoutDialog.title = Neues Demo-Element anlegen
element.structure.edit.displayDialog_DemoTypesnewElementLayoutDialog.tooltip = Unterelement in der DemoTypes-Struktur anlegen
element.structure.edit.elementName = Element Name
export.table.component.demoExportTypes = Lokale Eigenschaften
export.table.component.demoExportTypes.tooltip = Export aller Eigenschaften des gewählten Objektes als Text
export.table.component.demoExportTypesSubstructure = Alle Eigenschaften der Substruktur
export.table.component.demoExportTypesSubstructure.tooltip = Export aller Eigenschaften des gewählten Objektes und der Substruktur als Text
group.description.demoTypeAdministrators = Demo-Administratoren administrieren die Demo-Typen
group.name.demoTypeAdministrators = Demo-Administratoren
group.name.maintenanceMode = Maintenance-Mode-Nutzer
java.util.concurrent.TimeUnit.DAYS = d
java.util.concurrent.TimeUnit.HOURS = h
java.util.concurrent.TimeUnit.MICROSECONDS = µs
java.util.concurrent.TimeUnit.MILLISECONDS = ms
java.util.concurrent.TimeUnit.MINUTES = min
java.util.concurrent.TimeUnit.NANOSECONDS = ns
java.util.concurrent.TimeUnit.SECONDS = s
layouts.demo.editSecurityStructureWithExport.EditAComponent.title = DemoSecurity-Edit A
layouts.demo.editSecurityStructureWithExport.EditBComponent.title = DemoSecurity-Edit A
layouts.demo.editSecurityStructureWithExport.EditParentComponent.title = DemoSecurity-Parent
layouts.demo.editSecurityStructureWithExport.Tree.title = DemoSecurity-Baum
layouts.demo.editStructureDetail.childrenTable = Tabellendarstellung der Kinder des Modells
layouts.demo.editStructureDetail.deleteMails = Mails löschen
layouts.demo.editStructureDetail.deleteTypes = Struktur löschen
layouts.demo.editStructureDetail.deleteTypes.tooltip = Löscht das aktuelle Element und alle Unterelemente
layouts.demo.editStructureDetail.generateTypes = Generieren...
layouts.demo.editStructureDetail.generateTypes.tooltip = Automatisches Generieren von Elementen
layouts.demo.editStructureDetail.priorityTable = Tabellendarstellung des Attributs "priorityTable"
layouts.demo.editStructureDetail.priorityTableDialogConfig = Tabellendarstellung des Attributs "priorityTableDialogConfig" mit eigener Config für den Auswahldialog.
layouts.demo.editStructureWithExport.Tree.title = DemoTypes-Baum
layouts.demo.editStructureWithExport.demoChartCockpit.tab = Chart Cockpit (Grid)
layouts.demo.editStructureWithExport.demoChartCockpitTable.tab = Chart Cockpit (Tabelle)
layouts.demo.editStructureWithExport.demoStructureDemoTypes.tab = Typendemo
layouts.demo.editStructureWithExport.demoStructureDemoTypesComments.tab = {0} Kommentare
layouts.demo.editStructureWithExport.demoStructureDemoTypesDocuments.tab = {0} Dokumente
layouts.demo.editStructureWithExport.demoStructureDemoTypesDocumentsManualLocking.tab = {0} Dokumente (manuelle Sperren)
layouts.demo.editStructureWithExport.demoStructureDemoTypesGantt.tab = Terminplan
layouts.demo.editStructureWithExport.demoStructureDemoTypesGrid.tab = Grid
layouts.demo.editStructureWithExport.demoStructureDemoTypesGridCumulativeTypedSetOrdered.tab = Attribute (cumulativ)
layouts.demo.editStructureWithExport.demoStructureDemoTypesGridTypedSetOrdered.tab = Attribute-Grid
layouts.demo.editStructureWithExport.demoStructureDemoTypesMail.tab = {0} Mails
layouts.demo.editStructureWithExport.demoStructureDemoTypesStructureEdit.tab = Struktureditor
layouts.demo.editStructureWithExport.demoStructureDemoTypesTreeGrid.tab = TreeGrid
layouts.demo.editStructureWithExport.demoStructureDemoTypesTreeTable.tab = Baumtabelle
layouts.demo.editStructureWithExport.main.tabber = Objekt editieren
layouts.demo.editStructureWithExport.openCreateElementDialog = Knoten anlegen
layouts.demo.grid.AttributeGrid.title = Grid mit Werten aus Attribut "typedSetOrdered"
layouts.demo.grid.CumulativeAttributeGrid.title = Grid mit allen Werten des Attributs "typedSetOrdered" in der Unterstruktur
layouts.demo.grid.Grid.computedCntStructure = computedCntStructure
layouts.demo.grid.Grid.customStringFieldColumn = customStringFieldColumn
layouts.demo.grid.Grid.name = Name
layouts.demo.grid.Grid.title = Gridansicht der Kinder des selektierten Baumknotens
layouts.demo.grid.newASibling = A Bruder anlegen
layouts.demo.grid.newASibling.tooltip = Legt ein neues Bruder-Objekt vom Typ A an
layouts.demo.grid.newBSibling = B Bruder anlegen
layouts.demo.grid.newBSibling.tooltip = Legt ein neues Bruder-Objekt vom Typ B an
layouts.demo.grid.newCSibling = C Bruder anlegen
layouts.demo.grid.newCSibling.tooltip = Legt ein neues Bruder-Objekt vom Typ C an
layouts.demo.history.historyDialogWithContent.HistoricEdit.title = Historische Objekt-Ansicht
layouts.demo.history.historyDialogWithContent.demoStructureDemoTypes.tab = Typendemo
layouts.demo.history.historyDialogWithContent.demoStructureDemoTypesDocuments.tab = {0} Dokumente
layouts.demo.plain.createPlainC = Flaches C im Dialog anlegen ...
layouts.demo.plain.createPlainC.dialog.tabber = Dialog zur Anlage eines neuen flachen C Objektes
layouts.demo.plain.createPlainC.title = Anlage eines neuen flachen C Objektes
layouts.demo.reporting.flex.demoChartCockpit.Chart.export.title = Mehrere Charts
layouts.demo.reporting.flex.demoChartCockpit.Chart.title = Chart-Cockpit
layouts.demo.reporting.flex.demoChartCockpit.Selector.title = Cockpit-Konfigurator
layouts.demo.reporting.flex.demoChartStaticCockpit.Chart1.title = Balkendiagramm
layouts.demo.reporting.flex.demoChartStaticCockpit.Chart2.title = Kuchendiagramm
layouts.demo.reporting.flex.demoChartStaticCockpit.Tree.title = Kontext-Selektor
layouts.demo.reporting.flex.demoInteractiveCharts.Selector.title = Auswahl interaktiver Charts
layouts.demo.reporting.flex.demoInteractiveCharts.Settings.title = Mögliche Einstellungen
layouts.demo.reporting.flex.demoStaticCharts.Chart.column.name = Name
layouts.demo.reporting.flex.demoStaticCharts.Chart.title = Anzeige des ausgewählten Charts
layouts.demo.reporting.flex.demoStaticCharts.Selector.title = Auswahl an statischen Charts
layouts.demo.table.demoTable.DemoTypesTable.ExportDialogComponent = Export...
layouts.demo.table.demoTable.DemoTypesTable.ExportDialogComponent.title = Export-Auswahl
layouts.demo.table.demoTable.DemoTypesTable.title = Demo demoTable.xml
layouts.demo.table.demoTable.DemoTypesTable.twoInputs = Zwei Felder
layouts.demo.table.demoTreeTable.DemoTypesTreeTable.title = Demo demoTreeTable.xml
layouts.demo.table.demoTreeTable.DemoTypesTreeTable.twoInputs = Zwei Felder
layouts.demo.table.editStructureWithExport.DemoTypesSelectedTable.tab = Tabelle
layouts.demo.table.editStructureWithExport.DemoTypesSelectedTable.title = Tabelle
layouts.demo.table.editStructureWithExport.TypedSetOrderedTable = Tabelle des Attributs "typedSetOrdered"
layouts.demo.table.frozenTable.DemoTypesFrozenTable.title = Demo frozenTable.xml
layouts.demo.table.frozenTable.DemoTypesFrozenTable.twoInputs = Zwei Felder
layouts.demo.table.structureEdit.DemoStructureEditComponent.title = Strukturbearbeitung
layouts.demo.table.table_grid.tableGrid.name = Name
layouts.demo.table.table_grid.tableGrid.title = Grid ohne Multiselekt-Marker
layouts.demo.table.table_grid_no_details.tableGridNoDetail.name = Name
layouts.demo.table.table_grid_no_details.tableGridNoDetail.title = Grid ohne Detail-Dialogöffner
layouts.demo.table.table_grid_no_disabled_marker.tableGridNoDisabledMarker.name = Name
layouts.demo.table.table_grid_no_disabled_marker.tableGridNoDisabledMarker.title = Grid ohne disabled Multiselekt-marker. A's mit booleanMandatory()=false haben keinen Marker.
layouts.demo.table.tree_grid.newAChild = A Kind anlegen
layouts.demo.table.tree_grid.newAChild.tooltip = Legt ein neues Kind-Objekt vom Typ A an
layouts.demo.table.tree_grid.newASibling = A Bruder anlegen
layouts.demo.table.tree_grid.newASibling.tooltip = Legt ein neues Bruder-Objekt vom Typ A an
layouts.demo.table.tree_grid.newBChild = B Kind anlegen
layouts.demo.table.tree_grid.newBChild.tooltip = Legt ein neues Kind-Objekt vom Typ B an
layouts.demo.table.tree_grid.newBSibling = B Bruder anlegen
layouts.demo.table.tree_grid.newBSibling.tooltip = Legt ein neues Bruder-Objekt vom Typ B an
layouts.demo.table.tree_grid.newCChild = C Kind anlegen
layouts.demo.table.tree_grid.newCChild.tooltip = Legt ein neues Kind-Objekt vom Typ C an
layouts.demo.table.tree_grid.newCSibling = C Bruder anlegen
layouts.demo.table.tree_grid.newCSibling.tooltip = Legt ein neues Bruder-Objekt vom Typ C an
layouts.demo.table.tree_grid.toggleRootVisibility = Sichtbarkeit von Root ändern
layouts.demo.table.tree_grid.toggleRootVisibility.tooltip = Ändert die Sichtbarkeit des Root-Knotens
layouts.demo.table.tree_grid.treeGrid.name = Name
layouts.demo.table.tree_grid.treeGrid.title = Demo tree_grid.xml
layouts.demo.table.tree_grid_table.newPlainA = Plain A anlegen
layouts.demo.table.tree_grid_table.newPlainA.tooltip = Legt ein nichtstrukturiertes Objekt vom Typ A an
layouts.demo.table.tree_grid_table.title = Demo tree_grid.xml (Unendlicher Baum)
layouts.editStructure.DemoRemote.tree.title = Demo-Remote-Baum
layouts.editStructure.tl.demo.aspect.tree.title = Aspekt-Baum
layouts.layoutdemo.DemoAJAXProgress.ajaxProgress.headline = Fortschritt
layouts.layoutdemo.DemoProgress.demoOpenProgressComponent.headline = Fortschritt
layouts.layoutdemo.DemoProgress.demoProgress.headline = Fortschritt
layouts.layoutdemo.FaultyFormFieldComponent.main.faultyMultiSelectionControl = FaultyMultiSelectionControl
layouts.layoutdemo.FaultyFormFieldComponent.main.tab1 = Tab 1
layouts.layoutdemo.FaultyFormFieldComponent.main.tab3 = Tab 3
layouts.layoutdemo.TestControlsForm_shared.main.bigMegaMenuOptions = Mittlere Grösse eines Mega Menüs mit Icons
layouts.layoutdemo.TestControlsForm_shared.main.biggestMegaMenuOptions = Grösstes Mega Menü
layouts.layoutdemo.TestControlsForm_shared.main.emptyMandatoryMegaMenu = Leeres mandatory Mega Menü
layouts.layoutdemo.TestControlsForm_shared.main.megaMenuFixedOptions = Mega Menü mit fixierten Optionen und Icons (Zugänge, Basisadministration)
layouts.layoutdemo.TestControlsForm_shared.main.megaMenuInvalidSelection = Mega Menü mit ungültiger Vorauswahl
layouts.layoutdemo.TestControlsForm_shared.main.smallestMegaMenuOptions = Kleinstes Mega Menü mit Icons und einem modifiziertem keine Selektion Feld
layouts.layoutdemo.dnd.defaultRowTable.title = Standardtabelle (Row-drop)
layouts.layoutdemo.dnd.defaultTable.title = Standardtabelle
layouts.layoutdemo.dnd.defaultTree.title = Standard-Baum
layouts.layoutdemo.dnd.fixedRowTable.title = Fixierte Tabelle (Row-drop)
layouts.layoutdemo.dnd.fixedTable.title = Fixierte Tabelle
layouts.layoutdemo.dnd.form.field1 = Einfachauswahl
layouts.layoutdemo.dnd.form.field2 = Mehrfachauswahl
layouts.layoutdemo.dnd.form.title = Drop-Target
layouts.layoutdemo.dnd.genericDrop.title = Einfache Komponente
layouts.layoutdemo.dnd.globalFixedTable.title = Einfache fixierte Tabelle
layouts.layoutdemo.dnd.globalTable.title = Einfache Tabelle
layouts.layoutdemo.dnd.globalTree.title = Einfacher Baum
layouts.layoutdemo.dnd.orderedTree.title = Geordneter Baum
layouts.layoutdemo.dnd.table.nameColumn = Objekt
layouts.layoutdemo.form.declarativeFormComponentDemo.DeclarativeFormConfiguredType.title = Deklarative Formdefinition zu einem konfigurierten Typ
layouts.layoutdemo.form.declarativeFormComponentDemo.DeclarativeFormDefinitionDemo.options = Entfernen/Hinzufügen
layouts.layoutdemo.form.declarativeFormComponentDemo.DeclarativeFormDefinitionDemo.title = Deklarative Formdefinition
layouts.layoutdemo.form.testDeFactoMonomorphicProperties.title = Test de-facto monomorphic properties
layouts.layoutdemo.table.DemoTableComponentCustom.title = Custom Renderer
layouts.themes.modern.ToolRowView.tlHome = TopLogic
layouts.themes.modern.ToolRowView.tlHome.tooltip = TopLogic Homepage
logentry.conf.DemoTypes = Demo Types
logentry.conf.DemoTypes.created = Demo Type erstellt
logentry.conf.DemoTypes.deleted = Demo Type gelöscht
logentry.conf.DemoTypes.modified = Demo Type geändert
logentry.message.DemoTypes.A.created = A "{0}" erstellt
logentry.message.DemoTypes.A.deleted = A "{0}" gelöscht
logentry.message.DemoTypes.A.modified = A "{0}" geändert
logentry.message.DemoTypes.B.created = B "{0}" erstellt
logentry.message.DemoTypes.B.deleted = B "{0}" gelöscht
logentry.message.DemoTypes.B.modified = B "{0}" geändert
main.admin.demo.tabber = Demo Administration
model.demo = Demo
model.demo.demoTypes.errorObjectSpeciallyProtected__name = Objekt ''{0}'' speziell geschützt.
model.tl5.enum.demo.attribute.classifier.global = Globale Attributklassifikation
model.tl5.enum.demo.attribute.classifier.global.demo.attribute.classifier.global.booleanAttributes = Boole'sches Attribut
model.tl5.enum.demo.attribute.classifier.global.demo.attribute.classifier.global.stringAttributes = Textattribut
model.tl5.enum.demo.attribute.classifier.local = Lokale Attributklassifikation
model.tl5.enum.demo.attribute.classifier.local.demo.attribute.classifier.local.dateAttributes = Datumsattribut
model.tl5.enum.demo.checklist = Demo-Checkliste
model.tl5.enum.demo.checklist.demo.checklist.a = A
model.tl5.enum.demo.checklist.demo.checklist.b = B
model.tl5.enum.demo.checklist.demo.checklist.c = C
model.tl5.enum.demo.checklist.demo.checklist.d = D
model.tl5.enum.demo.classification.multi = Multi-Klassifkation
model.tl5.enum.demo.classification.multi.demo.classification.multi.a = Multi-A
model.tl5.enum.demo.classification.multi.demo.classification.multi.b = Multi-B
model.tl5.enum.demo.classification.multi.demo.classification.multi.c = Multi-C
model.tl5.enum.demo.classification.multi.demo.classification.multi.d = Multi-D
model.tl5.enum.demo.classification.single = Einfach-Klassifkation
model.tl5.enum.demo.classification.single.demo.classification.single.a = Single-A
model.tl5.enum.demo.classification.single.demo.classification.single.b = Single-B
model.tl5.enum.demo.classification.single.demo.classification.single.c = Single-C
model.tl5.enum.demo.classification.single.demo.classification.single.d = Single-D
model.tl5.enum.demo.nonSystemList = Demo-Nicht-Systemklassifikation
model.tl5.enum.demo.systemList = Demo-Systemklassifikation
role.description.SecurityStructure.personalSettings = Das Profil dieser Rolle definiert die Berechtigungen zum Bearbeiten der eigenen Person und des eigenen Accounts.
role.name.SecurityStructure.personalSettings = Persönliche Einstellungen
test.dragndrop.tabber = Drag & Drop
tl.command.ShowComponentInfo = Zeige lokale Info
tl.command.ShowInfo = Zeige Info
tl.command.clearSelection = Auswahl zurücksetzen
tl.command.createPlainA = Legt neues A an
tl.command.createPlainB = Legt neues B an
tl.command.newA = A anlegen
tl.command.newA.tooltip = Legt ein neues Objekt vom Typ A an
tl.command.newB = B anlegen
tl.command.newB.tooltip = Legt ein neues Objekt vom Typ B an
tl.command.newC = C anlegen
tl.command.newC.tooltip = Legt ein neues Objekt vom Typ C an
tl.general.title = TopLogic Demo
tl.title = Demo
