class.com.top_logic.xio.command.I18NConstants.POST_PROCESSING = Performing import post-processing actions.
class.com.top_logic.xio.importer.I18NConstants.ERROR_GETTING_PROPERTY_FAILED__HANDLER_OBJ_PROP_MESSAGE = Failed to retrieve value of property "{2}" from object "{1}": {3}
class.com.top_logic.xio.importer.handlers.I18NConstants.WARN_IGNORING_UNKNOWN__TAG = Warning: Ignoring unknown tag "{0}".
com.top_logic.xio.command.XMLImportCommand = XML import command
com.top_logic.xio.command.XMLImportCommand$Config$ImportSpec = Import spec
com.top_logic.xio.command.XMLImportCommand$Config$ImportSpec.tooltip = Container for the import handler definition.
com.top_logic.xio.command.XMLImportCommand.Config.ImportSpec.handler = Handler
com.top_logic.xio.command.XMLImportCommand.Config.ImportSpec.handler.tooltip = The configured import handler.
com.top_logic.xio.command.XMLImportCommand.Config.import-definition = Import definition
com.top_logic.xio.command.XMLImportCommand.Config.import-definition.tooltip = The XML import specification.
com.top_logic.xio.command.XMLImportCommand.Config.logging = Logging
com.top_logic.xio.command.XMLImportCommand.Config.logging.tooltip = Whether to write import operations to the application log.
com.top_logic.xio.command.XMLImportCommand.Config.postProcessing = Post processing
com.top_logic.xio.command.XMLImportCommand.Config.postProcessing.tooltip = Function to invoke on the imported object after the import succeeded. <p> The function receives the imported object as first argument and the command's target model as second argument: </p> <pre> <code>result -> model -> ...</code> </pre> <p> The function is invoked within the import transaction and may create additional side-effects. Especially, if the import creates a transient object, the post processing action is required to transform the transient import result to a persistent object for the import to have any effect. </p>
com.top_logic.xio.command.XMLImportCommand.Config.progress-height = Progress height
com.top_logic.xio.command.XMLImportCommand.Config.progress-height.tooltip = The height of the import progress dialog.
com.top_logic.xio.command.XMLImportCommand.Config.progress-title = Progress title
com.top_logic.xio.command.XMLImportCommand.Config.progress-title.tooltip = The title of the import progress dialog. <p> If nothing is specified, a generic title is used. </p>
com.top_logic.xio.command.XMLImportCommand.Config.progress-width = Progress width
com.top_logic.xio.command.XMLImportCommand.Config.progress-width.tooltip = The width of the import progress dialog.
com.top_logic.xio.command.XMLImportCommand.Config.transient = Transient
com.top_logic.xio.command.XMLImportCommand.Config.transient.tooltip = Whether to instantiate objects transiently. <p> To have any effect, the imported object must be further processed in a post processing action. </p>
com.top_logic.xio.command.XMLImportCommand.Config.upload-header = Upload header
com.top_logic.xio.command.XMLImportCommand.Config.upload-header.tooltip = The header text being displayed in the upload dialog. <p> If noting is entered, a generic header is used. </p>
com.top_logic.xio.command.XMLImportCommand.Config.upload-height = Upload height
com.top_logic.xio.command.XMLImportCommand.Config.upload-height.tooltip = The height of the upload dialog.
com.top_logic.xio.command.XMLImportCommand.Config.upload-message = Upload message
com.top_logic.xio.command.XMLImportCommand.Config.upload-message.tooltip = The message text being displayed before the upload field. <p> If noting is entered, a generic message is used. </p>
com.top_logic.xio.command.XMLImportCommand.Config.upload-title = Upload title
com.top_logic.xio.command.XMLImportCommand.Config.upload-title.tooltip = The title of the upload dialog. <p> If noting is entered, a generic title is used. </p>
com.top_logic.xio.command.XMLImportCommand.Config.upload-width = Upload width
com.top_logic.xio.command.XMLImportCommand.Config.upload-width.tooltip = The width of the upload dialog.
com.top_logic.xio.command.XMLImportCommand.tooltip = Configurable command that allows to import XML data structures into TopLogic models.
com.top_logic.xio.importer.binding.PartRef = Part reference
com.top_logic.xio.importer.binding.PartRef.part = Part
com.top_logic.xio.importer.binding.PartRef.part.tooltip = Name of the <i>structured type part</i> within it's <i>Type</i>.
com.top_logic.xio.importer.binding.PartRef.tooltip = A reference to a <i>structured type part</i> from an import specification.
com.top_logic.xio.importer.binding.PartRef.type = Type
com.top_logic.xio.importer.binding.PartRef.type.tooltip = Name of the <i>structured type</i> defining the <i>Part</i>.
com.top_logic.xio.importer.handlers.AbstractReferenceImport = Reference import
com.top_logic.xio.importer.handlers.AbstractReferenceImport.Config.id-attribute = ID attribute
com.top_logic.xio.importer.handlers.AbstractReferenceImport.Config.id-attribute.tooltip = Name of the XML ID attribute containing the serialized reference.
com.top_logic.xio.importer.handlers.AbstractReferenceImport.tooltip = Base class for <i>handlers</i> importing model references.
com.top_logic.xio.importer.handlers.AlternativeIdHandler = Alternative ID handler
com.top_logic.xio.importer.handlers.AlternativeIdHandler.Config.id-attribute = ID attribute
com.top_logic.xio.importer.handlers.AlternativeIdHandler.Config.id-attribute.tooltip = The XML attribute that assigns the ID to the created object.
com.top_logic.xio.importer.handlers.AlternativeIdHandler.tooltip = <i>Handler</i> assigning an alternative ID to the context object.
com.top_logic.xio.importer.handlers.AssignHandler = Assign handler
com.top_logic.xio.importer.handlers.AssignHandler.Config.argument-var = Argument var
com.top_logic.xio.importer.handlers.AssignHandler.Config.argument-var.tooltip = Name of the variable that contains the object on which the expression is evaluated.
com.top_logic.xio.importer.handlers.AssignHandler.Config.property = Property
com.top_logic.xio.importer.handlers.AssignHandler.Config.property.tooltip = Name of the property to which the result of the function evaluation should be assigned.
com.top_logic.xio.importer.handlers.AssignHandler.Config.target-var = Target var
com.top_logic.xio.importer.handlers.AssignHandler.Config.target-var.tooltip = Name of the variable that contains the object on which the property is assigned.
com.top_logic.xio.importer.handlers.AssignHandler.Config.value = Value
com.top_logic.xio.importer.handlers.AssignHandler.Config.value.tooltip = Function taking one argument and producing the value to assign to <i>Property</i>.
com.top_logic.xio.importer.handlers.AssignHandler.tooltip = <i>Handler</i> assigning the result of an expression evaluation to a model property.
com.top_logic.xio.importer.handlers.AttributeCheck = Attribute check
com.top_logic.xio.importer.handlers.AttributeCheck.Config.value = Value
com.top_logic.xio.importer.handlers.AttributeCheck.Config.value.tooltip = The <i>pattern</i> that must match the value of the <i>XML attribute</i>.
com.top_logic.xio.importer.handlers.AttributeCheck.Config.xml-attribute = XML attribute
com.top_logic.xio.importer.handlers.AttributeCheck.Config.xml-attribute.tooltip = Name of the XML attribute to check.
com.top_logic.xio.importer.handlers.AttributeCheck.tooltip = <i>Handler</i> that checks that a certain XML attribute has a given value.
com.top_logic.xio.importer.handlers.ChainHandler = Chain handler
com.top_logic.xio.importer.handlers.ChainHandler.Config.chain-var = Chain var
com.top_logic.xio.importer.handlers.ChainHandler.Config.chain-var.tooltip = Name of the variable to set to the result of the last handler (or <i>Input var</i> for the first handler) when invoking the next <i>handler</i> of the chain.
com.top_logic.xio.importer.handlers.ChainHandler.Config.handlers = Handlers
com.top_logic.xio.importer.handlers.ChainHandler.Config.handlers.tooltip = The chain of <i>handlers</i> to invoke.
com.top_logic.xio.importer.handlers.ChainHandler.Config.input-var = Input var
com.top_logic.xio.importer.handlers.ChainHandler.Config.input-var.tooltip = Name of the variable to take the initial context value from.
com.top_logic.xio.importer.handlers.ChainHandler.tooltip = <i>Handler</i> that applies a chain of <i>handlers</i> in nested contexts.
com.top_logic.xio.importer.handlers.ConditionalHandler = Conditional handler
com.top_logic.xio.importer.handlers.ConditionalHandler.Config.arguments = Arguments
com.top_logic.xio.importer.handlers.ConditionalHandler.Config.arguments.tooltip = Names of variables that should be passed as arguments to the <i>Predicate</i>.
com.top_logic.xio.importer.handlers.ConditionalHandler.Config.contents = Contents
com.top_logic.xio.importer.handlers.ConditionalHandler.Config.contents.tooltip = List of <i>handlers</i> to execute, if the <i>Predicate</i> evaluates to <code>true</code>.
com.top_logic.xio.importer.handlers.ConditionalHandler.Config.predicate = Predicate
com.top_logic.xio.importer.handlers.ConditionalHandler.Config.predicate.tooltip = The predicate (function evaluating to a boolean expression) to evaluate on the given <i>Arguments</i>.
com.top_logic.xio.importer.handlers.ConditionalHandler.tooltip = A case block in a <i>switch import handler</i>.
com.top_logic.xio.importer.handlers.ConfiguredImportHandler = Configured import handler
com.top_logic.xio.importer.handlers.ConfiguredImportHandler.tooltip = Base class for <i>handler</i> implementations that can be customized by configuration.
com.top_logic.xio.importer.handlers.DispatchingImporter = Dispatching importer
com.top_logic.xio.importer.handlers.DispatchingImporter$Config$TagHandler = Tag handler
com.top_logic.xio.importer.handlers.DispatchingImporter$Config$TagHandler.tooltip = Combination of tag name and <i>handler</i> reference.
com.top_logic.xio.importer.handlers.DispatchingImporter.Config.TagHandler.impl = Implementation
com.top_logic.xio.importer.handlers.DispatchingImporter.Config.TagHandler.impl.tooltip = The <i>handler</i> to invoke, if the current element has the given tag name.
com.top_logic.xio.importer.handlers.DispatchingImporter.Config.TagHandler.name = Name
com.top_logic.xio.importer.handlers.DispatchingImporter.Config.TagHandler.name.tooltip = The tag name that triggers the handler.
com.top_logic.xio.importer.handlers.DispatchingImporter.Config.default = Default
com.top_logic.xio.importer.handlers.DispatchingImporter.Config.default.tooltip = The <i>handler</i> to choose, if none of the <i>Tags</i> match the current element.
com.top_logic.xio.importer.handlers.DispatchingImporter.Config.tags = Tags
com.top_logic.xio.importer.handlers.DispatchingImporter.Config.tags.tooltip = The tag name to <i>handler</i> mapping.
com.top_logic.xio.importer.handlers.DispatchingImporter.tooltip = <i>Handler</i> that dispatches to another <i>handler</i> based on the current tag-name.
com.top_logic.xio.importer.handlers.Handler$Config$HandlerRef = Handler reference
com.top_logic.xio.importer.handlers.Handler$Config$HandlerRef.tooltip = Wrapped configuration of an inner handler that allows specifying the inner handler by tag name (if the referring configuration already has another <i>default container</i> property).
com.top_logic.xio.importer.handlers.Handler.Config.HandlerRef.handler = Handler
com.top_logic.xio.importer.handlers.Handler.Config.HandlerRef.handler.tooltip = The inner handler.
com.top_logic.xio.importer.handlers.Handler.Config.id = ID
com.top_logic.xio.importer.handlers.HandlerRef = Handler reference
com.top_logic.xio.importer.handlers.HandlerRef.Config.handler-id = Handler ID
com.top_logic.xio.importer.handlers.HandlerRef.Config.handler-id.tooltip = The ID of the referenced <i>handler</i>.
com.top_logic.xio.importer.handlers.HandlerRef.tooltip = A <i>handler</i> that is defined somewhere else in the import file specification.
com.top_logic.xio.importer.handlers.Linker = Linker
com.top_logic.xio.importer.handlers.Linker.Config.linkings = Linkings
com.top_logic.xio.importer.handlers.Linker.Config.linkings.tooltip = The linker(s) to execute.
com.top_logic.xio.importer.handlers.Linker.Config.target-var = Target var
com.top_logic.xio.importer.handlers.Linker.Config.target-var.tooltip = Name of the variable containing the context object.
com.top_logic.xio.importer.handlers.Linker.Config.value-var = Value var
com.top_logic.xio.importer.handlers.Linker.Config.value-var.tooltip = Name of the variable containing the current object to link.
com.top_logic.xio.importer.handlers.Linker.tooltip = <i>Handler</i> linking an object to its context.
com.top_logic.xio.importer.handlers.LogHandler = Log handler
com.top_logic.xio.importer.handlers.LogHandler.Config.message = Message
com.top_logic.xio.importer.handlers.LogHandler.Config.message.tooltip = The message to log.
com.top_logic.xio.importer.handlers.LogHandler.tooltip = <i>Configured import handler</i> writing a configurable message to the import log.
com.top_logic.xio.importer.handlers.MultiReferenceImport = Multiple reference import
com.top_logic.xio.importer.handlers.MultiReferenceImport.Config.format = Format
com.top_logic.xio.importer.handlers.MultiReferenceImport.Config.format.tooltip = Format converter of the ID attribute value.
com.top_logic.xio.importer.handlers.MultiReferenceImport.tooltip = <i>Handler</i> converting the value of an <i>ID attribute</i> to a model reference.
com.top_logic.xio.importer.handlers.NestedImportHandler = Nested import handler
com.top_logic.xio.importer.handlers.NestedImportHandler.Config.content = Content
com.top_logic.xio.importer.handlers.NestedImportHandler.Config.content.tooltip = The inner handlers to apply in the context of the current <i>handler's</i> import result.
com.top_logic.xio.importer.handlers.NestedImportHandler.tooltip = Base class for <i>handlers</i> that contain nested <i>handlers</i>.
com.top_logic.xio.importer.handlers.ObjectCreate = Object create
com.top_logic.xio.importer.handlers.ObjectCreate.Config.fill-forward-var = Fill forward var
com.top_logic.xio.importer.handlers.ObjectCreate.Config.fill-forward-var.tooltip = An optional variable that contains an unassigned object reference to fill with the newly created object. <p> This is useful, if an object is assigned some property in an outer context before it can be created. </p>
com.top_logic.xio.importer.handlers.ObjectCreate.Config.join-duplicates = Join duplicates
com.top_logic.xio.importer.handlers.ObjectCreate.Config.join-duplicates.tooltip = Whether an existing object should be re-used, if the object with the given <i>ID attribute</i> was already imported.
com.top_logic.xio.importer.handlers.ObjectCreate.Config.model-type = Model type
com.top_logic.xio.importer.handlers.ObjectCreate.Config.model-type.tooltip = The type to instantiate.
com.top_logic.xio.importer.handlers.ObjectCreate.tooltip = <i>Object import</i> creating a new object.
com.top_logic.xio.importer.handlers.ObjectForward = Object forward
com.top_logic.xio.importer.handlers.ObjectForward.tooltip = <i>Handler</i> assigning an ID to a new object reference that is expected to be filled later on by an assignment through <i>Fill forward var</i> (<i>object create configuration</i>).
com.top_logic.xio.importer.handlers.ObjectImport = Object import
com.top_logic.xio.importer.handlers.ObjectImport.Config.id-attribute = ID attribute
com.top_logic.xio.importer.handlers.ObjectImport.Config.id-attribute.tooltip = The XML attribute that assigns the ID to the created object.
com.top_logic.xio.importer.handlers.ObjectImport.Config.var = Var
com.top_logic.xio.importer.handlers.ObjectImport.Config.var.tooltip = Explicit variable name in the context for the created object. <p> Inner handlers may explicitly reference this definition from the context. </p>
com.top_logic.xio.importer.handlers.ObjectImport.tooltip = Base class for <i>handlers</i> importing objects.
com.top_logic.xio.importer.handlers.ObjectRef = Object reference
com.top_logic.xio.importer.handlers.ObjectRef.Config.mandatory = Mandatory
com.top_logic.xio.importer.handlers.ObjectRef.Config.mandatory.tooltip = Whether the <i>ID attribute</i> is required in the import data and cannot be empty.
com.top_logic.xio.importer.handlers.ObjectRef.Config.multiple = Multiple
com.top_logic.xio.importer.handlers.ObjectRef.Config.multiple.tooltip = Whether the <i>ID attribute</i> can contain multiple values. <p> Multiple values are expected to be separated by space (see XML IDREFS attributes). </p>
com.top_logic.xio.importer.handlers.ObjectRef.tooltip = <i>Object import</i> completing an already created object with additional import data.
com.top_logic.xio.importer.handlers.PropertyImport = Property import
com.top_logic.xio.importer.handlers.PropertyImport.Config.format = Format
com.top_logic.xio.importer.handlers.PropertyImport.Config.format.tooltip = The <i>configuration value provider</i> that converts the XML text value to a model property value.
com.top_logic.xio.importer.handlers.PropertyImport.Config.xml-attribute = XML attribute
com.top_logic.xio.importer.handlers.PropertyImport.Config.xml-attribute.tooltip = The XML attribute to read.
com.top_logic.xio.importer.handlers.PropertyImport.tooltip = <i>Handler</i> assigning the value of an <i>XML attribute</i> to a model property.
com.top_logic.xio.importer.handlers.PropertySwitch = Property switch
com.top_logic.xio.importer.handlers.PropertySwitch$Config$ValueHandler = Value handler
com.top_logic.xio.importer.handlers.PropertySwitch$Config$ValueHandler.tooltip = Combination of a <i>handler</i> reference with a pattern value.
com.top_logic.xio.importer.handlers.PropertySwitch.Config.ValueHandler.value = Value
com.top_logic.xio.importer.handlers.PropertySwitch.Config.ValueHandler.value.tooltip = The pattern value to match against the value of the <i>XML attribute</i> (<i>property switch configuration</i>).
com.top_logic.xio.importer.handlers.PropertySwitch.Config.cases = Cases
com.top_logic.xio.importer.handlers.PropertySwitch.Config.cases.tooltip = Mapping of potential values of the <i>XML attribute</i> to target <i>handlers</i>.
com.top_logic.xio.importer.handlers.PropertySwitch.Config.default = Default
com.top_logic.xio.importer.handlers.PropertySwitch.Config.default.tooltip = The default <i>handler</i> to invoke, if the value does not match any of the configured <i>Cases</i>.
com.top_logic.xio.importer.handlers.PropertySwitch.Config.xml-attribute = XML attribute
com.top_logic.xio.importer.handlers.PropertySwitch.Config.xml-attribute.tooltip = The name of the XML attribute to read.
com.top_logic.xio.importer.handlers.PropertySwitch.tooltip = <i>Handler</i> that dispatches to an inner <i>handler</i> based on the value of an XML attribute.
com.top_logic.xio.importer.handlers.ReferenceImport = Reference import
com.top_logic.xio.importer.handlers.ReferenceImport.Config.format = Format
com.top_logic.xio.importer.handlers.ReferenceImport.Config.format.tooltip = Format converter of the ID attribute value.
com.top_logic.xio.importer.handlers.ReferenceImport.tooltip = <i>Handler</i> converting the value of an <i>ID attribute</i> to a model reference.
com.top_logic.xio.importer.handlers.ResKeyUpdate = Resource key update
com.top_logic.xio.importer.handlers.ResKeyUpdate.Config.language = Language
com.top_logic.xio.importer.handlers.ResKeyUpdate.Config.language.tooltip = The language to assign.
com.top_logic.xio.importer.handlers.ResKeyUpdate.Config.xml-attribute = XML attribute
com.top_logic.xio.importer.handlers.ResKeyUpdate.Config.xml-attribute.tooltip = The XML attribute to read. <p> If not given, the text content of the current element is read instead. </p>
com.top_logic.xio.importer.handlers.ResKeyUpdate.tooltip = <i>Handler</i> adding a translation of a certain language to a model property of type <i>resource key</i>.
com.top_logic.xio.importer.handlers.ScopedImportHandler = Scoped import handler
com.top_logic.xio.importer.handlers.ScopedImportHandler.Config.argument-var = Argument var
com.top_logic.xio.importer.handlers.ScopedImportHandler.Config.argument-var.tooltip = Variable to pass as argument to the <i>Expression</i> function.
com.top_logic.xio.importer.handlers.ScopedImportHandler.Config.expr = Expression
com.top_logic.xio.importer.handlers.ScopedImportHandler.Config.expr.tooltip = Expression computing the new scope for nested imports. <p> The expression is expected to be a function taking as single argument the current scope of the import. </p>
com.top_logic.xio.importer.handlers.ScopedImportHandler.Config.scope-var = Scope var
com.top_logic.xio.importer.handlers.ScopedImportHandler.Config.scope-var.tooltip = The variable to assign the <i>Expression</i> result to.
com.top_logic.xio.importer.handlers.ScopedImportHandler.tooltip = <i>Nested import handler</i> selecting a new import scope by evaluating a function.
com.top_logic.xio.importer.handlers.SkipDeep = Skip deep
com.top_logic.xio.importer.handlers.SkipDeep.Config.warn = Warn
com.top_logic.xio.importer.handlers.SkipDeep.Config.warn.tooltip = Report warnings about ignored tags.
com.top_logic.xio.importer.handlers.SkipDeep.tooltip = <i>Handler</i> that skips all XML content up to a matching end tag.
com.top_logic.xio.importer.handlers.StoreHandler = Store handler
com.top_logic.xio.importer.handlers.StoreHandler.Config.name = Name
com.top_logic.xio.importer.handlers.StoreHandler.Config.name.tooltip = The name of the model property to assign.
com.top_logic.xio.importer.handlers.StoreHandler.Config.target-var = Target var
com.top_logic.xio.importer.handlers.StoreHandler.Config.target-var.tooltip = Name of the variable that contains the object whose property is assigned.
com.top_logic.xio.importer.handlers.StoreHandler.tooltip = Base class for <i>handlers</i> assigning a value to a model element.
com.top_logic.xio.importer.handlers.SwitchImportHandler = Switch import handler
com.top_logic.xio.importer.handlers.SwitchImportHandler.Config.cases = Cases
com.top_logic.xio.importer.handlers.SwitchImportHandler.Config.cases.tooltip = <i>Handlers</i> guarded by predicates.
com.top_logic.xio.importer.handlers.SwitchImportHandler.Config.else = Else
com.top_logic.xio.importer.handlers.SwitchImportHandler.Config.else.tooltip = The default <i>handler</i> to execute, if none of the predicates evaluate to <code>true</code>.
com.top_logic.xio.importer.handlers.SwitchImportHandler.tooltip = <i>Handler</i> that tests arbitrary conditions on an imported object for selecting an appropriate target <i>handler</i>.
com.top_logic.xio.importer.handlers.TextContentImport = Text content import
com.top_logic.xio.importer.handlers.TextContentImport.Config.assign-id = Assign ID
com.top_logic.xio.importer.handlers.TextContentImport.Config.assign-id.tooltip = Whether to use the text value as identifier for the imported object.
com.top_logic.xio.importer.handlers.TextContentImport.Config.format = Format
com.top_logic.xio.importer.handlers.TextContentImport.Config.format.tooltip = The <i>configuration value provider</i> that converts the XML text value to a model property value.
com.top_logic.xio.importer.handlers.TextContentImport.tooltip = <i>Handler</i> assigning the text content of an element a model property.
com.top_logic.xio.importer.handlers.WithResult = With result
com.top_logic.xio.importer.handlers.WithResult.tooltip = Assigns an additional ID to a referenced object.
com.top_logic.xio.importer.handlers.XMLPropertyImport = XML property import
com.top_logic.xio.importer.handlers.XMLPropertyImport.Config.content = Content
com.top_logic.xio.importer.handlers.XMLPropertyImport.Config.content.tooltip = Whether to read only the content of the current element instead of the current element itself.
com.top_logic.xio.importer.handlers.XMLPropertyImport.Config.name = Name
com.top_logic.xio.importer.handlers.XMLPropertyImport.Config.name.tooltip = Name of the property to assign.
com.top_logic.xio.importer.handlers.XMLPropertyImport.Config.target-var = Target var
com.top_logic.xio.importer.handlers.XMLPropertyImport.Config.target-var.tooltip = Name of the variable to take the context object from.
com.top_logic.xio.importer.handlers.XMLPropertyImport.tooltip = Reads the content of the current element and sets it's XML representation in the given property.
com.top_logic.xio.importer.linkings.AbstractObjectLinking = Object linking
com.top_logic.xio.importer.linkings.AbstractObjectLinking.Config.reverse = Reverse
com.top_logic.xio.importer.linkings.AbstractObjectLinking.Config.reverse.tooltip = Whether a property in the newly created object is referencing the context object instead of vice versa.
com.top_logic.xio.importer.linkings.AbstractObjectLinking.tooltip = Base class for <i>object linking</i> implementations.
com.top_logic.xio.importer.linkings.CustomLinking = Custom linking
com.top_logic.xio.importer.linkings.CustomLinking.Config.expr = Expression
com.top_logic.xio.importer.linkings.CustomLinking.Config.expr.tooltip = <i>Expression</i> being executed for each object to link to its context. <p> The expression is expected to be a function with two arguments: The context object and the newly created object. </p>
com.top_logic.xio.importer.linkings.CustomLinking.tooltip = <i>Object linking</i> that delegates to a search expression.
com.top_logic.xio.importer.linkings.ListLinking = List linking
com.top_logic.xio.importer.linkings.ListLinking.Config.name = Name
com.top_logic.xio.importer.linkings.ListLinking.Config.name.tooltip = The multi-reference of the context object to add the value to.
com.top_logic.xio.importer.linkings.ListLinking.tooltip = <i>Object linking</i> that adds the value to a multi-reference of it's context.
com.top_logic.xio.importer.linkings.RefLinking = Reference linking
com.top_logic.xio.importer.linkings.RefLinking.Config.name = Name
com.top_logic.xio.importer.linkings.RefLinking.Config.name.tooltip = The name of the refernce to assign to.
com.top_logic.xio.importer.linkings.RefLinking.tooltip = <i>Object linking</i> that assigns a reference of the context.
