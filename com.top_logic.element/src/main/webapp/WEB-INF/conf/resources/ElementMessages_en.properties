Attributed.name = Name
Comment.content = Content
Comment.creator = Creator
Comment.date = Date
ExternalReference.name = Name
ExternalReference.system = Application
Mandator.all.contactPersons = Contact Persons
NewsEntries.NewsEntry.headerText = Title / Header
NewsEntries.NewsEntry.longText = Contribution text
NewsEntries.NewsEntry.shortText = Short text
TLDocumented.documented = Documentation
WorkItem.type.defaultType = Note
admin.group.members.edit.members = Members
admin.group.members.edit.nothing = Cancel
admin.group.members.edit.nothing.tooltip = Cancel changes
admin.group.members.edit.summary = Group members
admin.group.members.tabber = Group members
admin.group.members.table.name = Name
admin.group.roles.nothing = Cancel
admin.group.roles.table.name = Name
admin.group.roles.table.selector = Ignore tree selection
admin.list.table.attributefilter = Attribute
admin.list.table.namefilter = Name
admin.list.table.sourceselector = List
admin.newsEntry.adminNewsEntryView = News
admin.newsEntry.edit.deleteNewsEntry.confirm = Choose OK to delete the entry. Otherwise Cancel.
admin.newsEntry.edit.dialogtitle = Create a new Entry
admin.newsEntry.edit.displayDialog_createNewsDialog = New Entry...
admin.newsEntry.edit.displayDialog_createNewsDialog.title = Create News Entry
admin.newsEntry.edit.displayDialog_createNewsDialog.tooltip = Create a new Entry
admin.newsEntry.edit.enterText = Please enter text.
admin.newsEntry.edit.noModel = No Entry selected
admin.newsEntry.edit.nothing = Cancel
admin.newsEntry.edit.nothing.tooltip = Discard changes and leave edit mode
admin.newsEntry.message = Mit einem HTML-Editor lassen sich die Nachrichten komfortabel erstellen und den Bedürfnissen entsprechenden formatieren, welche in der Cockpit Funktionalität nach dem Übernehmen oder Speichern angezeigt werden.
admin.newsEntry.tabber = News
admin.newsEntry.table.entryDate = Entry Date
admin.newsEntry.table.entryHeader = Entry Title
admin.newsEntry.title = News
admin.persons.roles.nothing = Cancel
admin.persons.roles.table.name = Name
admin.persons.roles.table.selector = Ignore tree selection
admin.roles.filter.filter = Filter
admin.roles.filter.structure = Security structure
admin.roles.filter.title = Choose security structure
admin.security.attRoleClass.displayDialog_SecurityImportDialog = Import...
admin.security.attRoleClass.displayDialog_SecurityImportDialog.title = Import permissions
admin.security.attRoleClass.displayDialog_SecurityImportDialog.tooltip = Opens a dialog to import permissions.
admin.security.attRoleClass.noModel = No classifications available on the selected element.
admin.security.attRoleClass.title = Access rights to classified attributes
admin.security.attSec.classified = Attribute
admin.security.attSec.classified.group = Security relevant attributes
admin.security.attSec.classified.name = Attribute
admin.security.attSec.securityImport.end.message = Import finished.
admin.security.attSec.securityImport.start.message = Start
admin.security.attSec.title = Categorize security-relevant attributes
admin.security.import.authorization.problem.duplicateRole = Berechtigung (authorization): Rolle {1} für Klassifizierung {0} existiert mehrfach. Dies kann zu unbeabsichtigten Berechtigungen führen.
admin.security.import.authorization.problem.unknownClassifier = Berechtigung (authorization): Klassifizierung {0} nicht gültig. Wird nicht berücksichtigt.
admin.security.import.authorization.problem.unknownRole = Berechtigung (authorization): Rolle {1} für Klassifizierung {0} nicht gültig. Wird nicht berücksichtigt.
admin.security.import.classifications.problem.duplicateMetaElement = Klassifizierungen (classifications): Der Typ (metaElement) {0} existiert mehrfach. Wird nicht berücksichtigt.
admin.security.import.classifications.problem.unknownClassifier = Klassifizierungen (classifications): Die Klassifizierung (classifier) {2} des Attributs {1} auf dem Typ (metaElement) {0} ist nicht bekannt. Wird  nicht berücksichtigt.
admin.security.import.classifications.problem.unknownMetaAttribute = Klassifizierungen (classifications): Das Attribut {1} ist nicht definiert für den Typ (metaElement) {0}. Wird nicht berücksichtigt.
admin.security.import.roleRules.problem.abstractSourceType = Der Quelltyp {0} ist abstrakt.
admin.security.import.roleRules.problem.abstractTypeWithoutInheritance = In der Regel ist ein abstrakter Typ {0} angegeben; die Regel wird aber nicht vererbt.
admin.security.import.roleRules.problem.attributeAndAssociationGiven = Im Pfad sind sowohl Attribut {0} als auch Assoziation {1} angegeben.
admin.security.import.roleRules.problem.illegalMetaElement = Der Typ (metaElement) {0} kann nicht als Pfadelement verwendet werden, da er kein Obertyp von {1} ist.
admin.security.import.roleRules.problem.metaElementAndMetaObjectDeclared = Es sind sowohl Typ {0} als auch Tabelle {1} angegeben.
admin.security.import.roleRules.problem.metaElementAndMetaObjectNotDeclared = Es sind weder Typ noch Tabelle angegeben.
admin.security.import.roleRules.problem.noAttributeOrAssociation = Im Pfad sind weder ein Attribut noch eine Assoziation angegeben.
admin.security.import.roleRules.problem.unknownAttribute = Das Attribut {1} ist im Typ {0} nicht bekannt.
admin.security.import.roleRules.problem.unknownMetaElement = Der Typ (metaElement) {0} kann nicht aufgelöst werden. Die zugehörige Regel wird nicht berücksichtigt.
admin.security.import.roleRules.problem.unknownMetaObject = Keine Tabelle mit Namen {0} definiert.
admin.security.import.roleRules.problem.unknownRole = Die Rolle {0} kann nicht aufgelöst werden. Die zugehörige Regel wird nicht berücksichtigt.
attRoleClass.meta.element.table.name = Area
attRoleClass.meta.element.table.title = Area
attSec.meta.element.table.name = Name
attSec.meta.element.table.title = Area
class.com.top_logic.element.layout.admin.component.I18NConstants.EXPORT_ERROR_TOO_MANY_ROWS = Export not possible because table has too many rows (at maximum 65534 rows possible).
class.com.top_logic.element.layout.create.I18NConstants.TITLE_CREATE_OBJECT__TYPE = Create {0}
class.com.top_logic.element.layout.formeditor.I18NConstants.DELETE_FORM = Delete
class.com.top_logic.element.layout.formeditor.I18NConstants.DISCARD_CHANGES = Discards changes
class.com.top_logic.element.layout.formeditor.I18NConstants.FORM_EDITOR_DIALOG.formTemplates = Form templates
class.com.top_logic.element.layout.formeditor.I18NConstants.FORM_EDITOR_DIALOG.noModel = No form available
class.com.top_logic.element.layout.formeditor.I18NConstants.FORM_EDITOR_DIALOG.title = Edit form
class.com.top_logic.element.layout.formeditor.I18NConstants.FORM_EDITOR_DIALOG_DISABLED_NO_TYPE_SELECTED__TYPE_ATTRIBUTE = No type selected in property {0}.
class.com.top_logic.element.layout.formeditor.I18NConstants.FORM_TYPE_PROPERTY_HAS_NO_MODEL_TYPE__PROPERTY_TYPE = Configuration property "{0}" does not contain model types, but {1}.
class.com.top_logic.element.layout.formeditor.I18NConstants.MISSING_TYPE_ATTRIBUTE_ANNOTATION__ATTRIBUTE = Attribute "{0}" has no model type annotation.
class.com.top_logic.element.layout.formeditor.I18NConstants.MISSING_TYPE_ATTRIBUTE__ATTRIBUTE = Attribute "{0}" does not exist.
class.com.top_logic.element.layout.formeditor.I18NConstants.NO_FORM_COMPONENT_ERROR = Component is not a FormComponent. FormDefinition could not be resolved.
class.com.top_logic.element.layout.formeditor.I18NConstants.NO_FORM_TO_RESET_ERROR = You cannot reset a standard forms.
class.com.top_logic.element.layout.formeditor.I18NConstants.OPEN_FORM_EDITOR_DIALOG = Open form editor
class.com.top_logic.element.layout.formeditor.I18NConstants.UNSUITABLE_BUILDER_ERROR = The Builder is no ConfiguredDynamicFormBuilder.
class.com.top_logic.element.layout.formeditor.definition.I18NConstants.OTHER_ATTRIBUTES = Other attributes
class.com.top_logic.element.layout.formeditor.implementation.I18NConstants.NO_SUCH_ATTRIBUTE__TYPE__ATTRIBUTE = No such attribute ''{1}'' in type ''{0}''.
class.com.top_logic.element.layout.formeditor.implementation.I18NConstants.OTHER_ATTRIBUTES = Other attributes
class.com.top_logic.element.layout.formeditor.implementation.I18NConstants.TABBAR = Tabbar
class.com.top_logic.element.layout.genericimport.I18NConstants.ERROR_FOREIGN_KEY_NOT_MAPPED = The foreign key column must be mapped to an attribute.
class.com.top_logic.element.layout.genericimport.I18NConstants.UPLOAD_NOFILE = No file selected.
class.com.top_logic.element.layout.grid.I18NConstants.ABSTRACT_TYPE_WITHOUT_SUBTYPES__TYPE = There is no concrete subtype for the abstract type {0}.
class.com.top_logic.element.layout.grid.I18NConstants.ERROR_CANNOT_STORE_VALUES = Changes cannot be applied
class.com.top_logic.element.layout.grid.I18NConstants.ERROR_CANNOT_STORE_VALUES.title = Changes cannot be applied
class.com.top_logic.element.layout.grid.I18NConstants.ICON_TOOLTIP = Name: <b>{0}</b><br />Type: <b>{1}</b>
class.com.top_logic.element.layout.grid.I18NConstants.IMPORT_COMMIT_FAILED = Data could not be saved.
class.com.top_logic.element.layout.grid.I18NConstants.IMPORT_COMMIT_FAILED_WITH_REASON = Data could not be saved (Reason: "{0}").
class.com.top_logic.element.layout.grid.I18NConstants.IMPORT_FAILED__MSG = Import failed: {0}.
class.com.top_logic.element.layout.grid.I18NConstants.IMPORT_START = Start import.
class.com.top_logic.element.layout.grid.I18NConstants.NEW_OBJECT_MARKER = Newly created Object
class.com.top_logic.element.layout.grid.I18NConstants.NO_GOTO_NO_DEFAULT_LAYOUT = There is no default layout to display the object.
class.com.top_logic.element.layout.grid.I18NConstants.NO_SELECTION = There is object selected.
class.com.top_logic.element.layout.grid.I18NConstants.SELECT_CONCRETE_TYPE_DIALOG.header = Type selection
class.com.top_logic.element.layout.grid.I18NConstants.SELECT_CONCRETE_TYPE_DIALOG.icon = 
class.com.top_logic.element.layout.grid.I18NConstants.SELECT_CONCRETE_TYPE_DIALOG.input = Concrete type
class.com.top_logic.element.layout.grid.I18NConstants.SELECT_CONCRETE_TYPE_DIALOG.message = Please select the element type to instantiate.
class.com.top_logic.element.layout.grid.I18NConstants.SELECT_CONCRETE_TYPE_DIALOG.title = Type selection
class.com.top_logic.element.layout.grid.I18NConstants.TECHNICAL_COLUMN = Commands
class.com.top_logic.element.layout.grid.I18NConstants.WRONG_SELECTION = Cannot create a new object on the current selection.
class.com.top_logic.element.layout.instances.I18NConstants.DEFAULT_VIEW_COLUMN_LABEL = Default view
class.com.top_logic.element.layout.instances.I18NConstants.ERROR_CANNOT_INSTANTIATE_ABSTRACT_TYPE = Cannot instantiate abstract type.
class.com.top_logic.element.layout.meta.I18NConstants.CONFIGURATION_NOT_PARSEABLE = The actual value can not be parsed to a valid configuration.
class.com.top_logic.element.layout.meta.I18NConstants.CONFIGURATION_OF_UNEXPECTED_TYPE__EXPECTED_ACTUAL = The configuration has unexpected type: Expected: {0}, Actual: {1}.
class.com.top_logic.element.layout.meta.I18NConstants.ERROR_CREATING_ATTRIBUTE_FAILD__DETAIL = Attribute creation failed: {0}
class.com.top_logic.element.layout.meta.I18NConstants.ERROR_DELETE_TYPE_USED_BY_TYPEPART__TYPE_TYPEPART = Type {0} is required by attribute {1} and must not be deleted.
class.com.top_logic.element.layout.meta.I18NConstants.ERROR_DELETE_TYPE_WITH_INSTANCES__TYPE = Type {0} with instances must not be deleted.
class.com.top_logic.element.layout.meta.I18NConstants.ERROR_DELETE_TYPE_WITH_SPECIALIZATIONS__TYPE_SPECIALIZATION = Type {0} is required by subtype {1} and must not be deleted.
class.com.top_logic.element.layout.meta.I18NConstants.FORM_EDITOR__NO_ATTRIBUTED_OBJECT = Cannot be displayed without an attributed object.
class.com.top_logic.element.layout.meta.I18NConstants.I18N_NAME_COLUMN__LOCALE = Name ({0})
class.com.top_logic.element.layout.meta.I18NConstants.NO_META_ELEMENT_SELECTED = No type selected
class.com.top_logic.element.layout.meta.search.quick.I18NConstants.EXECUTE_QUICK_SEARCH = Execute quick search
class.com.top_logic.element.layout.meta.search.quick.I18NConstants.INVALID_SEARCH_COMPONENT = Invalid search component {0}.
class.com.top_logic.element.layout.meta.search.quick.I18NConstants.MULTIPLE_SEARCH_COMPONENTS = Multiple search components found: {0}. Configure a search component.
class.com.top_logic.element.layout.meta.search.quick.I18NConstants.NO_SUCH_SEARCH_COMPONENT = Search component {0} not found.
class.com.top_logic.element.layout.meta.search.quick.I18NConstants.PLACEHOLDER = Search
class.com.top_logic.element.layout.security.I18NConstants.GLOBAL_DOMAIN = Global domain
class.com.top_logic.element.layout.security.I18NConstants.ROLE = Role
class.com.top_logic.element.layout.structured.I18NConstants.ERROR_ROOT_CANNOT_BE_DELETED = A root element cannot be deleted.
class.com.top_logic.element.layout.structured.I18NConstants.GLOBAL_CONFIGURATION = -- Template (global) --
class.com.top_logic.element.layout.tree.I18NConstants.DESTINATION_IS_NO_STRUCTURED_ELEMENT__DESTINATION = It is not allowed to move the object to the destination object "{0}": The destination object is not a StructuredElement.
class.com.top_logic.element.layout.tree.I18NConstants.MOVE_INTO_OWN_SUBTREE__DROPPED_DESTINATION = It is not allowed to move the object "{0}" to the destination object "{0}": That would move the object into its own subtree.
class.com.top_logic.element.layout.tree.I18NConstants.OBJECT_IS_NO_STRUCTURED_ELEMENT__OBJECT = It is not allowed to move the object "{0}": It is not a StructuredElement.
class.com.top_logic.element.layout.tree.I18NConstants.ROOT_CANNOT_BE_MOVED = It is not allowed to move the root node: The tree would be missing a common root.
class.com.top_logic.element.layout.tree.I18NConstants.WRONG_CHILD_TYPE__DROPPED_DESTINATION = It is not allowed to move the object "{0}" to the destination object "{0}": The destination object does not allow this type for its sub elements.
class.com.top_logic.element.layout.uiconfig.I18NConstants.EMPTY_ATTRIBUTE_SELECTION = (empty)
class.com.top_logic.element.meta.I18NConstants.DUPLICATE_ATTRIBUTE__ID = Attribute with ID "{0}" already exists.
class.com.top_logic.element.meta.I18NConstants.EDIT_LOCATION__ATTR = Attribute "{0}"
class.com.top_logic.element.meta.I18NConstants.EDIT_LOCATION__ATTR_OBJ = Attribute "{0}" of "{1}"
class.com.top_logic.element.meta.expr.I18NConstants.ERROR_INVALID_LOCATOR_FORMAT__VALUE = Invalid locator format in "{0}".
class.com.top_logic.element.meta.expr.internal.I18NConstants.ERROR_CANNOT_ACCESS_METHOD__METHOD = Method ''{0}'' cannot be accessed.
class.com.top_logic.element.meta.expr.internal.I18NConstants.ERROR_METHOD_DECLARED_VIOD__VALUE = Void methods must not be used as locators.
class.com.top_logic.element.meta.expr.internal.I18NConstants.ERROR_METHOD_NOT_FOUND__CLASS_METHOD = Method ''{1}'' not found in class ''{0}}''.
class.com.top_logic.element.meta.expr.internal.I18NConstants.ERROR_METHOD_PATTERN_MISMATCH__VALUE = Invalid method reference format, expected is "[class-name]#[method-name]()".
class.com.top_logic.element.meta.form.I18NConstants.CONSTRAINT_FAILURE__ATTRIBUTE_MESSAGE = The field "{0}" is invalid: {1}
class.com.top_logic.element.meta.form.controlprovider.I18NConstants.COMPOSITE_FIELD_DIALOG_TITLE__ATTRIBUTE = Attribute ''{0}''
class.com.top_logic.element.meta.form.controlprovider.I18NConstants.COMPOSITE_FIELD_DIALOG_TITLE__OBJECT__ATTRIBUTE = Attribute ''{1}'' of ''{0}''
class.com.top_logic.element.meta.form.controlprovider.I18NConstants.COMPOSITE_FIELD_PROVIDER_DETAILS = Show values
class.com.top_logic.element.meta.form.fieldprovider.I18NConstants.COMPOSITE_FIELD_INNER_FIELD_ERROR = An inner field has some error.
class.com.top_logic.element.meta.form.fieldprovider.I18NConstants.COMPOSITE_FIELD_INNER_FIELD_WARNING = An inner field has some warning.
class.com.top_logic.element.meta.form.fieldprovider.I18NConstants.COMPOSITE_FIELD_LABEL__ATTRIBUTE = Table in {0}
class.com.top_logic.element.meta.form.fieldprovider.I18NConstants.CREATE_COMPOSITION_ROW.header = Create new element
class.com.top_logic.element.meta.form.fieldprovider.I18NConstants.CREATE_COMPOSITION_ROW.message = Select the type of object you want to create
class.com.top_logic.element.meta.form.fieldprovider.I18NConstants.CREATE_COMPOSITION_ROW.title = New element
class.com.top_logic.element.meta.form.fieldprovider.I18NConstants.FORM_EDITOR_NO_GUI_TYPE_AVAILABLE = No model type available.
class.com.top_logic.element.meta.form.fieldprovider.I18NConstants.NEW_ROW_DISABLED_NOT_MULTIPLE__ATTRIBUTE = Attribute ''{0}'' had at most one value.
class.com.top_logic.element.meta.gui.I18NConstants.ERROR_CREATE_UNIQUEID__NUMBER_HANDLER__ATTRIBUTED = Failed to create a unique ID.
class.com.top_logic.element.meta.kbbased.I18NConstants.ERROR_NO_TL_TYPE_FOR_VALUE__TYPE_SPEC__VALUE = ''{0}'' as type for value ''{1}'' is unknown.
class.com.top_logic.element.meta.kbbased.I18NConstants.ERROR_NO_TL_TYPE_FOUND_FOR__VALUE = No type for value ''{0}'' given.
class.com.top_logic.element.meta.kbbased.I18NConstants.ERROR_NO_TL_TYPE__TYPE_SPEC = ''{0}'' is not a model type.
class.com.top_logic.element.meta.kbbased.storage.I18NConstants.ERROR_DUPLICATE_VALUES_NOT_ALLOWED__ATTRIBUE_VALUE = Duplicate values ("{1}") not allowed in attribute "{0}".
class.com.top_logic.element.meta.kbbased.storage.I18NConstants.ERROR_EMPTY_NOT_ALLOWED_FOR_MANDATORY_ATTRIBUTE__ATTRIBUTE = Empty value not allowed for mandatory attribute "{0}".
class.com.top_logic.element.meta.kbbased.storage.I18NConstants.ERROR_LAST_VALUE_MUST_NOT_BE_REMOVED_FROM_MANDATORY_ATTRIBUTE__ATTRIBUTE = Must not remove last value from mandatory attribute "{0}".
class.com.top_logic.element.meta.kbbased.storage.I18NConstants.NOT_APPLICATION_VALUE_TYPE___EXPECTED_ACTUAL = The value has to be of type {0}, but is of type {1}.
class.com.top_logic.element.model.importer.I18NConstants.APPLY_CHANGES = Apply changes
class.com.top_logic.element.model.importer.I18NConstants.ERROR_CANNOT_PARSE_MODEL = Cannot parse model.
class.com.top_logic.element.model.importer.I18NConstants.ERROR_INVALID_MODEL_DEFINITION = Invalid model definition.
class.com.top_logic.element.model.importer.I18NConstants.ERROR_INVALID_MODEL_NAMESPACE__FOUND_XMI_TL = Invalid model format. The namespace {0} is not supported. Supported namespaces are {1} and {2}.
class.com.top_logic.element.model.importer.I18NConstants.NO_MODIFICATIONS = No modifications.
class.com.top_logic.element.model.importer.I18NConstants.THE_FOLLOWING_CHANGES_ARE_APPLIED = The following changes are applied:
class.com.top_logic.element.model.importer.I18NConstants.UPLOAD_MODEL_Definition = Upload model definition
class.com.top_logic.element.structured.util.I18NConstants.COMMAND_DISABLED_FOR_ROOT = Not executable for root nodes
class.com.top_logic.element.structured.util.I18NConstants.ERROR_CREATE_NUMBER_HANDLER_DEFAULT__NUMBER_HANDLER__ATTRIBUTE = Unable to create default value for attribute {1}.
class.com.top_logic.element.structured.util.I18NConstants.ERROR_NUMBER_HANDLER_INVALID_DATE_PATTERN = {0} is not a valid date pattern.
class.com.top_logic.element.structured.util.I18NConstants.ERROR_NUMBER_HANDLER_INVALID_NUMBER_PATTERN = {0} is not a valid number pattern.
class.com.top_logic.element.structured.util.I18NConstants.ERROR_NUMBER_HANDLER_NO_DATE_PATTERN = If {0} is part of the pattern, a valid date pattern must be given.
class.com.top_logic.element.structured.util.I18NConstants.ERROR_NUMBER_HANDLER_NO_LABEL_PROVIDER = If {0} is part of the pattern, a LabelProvider must be given.
class.com.top_logic.element.structured.util.I18NConstants.ERROR_NUMBER_HANDLER_NO_NUMBER_PATTERN = {0} must be part of the pattern.
class.com.top_logic.element.util.dbadmin.I18NConstants.ERROR_CANNOT_DELETE_TYPE_IS_IN_USE = The table cannot be deleted.
class.com.top_logic.element.util.dbadmin.I18NConstants.ERROR_SYSTEM_TABLE_CANNOT_BE_DELETED = A system table cannot be deleted.
class.com.top_logic.element.util.dbadmin.I18NConstants.TYPE_USAGE__LOCATIONS = The table is referenced in the following places: {0}
class.com.top_logic.element.util.dbadmin.I18NConstants.UPDATE_SCHEMA_NOTICE = If you continue, the database schema is adapted in the development environment. You must then restart the application to trigger a migration. If you have made schema changes for which no automatic data migration exists, you must also reset your database so that the schema can be recreated. Are you sure you want to continue?
class.com.top_logic.element.util.dbadmin.I18NConstants.UPDATE_SCHEMA_TITLE = Update DB Schema
class.com.top_logic.element.workItem.favorites.I18NConstants.ADD_TOOLTIP = Save as favorite
class.com.top_logic.element.workItem.favorites.I18NConstants.DISABLED = 
class.com.top_logic.element.workItem.favorites.I18NConstants.IS_FAVORITE = Favorite
class.com.top_logic.element.workItem.favorites.I18NConstants.IS_NOT_FAVORITE = Not a favorite
class.com.top_logic.element.workItem.favorites.I18NConstants.REMOVE_TOOLTIP = Remove from favorites
class.com.top_logic.element.workItem.layout.commandHandler.I18NConstants.ERROR_COMMIT_FAILED = The transaction failed.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.form.template.label = Form
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.form.template.properties.model = Model
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.form.template.properties.name = Name
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.form.template.properties.securityProviderClass = Access control
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.form.template.properties.securityProviderClass.tooltip = Object on which the security is checked
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.form.template.properties.type = Type
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.grid.template.label = Grid
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.grid.template.properties.applyHandler = Apply handler
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.grid.template.properties.detailComponent = Detail component
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.grid.template.properties.dragSource = Drag operation
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.grid.template.properties.editExecutability = Row editing
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.grid.template.properties.fixedColumns = Fixed columns
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.grid.template.properties.fixedColumns.tooltip = Number of fixed columns in the table. The value -1 means that no columns are fixed.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.grid.template.properties.model = Base model
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.grid.template.properties.modelBuilder = Rows
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.grid.template.properties.multiSelection = Multiselection
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.grid.template.properties.name = Name
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.grid.template.properties.securityProviderClass = Name of access control
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.grid.template.properties.securityProviderClass.tooltip = Object on which the security is checked
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.grid.template.properties.showDetailOpener = Show detail opener
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.grid.template.properties.tableDrop = Drop operation
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.gridByType.label = Grid for a given type
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.gridByType.properties.type = Entry type for the component
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.label = Tree Grid
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.applyHandler = Apply handler
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.detailComponent = Detail component
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.dragSource = Drag operation
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.editExecutability = Row editing
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.expandRoot = Expand root
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.expandSelected = Expand node by selection
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.fixedColumns = Fixed columns
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.fixedColumns.tooltip = Number of fixed columns in the table. The value -1 means that no columns are fixed.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.model = Base model
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.modelBuilder = Treebuilder
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.multiSelection = Multiselection
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.name = Name
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.rootVisible = Show root
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.securityProviderClass = Access control
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.securityProviderClass.tooltip = Object on which the security is checked
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.showDetailOpener = Show detail opener
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.element.treegrid.template.properties.tableDrop = Drop operation
com.top_logic.element.boundsec.manager.rule.RoleProvider.Type.inheritance = Inheritance
com.top_logic.element.boundsec.manager.rule.RoleProvider.Type.reference = Reference
com.top_logic.element.config.AttributedTypeConfig.attributes = Attributes
com.top_logic.element.config.ClassConfig.abstract = abstract
com.top_logic.element.config.ClassConfig.final = final
com.top_logic.element.config.ExtendsConfig = Super types
com.top_logic.element.config.ExtendsConfig.scope = Definition
com.top_logic.element.config.ExtendsConfig.type = Super type
com.top_logic.element.config.ObjectTypeConfig.generalizations = Super types
com.top_logic.element.config.ReferenceConfig.ReferenceKind.BACKWARDS = backwards
com.top_logic.element.config.ReferenceConfig.ReferenceKind.FORWARDS = forwards
com.top_logic.element.config.ReferenceConfig.ReferenceKind.NONE = undefined
com.top_logic.element.config.ReferenceConfig.aggregate = aggregation
com.top_logic.element.config.ReferenceConfig.composite = composition
com.top_logic.element.config.ReferenceConfig.end = Association end
com.top_logic.element.config.ReferenceConfig.inverse-reference = Reverse reference
com.top_logic.element.config.ReferenceConfig.kind = Direction
com.top_logic.element.config.ReferenceConfig.navigate = Can navigate
com.top_logic.element.config.RoleAssignment = Role assignment
com.top_logic.element.config.RoleAssignment.group = Group
com.top_logic.element.config.RoleAssignment.role = Role
com.top_logic.element.config.SingletonConfig = Configuration
com.top_logic.element.config.SingletonConfig.name = Name
com.top_logic.element.config.SingletonConfig.role-assignments = Role assignments
com.top_logic.element.config.SingletonConfig.type = Type
com.top_logic.element.config.SingletonConfig@option = Singleton
com.top_logic.element.config.algorithm.LocatorAlgorithmConfig.locator = Locator
com.top_logic.element.config.algorithm.MethodAlgorithmConfig.methodName = Method
com.top_logic.element.config.annotation.ConfigType = Config reference
com.top_logic.element.config.annotation.ConfigType.value = ID
com.top_logic.element.config.annotation.FolderType = Folder
com.top_logic.element.config.annotation.FolderType.value = Folder type
com.top_logic.element.config.annotation.ScopeRef = Type context
com.top_logic.element.config.annotation.ScopeRef.create-type = Type
com.top_logic.element.config.annotation.ScopeRef.scope-ref = Context
com.top_logic.element.config.annotation.TLConstraint = Constraint
com.top_logic.element.config.annotation.TLConstraint.filter = Algorithm
com.top_logic.element.config.annotation.TLOptions = Options
com.top_logic.element.config.annotation.TLOptions.generator = Algorithm
com.top_logic.element.config.annotation.TLReadOnlyColumns = Read only columns
com.top_logic.element.config.annotation.TLReadOnlyColumns.read-only-columns = Columns
com.top_logic.element.config.annotation.TLReadOnlyColumns.read-only-columns.tooltip = Technical names of the columns that cannot be edited.
com.top_logic.element.config.annotation.TLReadOnlyColumns.tooltip = Columns that the user can only read and not edit.
com.top_logic.element.config.annotation.TLSingletons = Singletons
com.top_logic.element.config.annotation.TLSingletons.singletons = Singleton definitions
com.top_logic.element.config.annotation.TLStorage = Storage algorithm
com.top_logic.element.config.annotation.TLStorage.implementation = Algorithm
com.top_logic.element.config.annotation.TLValidityCheck = Validity check
com.top_logic.element.config.annotation.TLValidityCheck.value = Validity range
com.top_logic.element.config.annotation.TLVisibleColumns = Visible Columns
com.top_logic.element.config.annotation.TLVisibleColumns.visible-columns = Columns
com.top_logic.element.config.annotation.Template = Template
com.top_logic.element.config.annotation.Template.value = Path
com.top_logic.element.layout.create.GenericCreateComponent.createType = Type
com.top_logic.element.layout.create.StructureChildTypeOptions = Matching structure nodes
com.top_logic.element.layout.formeditor.ConfigureFormDefinitionAction = Create form
com.top_logic.element.layout.formeditor.definition.FieldDefinition.attribute = Attribute
com.top_logic.element.layout.formeditor.definition.GroupDefinition = Group
com.top_logic.element.layout.formeditor.definition.GroupProperties.collapsible = Collapsible
com.top_logic.element.layout.formeditor.definition.GroupProperties.columns = Columns
com.top_logic.element.layout.formeditor.definition.GroupProperties.content = Group content
com.top_logic.element.layout.formeditor.definition.GroupProperties.cssClass = CSS class
com.top_logic.element.layout.formeditor.definition.GroupProperties.initiallyOpened = Initially opened
com.top_logic.element.layout.formeditor.definition.GroupProperties.label = Title
com.top_logic.element.layout.formeditor.definition.GroupProperties.labelPlacement = Label placement
com.top_logic.element.layout.formeditor.definition.GroupProperties.showBorder = Border
com.top_logic.element.layout.formeditor.definition.GroupProperties.showTitle = Title
com.top_logic.element.layout.formeditor.definition.GroupProperties.style = CSS style
com.top_logic.element.layout.formeditor.definition.GroupProperties.wholeLine = Full width
com.top_logic.element.layout.formeditor.definition.GroupProperties.width = CSS width
com.top_logic.element.layout.formeditor.definition.TLFormDefinition = Form definition
com.top_logic.element.layout.formeditor.definition.TLFormDefinition.edited-type = Type
com.top_logic.element.layout.formeditor.definition.TLFormDefinition.form = Form
com.top_logic.element.layout.formeditor.definition.TabbarDefinition$TabDefinition = Tab
com.top_logic.element.layout.formeditor.definition.TabbarDefinition.tabs = Tabs
com.top_logic.element.layout.formeditor.definition.TextDefinition.label = Translation
com.top_logic.element.layout.formeditor.definition.TitleDefinition = Title
com.top_logic.element.layout.formeditor.definition.TitleDefinition.label = Text
com.top_logic.element.layout.formeditor.definition.TitleDefinition.level = Level
com.top_logic.element.layout.formeditor.definition.TypeDefinition.type = Type
com.top_logic.element.layout.formeditor.definition.TypeDefinition.typeSpec = Type
com.top_logic.element.layout.grid.GridBusinessObjectNaming$GridBusinessObjectName = Business object of grid row {grid-row}
com.top_logic.element.layout.grid.GridTreeTableNode$GridTreeTableNodeNaming$GridNodeName = {path ? {node {path[#sub(#size(path), 1)]}}: {ROOT}}
com.top_logic.element.layout.grid.GridTreeTableNodeLabelNaming$GridNodeLabelName = {foreach(path, " > ")}
com.top_logic.element.layout.grid.NewObject$Naming = new row
com.top_logic.element.layout.grid.OpenDetailDialog$Naming$Name = details of {row}
com.top_logic.element.layout.meta.FormContextModificatorTemplateParameters.readOnlyColumns = Read only columns
com.top_logic.element.layout.meta.FormContextModificatorTemplateParameters.readOnlyColumns.tooltip = Columns that can not be edited.
com.top_logic.element.layout.meta.I18NConstants.ERROR_CREATING_ATTRIBUTE_FAILD__DETAIL = The attribute cannot be created: {0}
com.top_logic.element.layout.meta.TLBackReferenceFormBuilder$BackReferenceModel = Back reference
com.top_logic.element.layout.meta.TLBackReferenceFormBuilder.BackReferenceModel.otherEnd = Forwards reference
com.top_logic.element.layout.meta.TLEnumerationFormBuilder$ClassifierModel = Classifier
com.top_logic.element.layout.meta.TLEnumerationFormBuilder.EditModel.i18nClassifiersConfig = Classifiers
com.top_logic.element.layout.meta.TLModuleFormBuilder.EditModel.name = Name
com.top_logic.element.layout.meta.TLOverrideFormBuilder$OverrideModel = Override
com.top_logic.element.layout.meta.TLPropertyFormBuilder$PropertyModel = Property
com.top_logic.element.layout.meta.TLReferenceFormBuilder$ReferenceModel = Reference
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.generalization-types = Super types
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.module = Module
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.specialization-types = Sub-types
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.EditModel.part-model = Configuration
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.bag = multiple occurrences
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.configuration-interface = Kind
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.mandatory = mandatory
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.multiple = multiple values
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.name = ID
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.ordered = ordered
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.override = override
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.override.tooltip = The attribute is a re-declaration of an attribute with the same ID of a super type.
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.type = Type
com.top_logic.element.layout.scripting.AttributeFieldMatcher = {attribute}{#not(#equals(prefix, 'att')) ? { ({prefix})}}{domain ? { in '{domain}'}}
com.top_logic.element.layout.scripting.AttributeUpdateInput$Op = Enter {value} in {field}.
com.top_logic.element.layout.scripting.ChildNamingScheme$ChildName = child "{name}" of {parent}
com.top_logic.element.layout.scripting.CommentNamingScheme$CommentName = Comment, created in {create-revision}
com.top_logic.element.layout.scripting.MetaAttributeNaming$MetaAttributeName = Attribute '{name}' in {owner}
com.top_logic.element.layout.scripting.StructurePathNamingScheme$StructurePathName = Element '{foreach(label-path, " : ")}' in structure {structure-name}
com.top_logic.element.layout.scripting.StructuredElementNaming$Name = {path ? {Element '{foreach(path, " > ")}'} : {"{singleton-label ? singleton-label : singleton}"}}
com.top_logic.element.layout.scripting.TLObjectByLabelNaming$TLObjectByLabelName = "{object-label}"
com.top_logic.element.layout.tree.StructuredElementTreeDropTarget = Structure element drop
com.top_logic.element.meta.expr.ExpressionEvaluationAlgorithm = Expression evaluation
com.top_logic.element.meta.expr.ExpressionEvaluationAlgorithm.Config.expr = Path expression
com.top_logic.element.meta.expr.internal.AsCollection = Convert to set
com.top_logic.element.meta.expr.internal.AsData = Convert to data object
com.top_logic.element.meta.expr.internal.AsObject = Convert to business object
com.top_logic.element.meta.expr.internal.AssociationDestinations = Link table navigation
com.top_logic.element.meta.expr.internal.AssociationNavigation.Config.association-name = Association
com.top_logic.element.meta.expr.internal.AssociationSources = Reveres link table navigation
com.top_logic.element.meta.expr.internal.Chain = Chain of expressions
com.top_logic.element.meta.expr.internal.Chain.Config.steps = Expressions
com.top_logic.element.meta.expr.internal.Children = Children
com.top_logic.element.meta.expr.internal.Empty = Empty value
com.top_logic.element.meta.expr.internal.FactoryDispatch = Preconfigured expression
com.top_logic.element.meta.expr.internal.FactoryDispatch.Config.name = Expression ID
com.top_logic.element.meta.expr.internal.FactoryDispatch.Config.spec = Configuration
com.top_logic.element.meta.expr.internal.GetValue = Attribute access
com.top_logic.element.meta.expr.internal.GetValue.Config.attribute = Attribute
com.top_logic.element.meta.expr.internal.IndexAccess = Index access
com.top_logic.element.meta.expr.internal.IndexAccess.Config.index = Index
com.top_logic.element.meta.expr.internal.MethodCall = Java method call
com.top_logic.element.meta.expr.internal.MethodCall.Config.method = Method
com.top_logic.element.meta.expr.internal.MethodCall.Config.method.tooltip = Method to call on the base object. Expects input in the form "<tt>[class-name]#[method-name]()</tt>".
com.top_logic.element.meta.expr.internal.NavigateBackwards = Reverse navigation
com.top_logic.element.meta.expr.internal.NavigateBackwards.Config.attribute-name = Attribute
com.top_logic.element.meta.expr.internal.Null = No value
com.top_logic.element.meta.expr.internal.Parent = Parent
com.top_logic.element.meta.expr.internal.Root = Root object
com.top_logic.element.meta.expr.internal.Self = Base object
com.top_logic.element.meta.expr.internal.Singleton = Convert to singleton
com.top_logic.element.meta.expr.internal.StructureContext = Context object
com.top_logic.element.meta.expr.internal.TypeOf = Type cast
com.top_logic.element.meta.expr.internal.TypeOf.Config.module = Module
com.top_logic.element.meta.expr.internal.TypeOf.Config.type-name = Type
com.top_logic.element.meta.form.overlay.TLFormObjectNaming$Name = {edited-object ? {Edited object '{edited-object}'} : {Created object '{domain}'}}
com.top_logic.element.meta.kbbased.NamedConstraint = Preconfigured constraints
com.top_logic.element.meta.kbbased.NamedConstraint$Config = Preconfigured constraints{name ? { "{name}"}}
com.top_logic.element.meta.kbbased.NamedConstraint.Config.name = ID
com.top_logic.element.meta.kbbased.NamedOptions = Preconfigured options{name ? { "{name}"}}
com.top_logic.element.meta.kbbased.NamedOptions$Config = Preconfigured options
com.top_logic.element.meta.kbbased.NamedOptions.Config.name = ID
com.top_logic.element.meta.kbbased.StringSetOptions.Config.locator = Access path
com.top_logic.element.meta.kbbased.storage.DerivedStorage = Computation
com.top_logic.element.meta.kbbased.storage.DerivedStorage.Config.algorithm = Algorithm
com.top_logic.element.meta.kbbased.storage.DirectStorage.Config.default-storage = Fall-back
com.top_logic.element.meta.kbbased.storage.DocumentStorage.Config.folder-path = Folder path
com.top_logic.element.meta.kbbased.storage.ExternalCollectionStorage.Config.iterated = Iterator
com.top_logic.element.meta.kbbased.storage.ExternalStorage.Config.locator = Access path
com.top_logic.element.meta.kbbased.storage.ExternalStorage.Config.parameters = Parameters
com.top_logic.element.meta.kbbased.storage.ExternalStorage.Config.query = Query
com.top_logic.element.meta.kbbased.storage.ExternalStorage.Config.result = Result
com.top_logic.element.meta.kbbased.storage.ForeignKeyStorage.Config.storage-attribute = Table column
com.top_logic.element.meta.kbbased.storage.ForeignKeyStorage.Config.storage-type = Table
com.top_logic.element.meta.kbbased.storage.LinkStorage.Config.storage-mapping = Storage mapping
com.top_logic.element.meta.kbbased.storage.LinkStorage.LinkStorageConfig.table = Table
com.top_logic.element.meta.kbbased.storage.ReverseStorage = Reverse navigation
com.top_logic.element.meta.kbbased.storage.StringSetStorage.Config.result = Result
com.top_logic.element.meta.kbbased.storage.TLItemStorage.Config.storage-mapping = Storage mapping
com.top_logic.element.meta.kbbased.storage.mappings.DirectMapping = Direct mapping
com.top_logic.element.meta.kbbased.storage.mappings.DirectMapping.Config.application-type = Application type
com.top_logic.element.model.diff.config.AddAnnotations = Add annotation "{annotations[0].configuration-interface}" to "{part}".
com.top_logic.element.model.diff.config.AddGeneralization = Create generalization "{generalization}" in "{type}".
com.top_logic.element.model.diff.config.CreateClassifier = Create classifier "{classifier.name}" in "{type}".
com.top_logic.element.model.diff.config.CreateModule = Create module "{module.name}".
com.top_logic.element.model.diff.config.CreateStructuredTypePart = Create attribute "{part.name}" in "{type}".
com.top_logic.element.model.diff.config.CreateType = Create type "{type.name}" in "{module}".
com.top_logic.element.model.diff.config.Delete = Delete "{name}".
com.top_logic.element.model.diff.config.MoveClassifier = Move classifier "{classifier}" before "{before}".
com.top_logic.element.model.diff.config.MoveGeneralization = Move generalization "{generalization}" to "{type}" before "{before}".
com.top_logic.element.model.diff.config.MoveStructuredTypePart = Move attribute "{part}" before "{before}".
com.top_logic.element.model.diff.config.RemoveAnnotations = Remove annotation "{annotations[0].configuration-interface}" from "{part}".
com.top_logic.element.model.diff.config.RemoveGeneralization = Delete generalization "{generalization}" from "{type}".
com.top_logic.element.model.diff.config.RenamePart = Rename attribute "{part}" to "{new-name}".
com.top_logic.element.model.diff.config.UpdateMandatory = Set status "mandatory" from "{part}" to "{mandatory}".
com.top_logic.element.model.importer.XMIModelImportHandler.ModelUpload.model-definition = Model definition
com.top_logic.element.model.provider.EnumDefaultProvider = Constant value
com.top_logic.element.model.provider.EnumDefaultProvider.Config.value = Value
com.top_logic.element.remote.maintenanceModeSoon_(userid) = The system enters maintenance mode soon.
com.top_logic.element.structured.util.ContextAwareSequenceName = Create context
com.top_logic.model.access.TLStorageMapping = Storage mapping
com.top_logic.model.access.TLStorageMapping.implementation = Mapping
com.top_logic.model.annotate.AnnotatedConfig.annotations = Customization
com.top_logic.model.annotate.BooleanAnnotation.value = Value
com.top_logic.model.annotate.InstancePresentation = Display
com.top_logic.model.annotate.InstancePresentation.expanded-icon = Expanded icon
com.top_logic.model.annotate.InstancePresentation.icon = Icon
com.top_logic.model.annotate.InstancePresentation.large-icon = Large icon
com.top_logic.model.annotate.LegacyQualifiedNameForCompatibility = Technical name
com.top_logic.model.annotate.LegacyQualifiedNameForCompatibility.qualified-name = Value
com.top_logic.model.annotate.StringAnnotation.value = Value
com.top_logic.model.annotate.TLCreateVisibility = Visibility during creation
com.top_logic.model.annotate.TLCreateVisibility.value = Value
com.top_logic.model.annotate.TLDefaultValue = Default value
com.top_logic.model.annotate.TLDefaultValue.provider = Provider
com.top_logic.model.annotate.TLDeleteProtected = Delete protection
com.top_logic.model.annotate.TLFullTextRelevant = Full-text search
com.top_logic.model.annotate.TLFullTextRelevant.value = relevant for full-text search
com.top_logic.model.annotate.TLHidden = Hidden
com.top_logic.model.annotate.TLHidden.tooltip = The attribute is not directly displayed in the application, but only used by implementation classes.
com.top_logic.model.annotate.TLI18NKey = I18N key
com.top_logic.model.annotate.TLI18NKey.value = ID
com.top_logic.model.annotate.TLRange = Range
com.top_logic.model.annotate.TLRange.max = Maximum
com.top_logic.model.annotate.TLRange.min = Minimum
com.top_logic.model.annotate.TLSearchRange = Search range
com.top_logic.model.annotate.TLSearchRange.value = can be searched as range
com.top_logic.model.annotate.TLSearchRelevant = Relevance for search
com.top_logic.model.annotate.TLSearchRelevant.value = relevant for search
com.top_logic.model.annotate.TLSize = Size constraint
com.top_logic.model.annotate.TLSize.lower-bound = Minimum length
com.top_logic.model.annotate.TLSize.upper-bound = Maximum length
com.top_logic.model.annotate.TLSortOrder = Priority
com.top_logic.model.annotate.TLSortOrder.value = Value
com.top_logic.model.annotate.TLUpdateMode = Update
com.top_logic.model.annotate.TLUpdateMode.Mode.UPDATE = Update on start up
com.top_logic.model.annotate.TLUpdateMode.Mode.USE = No update
com.top_logic.model.annotate.TLUpdateMode.value = Value
com.top_logic.model.annotate.TLVisibility = Visibility in editor
com.top_logic.model.annotate.TLVisibility.value = Value
com.top_logic.model.annotate.Visibility.EDITABLE = editable
com.top_logic.model.annotate.Visibility.HIDDEN = hidden
com.top_logic.model.annotate.Visibility.READ_ONLY = read-only
com.top_logic.model.annotate.security.RoleConfig = Role definition
com.top_logic.model.annotate.security.TLRoleDefinitions = Roles
com.top_logic.model.annotate.security.TLRoleDefinitions.roles = Role definitions
com.top_logic.model.annotate.ui.BooleanDisplay = Boolean display
com.top_logic.model.annotate.ui.BooleanDisplay.presentation = Presentation
com.top_logic.model.annotate.ui.BooleanPresentation.CHECKBOX = Checkbox
com.top_logic.model.annotate.ui.BooleanPresentation.RADIO = Radio buttons
com.top_logic.model.annotate.ui.BooleanPresentation.SELECT = Select field
com.top_logic.model.annotate.ui.Format = Format
com.top_logic.model.annotate.ui.Format.format = Format
com.top_logic.model.annotate.ui.Format.format-ref = Format name
com.top_logic.model.annotate.ui.OptionsDisplay = Presentation in select dialog
com.top_logic.model.annotate.ui.OptionsDisplay.value = Presentation
com.top_logic.model.annotate.ui.OptionsPresentation.PLAIN = Simple
com.top_logic.model.annotate.ui.OptionsPresentation.TABLE = Table
com.top_logic.model.annotate.ui.ReferenceDisplay = Reference display
com.top_logic.model.annotate.ui.ReferenceDisplay.value = Presentation
com.top_logic.model.annotate.ui.ReferencePresentation.DROP_DOWN = Select field
com.top_logic.model.annotate.ui.ReferencePresentation.POP_UP = Select dialog
com.top_logic.model.annotate.ui.ReferencePresentation.RADIO = Radio buttons
com.top_logic.model.annotate.ui.ReferencePresentation.TABLE = Table
com.top_logic.model.config.JavaClass = Implementation class
com.top_logic.model.config.JavaClass.class-name = Class name
com.top_logic.model.config.JavaClass.interface-name = Interface name
com.top_logic.model.config.NamedPartConfig.fullQualifiedName = Full qualified name
com.top_logic.model.config.ScopeConfig.types = Inner types
com.top_logic.model.config.TypeConfig.name = ID
com.top_logic.model.config.annotation.EnumScope = Classification scope
com.top_logic.model.config.annotation.EnumScope.value = Value
com.top_logic.model.config.annotation.MainProperties = Default columns
com.top_logic.model.config.annotation.MainProperties.properties = Columns
com.top_logic.model.config.annotation.MainProperties.properties.tooltip = Comma-separated list of columns.
com.top_logic.model.config.annotation.MultiSelect = Multi select
com.top_logic.model.config.annotation.SystemEnum = System classification
com.top_logic.model.config.annotation.TableName = Database table
com.top_logic.model.config.annotation.TableName.name = Table name
com.top_logic.model.config.annotation.UnorderedEnum = Unordered classification
com.top_logic.model.internal.ConfigurationStorageMapping.Config.config-interface = Configuration type
com.top_logic.model.provider.ConfiguredConstantDefaultProvider.Config.value = Value
commandGroup.EmbeddedDocDelete = Delete documents
commandGroup.EmbeddedDocPrint = Print documents
commandGroup.EmbeddedDocRead = Read documents
commandGroup.EmbeddedDocWrite = Write documents
commandGroup.createWorkItem = Add to work basket
commandGroup.ownerWrite = Modify search
commandGroup.publish = Publish search
cos.admin.mandator.edit.additional = Additional information
cos.admin.mandator.edit.attributes.key = Base information
cos.admin.mandator.edit.displayDialog_createMandator = New...
cos.admin.mandator.edit.displayDialog_createMandator.title = Create new mandator
cos.admin.mandator.edit.displayDialog_createMandator.tooltip = Opens a dialog for creating a new mandator.
cos.admin.mandator.edit.elementName = Name
cos.admin.mandator.edit.elementOrder = Position before
cos.admin.mandator.edit.title = Edit mandator information
cos.mandator.create.additional = Additional information
cos.mandator.create.message = Please specify a name and an unique ID for the new mandator.
cos.mandator.create.model = Superior mandator
cos.mandator.create.name = Name
cos.mandator.create.numberHandlerID = ID
cos.mandator.create.title = Create mandator
cos.mandator.document.message = Documents
cos.mandator.document.tabber = Documents
cos.mandator.overview.message = Overview
cos.mandator.overview.tabber = Overview
cos.mandator.tabber = Organization
cos.mandator.tree.title = Mandator tree
displayDialog_ContractExportDialog.title = Export
element.accessRight.option.none = ---
element.accessRight.option.read = Read
element.accessRight.option.readExport = Read / Export
element.accessRight.option.write = Write
element.accessRight.option.writeExport = Write / Export
element.admin.fuctional.attRoleClass.tabber = Category Access
element.admin.fuctional.attSec.tabber = Attribute Categories
element.attributes.additional = Further information
element.comments.commentTable.creator = Author
element.comments.commentTable.date = Date
element.comments.commentTable.editCommentOpenerHandler = Edit...
element.comments.commentTable.editCommentOpenerHandler.title = Edit Comment
element.comments.commentTable.head = Comments
element.comments.commentTable.name = Comments
element.comments.commentTable.openNewCommentDialog = New comment
element.comments.commentTable.openNewCommentDialog.title = Create new comment
element.comments.commentTable.quoteCommentOpenerHandler = Quote...
element.comments.commentTable.quoteCommentOpenerHandler.title = Quote Comment
element.comments.commentTable.quotetext = Originally posted by
element.comments.commentTable.title = Comments
element.comments.new.dialog.comments = Comment
element.comments.new.dialog.editCommentMessage = Edit an existing comment.
element.comments.new.dialog.editCommentTitle = Edit comment
element.comments.new.dialog.header = Comment
element.comments.new.dialog.newCommentMessage = Create a new comment.
element.comments.new.dialog.newCommentTitle = Create comment
element.comments.new.dialog.quoteCommentMessage = Quote an existing comment.
element.comments.new.dialog.quoteCommentTitle = Quote comment
element.comments.new.dialogaddComment = Save
element.comments.new.dialogcloseDialog = Cancel
element.concurrency.lockdemo.relax = Cancel
element.concurrency.lockdemo.relax.tooltip = Cancel changes and release context
element.concurrency.lockdemo.renewTokenContext = Apply
element.concurrency.lockdemo.renewTokenContext.tooltip = Apply changes, renew the token context, and stay in edit mode
element.concurrency.lockdemo.saveAndReleaseTokenContext = Save
element.concurrency.lockdemo.saveAndReleaseTokenContext.tooltip = Save changes and release token context
element.concurrencyDemo = Concurrency Demo
element.dialog.folder.upload.message = Select a document
element.dialog.folder.upload.title = Document upload
element.editAttributes = Attribute
element.editMetaAttributes = Attributes
element.editProduct = Products
element.editStructure = Structure
element.layout.meta.search.title = Search result
element.mandator.edit.elementRemove.disabled.hasChildren = This mandator still has submandator.
element.mandator.edit.elementRemove.disabled.isRefered = This mandator is still in use.
element.meta.EnumerationEditor.title = Enumeration properties
element.meta.EnumerationEditorTab = Properties
element.meta.EnumerationTab = Enumeration
element.meta.FormEditor.formTemplates = Form templates
element.meta.FormEditorForm.title = Form editor
element.meta.InstanceBrowserTab = Instances
element.meta.ModuleContainerEditor.title = Module container properties
element.meta.ModuleContainerEditorTab = Properties
element.meta.ModuleEditor.title = Module properties
element.meta.ModuleEditorTab = Properties
element.meta.ModuleTab = Module
element.meta.NullEditor.title = Eigenschaften
element.meta.NullEditorTab = Eigenschaften
element.meta.StructuredTypeEditor.title = Type properties
element.meta.StructuredTypeEditorTab = Properties
element.meta.TypePartEditorTab = Attributes
element.meta.attribute.backReference.create = Create
element.meta.attribute.backReference.create.dialog = New backwards reference...
element.meta.attribute.backReference.create.dialog.title = Create backwards reference
element.meta.attribute.edit.attAdditional = Configuration
element.meta.attribute.edit.attAnnotations = Annotations
element.meta.attribute.edit.attApply = Apply attribute
element.meta.attribute.edit.attApply.tooltip = Saves changes
element.meta.attribute.edit.attBag = Bag
element.meta.attribute.edit.attClassList = Classification List
element.meta.attribute.edit.attClassListName = Classification List
element.meta.attribute.edit.attClassListNameI18N = Translation
element.meta.attribute.edit.attCreate = Create attribute
element.meta.attribute.edit.attCreate.tooltip = Create a new attribute
element.meta.attribute.edit.attDelProt = Delete protected
element.meta.attribute.edit.attKOType = Business object type
element.meta.attribute.edit.attMandatory = Mandatory
element.meta.attribute.edit.attMetaElement = Element type
element.meta.attribute.edit.attMultiple = Multiple reference
element.meta.attribute.edit.attName = Name
element.meta.attribute.edit.attRefType = Target type
element.meta.attribute.edit.attRemove = Delete attribute
element.meta.attribute.edit.attRemove.confirm = Choose OK to delete the attribute. Otherwise Cancel.
element.meta.attribute.edit.attRemove.disabled.deleteProtected = This attribute is delete protected.
element.meta.attribute.edit.attRemove.tooltip = Delete attribute
element.meta.attribute.edit.attSortOrder = Position
element.meta.attribute.edit.attSorted = Sorted reference
element.meta.attribute.edit.attStorage = Storage implementation
element.meta.attribute.edit.attTargetName = Attribute name in target type
element.meta.attribute.edit.attType = Type
element.meta.attribute.edit.attValidity = Validity
element.meta.attribute.edit.attcheckList = Checklist
element.meta.attribute.edit.basic = Basic information
element.meta.attribute.edit.closeDialog = Cancel
element.meta.attribute.edit.closeDialog.tooltip = Close the dialog without creating an attribute
element.meta.attribute.edit.create.title = New attribute
element.meta.attribute.edit.de = Name (German)
element.meta.attribute.edit.displayDialog_createMetaAttr = New attribute...
element.meta.attribute.edit.displayDialog_createMetaAttr.title = Create attribute
element.meta.attribute.edit.displayDialog_createMetaAttr.tooltip = Create a new attribute with the defined values.
element.meta.attribute.edit.en = Name (English)
element.meta.attribute.edit.i18n.de = German
element.meta.attribute.edit.i18n.en = English
element.meta.attribute.edit.i18n.name = Translations
element.meta.attribute.edit.kotypename.Address = Address
element.meta.attribute.edit.kotypename.Comment = Comment
element.meta.attribute.edit.kotypename.Person = User account
element.meta.attribute.edit.name.alreadyExists = An attribute with name ''{0}'' already exists. Please choose another name.
element.meta.attribute.edit.name.regex = Please use letters and numbers only. Special characters and symbols are not allowed.
element.meta.attribute.edit.noModel = No attribute selected
element.meta.attribute.edit.nothing = Cancel
element.meta.attribute.edit.nothing.tooltip = Undo your last changes
element.meta.attribute.edit.referenceAttribute = Reference attribute...
element.meta.attribute.edit.title = Properties
element.meta.attribute.edit.typename.32772 = Calculated
element.meta.attribute.override.create = Create
element.meta.attribute.override.create.dialog = New override...
element.meta.attribute.override.create.dialog.title = Create override
element.meta.attribute.property.create = Create
element.meta.attribute.property.create.dialog = New property...
element.meta.attribute.property.create.dialog.title = Create property
element.meta.attribute.reference.create = Create
element.meta.attribute.reference.create.dialog = New reference...
element.meta.attribute.reference.create.dialog.title = Create reference
element.meta.attribute.table.exportName = Attributes
element.meta.attribute.table.id = ID
element.meta.attribute.table.isBag = duplicates possible
element.meta.attribute.table.isDerived = derived
element.meta.attribute.table.isMandatory = mandatory
element.meta.attribute.table.isMultiple = multiple values
element.meta.attribute.table.isOrdered = ordered
element.meta.attribute.table.listEmpty = No attribute
element.meta.attribute.table.name = Name
element.meta.attribute.table.owner = Definition
element.meta.attribute.table.showAll = Show attributes of super types
element.meta.attribute.table.title = Attributes
element.meta.attribute.table.type = Type
element.meta.attribute.typename.BINARY = Binary data
element.meta.attribute.typename.BOOLEAN = Checkbox
element.meta.attribute.typename.CALCULATED = Calculated
element.meta.attribute.typename.CHECKLIST = Checklist
element.meta.attribute.typename.CLASSIFICATION = Classification
element.meta.attribute.typename.COLLECTION = Business object collection
element.meta.attribute.typename.COMPLEX = Complex
element.meta.attribute.typename.DAP = External data object
element.meta.attribute.typename.DAP_COLLECTION = External data objects
element.meta.attribute.typename.DAP_FALLB = External data objects (fallback)
element.meta.attribute.typename.DATE = Datum
element.meta.attribute.typename.DOCUMENT = Document
element.meta.attribute.typename.FLOAT = Floating point number
element.meta.attribute.typename.GALLERY = Image gallery
element.meta.attribute.typename.HISTORIC_WRAPPER = Historic business object
element.meta.attribute.typename.LIST = Business object list
element.meta.attribute.typename.LONG = Number
element.meta.attribute.typename.SINGLEWRAPPER = Business object
element.meta.attribute.typename.SINGLE_CLASSIFICATION = Classification (single)
element.meta.attribute.typename.SINGLE_REFERENCE = Typed business object
element.meta.attribute.typename.SINGLE_STRUCTURE = Structured element
element.meta.attribute.typename.STRING = Text
element.meta.attribute.typename.STRING_SET = Set of texts
element.meta.attribute.typename.STRUCTURE = Structure element
element.meta.attribute.typename.TYPEDSET = Typed business object collection
element.meta.attribute.typename.WEBFOLDER = WebFolder
element.meta.attribute.typename.WRAPPER = Typed business object
element.meta.attribute.typename.notDefined = Attribute type {0}
element.meta.createEnumeration.Layout.title = New enumeration
element.meta.createModule.Layout.title = New module
element.meta.createStructuredType.Layout.title = New business object type
element.meta.element.table.listEmpty = No MetaElement
element.meta.element.table.meType = MetaElement
element.meta.element.table.typename.Mandator.all = Mandators
element.meta.element.table.typename.NewsEntry = News Entries
element.meta.element.table.typename.StructuredElement.MetaElement = Structured elements
element.meta.element.table.typename.WorkItem = Task
element.meta.element.table.typename.metaElementConfigDescriptor = Configuration descriptor
element.meta.metaElementTree.newEnumeration = New enumeration...
element.meta.metaElementTree.newModule = New module...
element.meta.metaElementTree.newType = New type...
element.meta.search.create.closeDialog = Cancel
element.meta.search.create.closeDialog.tooltip = Bricht den Anlegeprozess ab.
element.meta.search.create.message = Please define a name for the new query. After creating the new query you can configure it an store the changes.
element.meta.search.create.name = Name
element.meta.search.create.newStoredQuery = Create
element.meta.search.create.newStoredQuery.tooltip = Legt eine neue Anfrage mit dem angegebenen Namen an.
element.meta.search.create.publish = Details for publishing
element.meta.search.create.publishGroup = Publication details
element.meta.search.create.publishQuery = publish
element.meta.search.create.title = Store query
element.meta.search.create.useValues = Apply values
element.meta.search.create.useValues.tooltip = Übernimmt die aktuell eingegebenen Werte der Suchmaske.
element.meta.search.create.visibleGroups = Groups
element.meta.search.create.visibleGroups.tooltip = Users within the selected groups can see this query.
element.meta.search.create.visibleRoles.tooltip = Users assigned to the selected group,<br>can see this report.
element.meta.search.createQuery = Create Query
element.meta.search.createQuery.tooltip = Create a new query
element.meta.search.deleteQuery = Delete Query
element.meta.search.deleteQuery.tooltip = Delete an existing query
element.meta.search.displayDialog_newStoredQueryDialog = New Query...
element.meta.search.error = An error occurred during search.
element.meta.search.loadQuery = Load Query
element.meta.search.loadQuery.tooltip = Load a predefined query
element.meta.search.maxSearch = Expand
element.meta.search.maxSearch.tooltip = Switch to complex search mode, where you can search for all value.
element.meta.search.minSearch = Collapse
element.meta.search.minSearch.tooltip = Switch to basic search mode, where you can specify the most important values.
element.meta.search.nothing = Clear
element.meta.search.nothing.tooltip = Reset the search mask
element.meta.search.query.save.query.failed = Unable to save query
element.meta.search.query.save.query.notSelected = No query selected.
element.meta.search.query.save.query.validate = Entered data not valid, please check input.
element.meta.search.query.search.failed = Searching failed
element.meta.search.saveQuery = Save Query
element.meta.search.saveQuery.tooltip = Save the current query
element.meta.search.search = Search
element.meta.search.search.tooltip = Start a search with the defined parameters
element.meta.search.storedquery = Query
element.meta.search.storedquery.title = Stored Queries
element.meta.search.storedqueryname = Name for the new query
element.meta.search.switchSearch = Basic/Extended query
element.meta.search.switchSearch.tooltip = Switch between the simple and complex search.
element.meta.search.table.description = Description
element.meta.search.table.firstPage = Jump to first page
element.meta.search.table.lastPage = Jump to last page
element.meta.search.table.listEmpty = No matches found
element.meta.search.table.name = Name
element.meta.search.table.nextPage = Page forward
element.meta.search.table.previousPage = Page back
element.meta.search.table.type = Type
element.meta.search.title = Searchparameter
element.meta.validity.tagLabel.alwaysValid = this Information is always valid.
element.meta.validity.tagLabel.default = This information has to be clarified till {0,date,short}.
element.meta.validity.tagLabel.expired = This Information is out of date since {0,date,short}.
element.meta.validity.tagLabel.none = This information doesn't have to be clarified.
element.meta.validity.tagLabel.readOnly = This information can't be clarified manually.
element.meta.validity.tagLabel.upToDate = This Information is valid till {0,date,short}.
element.metaAttributeTag = Attribute
element.metaattributes.title = Properties
element.newspage.close = [Close]
element.newspage.entryDetail = TopLogic News Entry
element.newspage.first = First Page
element.newspage.header = TopLogic Headlines
element.newspage.last = Last Page
element.newspage.message = Alongside news, this is where the user's immediate tasks are located. Current contract statuses and reminders indicated by traffic-light symbols drawing attention to imminent notice periods provide a clear overall view. From this point the user can navigate directly to his/her contracts.
element.newspage.more = [more...]
element.newspage.next = Next Page
element.newspage.of = of
element.newspage.page = Page
element.newspage.prev = Previous Page
element.overview = Overview
element.product.edit.addToEnd = At the end
element.product.edit.displayDialog_createProductElement = New...
element.product.edit.displayDialog_createProductElement.tooltip = Open a dialog for creating a new subelement.
element.product.edit.elementName = Name
element.product.edit.elementOrder = Position before
element.product.edit.elementType = Type
element.product.edit.nothing = Cancel
element.product.edit.nothing.tooltip = Undo the current changes.
element.product.edit.title = Product
element.remote.maintenanceMode(userid) = The system is in maintenance mode.
element.remote.personGetFails(userid) = The user account with Login-ID "{0}" is marked as invalid in the system.
element.remote.personGetUnknown(userid) = A user account with Login-ID "{0}" is unknown to the system.
element.rule.areReferredTo = Is referred to by other Objects
element.rule.isReferredTo = Is referred to as {0}
element.search.Date = Date partition
element.search.Same = same partition
element.search.String = string partition
element.search.additional = Extended parameters
element.search.attributeField = Attribute
element.search.attributes.columns = Columns
element.search.attributes.columns.this = Name
element.search.basic = Standard parameters
element.search.displayDialog_ExportDialog = Export ...
element.search.displayDialog_ExportDialog.tooltip = Export of results
element.search.displayDialog_NewStoredQueryDialog = Save as...
element.search.displayDialog_NewStoredQueryDialog.title = Save as
element.search.displayDialog_NewStoredQueryDialog.tooltip = Opens a dialog for saving the defined query with another name.
element.search.displayDialog_PublishStoredQueryDialog = Publish
element.search.displayDialog_PublishStoredQueryDialog.title = Publish query
element.search.displayDialog_PublishStoredQueryDialog.tooltip = Opens a dialog for publishing a saved query.
element.search.execute = Search
element.search.execute.tooltip = Execute the defined search.
element.search.export.extended = Extended export...
element.search.export.message = Selection of export configuration
element.search.export.normal = Export...
element.search.export.security = Security
element.search.fullText = Key words
element.search.fullTextExactMatch = Exact match
element.search.fullTextMode = All words
element.search.invalid = Your query is invalid and cannot be stored.
element.search.mandator = Mandator
element.search.metaElement = Business object
element.search.pfField = partition function
element.search.publishGroup = Publication details
element.search.publishQuery = Publish
element.search.query.create = Save
element.search.query.create.query.failed = Saving of the query failed.
element.search.query.create.tooltip = Save the new query.
element.search.query.delete = Delete...
element.search.query.delete.confirm = To delete the currently selected stored query, press "OK".
element.search.query.delete.failed = The deleting of the query failed with an error.
element.search.query.delete.tooltip = Delete the query currently selected.
element.search.query.reset.failed = The resetting of the current query failed with an error.
element.search.query.save = Save
element.search.query.save.input.check = The input is invalid, storing has been canceled.
element.search.query.save.query.failed = The storing of the query failed with an error.
element.search.query.save.query.notSelected = Unable to create a query for storage.
element.search.query.save.tooltip = Save the changes made to the current query.
element.search.query.switch = Change scope
element.search.query.switch.failed = Changing the search scope failed with an error.
element.search.query.switch.toExtended = Extended search
element.search.query.switch.toExtended.tooltip = Switch the query display between "default" and "extended".
element.search.query.switch.toNormal = Default search
element.search.query.switch.toNormal.tooltip = Switch the query display between "default" and "extended".
element.search.query.switch.tooltip = Switch the query display between "normal" and "expert".
element.search.reminderState = Reminder state
element.search.reminders = Reminder
element.search.reporting = Report details
element.search.reset = Reset...
element.search.reset.confirm = To reset the changes done to the current query, press "OK".
element.search.reset.failed = Resetting the query fails.
element.search.reset.tooltip = Reset the values in the search fields to the default values.
element.search.searchAttributed = Search
element.search.searchResultTabber = Search result
element.search.storedQuery = Query
element.search.table.export.file.name = Search result.xls
element.search.table.name = Name
element.search.table.validityState = State
element.search.tableColumns = Columns
element.search.title = Search
element.search.visibleGroups = Groups
element.search.visibleRoles.tooltip = Users within the selected groups can see this query.
element.searchAttributes = Attribute Search
element.state.green = Green
element.state.green.image = theme:BEACON_BALLS_GREEN
element.state.red = Red
element.state.red.image = theme:BEACON_BALLS_RED
element.state.white = White
element.state.white.image = theme:BEACON_BALLS_WHITE
element.state.yellow = Yellow
element.state.yellow.image = theme:BEACON_BALLS_YELLOW
element.structure.edit._parameter_type = Type
element.structure.edit.addToEnd = To end
element.structure.edit.additional = Additional attributes
element.structure.edit.atEnd = At end
element.structure.edit.basic = Base information
element.structure.edit.closeDialog = Cancel
element.structure.edit.closeDialog.tooltip = Close this dialog without creating a new element.
element.structure.edit.createNewSubelement = New subelement for
element.structure.edit.create_parameter_type = Type
element.structure.edit.displayDialog_createStructuredElement = New...
element.structure.edit.edit = Edit
element.structure.edit.elementCreate = Create
element.structure.edit.elementCreate.tooltip = Commit new object
element.structure.edit.elementName = Name
element.structure.edit.elementOrder = Position before
element.structure.edit.elementRemove = Delete...
element.structure.edit.elementRemove.confirm = Choose OK to delete the element. Otherwise Cancel.
element.structure.edit.elementRemove.tooltip = Delete the currently selected element.
element.structure.edit.elementSave = Save
element.structure.edit.elementSave.tooltip = Saves changes, leaves edit mode
element.structure.edit.elementType = Type
element.structure.edit.error = Editing of structure failed.
element.structure.edit.layout.openAsDialog = New...
element.structure.edit.layout.openAsDialog.tooltip = Creates a new element.
element.structure.edit.layout.title = Create new element
element.structure.edit.marker = Row marker
element.structure.edit.message = Please specify the data for the new sub element and press the "Create" button afterwards. To cancel the creation, press the "Cancel" button.
element.structure.edit.metaattributes.title = Additional information
element.structure.edit.name = Name
element.structure.edit.newName = New element
element.structure.edit.nothing = Cancel
element.structure.edit.nothing.tooltip = Undo the current changes.
element.structure.edit.title = Edit element
element.structure.edit.type = Type
element.typename.BooleanMetaAttribute = Attribute (Boolean)
element.typename.CalculatedPrimitiveMetaAttribute = Attribute (Calculated)
element.typename.ClassificationMetaAttribute = Attribute (Classification)
element.typename.ComplexMetaAttribute = Attribute (Complex)
element.typename.DAPMetaAttribute = Attribute (external record)
element.typename.DAPSetMetaAttribute = Attribute (set of external records)
element.typename.DateMetaAttribute = Attribute (Date)
element.typename.DocumentMetaAttribute = Attribute (Document)
element.typename.FloatMetaAttribute = Attribute (Float)
element.typename.HistoricWrapperMetaAttribute = Attribute (Historic business object)
element.typename.LongMetaAttribute = Attribute (Number)
element.typename.NewsEntries.NewsEntry = News entry
element.typename.RoleRule = Security rule
element.typename.StringMetaAttribute = Attribute (Zeichenkette)
element.typename.StringSetMetaAttribute = Attribute (set of character strings)
element.typename.StructuredElementMetaAttribute = Attribute (Structured element)
element.typename.StructuredElementSetMetaAttribute = Attribute (Structure element)
element.typename.TypedWrapperMetaAttribute = Attribute (Business object)
element.typename.TypedWrapperSetMetaAttribute = Attribute (Typed business object)
element.typename.WebFolderMetaAttribute = Attribute (Folder)
element.typename.WrapperListMetaAttribute = Attribute (Business object list)
element.typename.WrapperMetaAttribute = Attribute (Business object)
element.typename.WrapperSetMetaAttribute = Attribute (Business object collection)
element.typename.java.lang.Boolean = Boolean
element.workItem.favorites.isFavorite = Favorite
element.workItem.favorites.isNotFavorite = 
element.wrapper.comment.tooltip = {0}</br>{1}
error_code_com.top_logic.element.layout.genericimport.GenericDataImportController$GenericDataImportUploadHandler.genericImport.genericImportUpload.invalidFileType = This file {0} is not supported.
error_code_com.top_logic.element.layout.genericimport.GenericDataImportController$GenericDataImportUploadHandler.genericImport.genericImportUpload.noFile = No file selected.
error_code_com.top_logic.element.layout.grid.GridComponent.exportError = During export operation an internal error occurred. The operation has been aborted.
error_code_com.top_logic.element.layout.meta.MetaAttributeCreateHandler.create.failed = Creating the defined attribute failed.
error_code_com.top_logic.element.layout.meta.search.NewQueryComponent$NewQueryCommandHandler.element.search.query.create.failed = Saving of the query failed with an error.
error_code_com.top_logic.element.layout.meta.search.NewQueryComponent$NewQueryCommandHandler.element.search.query.create.input.check = The input is invalid, creating has been canceled.
error_code_com.top_logic.element.layout.table.renderer.AttributedFieldProvider.field.create = Creating a field for attribute ''{1}'' failed.
error_code_com.top_logic.element.layout.table.renderer.AttributedFieldProvider.field.create.unsupported = Creating a field for type ''{2}'' (attribute: ''{1}'') is not supported.
error_code_com.top_logic.element.meta.form.tag.GroupedMetaInputTag.init.update.null = Initializing the attribute field "{0}" didn't succeeds because of a configuration problem.
error_code_com.top_logic.element.meta.form.tag.GroupedMetaLabelTag.name.set = The setting of name "{0}" for an input field failed with an error.
error_codecom.top_logic.element.layout.meta.kbbased.query.save.failed = Unable to save query
ewe.desc.translation = Description
ewe.name.translation = Name
genericImport.attributeError.notNull = The value must not be null.
genericImport.attributeError.readOnly = This attribute is read only.
genericImport.commandChain_commandChain_configureGDIConverter_StartImport_switchAssistentForward = Start import.
genericImport.commandChain_commandChain_configureGDIConverter_StartImport_switchAssistentForward.tooltip = Imports the data according to the selected configuration.
genericImport.commandChain_genericImportUpload_switchAssistentForward = Upload file.
genericImport.commandChain_genericImportUpload_switchAssistentForward.tooltip = Loads the file into the system and continues to the configuration step.
genericImport.config.columnConfig = Column assignment
genericImport.config.commit = Save changes?
genericImport.config.create = Create new object?
genericImport.config.fkeySel = Foreign key column
genericImport.config.legend = Configuration
genericImport.config.message = The mass data upload is highly configurable.
genericImport.config.metaElement = Business object
genericImport.config.update = Update existing objects?
genericImport.import.progressFinished = Import finished
genericImport.import.progressHeader = Progress of import
genericImport.import.progressInfo = Progress of import
genericImport.setupAssistent.failed = Setup of the import assistant failed.
genericImport.tabber = Mass data upload
genericImport.upload.message = Choose a file that contains the data to import.
genericImport.upload.title = Choose file
genericImport.upload.upload = Choose file
layout.attributed.edit.additional = Additional attributes
layout.attributed.edit.basic = Base information
layout.element.attributed.new = New...
layout.element.attributed.new.additional = Additional attributes
layout.element.attributed.new.basic = Base information
layout.element.grid.Grid.createAttributedGrid = Create
layout.element.grid.Grid.createAttributedGrid.tooltip = Create a new object.
layout.element.grid.Grid.title = 
layouts.element.create.genericCreate.createType = Type
layouts.element.create.genericCreate.title = Create form
layouts.element.meta.InstanceBrowser.exportName = objects
layouts.element.meta.InstanceBrowser.newInstance = Create new instance.
layouts.element.meta.InstanceBrowser.table.title = Instances
layouts.element.meta.metaElementTree.abstract = abstract
layouts.element.meta.metaElementTree.configExport = Export configuration
layouts.element.meta.metaElementTree.configExport.tooltip = Exports the selected element to TopLogic model XML.
layouts.element.meta.metaElementTree.configExtract = Transfer to IDE
layouts.element.meta.metaElementTree.configExtract.tooltip = Updates the configuration of the selected module in the development environment.
layouts.element.meta.metaElementTree.exportName = Application types
layouts.element.meta.metaElementTree.final = final
layouts.element.meta.metaElementTree.id = ID
layouts.element.meta.metaElementTree.importModel = Import model.
layouts.element.meta.metaElementTree.module = Module
layouts.element.meta.metaElementTree.name = Name
layouts.element.meta.metaElementTree.scope = Definition
layouts.element.meta.metaElementTree.title = Object types
layouts.element.table.RevisionCompareTreeTable.tabber = Revision comparison
layouts.element.table.RevisionCompareTreeTable.title = Revision comparison
main.admin.editSecurityProfiles.component.exportExcel = Export to Excel...
main.admin.editSecurityProfiles.component.exportExcel.tooltip = Exports the shown information in Excel format.
main.admin.editSecurityProfiles.component.securityExport = Export to XML...
main.admin.editSecurityProfiles.component.securityExport.tooltip = Exports the shown information in XML format.
main.admin.showSecurity.component.failedUpdate = Error while requesting the roles
main.admin.showSecurity.component.field_objects = Business Objects
main.admin.showSecurity.component.field_persons = User account
main.admin.showSecurity.component.field_result.bus_obj = business object ID
main.admin.showSecurity.component.field_result.meType = Meta element
main.admin.showSecurity.component.field_result.moType = Meta object
main.admin.showSecurity.component.field_result.reason = Rule ID
main.admin.showSecurity.component.field_result.role = Role
main.admin.showSecurity.component.field_result.secParent = Security parent
main.admin.showSecurity.component.field_result.secParents = All security parents
main.admin.showSecurity.component.field_result.target = Group
main.admin.showSecurity.component.field_result.title = Right entries
main.admin.showSecurity.component.field_result.type = Type
main.admin.showSecurity.component.field_result.wrapper = Business object
main.admin.showSecurity.component.field_roles = Roles
main.admin.showSecurity.component.field_rules = Rules
main.admin.showSecurity.component.field_simple = Show only database entries
main.admin.showSecurity.component.field_types = Typ
main.admin.showSecurity.component.pageMessage = Warning: The wrapper resolving may last several minutes, if the selected user account has roles on many objects or if only a ME type filter is set.
main.admin.showSecurity.component.resultMessage = {0} Entries. Query duration: {1}
main.admin.showSecurity.component.resultMessage1 = {0} Entry. Query duration: {1}
main.admin.showSecurity.component.title = Show current roles
main.admin.showSecurity.component.tooltip.dirty = Invalid assignment. Please reinitialize the security!
main.admin.showSecurity.component.tooltip.hasRole = Direct assignment
main.admin.showSecurity.component.tooltip.invalidID = Invalid rule ID
main.admin.showSecurity.component.tooltip.unknown = Unknown assignment
main.admin.showSecurity.tabber = Verify Roles
model.SecurityStructure.SecurityRoot = SecurityRoot
model.WorkItem.WorkItem = Working elements
model.WorkItem.WorkItem.WorkItem = Working element
model.WorkItem.WorkItem.WorkItem.assignees = Assignees
model.WorkItem.WorkItem.WorkItem.name = Name
model.WorkItem.WorkItem.WorkItem.responsible = Responsible
model.WorkItem.WorkItem.WorkItem.state = State
model.WorkItem.WorkItem.WorkItem.subject = Subject
model.WorkItem.WorkItem.WorkItem.type = Type
model.mandatorStructure.Mandator = Mandator
model.mandatorStructure.Mandator.all = Mandator (all)
model.mandatorStructure.Mandator.all.allowContracts = Allow contracts
model.mandatorStructure.Mandator.all.contractGuidelines = Contract Guidelines
model.mandatorStructure.Mandator.all.description = Description
model.mandatorStructure.Mandator.all.documents = Documents
model.mandatorStructure.Mandator.all.name = Name
model.mandatorStructure.Mandator.all.numberHandlerID = ID
model.mandatorStructure.MandatorChild = Child of Mandator
model.mandatorStructure.MandatorRoot = Mandator structure
model.mandatorStructure.MandatorRootChild = Mandator (top-level)
model.mandatorStructure.RootElement = Mandator structure
model.mandatorStructure.RootElementChild = Mandator (top-level)
model.mandatorStructure.mandatorStructure.MandatorRoot = Mandator structure
newStoredQueryDialog.title = New Query
popupselect.members.chosen = Current members
popupselect.members.input = Name
popupselect.members.selectmulti = Select group members
popupselect.members.suitable = Selectable members
popupselectdefault.attribute = 
popupselectdefault.chosen = Selection
popupselectdefault.input = Selection / Input
popupselectdefault.selectmulti = Attribute
popupselectdefault.selectsingle = Attribute
popupselectdefault.suitable = Selectables
pos.admin.functional.securityImport.cancelAssistent = Abbrechen
pos.admin.functional.securityImport.check.apply = Anwenden
pos.admin.functional.securityImport.check.attributeClassifiers = Datentypen deren Attribute klassifiziert sind
pos.admin.functional.securityImport.check.checkResults = Analyse der Datei
pos.admin.functional.securityImport.check.classifierRoles = Verknüpfungen von Rollen mit Klassifikationen
pos.admin.functional.securityImport.check.content = Inhalt
pos.admin.functional.securityImport.check.contentMessage = Im Folgenden finden Sie die Anzahl der für die verschieden Bereiche gefundenen Einträge. Markieren Sie die entsprechende Zeile unter "Anwenden" um die zu übernehmenden Einstellungen zu kennzeichnen. Mit "Ausführen" werden diese endgültig übernommen.
pos.admin.functional.securityImport.check.count = Anzahl
pos.admin.functional.securityImport.check.exceptionOccured = Es ist ein Fehler beim einlesen der Datei aufgetreten.
pos.admin.functional.securityImport.check.groups = Gruppen
pos.admin.functional.securityImport.check.noProblems = Keine Probleme
pos.admin.functional.securityImport.check.profiles = Verknüpfungen von Rollen mit Komponenten
pos.admin.functional.securityImport.check.roleRules = Regeln zur Vergabe von Rollen
pos.admin.functional.securityImport.check.typeAddContent = Bestehende Mitarbeiterzuordnung zu Gruppen ergänzen
pos.admin.functional.securityImport.check.typeReplaceAll = Gruppen löschen und neu importieren
pos.admin.functional.securityImport.check.typeReplaceContent = Bestehende Mitarbeiterzuordnung zu Gruppen ersetzen
pos.admin.functional.securityImport.commandChain_ApplySecurityImportHandler_switchAssistentForward = Ausführen
pos.admin.functional.securityImport.commandChain_SecurityImportDialogCloseCommandHandler_cancelAssistent = Schließen
pos.admin.functional.securityImport.commandChain_commandChain_upload_SecurityFileParseCommandHandler_switchAssistentForward = Weiter
ticket.servlet.login.failed = The transparent login failed, please contact the administrator.
ticket.servlet.lookup.failed = The given ticket ID cannot be found.
tl.command.addSelectedToClipboard = Marked rows to clipboard
tl.command.addSelectedToClipboard.tooltip = Adds all marked objects to the clipboard.
tl.command.clearAllFilters = Reset all filters
tl.command.clearAllFilters.tooltip = Clears all filters in the displayed table.
tl.command.clearSelectedCheckboxes = Reset markers
tl.command.clearSelectedCheckboxes.tooltip = Remove all visible markers from the displayed table
tl.command.configureFormDefinitionCommand = Design form
tl.command.deleteEnumeration = Delete...
tl.command.deleteFormDefinitionCommand = Reset form
tl.command.deleteGlobalDisplayDescription = Delete configuration
tl.command.deleteGlobalDisplayDescription.confirm = Do you really want to delete current configuration?
tl.command.deleteGlobalDisplayDescription.tooltip = Delete configuration
tl.command.exportExcelGrid = Export to Excel...
tl.command.genericCreate = Create
tl.command.gridCancelRowObject = Reset current row.
tl.command.gridCancelRowObject.confirm = Do you really want to undo all changes made to the current row?
tl.command.gridCancelRowObject.tooltip = Resets the changes made to the currently selected row.
tl.command.gridGoto = Open...
tl.command.historicAttributedViewCommand = Compare...
tl.command.historicAttributedViewCommand.deactivated = Compare off
tl.command.historicAttributedViewCommand.deactivated.tooltip = Disable compare view.
tl.command.historicAttributedViewCommand.tooltip = Compare this information with another time slot.
tl.command.newPersistentWorkItem = New work item
tl.command.refreshShowSecurity = Refresh
tl.command.selectAllCheckboxes = Select all
tl.command.selectAllCheckboxes.tooltip = Select all visible markers from the displayed table
tl.command.touchAllMetaAttributes = Touch all attributes
tl.command.touchMetaAttribute = Touch attribute
tl.command.treeGridCollapseAll = Collapse all
tl.command.treeGridCollapseAll.tooltip = Collapses all rows in the grid.
tl.command.treeGridExpandAll = Expand all
tl.command.treeGridExpandAll.tooltip = Expands all rows in the grid.
tl.element.favorites = Favorite
tl.executable.disabled.notEditable = Element not editable
tl.executable.hasNonEmptyWebfolders = Element has Attachments.
tl.grid.command.openGridCompareView = Open compare view
tl.grid.executable.allMarked = All rows are already marked.
tl.grid.executable.notChanged = There are no changes on the current object.
tl.grid.executable.notMarked = There are no marked rows.
tl.grid.executable.tokenContext.none = The selected object cannot be stored.
tl.grid.spacer.disabled = 
tl.import.column.mandatory.notFound = No column found for the mandatory attribute "{0}".
tl.import.config.error = The check couldn't be performed because a configuration error occurred.
tl.import.config.error.param = The check couldn't be performed because a configuration error occurred (message: "{0}").
tl.import.data.boolean.empty = {0}: Need a "yes" or "no" here (mandatory attribute).
tl.import.data.boolean.format = {0}: Need a "yes" or "no" here but value is {1}.
tl.import.data.date.empty = {0}: Need a date here (mandatory attribute).
tl.import.data.date.format = {0}: Need a date here here but value is {1}.
tl.import.data.number.empty = {0}: Need a number here (mandatory attribute).
tl.import.data.number.format = {0}: Need a number here but value is {1}.
tl.import.data.string.empty = {0}: Need a string here (mandatory attribute).
tl.import.data.string.format = {0}: Need a string here but value is {1}.
tl.import.data.string.tooLong = {0}: Found string is too long (allowed length is {2} but found {1} characters).
tl.import.data.string.tooShort = {0}: Found string is too short (minimum length is {2} but found {1} characters).
tl.import.data.type.Date = a date
tl.import.data.type.Number = a number
tl.import.data.type.String = a string
tl.import.data.user.unknown = {0}: The user account {1} is not known.
tl.import.data.value.notFound = {0}: The found value "{1}" is not allowed here.
tl.import.data.value.null = {0}: Need a value here (mandatory attribute).
tl.import.exception = Reading the excel file fails.
tl.import.exception.param = Reading the excel file fails (message: "{0}").
tl.import.process.row.succeed = Row {0}: Object "{1}" has been checked.
tl.import.tab.empty = The given excel file doesn't contain usable data.
tl.import.tab.missing.values = Unable to find a valid start position for the importer in work sheet {0}.
tl.remote.invoke.transaction.open.fails = The transaction couldn't be started.
tl.remote.login.check.arguments = Need at least the user ID and the IP address.
tl.remote.login.header = External login
tl.remote.login.impossible = Login is not possible.
tl.remote.login.person.unknown = A user account with Login-ID "{0}" is unknown to the system.
tl.remote.login.possible = Please click the link below to login to {0}.
tl.remote.login.ticket.commit.fails = Storing the transparent login information for the user account with Login-ID "{0}" couldn't be finished properly.
tl.remote.login.ticket.create.fail = An error during the preparation of the transparent login for the user account with Login-ID "{0}", the login cannot be performed.
tl.remote.login.title = TopLogic External Login
tl.remote.reference.external.kind = External reference
tl.remote.reference.external.tooltip = <b>Name:</b> {0}<br /><b>ID:</b> {2}<br /><br /><b>Type:</b> {4} ({1} in {3})
tl.roleRule.simple.tooltip = <b><u>RoleRule:</u></b><br/><b>ID:</b> {0}
tl.roleRule.tooltip = <b><u>RoleRule:</u></b><br/><br/><b>Name:</b> {0}<br/><b>Key:</b> {1}<br/><b>Type:</b> {2}<br/><b>Role:</b> {3}<br/><b>MetaElement:</b> {4}<br/><b>MetaObject:</b> {5}<br/><b>SourceRole:</b> {6}<br/><b>BaseString:</b> {7}<br/><b>SourceMetaElement:</b> {9}<br/><b>SourceMetaObject:</b> {10}<br/><br/><b>Path:</b> {11}<br/><br/><b>ID:</b> {8}
tl.search.thread.columns.get = Defining the result columns...
tl.search.thread.elements.get = Defining the search base...
tl.search.thread.filters.get = Validating search filters...
tl.search.thread.metaElement.get = Defining the type of business object...
tl.search.thread.search.execute = Starting search...
tl.search.thread.search.execute.filter = Reducing hits (filter {0} of {1})...
tl.type.tooltip = Type
tl.undefined = Undefined
updateDialog.language = Language
