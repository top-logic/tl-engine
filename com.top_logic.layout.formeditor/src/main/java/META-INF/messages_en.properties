class.com.top_logic.layout.formeditor.parts.I18NConstants.HTML_TEMPLATE = HTML template
class.com.top_logic.layout.formeditor.parts.I18NConstants.RENDERED_OBJECTS_PREVIEW = Double-click to edit template contents.
com.top_logic.layout.formeditor.accounts.RepresentativeField = Representative field
com.top_logic.layout.formeditor.accounts.RepresentativeField.tooltip = The field showing the members of the representative groups of an account. <p> Special handling is required, because this foreign field requires a special label and special options. </p>
com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand = Export model as PDF
com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand.Config.export-descriptions = Export descriptions
com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand.Config.export-descriptions.tooltip = Configuration of the export description depending on the type of the exported model. When no export description can be found for the type of the model, a default export description is used.
com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand.Config.header = Header
com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand.Config.header.tooltip = The <i>expression</i> computing the heading line of the PDF export. When nothing is configured, no header line is exported. <p> The expression is evaluated with the exported model as the only argument. The model can be accessed with the variable <code>"model"</code>. </p>
com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand.Config.pdf-name = PDF name
com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand.Config.pdf-name.tooltip = Name of the downloaded PDF. <p> The expression is evaluated with the exported model as the only argument. The model can be accessed with the variable <code>"model"</code>. </p> <p> The name of the PDF file must end with ".pdf". </p>
com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand.tooltip = <i>Command handler</i> exporting the model of a component as PDF document. <p> When an export definition for the type of the model is given, that definition is used. If no such definition is found and a form definition for the model type is locally defined at the component, this definition is also used for the export. </p> <p> When no such locally defined form, can be found the most specific export definition for the type, defined in the model, and at least the most specific layout form (defined in the model) is used. </p> <p> When no form can be found at all, a generic export form is used. </p>
com.top_logic.layout.formeditor.export.pdf.script.PDFExportFunction$Builder = Builder
com.top_logic.layout.formeditor.export.pdf.script.PDFExportFunction$Builder.tooltip = <i>Method builder</i> creating <i>PDF export function</i>.
com.top_logic.layout.formeditor.parts.ForeignAttributeDefinition.item = Item
com.top_logic.layout.formeditor.parts.ForeignAttributeDefinition.item.tooltip = <i>Expression</i> for an item of the configured type.
com.top_logic.layout.formeditor.parts.ForeignAttributeTemplateProvider = Foreign attribute template provider
com.top_logic.layout.formeditor.parts.ForeignAttributeTemplateProvider.tooltip = <i>Form element provider</i> for <i>foreign attribute definition</i>.
com.top_logic.layout.formeditor.parts.ForeignObjects.buttons.tooltip = Commands that can be executed on the individual objects.
com.top_logic.layout.formeditor.parts.ForeignObjects.items = Items
com.top_logic.layout.formeditor.parts.ForeignObjects.items.tooltip = The items to display forms for.
com.top_logic.layout.formeditor.parts.ForeignObjects.label = Label
com.top_logic.layout.formeditor.parts.ForeignObjects.label.tooltip = Expression that is used to compute the label of the single form groups, from the base object of the form group.
com.top_logic.layout.formeditor.parts.ForeignObjects.layout = Layout
com.top_logic.layout.formeditor.parts.ForeignObjects.layout.tooltip = Definition of the layout that is used to display the single objects.
com.top_logic.layout.formeditor.parts.ForeignObjects.no-separate-group = No separate group
com.top_logic.layout.formeditor.parts.ForeignObjects.no-separate-group.tooltip = Defines that no separate groups should be displayed for the individual objects. In this case the elements are displayed inline in the outer form.
com.top_logic.layout.formeditor.parts.ForeignObjects.read-only = Display item attributes read-only
com.top_logic.layout.formeditor.parts.ForeignObjects.read-only.tooltip = Expression that is used for each of the items to compute, whether the form elements must be displayed read-only instead of editable. <p> The first argument for the evaluation is the displayed item, the second is the base object, e.g. the expression 'true' displays all attributes read-only. </p> <p> When nothing is configured, no attribute is explicitly set to read-only. </p>
com.top_logic.layout.formeditor.parts.ForeignObjectsTemplateProvider = Foreign objects template provider
com.top_logic.layout.formeditor.parts.ForeignObjectsTemplateProvider.tooltip = <i>Form element provider</i> for <i>foreign objects</i>.
com.top_logic.layout.formeditor.parts.FormTableDefinition$AttributeColumn = Attribute column
com.top_logic.layout.formeditor.parts.FormTableDefinition$AttributeColumn.tooltip = <i>Column display</i> representing an attribute.
com.top_logic.layout.formeditor.parts.FormTableDefinition.ColumnDisplay.table = Table
com.top_logic.layout.formeditor.parts.FormTableDefinition.ColumnDisplay.table.tooltip = The <i>form table definition</i> this <i>column display</i> is a part of.
com.top_logic.layout.formeditor.parts.FormTableDefinition.columns = Columns
com.top_logic.layout.formeditor.parts.FormTableDefinition.columns.tooltip = The columns to display for the given <i>Rows</i>.
com.top_logic.layout.formeditor.parts.FormTableDefinition.commands = Commands
com.top_logic.layout.formeditor.parts.FormTableDefinition.commands.tooltip = Additional command models to display in the configured table.
com.top_logic.layout.formeditor.parts.FormTableDefinition.form-field-name = Form field name
com.top_logic.layout.formeditor.parts.FormTableDefinition.form-field-name.tooltip = Name of the form field that is created for this table.
com.top_logic.layout.formeditor.parts.FormTableDefinition.rows = Rows
com.top_logic.layout.formeditor.parts.FormTableDefinition.rows.tooltip = Expression creating a list of objects edited in the displayed table as rows.
com.top_logic.layout.formeditor.parts.FormTableTemplateProvider = Form table template provider
com.top_logic.layout.formeditor.parts.FormTableTemplateProvider.tooltip = Creates a template for a <i>form table definition</i> and stores the necessary information.
com.top_logic.layout.formeditor.parts.MacroPart.expr = Expression
com.top_logic.layout.formeditor.parts.MacroPart.expr.tooltip = The <i>expression</i> computing the HTML. <p> The expression is expected to be a function that takes the context object as single argument. </p> <p> The name of the sole variable in <i>Expression</i> is <code>"model"</code>. </p>
com.top_logic.layout.formeditor.parts.MacroPart.wholeLine = Whole line
com.top_logic.layout.formeditor.parts.MacroPart.wholeLine.tooltip = Whether the content must be rendered using the whole line.
com.top_logic.layout.formeditor.parts.MacroTemplateProvider = Macro template provider
com.top_logic.layout.formeditor.parts.MacroTemplateProvider.tooltip = <i>Form element provider</i> for <i>macro part</i>.
com.top_logic.layout.formeditor.parts.template.AbstractVariableDefinition = Variable definition
com.top_logic.layout.formeditor.parts.template.AbstractVariableDefinition.tooltip = Base class for <i>variable definitions</i>.
com.top_logic.layout.formeditor.parts.template.ButtonStyle = Button style
com.top_logic.layout.formeditor.parts.template.ButtonStyle.BUTTON = Button
com.top_logic.layout.formeditor.parts.template.ButtonStyle.BUTTON.tooltip = Button is displayed as full-fledged button.
com.top_logic.layout.formeditor.parts.template.ButtonStyle.ICON = Icon
com.top_logic.layout.formeditor.parts.template.ButtonStyle.ICON.tooltip = The button is displayed as an icon button.
com.top_logic.layout.formeditor.parts.template.ButtonStyle.LINK = Link
com.top_logic.layout.formeditor.parts.template.ButtonStyle.LINK.tooltip = Button is rendered as link.
com.top_logic.layout.formeditor.parts.template.ButtonStyle.tooltip = Style of a button.
com.top_logic.layout.formeditor.parts.template.ButtonVariable = Button
com.top_logic.layout.formeditor.parts.template.ButtonVariable.Config.button = Button
com.top_logic.layout.formeditor.parts.template.ButtonVariable.Config.button.tooltip = Command to embed into the template.
com.top_logic.layout.formeditor.parts.template.ButtonVariable.Config.buttonStyle = Button style
com.top_logic.layout.formeditor.parts.template.ButtonVariable.Config.buttonStyle.tooltip = Style of the button.
com.top_logic.layout.formeditor.parts.template.ButtonVariable.tooltip = <i>Variable definition</i> for embedding a <i>command handler</i> into a HTML template.
com.top_logic.layout.formeditor.parts.template.EmbeddedForm = Embedded form
com.top_logic.layout.formeditor.parts.template.EmbeddedForm.Config.formDefinition = Form definition
com.top_logic.layout.formeditor.parts.template.EmbeddedForm.Config.formDefinition.tooltip = The form to render.
com.top_logic.layout.formeditor.parts.template.EmbeddedForm.tooltip = <i>Variable definition</i> for a HTML template that embeds a form into the custom rendering.
com.top_logic.layout.formeditor.parts.template.HTMLTemplateFormProvider = HTML template
com.top_logic.layout.formeditor.parts.template.HTMLTemplateFormProvider$Config$TypeTemplate = Type template
com.top_logic.layout.formeditor.parts.template.HTMLTemplateFormProvider$Config$TypeTemplate.tooltip = Configuration associating a <i>HTML Template</i> with a <i>type</i>.
com.top_logic.layout.formeditor.parts.template.HTMLTemplateFormProvider.Config.TypeTemplate.type = Type
com.top_logic.layout.formeditor.parts.template.HTMLTemplateFormProvider.Config.TypeTemplate.type.tooltip = The type that uses the given <i>Template</i>.
com.top_logic.layout.formeditor.parts.template.HTMLTemplateFormProvider.Config.value-templates = Value templates
com.top_logic.layout.formeditor.parts.template.HTMLTemplateFormProvider.Config.value-templates.tooltip = Templates for additional object types that are rendered.
com.top_logic.layout.formeditor.parts.template.HTMLTemplateFormProvider.TemplateConfig.template = Template
com.top_logic.layout.formeditor.parts.template.HTMLTemplateFormProvider.TemplateConfig.template.tooltip = The HTML template for the rendered object. <p> The template has access to all properties of the rendered object and the additional <i>Variables</i> defined below. </p> <p> To access a property or variable named <code>var</code> use the template expression <code>{var}</code>. </p>
com.top_logic.layout.formeditor.parts.template.HTMLTemplateFormProvider.TemplateConfig.variables = Variables
com.top_logic.layout.formeditor.parts.template.HTMLTemplateFormProvider.TemplateConfig.variables.tooltip = Additional variables to bind for the template evaluation. <p> By default, all attributes of the rendered object are available as expressions in the template. </p>
com.top_logic.layout.formeditor.parts.template.HTMLTemplateFormProvider.tooltip = <i>Form part</i> creating a custom rendering using a HTML template with arbitrary embedded contents.
com.top_logic.layout.formeditor.parts.template.I18NTextVariable = Internationalized text
com.top_logic.layout.formeditor.parts.template.I18NTextVariable.Config.text = Text
com.top_logic.layout.formeditor.parts.template.I18NTextVariable.Config.text.tooltip = The internationalized text to render.
com.top_logic.layout.formeditor.parts.template.I18NTextVariable.tooltip = <i>Variable definition</i> for a static internationalized text within a HTML template.
com.top_logic.layout.formeditor.parts.template.LinkDefinition = Link definition
com.top_logic.layout.formeditor.parts.template.LinkDefinition.Config.target-component = Target component
com.top_logic.layout.formeditor.parts.template.LinkDefinition.Config.target-component.tooltip = The component to show the clicked object in. <p> If not given, the default view of the clicked object is shown. </p>
com.top_logic.layout.formeditor.parts.template.LinkDefinition.Config.target-object = Target object
com.top_logic.layout.formeditor.parts.template.LinkDefinition.Config.target-object.tooltip = Function taking the rendered object as argument and computing the object that should be displayed when clicking. <p> By default, the rendered object is displayed. </p>
com.top_logic.layout.formeditor.parts.template.LinkDefinition.tooltip = Definition of a script that jumps to a certain object.
com.top_logic.layout.formeditor.parts.template.MenuVariable = Menu
com.top_logic.layout.formeditor.parts.template.MenuVariable.Config.buttons = Buttons
com.top_logic.layout.formeditor.parts.template.MenuVariable.Config.buttons.tooltip = Command to embed into the template.
com.top_logic.layout.formeditor.parts.template.MenuVariable.tooltip = <i>Variable definition</i> for embedding a menu button with multiple <i>command handlers</i> into a HTML template.
com.top_logic.layout.formeditor.parts.template.UIAction = UI action
com.top_logic.layout.formeditor.parts.template.UIAction.Config.target-object = Target object
com.top_logic.layout.formeditor.parts.template.UIAction.Config.target-object.tooltip = Function taking the rendered object as argument and computing the object that should be displayed when clicking. <p> By default, the rendered object is displayed. </p>
com.top_logic.layout.formeditor.parts.template.UIAction.tooltip = Definition of a <i>UI action</i> to be invoked by an <code>onclick</code> handler.
com.top_logic.layout.formeditor.parts.template.UICallback = UI callback
com.top_logic.layout.formeditor.parts.template.UICallback.Config.action = Action
com.top_logic.layout.formeditor.parts.template.UICallback.Config.action.tooltip = Script invoked, when a callback from the client-side arrives. <p> To trigger the action, invoke <code>services.form.callback({myhandler}, arg1, arg2,...)"</code> from within an event handler (such as <code>onclick</code>). </p> <p> The script expects exactly one argument. If more than one argument is transmitted from the client, the script receives a list of those arguments. The values transmitted from the client may be any JSON compliant type (<code>string</code>, <code>number</code>, <code>boolean</code>, <code>list</code>, <code>map</code>). </p>
com.top_logic.layout.formeditor.parts.template.UICallback.tooltip = Definition of a callback function that receives data from the UI.
com.top_logic.layout.formeditor.parts.template.ValueComputation = Value computation
com.top_logic.layout.formeditor.parts.template.ValueComputation.Config.function = Function
com.top_logic.layout.formeditor.parts.template.ValueComputation.Config.function.tooltip = Function taking the currently rendered object as single argument and computing a value. The value computed can be accessed from the template through the variable with the given <i>Name</i>.
com.top_logic.layout.formeditor.parts.template.ValueComputation.tooltip = <i>Variable definition</i> that computes the variable's value through a <i>TL-Script</i> function.
com.top_logic.layout.formeditor.parts.template.VariableDefinition.Config.name = Name
com.top_logic.layout.formeditor.parts.template.VariableDefinition.Config.name.tooltip = The name of the variable to bind.
com.top_logic.layout.formeditor.parts.template.VariableDefinition.Config.variable-owner = Variable owner
com.top_logic.layout.formeditor.parts.template.VariableDefinition.Config.variable-owner.tooltip = The template defining this variable.
