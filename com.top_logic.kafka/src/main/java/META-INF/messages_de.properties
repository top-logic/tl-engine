class.com.top_logic.kafka.script.I18NConstants.ERROR_KAFKA_SERVICE_NOT_STARTED = Der Kafka-Dienst ist nicht gestartet.
com.top_logic.kafka.interceptor.TopicSensorAndViewerInterceptor = Themensensor und Betrachter-Abfangvorrichtung
com.top_logic.kafka.interceptor.TopicSensorAndViewerInterceptor.tooltip = Kombinieren Sie Nachricht und Sensoransicht als Abfangjäger.
com.top_logic.kafka.interceptor.TopicViewerInterceptor = Themenbetrachter-Abfangvorrichtung
com.top_logic.kafka.interceptor.TopicViewerInterceptor.Config.queue-size = Größe der Warteschlange
com.top_logic.kafka.interceptor.TopicViewerInterceptor.Config.queue-size.tooltip = Größe der internen Warteschlange von <i>Kafka-Nachrichten</i>.
com.top_logic.kafka.interceptor.TopicViewerInterceptor.tooltip = Konvertieren Sie verbrauchte Datensätze von Kafka in <i>Sensoreinträge</i>.
com.top_logic.kafka.layout.kafka.KafkaTopicListModelBuilder = Kafka-Themenliste Modellbauer
com.top_logic.kafka.layout.kafka.KafkaTopicListModelBuilder.tooltip = Stellen Sie die Liste der für den Benutzer relevanten Themen zusammen.
com.top_logic.kafka.layout.kafka.ProgressTreeTableComponent = Fortschrittsbaum-Tabellenkomponente
com.top_logic.kafka.layout.kafka.ProgressTreeTableComponent.Config.default-active = Standardmäßig aktiv
com.top_logic.kafka.layout.kafka.ProgressTreeTableComponent.Config.default-active.tooltip = Ob die automatische Aktualisierung standardmäßig aktiviert ist.
com.top_logic.kafka.layout.kafka.ProgressTreeTableComponent.Config.update-interval = Aktualisierungsintervall
com.top_logic.kafka.layout.kafka.ProgressTreeTableComponent.Config.update-interval.tooltip = Die Zeit zwischen zwei UI aktualisiert sich in Millisekunden.
com.top_logic.kafka.layout.kafka.ProgressTreeTableComponent.Config.updater = Aktualisierer
com.top_logic.kafka.layout.kafka.ProgressTreeTableComponent.Config.updater.tooltip = Helper-Klasse zum Auffinden von zu aktualisierenden Zeilen.
com.top_logic.kafka.layout.kafka.ProgressTreeTableComponent.tooltip = Baumbasierte Tabelle, die ihren Inhalt ohne Benutzerinteraktion ändern kann.
com.top_logic.kafka.layout.kafka.TopicMessagesTableModelBuilder = Themennachrichten-Tabellenmodell-Builder
com.top_logic.kafka.layout.kafka.TopicMessagesTableModelBuilder.Config.topic = Topic
com.top_logic.kafka.layout.kafka.TopicMessagesTableModelBuilder.Config.topic.tooltip = Der Name des Topics dessen Inhalt angezeigt werden soll.
com.top_logic.kafka.layout.kafka.TopicMessagesTableModelBuilder.tooltip = Ein <i>Listenmodell-Builder</i>, der den Inhalt des konfigurierten Topics anzeigt.
com.top_logic.kafka.layout.kafka.TopicMessagesTableUpdater = Aktualisierer der Tabelle der Themenmeldungen
com.top_logic.kafka.layout.kafka.TopicMessagesTableUpdater.Config.topic = Topic
com.top_logic.kafka.layout.kafka.TopicMessagesTableUpdater.Config.topic.tooltip = Der Name des Topics dessen Inhalt angezeigt werden soll.
com.top_logic.kafka.layout.kafka.TopicMessagesTableUpdater.tooltip = <i>Tabellenkomponentenwert-Updater-Implementierung</i>, die neue Nachrichten nur für das konfigurierte Topic auflöst.
com.top_logic.kafka.layout.sensors.ProgressTableComponent = Komponente Fortschrittstabelle
com.top_logic.kafka.layout.sensors.ProgressTableComponent.Config.default-active = Standardmäßig aktiv
com.top_logic.kafka.layout.sensors.ProgressTableComponent.Config.default-active.tooltip = Ob die automatische Aktualisierung standardmäßig aktiviert ist.
com.top_logic.kafka.layout.sensors.ProgressTableComponent.Config.update-interval = Aktualisierungsintervall
com.top_logic.kafka.layout.sensors.ProgressTableComponent.Config.update-interval.tooltip = Die Zeit zwischen zwei UI aktualisiert sich in Millisekunden.
com.top_logic.kafka.layout.sensors.ProgressTableComponent.Config.updater = Aktualisierer
com.top_logic.kafka.layout.sensors.ProgressTableComponent.Config.updater.tooltip = Helper-Klasse zum Auffinden von zu aktualisierenden Zeilen.
com.top_logic.kafka.layout.sensors.ProgressTableComponent.tooltip = Die Tabellenkomponente aktualisiert ihre Werte automatisch über den <i>Updater</i>.
com.top_logic.kafka.layout.sensors.SensorListModelBuilder = Hersteller von Sensorlistenmodellen
com.top_logic.kafka.layout.sensors.SensorListModelBuilder.Config.exclude-topics = Themen ausschließen
com.top_logic.kafka.layout.sensors.SensorListModelBuilder.Config.exclude-topics.tooltip = Optionale Liste der auszuschließenden Themen. <p> Alle in diesem Satz enthaltenen Themen sind nicht im Modell enthalten. </p>
com.top_logic.kafka.layout.sensors.SensorListModelBuilder.Config.include-topics = Themen einbeziehen
com.top_logic.kafka.layout.sensors.SensorListModelBuilder.Config.include-topics.tooltip = Optionale Liste der aufzunehmenden Themen. <p> Wenn nicht leer, sind nur die Themen im Modell enthalten, die in der Menge (aber nicht in <i>Ausschlussthemen</i>) enthalten sind. </p>
com.top_logic.kafka.layout.sensors.SensorListModelBuilder.tooltip = Erstellen Sie die Liste der für den Benutzer relevanten Sensoren.
com.top_logic.kafka.log.KafkaNoContentsLogWriter = Kein Nachrichteninhalt
com.top_logic.kafka.log.KafkaNoContentsLogWriter.tooltip = <i>Kafka-Protokollschreiber</i>, der den Nachrichteninhalt nicht protokolliert. <p> Der Nachrichteninhalt wird nicht in das Kafka-Protokoll geschrieben. </p>
com.top_logic.kafka.log.KafkaStringLogWriter = Vollständiger Inhalt der String-Nachricht
com.top_logic.kafka.log.KafkaStringLogWriter.tooltip = <i>Kafka-Log-Writer</i> für <i>String-Nachrichten</i>. <p> Hinweis: Diese Implementierung kann nur verwendet werden, wenn String-Nachrichten gesendet werden. Für einen Verbraucher bedeutet dies, dass ein String-Deserialisierer verwendet werden muss. </p>
com.top_logic.kafka.monitor.KafkaReceiverApplicationMonitor = Anwendungsmonitor für den Kafka-Empfänger
com.top_logic.kafka.monitor.KafkaReceiverApplicationMonitor.Config.max-processing-time = Maximale Bearbeitungszeit
com.top_logic.kafka.monitor.KafkaReceiverApplicationMonitor.Config.max-processing-time.tooltip = Wie lange ein Empfangsvorgang laufen kann, bevor er als "zu lang" angesehen wird.
com.top_logic.kafka.monitor.KafkaReceiverApplicationMonitor.tooltip = Der <i>Anwendungsmonitor</i> für die Kafka-Anbindung für den Empfang. <p> Er meldet <i>Fehler</i>, wenn der Empfang nicht möglich ist, unabhängig von der Ursache. So meldet er z.B. beim Start der Anwendung <i>Fehler</i>, bis die entsprechenden Dienste gestartet sind. Nur der Benutzer kann entscheiden, ob es derzeit in Ordnung ist, dass dieser Dienst nicht funktioniert. Würde diese Klasse in solchen Fällen "okay" melden, würde sie die Problemanalyse in die Irre führen, wenn es nicht stimmt, dass dieser Dienst zum Beispiel nicht gestartet oder heruntergefahren ist. </p>
com.top_logic.kafka.monitor.KafkaSenderApplicationMonitor = Anwendungsmonitor für den Kafka-Sender
com.top_logic.kafka.monitor.KafkaSenderApplicationMonitor.tooltip = Der <i>Anwendungsmonitor</i> für die Kafka-Anbindung zum Senden. <p> Er meldet <i>Fehler</i>, wenn das Senden nicht möglich ist, egal aus welchem Grund. So meldet er z.B. beim Start der Anwendung <i>Fehler</i>, bis die entsprechenden Dienste gestartet sind. Nur der Benutzer kann entscheiden, ob es derzeit in Ordnung ist, dass dieser Dienst nicht funktioniert. Würde diese Klasse in solchen Fällen "okay" melden, würde sie die Problemanalyse in die Irre führen, wenn es nicht stimmt, dass dieser Dienst zum Beispiel nicht gestartet oder heruntergefahren ist. </p>
com.top_logic.kafka.script.ConsumerProcessorByExpression = TL-Script Nachrichtenprozessor
com.top_logic.kafka.script.ConsumerProcessorByExpression.Config.processor = Prozessor
com.top_logic.kafka.script.ConsumerProcessorByExpression.Config.processor.tooltip = Das TL-Skript, das für jede empfangene Nachricht aufgerufen wird. <p> Das Skript deklariert implizit die folgenden Parameter: <ol> <li>message: String.</li> <li>key: String</li> <li>Kopfzeilen: Eine Liste von Schlüssel-Werte-Paaren. Beide sind Strings. Es kann mehrere Header mit demselben Schlüssel geben. Kafka-Header-Werte sind eigentlich binäre Daten. Da sie aber normalerweise Strings sind, werden sie hier der Einfachheit halber als UTF-8 Strings interpretiert.</li> <li>Thema: String</li> </ol> </p> <p> Die Parameter werden implizit deklariert und können direkt mit <code>$message</code> verwendet werden, ohne eine Funktion zu deklarieren. </p> <p> Die Meldung wird automatisch quittiert, wenn das Skript keinen Fehler auslöst. Das Ergebnis des Skripts wird ignoriert. </p>
com.top_logic.kafka.script.ConsumerProcessorByExpression.Config.transaction = Transaktion
com.top_logic.kafka.script.ConsumerProcessorByExpression.Config.transaction.tooltip = Ob der <i>Prozessor</i> in einem Transaktionskontext ausgeführt werden soll. <p> Um persistente Objekte im <i>Processor</i> zu erstellen oder zu ändern, ist ein Transaktionskontext erforderlich. </p>
com.top_logic.kafka.script.ConsumerProcessorByExpression.tooltip = Ein <i>Consumer-Prozessor</i>, der In-App konfiguriert werden kann, um Textnachrichten zu verarbeiten. <p> Nachrichten werden der Reihe nach konsumiert, solange es nur eine Partition für das Kafka Topic gibt und alle Nachrichten vom selben Absender stammen. </p> <p> Jede Nachricht wird mindestens einmal verarbeitet. Nachrichten können in Gruppen empfangen werden. Wenn die Verarbeitung mindestens einer Nachricht in einer Gruppe bei mindestens einem <i>Nachrichtenprozessor</i> fehlschlägt, wird die gesamte Gruppe von jedem registrierten <i>Nachrichtenprozessor</i> erneut verarbeitet. </p>
com.top_logic.kafka.script.KafkaSend$Builder = Erbauer
com.top_logic.kafka.script.KafkaSend$Builder.tooltip = <i>Erbauer</i> der <i>Methode</i> <i>kafkaSend</i>.
com.top_logic.kafka.scripting.WaitForKafkaActionOp = Warten auf Kafka-Aktion
com.top_logic.kafka.scripting.WaitForKafkaActionOp.tooltip = <i>Anwendungsaktion</i> für <i>Warten auf Kafka</i>.
com.top_logic.kafka.serialization.BinaryDataDeserializer = Deserialisierung binärer Daten
com.top_logic.kafka.serialization.BinaryDataDeserializer.Config.content-type = Content-Type
com.top_logic.kafka.serialization.BinaryDataDeserializer.Config.content-type.tooltip = Der Inhaltstyp, der für die empfangenen Nachrichtendaten angenommen wird.
com.top_logic.kafka.serialization.BinaryDataDeserializer.tooltip = Ein <i>Deserialisierer</i> interpretiert den Inhalt als Binärdaten, die vom Nachrichtenprozessor weiterverarbeitet werden müssen.
com.top_logic.kafka.serialization.GenericSerializer = Generischer Serialisierer
com.top_logic.kafka.serialization.GenericSerializer.Config.encoding = Kodierung
com.top_logic.kafka.serialization.GenericSerializer.Config.encoding.tooltip = Die Kodierung für Zeicheninhalte. <p> Der Wert ist irrelevant, wenn binäre Daten übertragen werden. </p>
com.top_logic.kafka.serialization.GenericSerializer.tooltip = Ein generischer <i>Serialisierer</i>, der mit <i>Binärdaten</i>, <i>Liste</i>, <i>Abbildung</i>, <i>HTML-Fragment</i> und <i>String</i> kompatibel ist. <p> Der Inhalt von <i>Binärdaten</i> wird so übertragen, wie er ist. Die Werte von <i>Listen</i> und <i>Abbildungen</i> werden JSON-kodiert übertragen. <i>HTML-Fragmente</i> werden als XML mit der angegebenen Kodierung übertragen. Alle anderen Werte werden in <i>Strings</i> umgewandelt und mit der angegebenen Kodierung übertragen. </p>
com.top_logic.kafka.serialization.JSONDeserializer = JSON-Deserialisierer
com.top_logic.kafka.serialization.JSONDeserializer.Config.encoding = Kodierung
com.top_logic.kafka.serialization.JSONDeserializer.Config.encoding.tooltip = Die Kodierung des Nachrichteninhalts.
com.top_logic.kafka.serialization.JSONDeserializer.tooltip = Ein <i>Deserialisierer</i> interpretiert den Inhalt als JSON-kodierte Objekte.
com.top_logic.kafka.serialization.JSONSerializer = JSON-Serialisierer
com.top_logic.kafka.serialization.JSONSerializer.Config.encoding = Kodierung
com.top_logic.kafka.serialization.JSONSerializer.Config.encoding.tooltip = Die Kodierung für Zeicheninhalte.
com.top_logic.kafka.serialization.JSONSerializer.tooltip = Ein <i>Serializer</i> kodiert Werte als JSON-Objekte. <p> Im Gegensatz zum <i>generischen Serializer</i> werden auch primitive Werte wie Zahlen und Strings JSON-kodiert. </p>
com.top_logic.kafka.serialization.StringDeserializer = String-Deserialisierer
com.top_logic.kafka.serialization.StringDeserializer.Config.encoding = Kodierung
com.top_logic.kafka.serialization.StringDeserializer.Config.encoding.tooltip = Die Kodierung der Nachrichteninhalte.
com.top_logic.kafka.serialization.StringDeserializer.tooltip = Ein <i>Deserialisierer</i> interpretiert den Inhalt als Text in einer bestimmten Kodierung.
com.top_logic.kafka.serialization.StringSerializer = String-Serialisierer
com.top_logic.kafka.serialization.StringSerializer.Config.encoding = Kodierung
com.top_logic.kafka.serialization.StringSerializer.Config.encoding.tooltip = Die Kodierung für Zeicheninhalte. <p> Der Wert ist irrelevant, wenn binäre Daten übertragen werden. </p>
com.top_logic.kafka.serialization.StringSerializer.tooltip = Ein <i>Serialisierer</i>, der Nachrichten erstellt, indem er Werte als <i>Zeichenketten</i> interpretiert und sie mit einem bestimmten Zeichensatz kodiert.
com.top_logic.kafka.services.common.CommonClientConfig.all-properties = Alle Eigenschaften
com.top_logic.kafka.services.common.CommonClientConfig.all-properties.tooltip = Die Konfigurations-Eigenschaften jedes Kafka Clients.
com.top_logic.kafka.services.common.CommonClientConfig.auto.include.jmx.reporter = Auto include jmx reporter
com.top_logic.kafka.services.common.CommonClientConfig.bootstrap.servers = Bootstrap Server
com.top_logic.kafka.services.common.CommonClientConfig.client.dns.lookup = Client DNS-Suche
com.top_logic.kafka.services.common.CommonClientConfig.client.id = Client ID
com.top_logic.kafka.services.common.CommonClientConfig.client.id.tooltip = Eine eindeutige ID für diesen Client. Sie dient dazu bei Fehler Analysen zum Beispiel in Log Dateien jeden Client eindeutig identifizieren zu können. Hinweis: Nicht alle Zeichen sind zulässig, z.B. muss das Zeichen ':' vermieden werden.
com.top_logic.kafka.services.common.CommonClientConfig.connections.max.idle.ms = Maximale Leerlaufzeit für Verbindungen in ms
com.top_logic.kafka.services.common.CommonClientConfig.log-writer = Log-Schreiber
com.top_logic.kafka.services.common.CommonClientConfig.log-writer.tooltip = Der <i>Kafka-Log-Schreiber</i>, der für die Protokollierung der Nachrichten verwendet werden soll.
com.top_logic.kafka.services.common.CommonClientConfig.metadata.max.age.ms = Höchstalter der Metadaten in ms
com.top_logic.kafka.services.common.CommonClientConfig.metric.reporters = Metrik Reporter
com.top_logic.kafka.services.common.CommonClientConfig.metrics.num.samples = Anzahl Metrik-Stichproben
com.top_logic.kafka.services.common.CommonClientConfig.metrics.recording.level = Aufzeichnungsebene der Metriken
com.top_logic.kafka.services.common.CommonClientConfig.metrics.sample.window.ms = Metrik-Abtastfenster in ms
com.top_logic.kafka.services.common.CommonClientConfig.receive.buffer.bytes = Empfangs-Puffer-Bytes
com.top_logic.kafka.services.common.CommonClientConfig.reconnect.backoff.max.ms = Maximaler Wiederverbindungs-Backoff in ms
com.top_logic.kafka.services.common.CommonClientConfig.reconnect.backoff.ms = Wiederverbindungs-Backoff in ms
com.top_logic.kafka.services.common.CommonClientConfig.request.timeout.ms = Timeout für Anfragen in ms
com.top_logic.kafka.services.common.CommonClientConfig.retry.backoff.ms = Wiederholungs-Backoff in ms
com.top_logic.kafka.services.common.CommonClientConfig.sasl.client.callback.handler.class = SASL Client Callback-Handler-Klasse
com.top_logic.kafka.services.common.CommonClientConfig.sasl.jaas.config = SASL JAAS Konfiguration
com.top_logic.kafka.services.common.CommonClientConfig.sasl.kerberos.kinit.cmd = SASL Kerberos kinit Kommando
com.top_logic.kafka.services.common.CommonClientConfig.sasl.kerberos.min.time.before.relogin = SASL Kerberos Mindestzeit vor Neuanmeldung
com.top_logic.kafka.services.common.CommonClientConfig.sasl.kerberos.service.name = SASL Kerberos Dienstname
com.top_logic.kafka.services.common.CommonClientConfig.sasl.kerberos.ticket.renew.jitter = SASL Kerberos Ticket Erneuerungs-Jitter
com.top_logic.kafka.services.common.CommonClientConfig.sasl.kerberos.ticket.renew.window.factor = SASL Kerberos Ticket Erneuerungs-Fensterfaktor
com.top_logic.kafka.services.common.CommonClientConfig.sasl.login.callback.handler.class = SASL Login Callback-Handler-Klasse
com.top_logic.kafka.services.common.CommonClientConfig.sasl.login.class = SASL Anmeldeklasse
com.top_logic.kafka.services.common.CommonClientConfig.sasl.login.connect.timeout.ms = Sasl Anmeldung verbinden Zeitüberschreitung ms
com.top_logic.kafka.services.common.CommonClientConfig.sasl.login.read.timeout.ms = Sasl-Anmeldung Lesezeitüberschreitung ms
com.top_logic.kafka.services.common.CommonClientConfig.sasl.login.refresh.buffer.seconds = SASL Login Aktualisierungspuffer in Sekunden
com.top_logic.kafka.services.common.CommonClientConfig.sasl.login.refresh.min.period.seconds = SASL Login Aktualisierungs-Mindestzeitraum in Sekunden
com.top_logic.kafka.services.common.CommonClientConfig.sasl.login.refresh.window.factor = SASL Anmeldefenster Aktualisierungsfaktor
com.top_logic.kafka.services.common.CommonClientConfig.sasl.login.refresh.window.jitter = SASL Login Aktualisierungs-Fenster-Jitter
com.top_logic.kafka.services.common.CommonClientConfig.sasl.login.retry.backoff.max.ms = Sasl-Login-Wiederholungsversuch Backoff Maximum ms
com.top_logic.kafka.services.common.CommonClientConfig.sasl.login.retry.backoff.ms = Sasl-Anmeldewiederholungsversuch Backoff ms
com.top_logic.kafka.services.common.CommonClientConfig.sasl.mechanism = SASL Mechanismus
com.top_logic.kafka.services.common.CommonClientConfig.sasl.oauthbearer.clock.skew.seconds = Sasl oauthbearer Uhr schiefe Sekunden
com.top_logic.kafka.services.common.CommonClientConfig.sasl.oauthbearer.expected.audience = Sasl oauthbearer erwartet Publikum
com.top_logic.kafka.services.common.CommonClientConfig.sasl.oauthbearer.expected.issuer = Sasl oauthbearer erwartet Emittent
com.top_logic.kafka.services.common.CommonClientConfig.sasl.oauthbearer.jwks.endpoint.refresh.ms = Sasl oauthbearer jwks endpoint refresh ms
com.top_logic.kafka.services.common.CommonClientConfig.sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = Sasl oauthbearer jwks endpoint retry backoff maximum ms
com.top_logic.kafka.services.common.CommonClientConfig.sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = Sasl oauthbearer jwks endpoint retry backoff ms
com.top_logic.kafka.services.common.CommonClientConfig.sasl.oauthbearer.jwks.endpoint.url = Sasl oauthbearer jwks endpoint URL
com.top_logic.kafka.services.common.CommonClientConfig.sasl.oauthbearer.scope.claim.name = Sasl oauthbearer scope claim name
com.top_logic.kafka.services.common.CommonClientConfig.sasl.oauthbearer.sub.claim.name = Sasl oauthearer sub claim name
com.top_logic.kafka.services.common.CommonClientConfig.sasl.oauthbearer.token.endpoint.url = URL des Endpunkts für die Sperre des Sasl-Outhearer-Tokens
com.top_logic.kafka.services.common.CommonClientConfig.security.protocol = Sicherheitsprotokoll
com.top_logic.kafka.services.common.CommonClientConfig.security.providers = Sicherheitsanbieter
com.top_logic.kafka.services.common.CommonClientConfig.security.providers.tooltip = Die Kafka Einstellung: "security.providers"
com.top_logic.kafka.services.common.CommonClientConfig.send.buffer.bytes = Puffer für's Senden in Bytes
com.top_logic.kafka.services.common.CommonClientConfig.socket.connection.setup.timeout.max.ms = Socket-Verbindungsaufbau-Timeout maximal ms
com.top_logic.kafka.services.common.CommonClientConfig.socket.connection.setup.timeout.ms = Zeitüberschreitung beim Aufbau der Socket-Verbindung ms
com.top_logic.kafka.services.common.CommonClientConfig.ssl.cipher.suites = SSL Chiffrier Suiten
com.top_logic.kafka.services.common.CommonClientConfig.ssl.enabled.protocols = Aktivierte SSL Protokolle
com.top_logic.kafka.services.common.CommonClientConfig.ssl.endpoint.identification.algorithm = Algorithmus zur Identifizierung von SSL-Endpunkten
com.top_logic.kafka.services.common.CommonClientConfig.ssl.engine.factory.class = Ssl-Engine Fabrikklasse
com.top_logic.kafka.services.common.CommonClientConfig.ssl.key.password = SSL Schlüssel Passwort
com.top_logic.kafka.services.common.CommonClientConfig.ssl.keymanager.algorithm = SSL Schlüsselmanager Algorithmus
com.top_logic.kafka.services.common.CommonClientConfig.ssl.keystore.certificate.chain = Ssl-Keystore-Zertifikatskette
com.top_logic.kafka.services.common.CommonClientConfig.ssl.keystore.key = Ssl-Keystore-Schlüssel
com.top_logic.kafka.services.common.CommonClientConfig.ssl.keystore.location = SSL Schlüsselspeicher Speicherort
com.top_logic.kafka.services.common.CommonClientConfig.ssl.keystore.password = SSL Schlüsselspeicher Passwort
com.top_logic.kafka.services.common.CommonClientConfig.ssl.keystore.type = SSL Schlüsselspeicher Typ
com.top_logic.kafka.services.common.CommonClientConfig.ssl.protocol = SSL Protokoll
com.top_logic.kafka.services.common.CommonClientConfig.ssl.provider = SSL Anbieter
com.top_logic.kafka.services.common.CommonClientConfig.ssl.secure.random.implementation = SSL Zufalls-Implementierung
com.top_logic.kafka.services.common.CommonClientConfig.ssl.trustmanager.algorithm = SSL Vertrauensmanager Algorithmus
com.top_logic.kafka.services.common.CommonClientConfig.ssl.truststore.certificates = Ssl-Truststore-Zertifikate
com.top_logic.kafka.services.common.CommonClientConfig.ssl.truststore.location = SSL Vertrauensspeicher Speicherort
com.top_logic.kafka.services.common.CommonClientConfig.ssl.truststore.password = SSL Vertrauensspeicher Passwort
com.top_logic.kafka.services.common.CommonClientConfig.ssl.truststore.type = SSL Vertrauensspeicher Typ
com.top_logic.kafka.services.common.CommonClientConfig.typed-properties = Typisierte Eigenschaften
com.top_logic.kafka.services.common.CommonClientConfig.typed-properties.tooltip = Die Map der Konfigurations-Eigenschaften mit einem expliziten <i>Deskriptor</i> in der <i>Konfiguration</i>. <p> Wenn eine Eigenschaft nicht konfiguriert ist, enthält die <i>Map</i> den Standardwert.</p>
com.top_logic.kafka.services.common.CommonClientConfig.untyped-properties = Zusätzliche Eigenschaften
com.top_logic.kafka.services.common.CommonClientConfig.untyped-properties.tooltip = Für Kafka Konfigurationsoptionen für die es keine expliziten Optionen gibt. <p> Eigenschaften, für die es explizite Eigenschaften gibt, dürfen hier nicht verwendet werden. </p>
com.top_logic.kafka.services.common.TopicChecker = Topic Checker
com.top_logic.kafka.services.common.TopicChecker.Config.create-topics = Topics erstellen
com.top_logic.kafka.services.common.TopicChecker.Config.create-topics.tooltip = Ob fehlende Topics erstellt werden sollen.
com.top_logic.kafka.services.common.TopicChecker.Config.disabled = Deaktiviert
com.top_logic.kafka.services.common.TopicChecker.Config.disabled.tooltip = Ob die Prüfung deaktiviert werden soll. <p> Entwickler möchten die Prüfungen möglicherweise deaktivieren, um eine Anwendung zu starten, die Kafka verwendet, ohne Kafka starten zu müssen. </p>
com.top_logic.kafka.services.common.TopicChecker.Config.wait-timeout = Warte Zeit
com.top_logic.kafka.services.common.TopicChecker.Config.wait-timeout.tooltip = Die maximale Zeit in Millisekunden beim Warten auf die Antwort des Servers mit der Liste der Themen. <p> Der Wert "0" bedeutet, dass nicht gewartet wird. Negative Werte sind nicht erlaubt. Um "ewig" zu warten, verwenden Sie <code>9223372036854775807</code>. </p>
com.top_logic.kafka.services.common.TopicChecker.tooltip = Prüft, ob Topics auf einem Kafka-Server existieren und erstellt fehlende Topics.
com.top_logic.kafka.services.consumer.ConsumerDispatcher = Verteilender Empfänger
com.top_logic.kafka.services.consumer.ConsumerDispatcher.tooltip = Der Kafka Empfänger, der Nachrichten an alle registrierten <i>Nachrichten Prozessoren</i> weiterleitet.
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.allow.auto.create.topics = Topics automatisch erstellen
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.allow.auto.create.topics.tooltip = Ob Topics bei der ersten Verwendung automatisch erstellt werden sollen
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.auto.commit.interval.ms = Auto-Commit-Intervall ms
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.auto.offset.reset = Automatisches Zurücksetzen des Offsets
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.check.crcs = Prüfsummen abgleichen
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.client.rack = Client Rack
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.client.rack.tooltip = Ein beliebiger Text um den physischen Standort des Clients zu beschreiben
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.default.api.timeout.ms = Standard Api-Timeout in ms
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.enable.auto.commit = Auto-Commit aktivieren
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.error-pause-factor = Fehlerpausenfaktor
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.error-pause-factor.tooltip = Wenn der Empfang von Nachrichten immer wieder fehlschlägt, erhöht sich die Zeit zwischen den Wiederholungsversuchen jedes Mal um diesen Faktor. <p> Wenn es zum ersten Mal fehlschlägt, erfolgt der erste Wiederholungsversuch nach <i>Initiale Fehler Pause</i> Millisekunden. Der zweite Wiederholungsversuch erfolgt nach <i>Initiale Fehler Pause</i> ms multipliziert mit diesem Faktor. Der dritte Wiederholungsversuch erfolgt nach <code>start * factor * factor</code> ms und so weiter. Die Zeit zwischen den Wiederholungsversuchen steigt jedoch nie über das <i>Maximale Fehlerpause</i>. Sie ist dort gedeckelt. Wenn sie diesen Wert erreicht hat, bleibt sie dort, bis das Problem behoben ist und der Empfang wieder funktioniert. Die Formel für den n-ten Wiederholungsversuch lautet daher: <code>min(error-pause-max, error-pause-start * (error-pause-factor ** (n-1)))</code> Wenn der Empfang wieder funktioniert, aber später erneut fehlschlägt, beginnt die Zeit zwischen den Wiederholungsversuchen wieder bei <i>Initiale Fehlerpause</i>. </p>
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.error-pause-max = Maximale Fehlerpause
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.error-pause-max.tooltip = Die maximale Pause in Millisekunden, wenn der Empfang von Nachrichten wiederholt fehlschlägt. <p> Unter <i>Fehlerpausenfaktor</i> finden Sie die Formel für die Fehlerpausen bei wiederholten Fehlern. </p>
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.error-pause-start = Initiale Fehler Pause
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.error-pause-start.tooltip = Die Pause in Millisekunden nach Auftreten eines Fehlers. <p> Dies ist notwendig, um zu verhindern, dass der Kafka Client die Logs überflutet, wenn eine Nachricht nicht verarbeitet werden kann. </p> <p> Siehe <i>Fehlerpausenfaktor</i> für die Formel für die Fehlerpausen bei wiederholten Fehlern. </p>
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.exclude.internal.topics = Interne Topics ausschließen
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.fetch.max.bytes = Maximale Größe pro Abruf in Bytes
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.fetch.max.wait.ms = Maximale Wartezeit beim Abrufen in ms
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.fetch.min.bytes = Minimale Größe pro Abruf in Bytes
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.group.id = Gruppen ID
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.group.instance.id = ID der Gruppeninstanz
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.heartbeat.interval.ms = Heartbeat Intervall in ms
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.interceptor.classes = Interceptor Klassen
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.isolation.level = Isolationsgrad
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.key.deserializer = Schlüssel Deserialisierer Klasse
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.key.deserializer.tooltip = Wenn diese Option nicht leer ist, wird der <i>Schlüssel-Deserialisierer</i> ignoriert.
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.key.deserializer.typed.config = Schlüssel-Deserialisierer
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.key.deserializer.typed.config.tooltip = Deserialisierer für Nachrichtenschlüssel. <p> Ein Deserialisierer wandelt die in einer Nachricht übertragenen Binärdaten in Objekte um. </p>
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.max.partition.fetch.bytes = Maximale Größe des Partitionsabrufs in Bytes
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.max.poll.interval.ms = Maximales Abfrage-Intervall in ms
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.max.poll.interval.ms.tooltip = Wenn mehr als so viel Zeit zwischen zwei Abfragen vergeht, wird der Client vom Server entfernt.
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.max.poll.records = Maximale Anzahl Datensätze pro Abfrage
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.partition.assignment.strategy = Strategie für Zuweisung von Partitionen
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.polling-timeout = Abruf Intervall in ms
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.polling-timeout.tooltip = In welchem Intervall neue Nachrichten abgerufen werden, in Millisekunden.
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.processors = Nachrichten Prozessoren
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.processors.tooltip = Eine (möglicherweise leere) <i>Liste</i> von konfigurierten <i>Kafka Prozessoren</i>
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.session.timeout.ms = Timeout der Sitzung in ms
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.topics = Topic
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.topics.tooltip = Eine durch Kommata getrennte <i>Gruppe</i> von Themennamen, die abonniert werden sollen.
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.value.deserializer = Wert Deserialisierer Klasse
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.value.deserializer.tooltip = Wenn diese Option nicht leer ist, wird der <i>Wertdeserialisierer</i> ignoriert.
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.value.deserializer.typed.config = Wert Deserialisierer
com.top_logic.kafka.services.consumer.ConsumerDispatcherConfiguration.value.deserializer.typed.config.tooltip = Deserialisierer für Nachrichteninhalte. <p> Ein Deserialisierer wandelt die in einer Nachricht übertragenen Binärdaten in Objekte um. </p>
com.top_logic.kafka.services.consumer.KafkaClientProperty = Kafka Client Annotation
com.top_logic.kafka.services.consumer.KafkaClientProperty.tooltip = Eine <i>Annotation</i>, um <i>Konfigurationseigenschaften</i> als Kafka-spezifisch zu kennzeichnen.
com.top_logic.kafka.services.consumer.KafkaConsumerService = Kafka Empfänger Service
com.top_logic.kafka.services.consumer.KafkaConsumerService.Config.consumers = Empfänger
com.top_logic.kafka.services.consumer.KafkaConsumerService.Config.consumers.tooltip = Eine (möglicherweise leere) <i>Liste</i> der konfigurierten <i>Empfänger</i>
com.top_logic.kafka.services.consumer.KafkaConsumerService.Config.join-timeout = Zeitlimit für Beitritt
com.top_logic.kafka.services.consumer.KafkaConsumerService.Config.join-timeout.tooltip = Die Zeitspanne (in Millisekunden), die auf die Beendigung eines Dispatcher-Threads gewartet wird.
com.top_logic.kafka.services.consumer.KafkaConsumerService.tooltip = Der <i>TopLogic Dienst</i> für <i>Kafka Konsumenten</i>.
com.top_logic.kafka.services.producer.KafkaProducerService = Kafka Produzenten-Service
com.top_logic.kafka.services.producer.KafkaProducerService.Config.producers = Produzenten
com.top_logic.kafka.services.producer.KafkaProducerService.Config.producers.tooltip = Konfigurierte <i>Kafka Produzenten</i> nach Namen
com.top_logic.kafka.services.producer.KafkaProducerService.tooltip = Der <i>TopLogic Dienst</i> für Kafka-Produzenten
com.top_logic.kafka.services.producer.TLKafkaProducer = Kafka Produzent
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.acks = Acks
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.acks.tooltip = Die Anzahl der Bestätigungen, die der Produzent vom Leader erhalten haben muss, bevor er eine Anfrage als vollständig betrachtet. Damit wird die Haltbarkeit der gesendeten Datensätze gesteuert. Die folgenden Einstellungen sind zulässig: <ul> <li><code>acks=0</code> Ist dieser Wert auf Null gesetzt, wartet der Producer nicht auf eine Bestätigung des Servers. Der Datensatz wird sofort dem Socket-Puffer hinzugefügt und als gesendet betrachtet. Es kann nicht garantiert werden, dass der Server den Datensatz in diesem Fall erhalten hat, und die Konfiguration <code>retries</code> wird nicht wirksam (da der Client im Allgemeinen nichts von Fehlern weiß). Der Offset, der für jeden Datensatz zurückgegeben wird, wird immer auf <code>-1</code> gesetzt.</li> <li><code>acks=1</code> Dies bedeutet, dass der Leader den Datensatz in sein lokales Protokoll schreibt, aber antwortet, ohne eine vollständige Bestätigung von allen Followern abzuwarten. Sollte der Leader in diesem Fall unmittelbar nach der Bestätigung des Datensatzes ausfallen, bevor die Follower ihn repliziert haben, geht der Datensatz verloren.</li> <li><code>acks=all</code> Das bedeutet, dass der Leader auf die Bestätigung des Datensatzes durch alle synchronisierten Replikate wartet. Damit ist gewährleistet, dass der Datensatz nicht verloren geht, solange mindestens eine synchronisierte Replik vorhanden ist. Dies ist die stärkste verfügbare Garantie. Dies ist gleichbedeutend mit der Einstellung acks=-1.</li> </ul> <p> Beachten Sie, dass die Aktivierung von idempotence erfordert, dass dieser Konfigurationswert 'all' ist. Wenn widersprüchliche Konfigurationen eingestellt sind und idempotence nicht explizit aktiviert ist, wird idempotence deaktiviert. </p>
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.batch.size = Größe der Charge
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.batch.size.tooltip = Der Producer versucht, Datensätze in weniger Anfragen zusammenzufassen, wenn mehrere Datensätze an dieselbe Partition gesendet werden. Dadurch wird die Leistung sowohl auf dem Client als auch auf dem Server verbessert. Diese Konfiguration steuert die Standard-Stapelgröße in Bytes. <p> Es wird nicht versucht, Datensätze zu bündeln, die größer als diese Größe sind. </p> <p> An Makler gesendete Anfragen enthalten mehrere Stapel, einen für jede Partition mit zu sendenden Daten. </p> <p> Eine kleine Stapelgröße macht die Stapelverarbeitung seltener und kann den Durchsatz verringern (eine Stapelgröße von Null deaktiviert die Stapelverarbeitung vollständig). Eine sehr große Stapelgröße kann den Speicher etwas verschwenderischer nutzen, da wir in Erwartung zusätzlicher Datensätze immer einen Puffer mit der angegebenen Stapelgröße zuweisen. </p> <p> Hinweis: Diese Einstellung gibt die Obergrenze für die zu sendende Stapelgröße an. Wenn wir weniger als diese Anzahl von Bytes für diese Partition angesammelt haben, "verweilen" wir für die Zeit <code>linger.ms</code> und warten auf weitere Datensätze. Der Standardwert für diese <code>linger.ms</code> Einstellung ist 0, was bedeutet, dass wir sofort einen Datensatz senden, auch wenn die akkumulierte Stapelgröße unter dieser <code>batch.size</code> Einstellung liegt. </p>
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.buffer.memory = Pufferspeicher
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.buffer.memory.tooltip = Die Gesamtzahl der Bytes, die der Producer zum Puffern von Datensätzen verwenden kann, die darauf warten, an den Server gesendet zu werden. Wenn Datensätze schneller gesendet werden, als sie an den Server geliefert werden können, blockiert der Producer für die Dauer von <i>Maximum block ms</i>, woraufhin er eine Ausnahme auslöst. <p> Diese Einstellung sollte in etwa dem Gesamtspeicher entsprechen, den der Producer verbraucht, ist aber keine feste Grenze, da nicht der gesamte vom Producer verwendete Speicher für die Pufferung genutzt wird. Ein gewisser zusätzlicher Speicher wird für die Komprimierung (wenn die Komprimierung aktiviert ist) sowie für die Aufrechterhaltung der laufenden Anforderungen verwendet. </p>
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.compression.type = Art der Komprimierung
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.delivery.timeout.ms = Auslieferungs-Timeout in ms
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.enable.idempotence = Idempotenz aktivieren
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.interceptor.classes = Interceptor Klassen
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.key.serializer = Schlüssel Serialisierer Klasse
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.key.serializer.tooltip = Wenn diese Einstellung nicht leer ist, wird "Schlüssel Serialisierer" ignoriert.
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.key.serializer.typed.config = Schlüssel Serialisierer
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.key.serializer.typed.config.tooltip = Diese Einstellung wird nur verwendet, wenn "Schlüssel Serialisierer Klasse" leer ist.
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.linger.ms = Wartezeit in ms
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.max.block.ms = Maximale Blockier-Zeit in ms
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.max.in.flight.requests.per.connection = Maximale In-Flight-Anfragen pro Verbindung
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.max.request.size = Maximale Größe der Anfrage in Bytes
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.metadata.max.idle.ms = Metadaten maximale Leerlaufzeit ms
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.partitioner.adaptive.partitioning.enable = Partitionierer adaptive Partitionierung aktivieren
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.partitioner.availability.timeout.ms = Partitionierer-Verfügbarkeits-Timeout ms
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.partitioner.class = Partitionierer-Klasse
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.partitioner.ignore.keys = Partitionierer ignorieren Schlüssel
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.retries = Wiederholungen
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.topic = Topic
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.topic.tooltip = Der Name des KAFKA-Themas, in das Datensätze geschrieben werden sollen.
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.transaction.timeout.ms = Transaktions-Timeout in ms
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.transactional.id = Transaktions-ID
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.value.serializer = Wert Serialisierer Klasse
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.value.serializer.tooltip = Wenn diese Einstellung nicht leer ist, wird "Wert Serialisierer" ignoriert.
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.value.serializer.typed.config = Wert Serialisierer
com.top_logic.kafka.services.producer.TLKafkaProducer.Config.value.serializer.typed.config.tooltip = Diese Einstellung wird nur verwendet, wenn "Wert Serialisierer Klasse" leer ist.
com.top_logic.kafka.services.producer.TLKafkaProducer.tooltip = Handler zum Senden von Daten an ein Kafka-Topic.
com.top_logic.kafka.services.sensors.DummySensorBuilder = Hersteller von Dummy-Sensoren
com.top_logic.kafka.services.sensors.DummySensorBuilder.Config.duration = Dauer
com.top_logic.kafka.services.sensors.DummySensorBuilder.Config.duration.tooltip = Verzögerung zwischen Signalanforderungen.
com.top_logic.kafka.services.sensors.DummySensorBuilder.Config.id = ID
com.top_logic.kafka.services.sensors.DummySensorBuilder.Config.id.tooltip = Eindeutige ID dieses Dummy-Sensors.
com.top_logic.kafka.services.sensors.DummySensorBuilder.Config.name = Name
com.top_logic.kafka.services.sensors.DummySensorBuilder.Config.name.tooltip = Name dieses Dummysensors.
com.top_logic.kafka.services.sensors.DummySensorBuilder.tooltip = Bauen Sie Dummy-Sensoren, die Zufallswerte erzeugen.
com.top_logic.kafka.services.sensors.Sensor$SensorActivityState = Zustand der Sensoraktivität
com.top_logic.kafka.services.sensors.Sensor$SensorActivityState.tooltip = Mögliche Zustände eines Sensors.
com.top_logic.kafka.services.sensors.Sensor.SensorActivityState.ACTIVE = Aktiv
com.top_logic.kafka.services.sensors.Sensor.SensorActivityState.ACTIVE.tooltip = War in der letzten Stunde aktiv.
com.top_logic.kafka.services.sensors.Sensor.SensorActivityState.INACTIVE = Inaktiv
com.top_logic.kafka.services.sensors.Sensor.SensorActivityState.INACTIVE.tooltip = War inaktiv (oder wurde nie gestartet).
com.top_logic.kafka.services.sensors.Sensor.SensorActivityState.RUNNING = Laufende
com.top_logic.kafka.services.sensors.Sensor.SensorActivityState.RUNNING.tooltip = Ist derzeit aktiv oder hat in letzter Minute ein Signal gesendet.
com.top_logic.kafka.services.sensors.SensorService = Sensor-Dienst
com.top_logic.kafka.services.sensors.SensorService.Config.builders = Bauherren
com.top_logic.kafka.services.sensors.SensorService.Config.builders.tooltip = Der Erbauer, um die Sensoren dieses Dienstes zu erstellen.
com.top_logic.kafka.services.sensors.SensorService.tooltip = Ermöglicht den Zugriff auf Sensor-Instanzen.
