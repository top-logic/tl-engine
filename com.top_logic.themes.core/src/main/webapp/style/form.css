/*
****					****
****	Form styles		****
****					****
*/
.frmBody h1 {
	font-family: var(--font-family);
	font-weight: bold;
	font-size: var(--heading-04-font-size);
	line-height: var(--heading-04-line-height);
	letter-spacing: var(--heading-04-letter-spacing);
}

.rf_header,
.dfEntryTitle {
	font-family: var(--font-family);
	font-weight: bold;
    font-size: var(--heading-compact-02-font-size);
    line-height: var(--heading-compact-02-line-height);
    letter-spacing: var(--heading-compact-02-letter-spacing);
}

.dfEntryTitle {
	display: flex;
}

.dfItemTitle {
    text-overflow: ellipsis;
    white-space: initial;
    overflow: hidden;
}

.rf_header > .rf_menu, 
.dfModeFull .dfListCommands,
.dfEntryTitle .lFixedRight {
	display: flex;
	gap: var(--spacing-01);
}

.dfContent {
	overflow: hidden;
	align-self: center;
}

.dfItemTitle {
	display: flex;
	flex-grow: 2;
}

.mboxContent .dfContent .dfToolbar {
	display: flex;
	gap: var(--spacing-01);
}

.fieldSetBoxContainer {
	display: inline-flex;
	align-items: center;
	gap: var(--spacing-02);
}

.collapsed .dfToolbar {
	display: none;
}

.dfListCommands .cOnExpandedControl {
	padding: 0;
}

div.fptPage {
    position: absolute;
    top: 0px;
    left: 0px;
    bottom: 0px;
    right: 0px;
}

div.fptBody {
    position: absolute;
    left: 0px;
    right: 0px;
    top: 78px;
    bottom: 0px;
	margin-top: var(--spacing-02);
}

div.fptBodyContent {
	position: absolute;
	left: 0px;
	right: 0px;
	top: 0px;
	bottom: 0px;
	padding: 0 var(--spacing-03);
}

div.fptTitle {
    position: absolute;
    left: 0px;
    right: 0px;
    height: 53px;
    background-color: transparent;
}

div.fptTitleContent, 
div.fptSubtitleContent {
    position: absolute;
    left: 0px;
    right: 50px;
    top: 0px;
    bottom: 0px;
    white-space: nowrap;
    color: var(--text-primary);
}

.fptTitleContent > *,
.fptSubtitleContent > *,
.fptTitleText {
	overflow: hidden;
	text-overflow: ellipsis;
}

.fptTitleText {
	width: 100%;
}

.fptHeader span.can-edit {
	width: initial;
}

div.fptTitleContent {
	display: flex;
	align-items: center;
	padding: 0 var(--spacing-03);
}

div.fptTitleContent .tlTranslatedI18nField, 
div.fptTitleContent .cTextInput {
	width: calc(100% - var(--heading-04-font-size) - 6px);
}

div.fptTitleContent, 
div.fptTitleContent .cTextInput,
div.fptTitle input.is-input, 
div.fptTitle select.is-input {
	font-family: var(--font-family);
	font-weight: var(--highlight-weight, bold);
	font-size: var(--heading-04-font-size);
	line-height: var(--heading-04-line-height);
	letter-spacing: var(--heading-04-letter-spacing);
}

div.fptSubtitle {
    position: absolute;
    top: 53px;
    left: 0px;
    right: 0px;
    height: 25px;
    overflow: hidden;
}

div.fptSubtitleContent {
	display: flex;
    align-items: center;
    width: 100%;
    box-sizing: border-box;
    padding: 0 var(--spacing-03);
    font-size: var(--heading-03-font-size);
    font-weight: bold;
}

div.fptIconBar > span,
.fptIcon, 
.fptIconWithOverlay {
    position: absolute;
    top: 10px;
    right: 20px;
}

div.fptIconBar > span.fptIcon, 
div.fptIconBar > span.fptIconWithOverlay,
div.fptIconBar > span {
    font-size: 32px;
}

div.fptIconBar > span.fptIconOverlay {
    font-size: 16px !important;
}

.fptIconOverlay {
    position: absolute;
	top: 0px !important;
    right: 5px !important;
    border-radius: 30px;
    color: var(--button-fg, var(--icon-primary));
    background: var(--layer);
    padding: 4px;
}

.rf_header .cLabel {
	display: flex;
}

.rf_label label {
	font-weight: bold;
	white-space: nowrap;
}

.mandatory.can-edit label:after {
    content: "*";
}

.is-tooltip {
	display: none;
}

.config {
    display: none;
}

span.can-edit {
	width: inherit;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

/*
 * Functional styles. No configuration!
 */

.invisible {
	display: none;
}

.can-edit .is-display {
	display: none;
}

.cannot-edit .is-input {
	display: none;
}

.cannot-edit .is-input,
.cannot-edit .is-upload {
	display: none;
}

.disabled .is-action {
	display: none;
}

.cannot-edit .is-action {
	display: none;
}

/*.is-onerror*/.no-error .is-error {
	display: none;
}

.dragImage ul {
	list-style-type: none;	
}

.collapsed .frmGroupExpand::before {
	content: none;
}

.frmGroupExpand {
	display: inline-flex;
}

.dfEntryTitle > .lFlexible {
	flex-grow: 2;
}
	
.frmGroupExpand::before {
	display: inline-flex;
	vertical-align: middle;
	border-left: 1px solid var(--border-subtle);
	margin-right: var(--spacing-02);
	height: calc(var(--COLLAPSIBLE_IMAGE_HEIGHT) - var(--spacing-02) * 2);
	content: " ";
}

.dfListCollapseIcon {
	display: inline-flex;
}

.dfListCollapseIcon::before {
	display: inline-flex;
	vertical-align: middle;
	border-left: 1px solid var(--border-subtle);
	margin-right: var(--spacing-02);
	height: calc(var(--COLLAPSIBLE_IMAGE_HEIGHT) - var(--spacing-02) * 2);
	content: " ";
}

.frmGroupExpand a {
	color: var(--button-fg, var(--icon-primary));
}

.frmGroupExpand a:hover {
	text-decoration: none;
}

.frmBody {
	margin: var(--spacing-02) var(--spacing-03) 0 var(--spacing-03);
}

div.frmBody > div.dropPane {
	display: none;
}

/* HRTag (fhr - form header) */
div.fhrContainer {
	margin-top: var(--spacing-03);
	margin-bottom: var(--spacing-02);
	height: 2.5rem;
}

table.fhrTable {
	border-collapse: collapse;
	margin-left: -5px;
	margin-right: -5px;
}

td.fhrLeft {
	height: 2.5rem;
	padding-right: var(--spacing-02);
	background-color: var(--layer-accent);
	color: var(--layer-accent-text);
	--button-fg: var(--layer-accent-icon);
}

td.fhrMiddle {
	vertical-align: middle;
	height: 2.5rem;
	width: 100%;
	background-color: var(--layer-accent);
	color: var(--layer-accent-text);
	--button-fg: var(--layer-accent-icon);
}

td.fhrRight {
	height: 2.5rem;
	padding-right: var(--spacing-02);
	background-color: var(--layer-accent);
	color: var(--layer-accent-text);
	--button-fg: var(--layer-accent-icon);
}

/* ================================= */
/* ==== responsive form layout ===== */
/* ================================= */

div.rf_buttons {
    display: flex;
    flex-wrap: wrap;
}

/* in lists */
.dfEntryTitle.colored {
	grid-row: 1;
    grid-column: 1;
	display: flex;
	align-items: center;
	gap: var(--spacing-03);
	height: 2.5rem;
	background-color: var(--layer-accent);
	color: var(--layer-accent-text);
	--button-fg: var(--layer-accent-icon);
	padding: 0 var(--spacing-03);
	white-space: nowrap;
}

.dfEntryTitle label {
	margin-right: var(--spacing-02);
}

.dfEntryTitle.colored:hover {
	background-color: var(--layer-accent);
	color: var(--layer-accent-text);
	--button-fg: var(--layer-accent-icon);
}

.dfEntryTitle.colored .lFixedRight,
.dfEntryTitle.colored:hover .lFixedRight a {
	background: none;
}

.dfEntryTitle:not(.colored) > .lFixedRight {
	background: inherit;
}

div.dfListAdd {
	margin-top: var(--spacing-02);
	white-space: nowrap;
	display: flex;
	align-items: center;
	gap: var(--spacing-02);
}

/* Lines should keep a bit distance from one-another. */
.dfModeCompact > span {
	margin: var(--spacing-01) 0;
}

.dfEntryTitle .lFixedRight a:not(.lFlexible),
.dfEntryTitle .lFixedRight:not(.timePart) span:not(.lFlexible),
.dfEntryTitle .lFixedRight span span:not(.lFlexible),
.dfEntryTitle .lFixedRight .fChoose:not(.lFlexible) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    align-self: center;
    color: var(--button-fg, var(--icon-primary));
    height: 1rem;
    width: 1rem;
}

.cOnExpandedControl {
	padding: 0 0 0 var(--spacing-03);
}

.rf_spanRow1 { grid-row-end: span 1; }
.rf_spanRow2 { grid-row-end: span 2; }
.rf_spanRow3 { grid-row-end: span 3; }
.rf_spanRow4 { grid-row-end: span 4; }
.rf_spanRow5 { grid-row-end: span 5; }
.rf_spanRow6 { grid-row-end: span 6; }
.rf_spanRow7 { grid-row-end: span 7; }
.rf_spanRow8 { grid-row-end: span 8; }
.rf_spanRow9 { grid-row-end: span 9; }
.rf_spanRow10 { grid-row-end: span 10; }

.rf_spanCol1 { grid-col-end: span 1; }
.rf_spanCol2 { grid-col-end: span 2; }
.rf_spanCol3 { grid-col-end: span 3; }
.rf_spanCol4 { grid-col-end: span 4; }


.rf_invisible {
	display: none;	
}

.i18nStringTable p {
	margin-top: 0px;
}

.rf_groupCell {
	display: grid;
	grid-template-columns: 100%;
	grid-template-rows: minmax(22px, max-content) 1fr;
	grid-gap: 0px;
	border: 1px solid var(--border-subtle);
	margin-top: var(--spacing-02);
	min-width: -moz-min-content;    /* Firefox */
	min-width: -webkit-min-content; /* Chrome */
	min-width: min-content;
	height: max-content;
}

.rf_groupCell .rf_groupCell {
    margin-top: 0;
}

.rf_groupCell > .rf_header {
	border-top: none;
}

.rf_groupCell.noLegend {
	grid-template-rows: 1fr;
}

.rf_groupCell.noBorder {
	border: 0px;
}

.rf_groupCell .rf_header {
    grid-row: 1;
    grid-column: 1;
    display: flex;
    align-items: center;
    gap: var(--spacing-02);
    color: var(--highlight-fg, inherit);
    background: var(--highlight-bg, var(--layer));
    padding: var(--spacing-02) var(--spacing-03);
    white-space: nowrap;
    height: 2.5rem;
    box-sizing: border-box;
    overflow: hidden;
}

.rf_groupCell .rf_header:hover {
	background: var(--highlight-bg--hover, var(--layer-hover));
}

.rf_groupCell .rf_header a:hover {
	text-decoration: none;
}

.rf_groupCell.noLegend > .rf_header {
	background: transparent;
}

.rf_groupCell .rf_header select.tl-select,
.rf_groupCell .rf_header label {
	font-weight: bold;
	margin-bottom: 0px;
	text-overflow: ellipsis;
	overflow: hidden;
}

.rf_label .cCheckbox,
.rf_label .cIconSelect {
	display: inline-block;
	width: 20px;
	vertical-align: middle;
} 

.rf_hr {
	height: 0px;
	grid-column: 1 / -1;
    margin-top: 5px;
}

.rf_hr.visible {
	border-top: 1px solid #F6F7F8; 
    border-bottom: 1px solid #E2E5E9; 
    margin-bottom: 10px;
}

.cFormEditorDisplay .hidden, 
.hidden { 
	display: none; 
}

.cFormEditorPreview .fe_dropTarget { 
	height: calc(100% - 2 * var(--spacing-03));
}

.fe_editor, .cFormEditorPreview.fe_dropTarget { 
	height: 100%;
}

.fe_dropTarget { 
	min-height: 24px;
}

.fe_dropTarget > .cFormEditorDisplay,
.fe_dropTarget > .cFormEditorToolbar { 
	padding: 10px;
	height: calc(100% - 20px);
}

.cFormEditorPreview.fe_highlighted [data-type = 'columns'] .rf_groupCell,
.cFormEditorPreview.fe_highlighted .rf_dragElement .rf_inputCell,
.cFormEditorPreview.fe_highlighted .rf_dragElement .rf_table {
	background: rgba(255,255,255,0.6);
	border-radius: 0px
}

.rf_frame {
	min-height: 24px;
}

.cFormEditorToolbox [data-tool=true].rf_dragElement {
    display: inline-block;
    overflow: hidden;
    width: calc(50% - var(--spacing-02));
    margin-bottom: var(--spacing-02);
}

.cFormEditorToolbox [data-tool=true].rf_dragElement:nth-child(2n+1) {
    margin-right: var(--spacing-02);
}

.cFormEditorToolbox [data-tool=true] > .attribute {
	display: inline-flex;
	justify-content: flex-start;
	align-items: center;
	height: 2rem; /* 32px height */
	border-radius: var(--corner-radius);
	color: var(--button-secondary);
	background: var(--background);
	box-shadow: inset 0px 0px 0px 2px var(--button-secondary);
	width: 100%;
	padding: 0 var(--spacing-02);
	box-sizing: border-box;
	white-space: nowrap;
	text-overflow: ellipsis;
    overflow: hidden;
    font-family: var(--font-family);
    font-size: var(--body-02-font-size);
    line-height: var(--body-02-line-height);
    letter-spacing: var(--body-02-letter-spacing);
}

.cFormEditorToolbox [data-tool=true] > .attribute:hover {
	color: var(--text-on-color);
	background: var(--button-secondary-hover);
	box-shadow: inset 0px 0px 0px 2px var(--button-secondary-hover);
}

.cFormEditorToolbox [data-tool=true] > .attribute > .type-image {
	display: inline-flex;
}

.cFormEditorDisplay [data-tool=false] > .attribute {
	color: var(--text-secondary);
}

.cFormEditorDisplay [data-tool=false] > .attribute:hover {
	color: var(--text-primary);
}

/* form editor icons */
[data-tool=true] > .attribute .type-image > .tool {
	background-color: var(--BUTTON_COLOR);
	width: 10px;
	height: 10px;
	display: inline-block;
}

[data-tool=true] > .attribute:hover .type-image > .tool {
	background-color: var(--BUTTON_COLOR_HOVER);
}

.cFormEditorDisplay.edit .fe_wrapper:not(.hover):hover > .rf_container {
	margin-left: 20px;
	min-width: calc(100% - 20px);
}

.fe_editor > .cFormEditorPreview:not(.fe_highlighted) > .cFormEditorDisplay.edit .fe_wrapper:not(.hover):hover {
	background-image: var(--FORM_EDITOR_BUTTON_MOVE);
	background-repeat: no-repeat;
	background-position: left center; 
}

.rf_frame.showBorder {
	border: 1px solid #DFE6F0;
}

.cFormEditorPreview.fe_highlighted .rf_inputCell,  
.cFormEditorPreview.fe_highlighted .rf_dragElement .rf_table {
	border: 1px dotted grey;
}

/* disable default drag and drop for images because icons and labels can be splitted in this case */
.fe_dropTarget img {
	user-drag: none; 
	-webkit-user-drag: none;
}

.fe_dropTarget img, .cFormEditorDisplay.edit {
	user-select: none;
	-moz-user-select: none;
	-webkit-user-select: none;
	/*-ms-user-select: none;*/
}

.cFormEditorDisplay .rf_dragElement,
.cFormEditorDisplay .rf_dragElement label,
.cFormEditorDisplay .rf_dragElement input,
.cFormEditorDisplay .rf_dragElement textarea,
.cFormEditorElement label,
.cFormEditorElement input,
.cFormEditorElement textarea,
*[draggable=true] {
	cursor: pointer;
	cursor: grab;
}

.cFormEditorDisplay .rf_dragElement.fe_dragged {
	cursor: move;
	cursor: grabbing;
}

.cFormEditorDisplay .input-image {
	cursor: pointer;
}

.cFormEditorPreview.fe_highlighted .cFormEditorElement:not(.fe_dragged) .rf_content,
.cFormEditorPreview.fe_highlighted .cFormEditorElement:not(.fe_dragged) .rf_container {
	border: 1px dashed #7695C3;
	background: var(--layer);
}

.cFormEditorPreview.fe_highlighted .cFormEditorElement:not(.fe_dragged) .fe_dropTarget.fe_parent {
	border: 1px dashed #7695C3;
	background-color: var(--layer-accent);
	color: var(--layer-accent-text);
	--button-fg: var(--layer-accent-icon);
}

/* do not mark locked areas */
.cFormEditorPreview.fe_highlighted .cFormEditorElement:not(.fe_dragged) .locked .rf_content,
.cFormEditorPreview.fe_highlighted .cFormEditorElement:not(.fe_dragged) .locked .rf_container,
.cFormEditorPreview.fe_highlighted .cFormEditorElement:not(.fe_dragged) .locked .fe_dropTarget.fe_parent,
.fe_highlighted .fe_dragged .locked .rf_container,
.fe_dropArea .locked,
.cFormEditorPreview.fe_highlighted .locked .rf_inputCell,  
.cFormEditorPreview.fe_highlighted .locked .rf_dragElement .rf_table {
	border: inherit;
	background: var(--background);
}

.fe_highlighted .fe_dragged .rf_container/*,
.cFormEditorDisplay.edit .rf_container:hover*/ {
	border: 1px solid #DFE6F0;
	border-radius: var(--GROUP_RADIUS);
}

.fe_editor .cFormEditorPreview.fe_highlighted .cFormEditorElement.fe_dragged .rf_content {
	border: 0px;
	background: var(--background);
}

.fe_dropArea {
	border: 1px dashed #7695C3;
	box-sizing: border-box;
	height: 100%;
	width: 100%;
	position: absolute;
	top: 0px;
	left: 0px;
	background: rgba(250, 252, 254, .5);
}

.fe_dropText {
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
}

/* for demo: display number of columns */
.dflSize0 .show-columns:after { content: "0"; }
.dflSize1 .show-columns:after { content: "1"; }
.dflSize2 .show-columns:after { content: "2"; }
.dflSize3 .show-columns:after { content: "3"; }
.show-columns { line-height: 24px; }

.rf_infoBox {
	border: 1px solid grey;
	margin-bottom: 10px;
	padding: 4px;
}

.rf_emptyCell {
	min-height: 24px;
}

.rf_table {
	width: 100%;
	border-collapse: collapse;
	table-layout: fixed;
	margin-bottom: 5px;
}

.rf_table th, .rf_table td {
	border: 1px solid #DFE6F0;
}

/* Indent label for derived resources, e.g. for the label of the input field for the tooltip. */
.additional-resource .rf_label {
	padding-left: 7px;
	box-sizing: border-box;
}

/* Indent label for derived resources, e.g. for the label of the input field for the tooltip. */
.additional-resource.with-spacing div:last-child {
	margin-bottom: 20px;
}


/*
****					****
****	Input styles	****
****					****
*/
/* Calendar styles */
div.cal_root {
	/* Viewport for animations. */
	overflow: hidden;	
}

div.cal_root, 
div.cal_view {
	position: absolute;
	left: 0px;
	top: 0px;
	bottom: 0px;
	right:  0px;
}

div.cal_view {
	display: flex;
	flex-direction: column;
}

.cal_titlebar {
	display: flex;
	padding: var(--spacing-01);
	align-items: center;
	gap: var(--spacing-02);
	justify-content: space-evenly;
}

.cal_titlebar a {
	color: var(--button-fg, var(--icon-primary));
}

.cal_titlebar a:hover {
	text-decoration: none;
}

.cal_leftNav {
	order: 1;
	align-self: center;
	display: inline-flex;
	gap: var(--spacing-02);
	align-items: center;
}

.cal_header {
	order: 2;
	align-self: center;
	display: inline-flex;
	gap: var(--spacing-02);
	align-items: center;
}

.cal_rightNav {
	order: 3;
	align-self: center;
	display: inline-flex;
	gap: var(--spacing-02);
	align-items: center;
}

.cal_view_switch {
	display: inline-flex;
	align-items: center;
	gap: var(--spacing-02);	
}

.cal_view_switch_header {
	white-space: nowrap;
	font-family: var(--font-family);
	font-weight: bold;
	font-size: var(--heading-compact-01-font-size);
	line-height: var(--heading-compact-01-line-height);
	letter-spacing: var(--heading-compact-01-letter-spacing);
}

div.cal_content, table.cal_fixed {
	height: 100%;
}

.cCalendar {
	background-color: var(--layer); 
}

.cCalendar .disabled {
	color: var(--text-on-color-disabled);
}

div.cal_content {
	background: var(--layer);
}

table.cal_table {
	border-width: 0px;
	width: 100%;
	padding: 0 var(--spacing-01) var(--spacing-01) var(--spacing-01);
}

th.cal_th {
	border-style: none;
	padding: var(--spacing-01) 0;
	font-family: var(--font-family);
    font-size: var(--body-01-font-size);
    line-height: var(--body-01-line-height);
    letter-spacing: var(--body-01-letter-spacing);
}

td.cal_cell {
	vertical-align: middle;
	text-align: center;
	cursor: pointer;
	margin: 0;
	padding: 0;
	height: 2rem;
    width: 2rem;
    font-family: var(--font-family);
    font-size: var(--body-01-font-size);
    line-height: var(--body-01-line-height);
    letter-spacing: var(--body-01-letter-spacing);
    background-color: var(--highlight-bg, inherit);
}

td.cal_cell:hover {
	background-color: var(--highlight-bg--hover, var(--layer-hover));
	color: var(--highlight-fg, var(--text-primary));
}

td.cal_cell a {
	/* Without display block, tab navigation through `cal_range` tables does not work. */
	display: block;
	color: var(--highlight-fg, inherit);

}

td.cal_cell a:hover {
	color: var(--highlight-fg, var(--text-primary));
	text-decoration: none;
}

td.cal_cell a:focus {
	outline: none;
}

/* Current day */
td.cal_now {
	border-color: var(--border-strong);
	border-style: solid;
	border-width: 1px;
	color: var(--highlight-fg, var(--text-primary));
}

/* Weekday */
td.cal_wd {	
	color: var(--highlight-fg, var(--text-primary));
}

/* Selected day */
td.cal_sel {
	background-color: var(--highlight-bg--selected, var(--background-brand));
  	color: var(--highlight-fg, var(--text-on-color));
}

/* Weekends */
td.cal_we:not(.cal_sel) {
	color: var(--highlight-fg, var(--text-placeholder));
}

/* Number of Week */
td.cal_wn, td.cal_wn:hover {
	background-color: var(--highlight-bg--hover, var(--layer-accent-active));
	color: var(--highlight-fg, var(--text-on-color));
	cursor: default;
}

/* Days of past or next month */
td.cal_om {
	color: var(--highlight-fg, var(--text-placeholder));
}

span.cal_range {
	display: table;
	margin: auto;
}

span.cal_rangePart {
	display: table-row;
	text-align: left;
}

div.cal_animation {
	display: none;
}

div.cal_nextAnimation, div.cal_previousAnimation {
    -webkit-animation: cal_slideAnimationFrames 0.3s; /* Chrome, Safari, Opera */
    animation: cal_slideAnimationFrames 0.3s;
    
    -webkit-animation-fill-mode: forwards; /* Chrome, Safari, Opera */
    animation-fill-mode: forwards;
}

@keyframes cal_slideAnimationFrames {
	0% {
	}
    100% {
    	left: 0px;
    }
}

@-webkit-keyframes cal_slideAnimationFrames {
	0% {
	}
    100% {
    	left: 0px;
    }
}

div.cal_zoom_outAnimation {
    -webkit-animation: cal_zoom_outAnimationFrames 0.3s; /* Chrome, Safari, Opera */
    animation: cal_zoom_outAnimationFrames 0.3s;
    
    -webkit-animation-fill-mode: forwards; /* Chrome, Safari, Opera */
    animation-fill-mode: forwards;
}

@keyframes cal_zoom_outAnimationFrames {
	0% {
	}
    100% {
    	transform: scale(0.4, 0.25);
    	opacity: 0.2;
    }
}

@-webkit-keyframes cal_zoom_outAnimationFrames {
	0% {
	}
    100% {
    	transform: scale(0.4, 0.25);
    	opacity: 0.2;
    }
}

div.cal_zoom_inAnimation {
    -webkit-animation: cal_zoom_inAnimationFrames 0.3s; /* Chrome, Safari, Opera */
    animation: cal_zoom_inAnimationFrames 0.3s;
    
    -webkit-animation-fill-mode: forwards; /* Chrome, Safari, Opera */
    animation-fill-mode: forwards;
}

@keyframes cal_zoom_inAnimationFrames {
	0% {
    	transform: scale(0.4, 0.25);
    	opacity: 0.2;
	}
    100% {
    	transform: scale(1, 1);
    	opacity: 1.0;
    }
}

@-webkit-keyframes cal_zoom_inAnimationFrames {
	0% {
    	transform: scale(0.4, 0.25);
    	opacity: 0.2;
	}
    100% {
    	transform: scale(1, 1);
    	opacity: 1.0;
    }
}

.cDatetime, 
.cDateInput, 
.cTimeInput {
	display: inline-flex;
	align-items: center;
}

.cDatetime .timePart {
	background: transparent;
}

.cIntegerInput.num {
	display: inline-flex;
	align-items: stretch;
}

.cIntegerInput input,
.cTextInput.num input {
	text-align: right;
}

.cDecoratedCell,
.cExpandableTextInput,
.cBlockTextInput {
	display: inline-flex;
}

.cPopupSelect.active {
	display: inline-flex;
	width: 100%;
}

.cPopupSelect.cannot-edit {
	display: inline-flex;
	flex-wrap: wrap;
	width: 100%;
}

.cCheckList {
    display: flex;
    align-items: center;
    gap: var(--spacing-02);
}

.tl-separator {
	padding-right: var(--spacing-02);
}

.cBlockTextInput .lFixedRight a:not(.lFlexible),
.cExpandableTextInput .lFixedRight a:not(.lFlexible) {
	height: inherit;
}

td.tl-table__cell--selected .cDecoratedCell a.input-image,
td.tl-table__cell--selected .cDecoratedCell a.input-image:hover,
td.tl-table__cell--selected .cDecoratedCell a.input-image:focus {
	color: var(--highlight-fg, var(--icon-secondary));
	outline: none !important;
}

.lFixedRight,
.cIntegerInput.num .lFixedRight {
	display: inline-flex;
	align-items: stretch;
	color: var(--button-fg, var(--icon-primary));
	background-color: var(--field);
}

.cDownload .lFixedRight {
	background-color: unset;
}

.lFixedRight a:not(.lFlexible),
.lFixedRight:not(.timePart) span:not(.lFlexible),
.lFixedRight span span:not(.lFlexible),
.lFixedRight .fChoose:not(.lFlexible) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    color: var(--button-fg, var(--icon-primary));
    height: 2rem;
    width: 2rem;
}

.lFixedRight .button_minus {
	position: relative;
}

.lFixedRight .button_minus::after {
	content: "";
	position: absolute;
	top: 0.5;
	left: 0;
	height: 50%;
	border-left: 1px solid var(--border-subtle);
}

.lFixedRight a:hover {
	background: var(--field-hover);
	text-decoration: none;
}

.lFixedRight a:focus-within,
.lFixedRight .button_minus:focus-within::after {
	box-shadow: inset 0px 0px 0px 2px var(--focus),inset 0px 0px 0px 3px var(--focus-inset);
	border-left: none;
	outline: none !important;
}

.lFixedRight a.disabled,
.lFixedRight .fChoose.disabled,
.lFixedRight span.disabled,
.lFixedRight span span.disabled,
span.cIconSelect .input-image.cannot-edit i {
	color: var(--icon-disabled);
}

.lFixedRight a.disabled:hover {
	background: none;
}

.lFixedRight a.disabled:focus,
.lFixedRight .button_minus:focus::after {
	box-shadow: none;
	outline: none !important;
}

.cTextInput,
.cDateInput,
.cDatetime,
.cTimeInput,
.cPopupSelect,
.cCheckList-counts,
.cBooleanChoice,
.ddwttImmutableItem {
	color: var(--highlight, inherit);
	font-weight: var(--highlight-weight, normal);
}

.tl-table__cell .cTextInput,
.tl-table__cell .cDateInput,
.tl-table__cell .cDatetime,
.tl-table__cell .cTimeInput,
.tl-table__cell .cPopupSelect,
.tl-table__cell .cCheckList-counts,
.tl-table__cell .cBooleanChoice,
.tl-table__cell .ddwttImmutableItem {
	color: var(--highlight-fg, inherit);
}

.cTextInput input,
.cIntegerInput.num input,
.cExpandableTextInput input,
.cBlockTextInput input,
.cPopupSelect input,
.cDateInput input,
.cTimeInput input {
	color: var(--highlight-fg, var(--text-primary));
	background: var(--highlight-bg, var(--field));
	border: none;
	padding: 0 var(--spacing-03);
	height: 2rem;
	box-sizing: border-box;
	max-width: 100%;
	white-space: break-spaces;
	word-wrap: break-word;
	word-break: break-word;
	font-family: var(--font-family);
    font-size: var(--body-02-font-size);
    line-height: var(--body-02-line-height);
    letter-spacing: var(--body-02-letter-spacing);
}

.cDateInput input {
    width: 7rem;
}

.cTimeInput input {
    width: 4.5rem;
}

.cTextInput.mandatory input,
.cIntegerInput.num.mandatory input,
.cExpandableTextInput.mandatory input,
.cBlockTextInput.mandatory input,
.cPopupSelect.mandatory input,
.cDateInput.mandatory input,
.cTimeInput.mandatory input,
.ddwttContainer.mandatory button,
.mandatory .lFixedRight a {
	box-shadow: inset 0px -2px 0px 0px var(--focus);
}

.cTextInput textarea,
.cExpandableTextInput textarea, 
.cBlockTextInput textarea {
	color: var(--highlight-fg, var(--text-primary));
	background: var(--highlight-bg, var(--field));
	border: none;
	padding: var(--spacing-02) var(--spacing-03);
	box-sizing: border-box;
	max-width: 100%;
	white-space: break-spaces;
	word-wrap: break-word;
	word-break: break-word;
}

.cTextPopup {
    display: flex;
    align-items: center;
    flex-wrap: nowrap;
    gap: var(--spacing-02);
}

.cTextInput input::placeholder,
.cTextInput textarea::placeholder,
.cExpandableTextInput input::placeholder,
.cExpandableTextInput textarea::placeholder,
.cBlockTextInput input::placeholder,
.cBlockTextInput textarea::placeholder,
.cPopupSelect input::placeholder {
	color: var(--text-placeholder);
}

.cError .error i,
.cError .error-annotation i,
.error {
	color: var(--support-danger);
}

.error input.is-input, 
.error-annotation input.is-input, 
.error input.is-popup, 
.error-annotation input.is-popup, 
.error input.is-upload, 
.error-annotation input.is-upload, 
.error button.ColorChooser,
.error-annotation button.ColorChooser,
.error.active input.tristate,
.error-annotation.active input.tristate,
.error.active input.is-checkbox,
.error-annotation.active input.is-checkbox,
.error.active input.is-radio,
.error-annotation.active input.is-radio,
.error.active.cBeacon, /* AND selector --> .error AND .cBeacon */
.error-annotation.active.cBeacon, /* AND selector --> .error-annotation AND .cBeacon */
.error.cDataItem iframe, /* AND selector --> .error AND .cDataItem */
.error-annotation.cDataItem iframe, /* AND selector --> .error-annotation AND .cDataItem */
.error select.tl-select, 
.error-annotation select.tl-select, 
.error textarea,
.error-annotation textarea,
.error .ace_editor textarea,
.error-annotation .ace_editor textarea {
	box-shadow: inset 0px 0px 0px 1px var(--support-danger),inset 0px 0px 0px 2px var(--focus-inset);
}

.error .cke, /*CKEditor*/
.error .ace_editor {
	border: 1px solid var(--support-danger);
} 

.warning input.is-input, 
.warning-annotation input.is-input, 
.warning input.is-popup,
.warning-annotation input.is-popup,
.warning input.is-upload,
.warning-annotation input.is-upload,
.warning button.ColorChooser,
.warning-annotation button.ColorChooser,
.warning.active input.tristate,
.warning-annotation.active input.tristate,
.warning.active input.is-checkbox,
.warning-annotation.active input.is-checkbox,
.warning.active input.is-radio,
.warning-annotation.active input.is-radio,
.warning.active.cBeacon,
.warning-annotation.active.cBeacon,
.warning.cDataItem iframe,
.warning-annotation.cDataItem iframe,
.warning select.tl-select, 
.warning-annotation select.tl-select, 
.warning textarea,
.warning-annotation textarea,
.warning .cke, /*CKEditor*/
.warning-annotation .cke, /*CKEditor*/
.warning .ace_editor,
.warning-annotation .ace_editor,
.warning .ace_editor textarea, 
.warning-annotation .ace_editor textarea {
	box-shadow: inset 0px 0px 0px 1px var(--support-warning),inset 0px 0px 0px 2px var(--focus-inset);
}

.warning .cke, /*CKEditor*/
.warning .ace_editor {
	border: 1px solid var(--support-warning);
} 

input.is-input:focus, 
.error input.is-input:focus, 
.warning input.is-input:focus, 
.error-annotation input.is-input:focus, 
.warning-annotation input.is-input:focus, 
input.is-popup:focus, 
.error input.is-popup:focus, 
.warning input.is-popup:focus, 
.error-annotation input.is-popup:focus, 
.warning-annotation input.is-popup:focus, 
input.is-upload:focus,
.error input.is-upload:focus, 
.warning input.is-upload:focus, 
.error-annotation input.is-upload:focus, 
.warning-annotation input.is-upload:focus, 
button.ColorChooser:focus,
.error button.ColorChooser:focus,
.warning button.ColorChooser:focus,
.error-annotation button.ColorChooser:focus,
.warning-annotation button.ColorChooser:focus,
input.tristate:focus,
.error.active input.tristate:focus,
.warning.active input.tristate:focus,
.error-annotation.active input.tristate:focus,
.warning-annotation.active input.tristate:focus,
input.is-checkbox:focus,
.error.active input.is-checkbox:focus,
.warning.active input.is-checkbox:focus,
.error-annotation.active input.is-checkbox:focus,
.warning-annotation.active input.is-checkbox:focus,
input.is-radio:focus,
.error.active input.is-radio:focus,
.warning.active input.is-radio:focus,
.error-annotation.active input.is-radio:focus,
.warning-annotation.active input.is-radio:focus,
.cBeacon:focus,
.error.active.cBeacon:focus,
.warning.active.cBeacon:focus,
.error-annotation.active.cBeacon:focus,
.warning-annotation.active.cBeacon:focus,
cDataItem iframe:focus,
.error.cDataItem iframe:focus,
.warning.cDataItem iframe:focus,
.error-annotation.cDataItem iframe:focus,
.warning-annotation.cDataItem iframe:focus,
select.tl-select:focus,
.error select.tl-select:focus, 
.warning select.tl-select:focus, 
.error-annotation select.tl-select:focus, 
.warning-annotation select.tl-select:focus, 
textarea:focus,
.error textarea:focus,
.warning textarea:focus,
.error-annotation textarea:focus,
.warning-annotation textarea:focus,
.ace_editor textarea:focus,
.error .ace_editor textarea:focus,
.warning .ace_editor textarea:focus,
.error-annotation .ace_editor textarea:focus,
.warning-annotation .ace_editor textarea:focus {
	box-shadow: inset 0px 0px 0px 2px var(--focus),inset 0px 0px 0px 3px var(--focus-inset);
	outline: none !important;
}

.cIntegerInput.num input:focus,
.cIntegerInput.num.error input:focus,
.cIntegerInput.num.error-annotation input:focus {
	outline: none !important;
	border: none;
	box-shadow: inset 0px 0px 0px 2px var(--focus),inset 0px 0px 0px 3px var(--focus-inset);
}

.cTextInput.disabled input,
.cTextInput.disabled textarea,
.cIntegerInput.num.disabled input,
.cExpandableTextInput.disabled input,
.cExpandableTextInput.disabled textarea,
.cBlockTextInput.disabled input,
.cBlockTextInput.disabled textarea,
.cPopupSelect.disabled input,
.cDropdownSelect.disabled select.tl-select,
.cDateInput.disabled input,
.cTimeInput.disabled input {
	color: var(--text-disabled);
}

.cTextInput.disabled input::placeholder,
.cTextInput.disabled textarea::placeholder,
.cExpandableTextInput.disabled input:placeholder,
.cExpandableTextInput.disabled textarea::placeholder,
.cBlockTextInput.disabled input:placeholder,
.cBlockTextInput.disabled textarea::placeholder,
.cPopupSelect.disabled input::placeholder {
	color: var(--text-disabled);
}

select.tl-select:not([multiple="multiple"]) {
	-webkit-appearance: none;
	appearance: none;
	color: var(--text-primary);
	padding-left: var(--spacing-03);
	padding-right: var(--spacing-06);
	height: 2rem;
	max-width: 100%;
	box-sizing: border-box;
	background-image: linear-gradient(45deg, transparent 49%, var(--icon-primary) 50%), linear-gradient(135deg, var(--icon-primary) 49%, transparent 50%);
    background-position: calc(100% - 10px) center, calc(100% - 5px) center;
    background-size: 5px 5px, 5px 5px;
    background-repeat: no-repeat;
    border: none;
    background-color: var(--field);
}

select.tl-select:not([multiple="multiple"]):disabled {
    background-image: linear-gradient(45deg, transparent 49%, var(--icon-primary) 50%), linear-gradient(135deg, var(--icon-primary) 49%, transparent 50%);
    background-position: calc(100% - 10px) center, calc(100% - 5px) center;
    background-size: 5px 5px, 5px 5px;
    background-repeat: no-repeat;
}

.rf_header select.tl-select,
select.tl-select:focus:not( [multiple="multiple"] ) {
	background-image: linear-gradient(45deg, transparent 49%, var(--icon-primary) 50%), linear-gradient(135deg, var(--icon-primary) 49%, transparent 50%);
}

span.disabled > span.lFlexible > select.tl-select:not( [multiple="multiple"] ) {
	background-image: linear-gradient(45deg, transparent 49%, var(--icon-primary) 50%), linear-gradient(135deg, var(--icon-primary) 49%, transparent 50%);
}

.cPopupSelect .lFlexible, 
.cPopupSelect .is-popup:not([size]), 
.cIntegerInput .lFlexible, 
.cIntegerInput .is-input:not([size]), 
.cExpandableTextInput .lFlexible, 
.cExpandableTextInput .is-input:not([size]), 
.cTextInput:not(.searchIrrelevant) .is-input:not([size]), 
.cBlockTextInput .lFlexible, 
.cBlockTextInput .is-input:not([size]), 
.dfList .dfListEntry .cTextInput:not(.searchIrrelevant) textarea.is-input {
	box-sizing: border-box;
	width: 100%;
}

.cExpandableTextInput .lFlexible,
.cBlockTextInput .lFlexible {
	display: inline-flex
}

/* 		Radio Buttons styles	*/
/* Resets browser's default radio style. */
input[type="radio"] {
	-webkit-appearance: none;
	appearance: none;
	margin: 0;
	padding: 0;
	cursor: pointer;
}

input[type="radio"] {
	align-self: center;
	display: inline-grid;
	place-content: center;
	position: relative;
	min-height: 1rem;
	min-width: 1rem;
	border-radius: 50%;
	border: 1px solid var(--icon-primary);
}

input[type="radio"]::before {
 	content: '';
 	position: absolute;
 	top: 50%;
 	left: 50%;
 	min-height: 0.5rem;
 	min-width: 0.5rem;
 	border-radius: 50%;
 	background-color: var(--background);
	transform: scale(0);
}

input[type="radio"]:checked::before {
 	background-color: var(--icon-primary);
	transform: scale(1) translate(-50%, -50%);
}

input[type="radio"]:focus {
	box-shadow: inset 0 0 0 1px var(--focus);
}

/* 		Check Box styles	*/
/* Resets browser's default checkbox styling. */
input[type="checkbox"] {
	-webkit-appearance: none;
	appearance: none;
	margin: 0;
	padding: 0;
	cursor: pointer;
}

input[type="checkbox"] {
    display: inline-grid;
    place-content: center;
    position: relative;
    height: 1rem;
    width: 1rem;
    border-radius: 1px;
    border: 1px solid var(--icon-primary);
}

input[type="checkbox"]::before {
    content: '';
    position: absolute;
    transform: translateY(-50%);
    height: 100%;
    width: 100%;
    border-radius: 1px;
    background-color: var(--background);
    transform: scaleX(0);
}

input[type="checkbox"]:checked::before {
	content: '\f633';
	font-family: "bootstrap-icons";
	font-size: .8rem;
	display: inline-grid;
    place-content: center;
	color: var(--background);
	background-color: var(--icon-primary);
	transform: scaleX(1);
}

input[type="checkbox"]:checked:focus::before {
	box-shadow: inset 0px 0px 0px .8px var(--focus),inset 0px 0px 0px 1.3px var(--focus-inset);
}

input[type="checkbox"]:focus {
	box-shadow: inset 0px 0px 0px .8px var(--focus),inset 0px 0px 0px 1.3px var(--focus-inset);
}

/*
****										****
****	ChoiceControl, bbc-option styles	****
****										****
*/
.cBooleanChoice, .cChoice, 
.ddwttContainer.cannot-edit {
    display: inline-flex;
    flex-wrap: wrap;
	column-gap: var(--spacing-02);
	row-gap: var(--spacing-02);
}

.cChoice-icon {
	margin-left: 0.5em;
}

span.bcc-option {
    display: inline-flex;
	column-gap: var(--spacing-02);
	row-gap: var(--spacing-02);
}
.cChoice-vertical {
	flex-direction: column;
}

.cChoice-vertical.cannot-edit {
	flex-direction: row;
}

.cChoice-option {
    display: flex;
    align-items: center;
}

.cChoice-option label {
	color: var(--text-primary);
	cursor: pointer;
	margin-left: var(--spacing-02);
	padding: 0; /* Remove the space between the label and a potential option separator */
}

.cChoice-horizontal.disabled label,
.cChoice-vertical.disabled label{
	color: var(--text-disabled);
	cursor: default;
}

.cChoice-horizontal.disabled, .cChoice-vertical.disabled {
	color: var(--text-disabled);
}

.cChoice-horizontal.cannot-edit > .cChoice-option::after {
	content: ";";
}

.cChoice-horizontal.cannot-edit > .cChoice-option:last-child::after {
	content: "";
}

.cChoice-horizontal.disabled input[type="radio"], 
.cChoice-vertical.disabled input[type="radio"],
.cBooleanChoice.disabled input[type="radio"] {
	border: 1px solid  var(--icon-disabled);
}

.cChoice-horizontal.disabled input[type="radio"]:checked::before,
.cChoice-vertical.disabled input[type="radio"]:checked::before,
.cBooleanChoice.disabled input[type="radio"]:checked::before {
	background-color: var(--icon-disabled);
}

.cChoice-horizontal.disabled, .cChoice-vertical.disabled,
.cBooleanChoice.disabled {
	color: var(--text-disabled);
}

.cChoice-horizontal.disabled input[type="checkbox"], 
.cChoice-vertical.disabled input[type="checkbox"],
.cCheckbox.cannot-edit input[type="checkbox"] {
	border: 1px solid  var(--icon-disabled);
	cursor: default;
}

.cChoice-horizontal.disabled input[type="checkbox"]:checked::before,
.cChoice-vertical.disabled input[type="checkbox"]:checked::before {
	background-color: var(--icon-disabled);
	cursor: default;
}

img.cChoice-icon {
	height: 1em;
	object-fit: contain;
	align-self: center;
}

img.type-image {
	height: 1em;
	object-fit: contain;
	align-self: center;
}

a img.type-image {
    vertical-align: middle;
}

span.type-image,
a img.type-image {
	padding-right: var(--spacing-01);
}

.cSelectOption,
.cCheckbox {
	display: inline-flex;
	align-items: center;
	vertical-align: middle;
}

.fltSubContent .cSelectOption,
.fltSubContent .cCheckbox {
  	padding: 0;
  	vertical-align: middle;
}

/* ==================================== */
/* ======    Color Chooser css    ===== */
/* ==================================== */
.ColorChooser {
	height: 1.5rem;
	width: 1.5rem;
	padding: 0;
	border: 1px solid var(--border-strong);
	border-radius: var(--corner-radius);
}

.ColorChooser.active {
	cursor:pointer;
}

.ColorChooser.noColor {
	background-image: url("../images/semi64x64lg.png");
}

span.cColorDisplay {
	border-style: solid;
	border-color: black;
	border-width: 1px;
	padding-top: 3px;
	padding-bottom: 3px;
	padding-right: 40px;
}

span.cColorDisplay.noColor {
	background-image: var(--COLORCHOOSER_NO_COLOR);	
	background-position: center;
	background-repeat: no-repeat;
}

span.cColorDisplay.canDrag {
	cursor: pointer;
}

div.DNDmouseMarker span.cColorDisplay {
	padding-top: 3px;
	padding-bottom: 3px;
	padding-right: 20px;
}

div.cColorPalette div.row {
	clear: both;	
}

div.cColorPalette span.cColorDisplay {
	display: block;
	float: left;
	width: 30px;
	height: 30px;
	padding: 0px;
	margin: 2px;
}

span.colorDisplay {
	display: inline-block;
	border: 1px solid var(--border-subtle);
	width: 1rem;
	height: 1rem;
}

/* ColorChooserSelectionControl */

div.cColorComposer td {
	vertical-align: top;
}

div.cColorComposer tr.spacer {
	height: 3px;
}

.colorDialog {
	padding: 3px;
}

.colorCell {
    cursor:pointer;
    height:30px;
    width:30px;
}

.tl-colorchooser__colorf-field {
	position: absolute;
	height: 192px;
	width: 192px;
}

.tl_colorchooser__circle {
	position: absolute;
	height: 12px;
	width: 12px;
	cursor: pointer;
}

.tl_colorchooser__color-line {
	position: absolute;
	height: 192px;
	width: 30px;
	top: 0px;
	left: 195px
}

.tl_colorchooser__hline {
	position: absolute;
	height: 12px;
	width: 30px;
	cursor: pointer;
}

.cBeacon {
	display: inline-flex;
	flex-direction: row;
	height: 100%;
}

.cBeacon > span{
	display: inline-flex;
	align-items: center;
}

.cBeacon input {
	width: 16px;
	height: 16px;
}

div.sizeContainer, 
div.imageContainer {
	position: absolute;
	text-align: center;
	left: 2px;
	top: 2px;
	right: 2px;
	bottom: 2px;
}

/* ==================================== */
/* ======    Icon Chooser css     ===== */
/* ==================================== */
.cIconChooser div.header .searchTextField input.is-input {
    margin-top: 10px;
    margin-left: 10px;
    margin-bottom: 10px;
	width: calc(96% - 67px);
	padding-left: 23px;
	height: 22px;
}

.cIconChooser div.header .expertTextField input.is-input {
    margin-top: 10px;
    margin-left: 10px;
    margin-bottom: 10px;
	width: calc(96% - 67px);
	height: 22px;
}

.cIconChooser div.header a {
	border: 0px;
}

.cIconChooser div.header .inputfield {
	position: absolute;
	top: 0px;
	left: 0px;
	width: 100%;
}

.cIconChooser div.header .resetButton,
.cIconChooser div.header .okButton {
	position: absolute;
	bottom: 5px;
	right: 35px;
}

.cIconChooser div.header .toggleExpertButton {
	position: absolute;
	bottom: 5px;
	right: 5px;
}

.cIconChooser .searchTextField .search {
	position: absolute;
	top: 12px;
	left: 12px;
	color: var(--icon-secondary);
}

.cIconChooser .fptBodyContent .displayedIcons {
	position: relative;
	display: inline-block;
    margin-bottom: 5px;
    margin-right: 5px;
	width: 30px;
	height: 30px;
	border: 1px solid var(--border-subtle);
}

.cIconChooser a,
.cIconChooser .input-image {
	display: table-cell;
	text-align: center;	
	vertical-align: middle;
}

.cIconChooser div.header .toggleExpertButton a,
.cIconChooser div.header .resetButton a,
.cIconChooser div.header .okButton a,
.cIconChooser .fptBodyContent .displayedIcons a {
	width: 30px;
	height: 30px;
}

.cIconChooser .fptBodyContent input {
    position: absolute;
    top: 50%;
    right: 50%;
    transform: translate(50%,-50%);
	max-width: 30px;
	max-height: 30px;
}

.cIconChooser .fptBodyContent .displayedIcons {
	background-color: var(--layer-accent);
	color: var(--layer-accent-text);
	--button-fg: var(--layer-accent-icon);
}

.cIconChooser .fptBodyContent .displayedIcons.selected {
	background-color: var(--layer-accent-selected);
}

.cIconChooser .fptBodyContent .displayedIcons:hover {
	background-color: var(--layer-accent-hover);
}

.cIconChooser i {
    font-size: 1rem;
    color: var(--button-fg, var(--icon-primary));
}

.cIconChooser div.header {
	position: absolute;
	left: 0px; 
	top: 0px; 
	height: 42px;
	width: 100%;
}

.cIconChooser div.fptBody {
 	position: absolute; 
	left: 0px; 
	right: 0px; 
	bottom: 0px; 
	top: 42px;
	bottom: 0px; 
}

.cIconChooser div.fptBodyContent {
	padding-top: 0px;
}

.cIconChooser .cannot-edit .is-input, 
.cIconChooser .disabled .is-input {
	display: inline-block;
}

.cIconChooser .input-image {
	height: 1.5rem;
	width: 1.5rem;
	padding: 0;
	border: 1px solid var(--border-strong);
	border-radius: var(--corner-radius);
	background-color: var(--layer-accent);
	color: var(--layer-accent-text);
	--button-fg: var(--layer-accent-icon);
}

.cIconChooser .input-image:hover {
	background-color: var(--layer-accent-hover);
}

.cIconChooser .input-image.disabled,
.cIconChooser .input-image.disabled:hover {
	color: var(--icon-disabled);
	background-color: none;
}

.cIconChooser, 
.cIconChooser img {
	display: inline-block;
	min-height: 20px;
	min-width: 20px;
}

.cIconChooser input.is-action {
	margin: 0px;
}

/* ==================================== */
/* ======     DataItemControl     ===== */
/* ==================================== */

.cDataItem input {
	margin-left: 2px;
}

.cDataItem input.first {
	margin-left: 0px;
}

.cDataItem input {
    background-color: var(--background);
}

.cDataItem input[type="file"] {
	display: none;
}

.cDataItem label {
	display: inline-block;
	cursor: pointer;
	color: var(--text-on-color);
	padding-left: var(--spacing-02);
	border-radius: var(--corner-radius);
	background: var(--button-primary);
	box-shadow: inset 0px 0px 0px 1px var(--button-primary);
	white-space: nowrap;
}

.cDataItem label .cmdImg {
	padding-right: var(--spacing-02);
}

.cDataItem label .cmdLabel {
	padding-right: var(--spacing-03);
	white-space: nowrap;
}

.cDataItem label:hover {
	background: var(--button-primary-hover);
	box-shadow: inset 0px 0px 0px 1px var(--button-primary-hover);
}

.cDataItem label:focus {
	box-shadow: inset 0px 0px 0px 2px var(--focus),inset 0px 0px 0px 3px var(--focus-inset);
	outline: none !important;
}

.cDataItem label:active {
	background: var(--button-primary-active);
}

.cDataItem label.cmdButtonDisabled {
	background: var(--button-disabled);
	box-shadow: inset 0px 0px 0px 1px var(--button-disabled);
}

.cDataItem label.cmdButtonDisabled .cmdLabel {
	color: var(--text-on-color-disabled);
}

.cDataItem label.cmdButtonDisabled .cmdImg {
	color: var(--icon-on-color-disabled);
}

/* Display inline when shown in a table cell. */
td.tl-table__cell .cDataItem ul,
td.tl-table__cell .cDataItem li {
	display: inline;
}

/* Display as table when multiple files are uploaded. */
.cDataItem ul {
	margin-top: 0px;
	margin-bottom: 0px;
	margin-left: 2px;
	padding: 0;
	
	display: table;
	border-spacing: 0px;
}

.cDataItem li {
	margin: 0;
	padding: 0;
	list-style: none;
	
	display: table-row-group;
}

.cDataItem li .cDownload {
	display: table-row;
}

.cDataItem li .cDownload .lFlexible,
.cDataItem li .cDownload .lFixedRight  {
	display: table-cell;
	padding-bottom: 8px;
	padding-right: 8px;
}

/* ==================================== */
/* ======     DownloadControl     ===== */
/* ==================================== */

.downloadControl input {
	margin-left: 2px;
}

.downloadControl input.first {
	margin-left: 0px;
}

.downloadControl input {
    background-color: var(--background);
}

a.input-image.tristate .bi-x-octagon-fill,
a.input-image.tristate .bi-exclamation-triangle-fill {
	color: var(--support-danger);
}

a.input-image.tristate .bi-info-circle-fill,
a.input-image.tristate .bi-info-square {
	color: var(--support-info);
}

a.input-image.tristate.tBoolean {
	color: var(--button-fg, var(--icon-primary))
}

/* ============================================= */
/* ========== DropDown with Tooltip  =========== */
/* ============================================= */

/* 	The CSS-Class prefix "ddwtt" uniquely identifies elements from DropDownControl.
	The prefix stands for "DropDown With ToolTip". */
.ddwttContainer {
	position: relative;
	text-align: center;
	cursor: default;
	margin: 0 !important;
	overflow: hidden;
}

.ddwttContainer.active {
	display: flex;
	flex-wrap: wrap;
}

.dfContent .ddwttContainer::before, .dfContent .ddwttContainer::after {
	content: " ";
}

.rf_header .ddwttDropBtn {
	margin-left: var(--spacing-02);
}

.ddwttDropBtn {
	font-family: var(--font-family);
	font-size: var(--body-02-font-size);
	line-height: var(--body-02-line-height);
	letter-spacing: var(--body-02-letter-spacing);
	width: fit-content;
	max-width: 100%;
	height: 2rem;
	border: none;
	display: inline-flex;
	align-items: center;
	color: var(--highlight-fg, var(--text-primary));
	background: var(--highlight-bg, var(--field));
	padding-left: var(--spacing-03);
	padding-right: var(--spacing-02);
	gap: var(--spacing-02);
	cursor: pointer;
}

.ddwttDropBtn .ddwttButtonContent {
	display: inline-flex;
	gap: var(--spacing-02);
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
}

span.disabled .ddwttDropBtn {
	background: var(--field);
	color: var(--text-disabled);
}

.ddwttContainer.error .ddwttDropBtn {
	box-shadow: inset 0px 0px 0px 1px var(--support-danger),inset 0px 0px 0px 2px var(--focus-inset);
}

.ddwttContainer .ddwttDropBtn:focus,
.error.ddwttDropBtnActive .ddwttDropBtn{
	box-shadow: inset 0px 0px 0px 2px var(--focus),inset 0px 0px 0px 3px var(--focus-inset);
	outline: none !important;
}

.fptSubtitleContent .ddwttDropBtn, 
.fptSubtitleContent input {
	height: 1.4rem;
}

.ddwttDropBtn .ddwttChevron i {
	color: var(--highlight-fg, var(--icon-on-color-disabled));
}

.ddwttDropBtnActive .ddwttChevron i {
	color: var(--button-fg, var(--icon-primary));
}

/* DropDown */
.ddwttDDBox {
	display: inline-flex;
	flex-direction: column;
	margin: 0;
	position: fixed;
	width: fit-content;
	z-index: 10;
	background-color: var(--field);
	border: 1px solid var(--focus);
	color: var(--text-secondary);
	box-sizing: border-box;
	box-shadow: var(--shadow-menu);
}

.ddwttDDBox span {
	margin: 0;
	line-height: 2rem;
}

.ddwttContainer .ddwttDDBox {
	display: none;
}

.ddwttDDList {
	display: flex;
	flex-direction: column;
	overflow-y: auto;
}

.ddwttSearch {
	font-family: var(--font-family);
	font-size: var(--body-02-font-size);
	line-height: var(--body-02-line-height);
	letter-spacing: var(--body-02-letter-spacing);
	height: 2rem;
	border: none;
	border-radius: initial;
	background: var(--field);
	padding: 0 var(--spacing-03);
	flex-shrink: 0;
}

.ddwttSearch::-webkit-search-cancel-button {
	cursor: pointer;
}

.ddwttSearch:focus-visible {
	color: var(--text-primary);
	box-shadow: inset 0px 0px 0px 2px var(--focus),inset 0px 0px 0px 3px var(--focus-inset);
	outline: none !important;
}

.ddwttHide {
	position: absolute;
	clip-path: circle(0);
	top: 0;
	left: 0;
}

.ddwttItem.ddwttSelectedItem {
	display: none;
}

.ddwttItem {
	display: inline-flex;
	gap: var(--spacing-02);
	padding: 0 var(--spacing-02) 0 var(--spacing-03);
	position: relative;
	text-align: left;
	cursor: pointer;
}

.ddwttActiveItem {
	color: var(--text-primary);
	background-color: var(--layer-hover);
	outline: none;
}

.ddwttActiveItem:focus{
	box-shadow: inset 0px 0px 0px 2px var(--focus),inset 0px 0px 0px 3px var(--focus-inset);
	outline: none !important;
}

.ddwttImmutableItem {
	display: inline-flex;
	text-align: left;
}

img.ddwttItemIcon {
	height: 1em;
	object-fit: contain;
	align-self: center;
}

.ddwttItem .ddwttItemLabel {
	display: inline-block;}

.ddwttItemLabel {
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
}

/* Tags */
.ddwttTagLoc {
	display: contents;
}

.ddwttTag {
	display: inline-flex;
	width: fit-content;
	align-items: center;
	justify-content: center;
	height: 2rem;
	border: 1px solid var(--border-subtle);
	box-sizing: border-box;
	padding: 0 var(--spacing-02);
	margin-right: var(--spacing-02);
	margin-bottom: var(--spacing-02);
	gap: var(--spacing-02);
}

.ddwttTagX {
	width: .875rem;
	height: 0.875rem;
	/* Style from .fClear */
	transform: scale(0.8);
	display: inline-flex;
	align-items: center;
}

.ddwttTagX i {
	color: var(--button-fg, var(--icon-primary));
}

/* Tooltip */
.ddwttTooltip {
	min-width: 200px;
	max-width: 500px;
	background-color: var(--layer);
	position: fixed;
	filter: drop-shadow(var(--shadow-menu));
	display: none;
	z-index: 9999999999999999;
}

.ddwttActiveItem .ddwttTooltip {
	display: flex;
	flex-direction: column;
}

/* tooltip Arrow */
.ddwttTooltip::after {
	content: '';
	position: absolute;
	width: var(--ttArrow-dim);
	height: var(--ttArrow-dim);
	top: var(--ttArrow-top);
	transform: var(--ttArrow-trans);
	background-color: var(--layer);
	--ttArrow-dim: 18px;
}

.ddwttTtArrowLeft::after {
	left: 2px;
	--ttArrow-trans: translate(-50%, -50%);
	clip-path: polygon(50% 0%, 0% 50%, 50% 100%);
}

.ddwttTtArrowRight::after {
	right: 2px;
	--ttArrow-trans: translate(50%, -50%);
	clip-path: polygon(50% 0%, 100% 50%, 50% 100%);
}

.ddwttTooltipContent {
	overflow-y: auto;
	white-space: normal;
	overflow-wrap: break-word;
	max-height: calc(100vh - (var(--ttPadding) * 4));
	--ttPadding: var(--spacing-02);;
	padding: var(--ttPadding) 12px;
	line-height: 1.5 !important;
	color: var(--text-inverse);
}

.ddwttTooltipContent * {
	margin: 0;
	color: var(--text-inverse);
	line-height: 1.5 !important;
	padding: 0 !important;
}

.ddwttTooltipContent :is(h1, h2, h3, h4, h5, h6) {
    clear: both;
	margin-bottom: var(--spacing-01);
}

/* ========================== */
/* ====== Legacy Search ===== */
/* ========================== */

.searchIrrelevant input,
.searchIrrelevant textarea,
.searchIrrelevant select.tl-select {
	color: var(--text-primary);
	background: var(--field);
}

.searchPositive input,
.searchPositive textarea,
.searchPositive select.tl-select {
	color: var(--text-primary);
	background: var(--notification-success-background);
}

.searchNegative input,
.searchNegative textarea,
.searchNegative select.tl-select {
	color: var(--text-primary);
	background: var(--notification-danger-background);
}

span.is-accesskey {
	text-decoration: underline;
}

/* smartInputField */
div.sifFloater {
    z-index: 20;
    border: 1px solid var(--border-subtle);
    background-color: var(--field);
}

div.sifSearchElement,
div.sifSearchElementUnselectable {
    vertical-align: middle;
    white-space: pre;
	color: var(--text-secondary);
	text-decoration:none;
    z-index: 21;
	padding: 0 var(--spacing-02);
	line-height: 2rem;
}

div.sifSearchElement {
    cursor: pointer;
}

div.sifSearchElementUnselectable {
    cursor: default;
}

div.sifSearchElementSelected {
    vertical-align: middle;
    white-space: pre;
	color: var(--text-primary);
	text-decoration:none;
    background-color: var(--layer-hover);
    z-index: 21;
    cursor: pointer;
    padding: 0 var(--spacing-02);
    line-height: 2rem;
}

div.sifSearchElementSelected:focus {
    box-shadow: inset 0px 0px 0px 2px var(--focus),inset 0px 0px 0px 3px var(--focus-inset);
    outline: none !important;
}

.rf_columnsLayout {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	align-content: flex-start;

	/* Since each input cell has left margin columns gap, the whole layout must be shift to the left by one column gap. */	
  	box-sizing: border-box;
	margin-left: calc(-1 * var(--RF_HORIZONTAL_GAP_COLUMNS));
	with: calc(100% + var(--RF_HORIZONTAL_GAP_COLUMNS));
}

.rf_columnsLayout > .rf_inputCell {
  	box-sizing: border-box;
 	width: calc(100% - var(--RF_HORIZONTAL_GAP_COLUMNS)); 
  	overflow: auto;
  	
  	/* Realize gap between columns. The first column has also a margin to the left, which is compensated by a negative margin for the whole group. */
	margin-left: var(--RF_HORIZONTAL_GAP_COLUMNS);
}

.rf_columnsLayout.cols5 > .rf_inputCell {
 	width: calc(20% - var(--RF_HORIZONTAL_GAP_COLUMNS)); 
}

.rf_columnsLayout.cols4 > .rf_inputCell {
 	width: calc(25% - var(--RF_HORIZONTAL_GAP_COLUMNS)); 
}

.rf_columnsLayout.cols3 > .rf_inputCell {
 	width: calc(33% - var(--RF_HORIZONTAL_GAP_COLUMNS)); 
}

.rf_columnsLayout.cols2 > .rf_inputCell {
 	width: calc(50% - var(--RF_HORIZONTAL_GAP_COLUMNS)); 
}

.rf_columnsLayout.cols1 > .rf_inputCell {
 	width: calc(100% - var(--RF_HORIZONTAL_GAP_COLUMNS)); 
}

.rf_columnsLayout > .rf_inputCell.rf_line {
 	width: calc(100% - var(--RF_HORIZONTAL_GAP_COLUMNS)); 
}

/*************************************
 * Inner structure of a form cell.
 *************************************/

.rf_columnsLayout > .rf_inputCell.rf_withLabel {
	display: grid;
	grid-template-columns: minmax(var(--RF_FIRST_COLUMN_WIDTH), max-content) minmax(0, 1fr);
	grid-gap: var(--spacing-02) var(--spacing-02);
}

.rf_columnsLayout > .rf_inputCell.rf_withLabel > .rf_label {
	grid-row: 1;
	grid-column: 1;
}

.rf_columnsLayout > .rf_inputCell.rf_withLabel > .rf_cell {
	grid-row: 1;
	grid-column: 2;
}

.rf_columnsLayout > .rf_inputCell.rf_noLabel {
	display: grid;
	grid-template-columns: minmax(0, 1fr);
}

.rf_columnsLayout > .rf_inputCell.rf_noLabel > .rf_cell {
	grid-row: 1;
	grid-column: 1;
}

/* The whole cell only consists of a label. Everything within that cell is displayed inline. */
.rf_columnsLayout > .rf_inputCell.rf_labelInline {
	display: block;
}

.rf_columnsLayout > .rf_inputCell.rf_labelInline > .rf_label div {
	display: inline;
}

.rf_cell {
	/* Prevent layout havoc due to very long otherwise unbreakable strings. */
	overflow-wrap: break-word;
}
