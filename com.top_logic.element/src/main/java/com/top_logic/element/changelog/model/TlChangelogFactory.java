/*
 * SPDX-FileCopyrightText: 2025 (c) Business Operation Systems GmbH <info@top-logic.com>
 * 
 * SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-BOS-TopLogic-1.0
 */
package com.top_logic.element.changelog.model;

/**
 * Factory for <code>tl.changelog</code> objects.
 * 
 * <p>
 * Note: this is generated code. Do not modify. Instead, create a subclass and register this in the module system.
 * </p>
 * 
 * @author Automatically generated by {@link com.top_logic.element.model.generate.FactoryGenerator}
 */
public class TlChangelogFactory extends com.top_logic.element.meta.kbbased.AbstractElementFactory {

	/**
	 * Name of the structure <code>tl.changelog</code> defined by {@link TlChangelogFactory}.
	 */
	public static final String TL_CHANGELOG_STRUCTURE = "tl.changelog";

	/**
	 * Name of the enumeration <code>ErrorAction</code> in module {@value #TL_CHANGELOG_STRUCTURE}.
	 */
	public static final String ERROR_ACTION_ENUM = "ErrorAction";

	/**
	 * Name of the classifier <code>IGNORE</code> in enumeration {@value #ERROR_ACTION_ENUM}.
	 */
	public static final String IGNORE_ERROR_ACTION_CLASSIFIER = "IGNORE";

	/**
	 * Name of the enumeration <code>WarningAction</code> in module {@value #TL_CHANGELOG_STRUCTURE}.
	 */
	public static final String WARNING_ACTION_ENUM = "WarningAction";

	/**
	 * Name of the classifier <code>IGNORE</code> in enumeration {@value #WARNING_ACTION_ENUM}.
	 */
	public static final String IGNORE_WARNING_ACTION_CLASSIFIER = "IGNORE";

	/**
	 * Name of the classifier <code>SKIP</code> in enumeration {@value #WARNING_ACTION_ENUM}.
	 */
	public static final String SKIP_WARNING_ACTION_CLASSIFIER = "SKIP";

	/**
	 * Lookup {@link Change} type.
	 */
	public static com.top_logic.model.TLClass getChangeType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(Change.CHANGE_TYPE);
	}

	/**
	 * Lookup {@link Change#BELONGS_TO_ATTR} of {@link Change}.
	 */
	public static com.top_logic.model.TLReference getBelongsToChangeAttr() {
		return (com.top_logic.model.TLReference) getChangeType().getPart(Change.BELONGS_TO_ATTR);
	}

	/**
	 * Lookup {@link Change#IMPLICIT_ATTR} of {@link Change}.
	 */
	public static com.top_logic.model.TLProperty getImplicitChangeAttr() {
		return (com.top_logic.model.TLProperty) getChangeType().getPart(Change.IMPLICIT_ATTR);
	}

	/**
	 * Lookup {@link Change#OBJECT_ATTR} of {@link Change}.
	 */
	public static com.top_logic.model.TLReference getObjectChangeAttr() {
		return (com.top_logic.model.TLReference) getChangeType().getPart(Change.OBJECT_ATTR);
	}

	/**
	 * Lookup {@link Change#OLD_OBJECT_ATTR} of {@link Change}.
	 */
	public static com.top_logic.model.TLReference getOldObjectChangeAttr() {
		return (com.top_logic.model.TLReference) getChangeType().getPart(Change.OLD_OBJECT_ATTR);
	}

	/**
	 * Lookup {@link Change#PART_CHANGES_ATTR} of {@link Change}.
	 */
	public static com.top_logic.model.TLReference getPartChangesChangeAttr() {
		return (com.top_logic.model.TLReference) getChangeType().getPart(Change.PART_CHANGES_ATTR);
	}

	/**
	 * Lookup {@link Creation} type.
	 */
	public static com.top_logic.model.TLClass getCreationType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(Creation.CREATION_TYPE);
	}

	/**
	 * Lookup {@link Deletion} type.
	 */
	public static com.top_logic.model.TLClass getDeletionType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(Deletion.DELETION_TYPE);
	}

	/**
	 * Lookup {@link Update} type.
	 */
	public static com.top_logic.model.TLClass getUpdateType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(Update.UPDATE_TYPE);
	}

	/**
	 * Lookup {@link Update#MODIFICATIONS_ATTR} of {@link Update}.
	 */
	public static com.top_logic.model.TLReference getModificationsUpdateAttr() {
		return (com.top_logic.model.TLReference) getUpdateType().getPart(Update.MODIFICATIONS_ATTR);
	}

	/**
	 * Lookup {@link ChangeConfirmation} type.
	 */
	public static com.top_logic.model.TLClass getChangeConfirmationType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(ChangeConfirmation.CHANGE_CONFIRMATION_TYPE);
	}

	/**
	 * Lookup {@link ChangeConfirmation#INFO_ATTR} of {@link ChangeConfirmation}.
	 */
	public static com.top_logic.model.TLProperty getInfoChangeConfirmationAttr() {
		return (com.top_logic.model.TLProperty) getChangeConfirmationType().getPart(ChangeConfirmation.INFO_ATTR);
	}

	/**
	 * Lookup {@link ErrorMessage} type.
	 */
	public static com.top_logic.model.TLClass getErrorMessageType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(ErrorMessage.ERROR_MESSAGE_TYPE);
	}

	/**
	 * Lookup {@link ErrorMessage#ACTION_ATTR} of {@link ErrorMessage}.
	 */
	public static com.top_logic.model.TLReference getActionErrorMessageAttr() {
		return (com.top_logic.model.TLReference) getErrorMessageType().getPart(ErrorMessage.ACTION_ATTR);
	}

	/**
	 * Lookup {@link WarningMessage} type.
	 */
	public static com.top_logic.model.TLClass getWarningMessageType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(WarningMessage.WARNING_MESSAGE_TYPE);
	}

	/**
	 * Lookup {@link WarningMessage#ACTION_ATTR} of {@link WarningMessage}.
	 */
	public static com.top_logic.model.TLReference getActionWarningMessageAttr() {
		return (com.top_logic.model.TLReference) getWarningMessageType().getPart(WarningMessage.ACTION_ATTR);
	}

	/**
	 * Lookup {@link ChangeSet} type.
	 */
	public static com.top_logic.model.TLClass getChangeSetType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(ChangeSet.CHANGE_SET_TYPE);
	}

	/**
	 * Lookup {@link ChangeSet#AUTHOR_ATTR} of {@link ChangeSet}.
	 */
	public static com.top_logic.model.TLReference getAuthorChangeSetAttr() {
		return (com.top_logic.model.TLReference) getChangeSetType().getPart(ChangeSet.AUTHOR_ATTR);
	}

	/**
	 * Lookup {@link ChangeSet#CHANGES_ATTR} of {@link ChangeSet}.
	 */
	public static com.top_logic.model.TLReference getChangesChangeSetAttr() {
		return (com.top_logic.model.TLReference) getChangeSetType().getPart(ChangeSet.CHANGES_ATTR);
	}

	/**
	 * Lookup {@link ChangeSet#DATE_ATTR} of {@link ChangeSet}.
	 */
	public static com.top_logic.model.TLProperty getDateChangeSetAttr() {
		return (com.top_logic.model.TLProperty) getChangeSetType().getPart(ChangeSet.DATE_ATTR);
	}

	/**
	 * Lookup {@link ChangeSet#MESSAGE_ATTR} of {@link ChangeSet}.
	 */
	public static com.top_logic.model.TLProperty getMessageChangeSetAttr() {
		return (com.top_logic.model.TLProperty) getChangeSetType().getPart(ChangeSet.MESSAGE_ATTR);
	}

	/**
	 * Lookup {@link ChangeSet#PARENT_REV_ATTR} of {@link ChangeSet}.
	 */
	public static com.top_logic.model.TLReference getParentRevChangeSetAttr() {
		return (com.top_logic.model.TLReference) getChangeSetType().getPart(ChangeSet.PARENT_REV_ATTR);
	}

	/**
	 * Lookup {@link ChangeSet#REVISION_ATTR} of {@link ChangeSet}.
	 */
	public static com.top_logic.model.TLReference getRevisionChangeSetAttr() {
		return (com.top_logic.model.TLReference) getChangeSetType().getPart(ChangeSet.REVISION_ATTR);
	}

	/**
	 * Lookup {@link Modification} type.
	 */
	public static com.top_logic.model.TLClass getModificationType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(Modification.MODIFICATION_TYPE);
	}

	/**
	 * Lookup {@link Modification#NEW_VALUE_ATTR} of {@link Modification}.
	 */
	public static com.top_logic.model.TLProperty getNewValueModificationAttr() {
		return (com.top_logic.model.TLProperty) getModificationType().getPart(Modification.NEW_VALUE_ATTR);
	}

	/**
	 * Lookup {@link Modification#OLD_VALUE_ATTR} of {@link Modification}.
	 */
	public static com.top_logic.model.TLProperty getOldValueModificationAttr() {
		return (com.top_logic.model.TLProperty) getModificationType().getPart(Modification.OLD_VALUE_ATTR);
	}

	/**
	 * Lookup {@link Modification#PART_ATTR} of {@link Modification}.
	 */
	public static com.top_logic.model.TLReference getPartModificationAttr() {
		return (com.top_logic.model.TLReference) getModificationType().getPart(Modification.PART_ATTR);
	}

	/**
	 * Lookup {@link Operation} type.
	 */
	public static com.top_logic.model.TLClass getOperationType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(Operation.OPERATION_TYPE);
	}

	/**
	 * Lookup {@link Operation#CONFIRMATIONS_ATTR} of {@link Operation}.
	 */
	public static com.top_logic.model.TLReference getConfirmationsOperationAttr() {
		return (com.top_logic.model.TLReference) getOperationType().getPart(Operation.CONFIRMATIONS_ATTR);
	}

	/**
	 * Lookup {@link CreateOp} type.
	 */
	public static com.top_logic.model.TLClass getCreateOpType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(CreateOp.CREATE_OP_TYPE);
	}

	/**
	 * Lookup {@link CreateOp#ID_ATTR} of {@link CreateOp}.
	 */
	public static com.top_logic.model.TLProperty getIdCreateOpAttr() {
		return (com.top_logic.model.TLProperty) getCreateOpType().getPart(CreateOp.ID_ATTR);
	}

	/**
	 * Lookup {@link CreateOp#INITIALIZERS_ATTR} of {@link CreateOp}.
	 */
	public static com.top_logic.model.TLReference getInitializersCreateOpAttr() {
		return (com.top_logic.model.TLReference) getCreateOpType().getPart(CreateOp.INITIALIZERS_ATTR);
	}

	/**
	 * Lookup {@link CreateOp#TYPE_ATTR} of {@link CreateOp}.
	 */
	public static com.top_logic.model.TLReference getTypeCreateOpAttr() {
		return (com.top_logic.model.TLReference) getCreateOpType().getPart(CreateOp.TYPE_ATTR);
	}

	/**
	 * Lookup {@link DeleteOp} type.
	 */
	public static com.top_logic.model.TLClass getDeleteOpType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(DeleteOp.DELETE_OP_TYPE);
	}

	/**
	 * Lookup {@link DeleteOp#TARGET_ATTR} of {@link DeleteOp}.
	 */
	public static com.top_logic.model.TLReference getTargetDeleteOpAttr() {
		return (com.top_logic.model.TLReference) getDeleteOpType().getPart(DeleteOp.TARGET_ATTR);
	}

	/**
	 * Lookup {@link UpdateOp} type.
	 */
	public static com.top_logic.model.TLClass getUpdateOpType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(UpdateOp.UPDATE_OP_TYPE);
	}

	/**
	 * Lookup {@link UpdateOp#TARGET_ATTR} of {@link UpdateOp}.
	 */
	public static com.top_logic.model.TLReference getTargetUpdateOpAttr() {
		return (com.top_logic.model.TLReference) getUpdateOpType().getPart(UpdateOp.TARGET_ATTR);
	}

	/**
	 * Lookup {@link UpdateOp#UPDATES_ATTR} of {@link UpdateOp}.
	 */
	public static com.top_logic.model.TLReference getUpdatesUpdateOpAttr() {
		return (com.top_logic.model.TLReference) getUpdateOpType().getPart(UpdateOp.UPDATES_ATTR);
	}

	/**
	 * Lookup {@link SetOp} type.
	 */
	public static com.top_logic.model.TLClass getSetOpType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(SetOp.SET_OP_TYPE);
	}

	/**
	 * Lookup {@link SetOp#PROPERTY_ATTR} of {@link SetOp}.
	 */
	public static com.top_logic.model.TLReference getPropertySetOpAttr() {
		return (com.top_logic.model.TLReference) getSetOpType().getPart(SetOp.PROPERTY_ATTR);
	}

	/**
	 * Lookup {@link SetOp#VALUE_ATTR} of {@link SetOp}.
	 */
	public static com.top_logic.model.TLProperty getValueSetOpAttr() {
		return (com.top_logic.model.TLProperty) getSetOpType().getPart(SetOp.VALUE_ATTR);
	}

	/**
	 * Lookup {@value #ERROR_ACTION_ENUM} enumeration.
	 */
	public static com.top_logic.model.TLEnumeration getErrorActionEnum() {
		return (com.top_logic.model.TLEnumeration) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(ERROR_ACTION_ENUM);
	}

	/**
	 * Lookup classifier {@value #IGNORE_ERROR_ACTION_CLASSIFIER} of enumeration {@value #ERROR_ACTION_ENUM}.
	 */
	public static com.top_logic.model.TLClassifier getIGNOREErrorActionClassifier() {
		return getErrorActionEnum().getClassifier(IGNORE_ERROR_ACTION_CLASSIFIER);
	}

	/**
	 * Lookup {@value #WARNING_ACTION_ENUM} enumeration.
	 */
	public static com.top_logic.model.TLEnumeration getWarningActionEnum() {
		return (com.top_logic.model.TLEnumeration) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CHANGELOG_STRUCTURE).getType(WARNING_ACTION_ENUM);
	}

	/**
	 * Lookup classifier {@value #IGNORE_WARNING_ACTION_CLASSIFIER} of enumeration {@value #WARNING_ACTION_ENUM}.
	 */
	public static com.top_logic.model.TLClassifier getIGNOREWarningActionClassifier() {
		return getWarningActionEnum().getClassifier(IGNORE_WARNING_ACTION_CLASSIFIER);
	}

	/**
	 * Lookup classifier {@value #SKIP_WARNING_ACTION_CLASSIFIER} of enumeration {@value #WARNING_ACTION_ENUM}.
	 */
	public static com.top_logic.model.TLClassifier getSKIPWarningActionClassifier() {
		return getWarningActionEnum().getClassifier(SKIP_WARNING_ACTION_CLASSIFIER);
	}

	/**
	 * Name of type <code>Change</code> in structure {@link #TL_CHANGELOG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Change#CHANGE_TYPE}.
	 */
	@Deprecated
	public static final String CHANGE_NODE = Change.CHANGE_TYPE;

	/**
	 * Storage table name of {@link #CHANGE_NODE} objects.
	 */
	public static final String KO_NAME_CHANGE = "GenericObject";

	/**
	 * Name of type <code>Creation</code> in structure {@link #TL_CHANGELOG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Creation#CREATION_TYPE}.
	 */
	@Deprecated
	public static final String CREATION_NODE = Creation.CREATION_TYPE;

	/**
	 * Storage table name of {@link #CREATION_NODE} objects.
	 */
	public static final String KO_NAME_CREATION = "GenericObject";

	/**
	 * Name of type <code>Deletion</code> in structure {@link #TL_CHANGELOG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Deletion#DELETION_TYPE}.
	 */
	@Deprecated
	public static final String DELETION_NODE = Deletion.DELETION_TYPE;

	/**
	 * Storage table name of {@link #DELETION_NODE} objects.
	 */
	public static final String KO_NAME_DELETION = "GenericObject";

	/**
	 * Name of type <code>Update</code> in structure {@link #TL_CHANGELOG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Update#UPDATE_TYPE}.
	 */
	@Deprecated
	public static final String UPDATE_NODE = Update.UPDATE_TYPE;

	/**
	 * Storage table name of {@link #UPDATE_NODE} objects.
	 */
	public static final String KO_NAME_UPDATE = "GenericObject";

	/**
	 * Name of type <code>ChangeConfirmation</code> in structure {@link #TL_CHANGELOG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link ChangeConfirmation#CHANGE_CONFIRMATION_TYPE}.
	 */
	@Deprecated
	public static final String CHANGE_CONFIRMATION_NODE = ChangeConfirmation.CHANGE_CONFIRMATION_TYPE;

	/**
	 * Name of type <code>ErrorMessage</code> in structure {@link #TL_CHANGELOG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link ErrorMessage#ERROR_MESSAGE_TYPE}.
	 */
	@Deprecated
	public static final String ERROR_MESSAGE_NODE = ErrorMessage.ERROR_MESSAGE_TYPE;

	/**
	 * Storage table name of {@link #ERROR_MESSAGE_NODE} objects.
	 */
	public static final String KO_NAME_ERROR_MESSAGE = "GenericObject";

	/**
	 * Name of type <code>WarningMessage</code> in structure {@link #TL_CHANGELOG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link WarningMessage#WARNING_MESSAGE_TYPE}.
	 */
	@Deprecated
	public static final String WARNING_MESSAGE_NODE = WarningMessage.WARNING_MESSAGE_TYPE;

	/**
	 * Storage table name of {@link #WARNING_MESSAGE_NODE} objects.
	 */
	public static final String KO_NAME_WARNING_MESSAGE = "GenericObject";

	/**
	 * Name of type <code>ChangeSet</code> in structure {@link #TL_CHANGELOG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link ChangeSet#CHANGE_SET_TYPE}.
	 */
	@Deprecated
	public static final String CHANGE_SET_NODE = ChangeSet.CHANGE_SET_TYPE;

	/**
	 * Storage table name of {@link #CHANGE_SET_NODE} objects.
	 */
	public static final String KO_NAME_CHANGE_SET = "GenericObject";

	/**
	 * Name of type <code>Modification</code> in structure {@link #TL_CHANGELOG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Modification#MODIFICATION_TYPE}.
	 */
	@Deprecated
	public static final String MODIFICATION_NODE = Modification.MODIFICATION_TYPE;

	/**
	 * Name of type <code>Operation</code> in structure {@link #TL_CHANGELOG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Operation#OPERATION_TYPE}.
	 */
	@Deprecated
	public static final String OPERATION_NODE = Operation.OPERATION_TYPE;

	/**
	 * Storage table name of {@link #OPERATION_NODE} objects.
	 */
	public static final String KO_NAME_OPERATION = "GenericObject";

	/**
	 * Name of type <code>CreateOp</code> in structure {@link #TL_CHANGELOG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link CreateOp#CREATE_OP_TYPE}.
	 */
	@Deprecated
	public static final String CREATE_OP_NODE = CreateOp.CREATE_OP_TYPE;

	/**
	 * Storage table name of {@link #CREATE_OP_NODE} objects.
	 */
	public static final String KO_NAME_CREATE_OP = "GenericObject";

	/**
	 * Name of type <code>DeleteOp</code> in structure {@link #TL_CHANGELOG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link DeleteOp#DELETE_OP_TYPE}.
	 */
	@Deprecated
	public static final String DELETE_OP_NODE = DeleteOp.DELETE_OP_TYPE;

	/**
	 * Storage table name of {@link #DELETE_OP_NODE} objects.
	 */
	public static final String KO_NAME_DELETE_OP = "GenericObject";

	/**
	 * Name of type <code>UpdateOp</code> in structure {@link #TL_CHANGELOG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link UpdateOp#UPDATE_OP_TYPE}.
	 */
	@Deprecated
	public static final String UPDATE_OP_NODE = UpdateOp.UPDATE_OP_TYPE;

	/**
	 * Storage table name of {@link #UPDATE_OP_NODE} objects.
	 */
	public static final String KO_NAME_UPDATE_OP = "GenericObject";

	/**
	 * Name of type <code>SetOp</code> in structure {@link #TL_CHANGELOG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link SetOp#SET_OP_TYPE}.
	 */
	@Deprecated
	public static final String SET_OP_NODE = SetOp.SET_OP_TYPE;

	/**
	 * Storage table name of {@link #SET_OP_NODE} objects.
	 */
	public static final String KO_NAME_SET_OP = "GenericObject";


	/**
	 * Create an instance of {@link Change} type.
	 */
	public final Change createChange(com.top_logic.model.TLObject context) {
		return (Change) createObject(getChangeType(), context);
	}

	/**
	 * Create an instance of {@link Change} type.
	 */
	public final Change createChange() {
		return createChange(null);
	}

	/**
	 * Create an instance of {@link Creation} type.
	 */
	public final Creation createCreation(com.top_logic.model.TLObject context) {
		return (Creation) createObject(getCreationType(), context);
	}

	/**
	 * Create an instance of {@link Creation} type.
	 */
	public final Creation createCreation() {
		return createCreation(null);
	}

	/**
	 * Create an instance of {@link Deletion} type.
	 */
	public final Deletion createDeletion(com.top_logic.model.TLObject context) {
		return (Deletion) createObject(getDeletionType(), context);
	}

	/**
	 * Create an instance of {@link Deletion} type.
	 */
	public final Deletion createDeletion() {
		return createDeletion(null);
	}

	/**
	 * Create an instance of {@link Update} type.
	 */
	public final Update createUpdate(com.top_logic.model.TLObject context) {
		return (Update) createObject(getUpdateType(), context);
	}

	/**
	 * Create an instance of {@link Update} type.
	 */
	public final Update createUpdate() {
		return createUpdate(null);
	}

	/**
	 * Create an instance of {@link ErrorMessage} type.
	 */
	public final ErrorMessage createErrorMessage(com.top_logic.model.TLObject context) {
		return (ErrorMessage) createObject(getErrorMessageType(), context);
	}

	/**
	 * Create an instance of {@link ErrorMessage} type.
	 */
	public final ErrorMessage createErrorMessage() {
		return createErrorMessage(null);
	}

	/**
	 * Create an instance of {@link WarningMessage} type.
	 */
	public final WarningMessage createWarningMessage(com.top_logic.model.TLObject context) {
		return (WarningMessage) createObject(getWarningMessageType(), context);
	}

	/**
	 * Create an instance of {@link WarningMessage} type.
	 */
	public final WarningMessage createWarningMessage() {
		return createWarningMessage(null);
	}

	/**
	 * Create an instance of {@link ChangeSet} type.
	 */
	public final ChangeSet createChangeSet(com.top_logic.model.TLObject context) {
		return (ChangeSet) createObject(getChangeSetType(), context);
	}

	/**
	 * Create an instance of {@link ChangeSet} type.
	 */
	public final ChangeSet createChangeSet() {
		return createChangeSet(null);
	}

	/**
	 * Create an instance of {@link Operation} type.
	 */
	public final Operation createOperation(com.top_logic.model.TLObject context) {
		return (Operation) createObject(getOperationType(), context);
	}

	/**
	 * Create an instance of {@link Operation} type.
	 */
	public final Operation createOperation() {
		return createOperation(null);
	}

	/**
	 * Create an instance of {@link CreateOp} type.
	 */
	public final CreateOp createCreateOp(com.top_logic.model.TLObject context) {
		return (CreateOp) createObject(getCreateOpType(), context);
	}

	/**
	 * Create an instance of {@link CreateOp} type.
	 */
	public final CreateOp createCreateOp() {
		return createCreateOp(null);
	}

	/**
	 * Create an instance of {@link DeleteOp} type.
	 */
	public final DeleteOp createDeleteOp(com.top_logic.model.TLObject context) {
		return (DeleteOp) createObject(getDeleteOpType(), context);
	}

	/**
	 * Create an instance of {@link DeleteOp} type.
	 */
	public final DeleteOp createDeleteOp() {
		return createDeleteOp(null);
	}

	/**
	 * Create an instance of {@link UpdateOp} type.
	 */
	public final UpdateOp createUpdateOp(com.top_logic.model.TLObject context) {
		return (UpdateOp) createObject(getUpdateOpType(), context);
	}

	/**
	 * Create an instance of {@link UpdateOp} type.
	 */
	public final UpdateOp createUpdateOp() {
		return createUpdateOp(null);
	}

	/**
	 * Create an instance of {@link SetOp} type.
	 */
	public final SetOp createSetOp(com.top_logic.model.TLObject context) {
		return (SetOp) createObject(getSetOpType(), context);
	}

	/**
	 * Create an instance of {@link SetOp} type.
	 */
	public final SetOp createSetOp() {
		return createSetOp(null);
	}

	/**
	 * The singleton instance of {@link TlChangelogFactory}.
	 */
	public static TlChangelogFactory getInstance() {
		return (TlChangelogFactory) com.top_logic.element.model.DynamicModelService.getFactoryFor(TL_CHANGELOG_STRUCTURE);
	}
}
