<?xml version="1.0" encoding="utf-8" ?>

<config:template-call
	xmlns:config="http://www.top-logic.com/ns/config/6.0"
	final="true"
	template="com.top_logic/treetable.template.xml"
>
	<arguments
		defaultColumns="name"
		defaultSelection="false"
		expandSelected="false"
		rootVisible="false"
		type="tl.model:TLModule,tl.model:TLClass"
	>
		<name key="dynamic.93f8afeb-782b-4dd6-bf38-5f2d4917bb2e">
			<en>Model</en>
			<de>Model</de>
		</name>
		<modelBuilder class="com.top_logic.model.search.providers.TreeModelByExpression"
			nodePredicate="true"
			parents="node->$node.instanceOf(`tl.model:TLModule`) ? `SecurityStructure#ROOT` : $node.container()"
			rootNode="`SecurityStructure#ROOT`"
		>
			<children><![CDATA[node-> switch {
    $node == `SecurityStructure#ROOT`: all(`tl.model:TLModule`);
    $node.instanceOf(`tl.model:TLModule`): $node
        .get(`tl.model:TLScope#types`)
        .filter(t -> $t.instanceOf(`tl.model:TLClass`));
    $node.instanceOf(`tl.model:TLClass`): $node
        .get(`tl.model:TLClass#localParts`);
        // TODO: filter derived: .filter(p -> $p.get(`tl.model:TLStructuredTypePart#))
}]]></children>
		</modelBuilder>
		<configurationProviders>
			<configurationProvider class="com.top_logic.model.search.providers.ComputedColumnProviderByExpression"
				accessor="c -> $c.referers(`tl.model.or:ClassMapping#type`).get(`tl.model.or:ClassMapping#table`)"
				columnId="ID_5bcdecaa_76c8_4d1f_8ec2_d6d3718e19da"
				columnType="tl.model.db:Table"
			>
				<columnLabel key="dynamic.c52883de-9ec8-496a-8cf0-6a0891d8994a">
					<en>Table</en>
					<de>Tabelle</de>
				</columnLabel>
			</configurationProvider>
		</configurationProviders>
	</arguments>
</config:template-call>