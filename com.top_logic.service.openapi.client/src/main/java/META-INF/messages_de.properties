class.com.top_logic.service.openapi.client.authentication.I18NConstants.ERROR_BASIC_AUTH_CREDENTIALS__AUTHENTICATION_NAME = Es gibt keine BasicAuth Authentifizierung mit Namen "{0}".
class.com.top_logic.service.openapi.client.authentication.I18NConstants.ERROR_NO_API_KEY__AUTHENTICATION_NAME = Es gibt keine API Key Authentifizierung mit Namen "{0}".
class.com.top_logic.service.openapi.client.authentication.I18NConstants.ERROR_NO_CLIENT_CREDENTIALS__AUTHENTICATION_NAME = Es gibt keine Client Credentials Authentifizierung mit Namen "{0}".
class.com.top_logic.service.openapi.client.authentication.I18NConstants.ERROR_NO_OPEN_ID_CONFIGURATION__AUTHENTICATION_NAME = Es gibt keine Open ID Authentifizierung mit Namen "{0}".
class.com.top_logic.service.openapi.client.authentication.I18NConstants.ERROR_NO_TOKEN_GENERATED__STATUS_CODE__CODE__DESCRIPTION = Fehler beim Erzeugen des Tokens: {0} {1}: {2}
class.com.top_logic.service.openapi.client.authentication.I18NConstants.ERROR_PARSING_TOKEN_RESPONSE = Fehler bei der Bearbeitung der Antwort auf die Tokenanfrage.
class.com.top_logic.service.openapi.client.authentication.I18NConstants.ERROR_SENDING_TOKEN_REQUEST = Fehler beim Senden der Tokenanfrage.
class.com.top_logic.service.openapi.client.layout.I18NConstants.UNEXPECTED_SCHEMA_FOR_MULTIPART_BODY__METHOD = Objektschema für ''multipart/form-data''-Körper in Methode {0} erwartet.
class.com.top_logic.service.openapi.client.layout.I18NConstants.UNSUPPORTED_PARAMETER_TYPE__PARAMETER__TYPE = Der Parametertyp {1} in Parameter {0} wird nicht unterstützt.
class.com.top_logic.service.openapi.client.registry.conf.I18NConstants.ERROR_INVALID_STATUS_CODE__CODE = Der Statuscode ''{0}'' ist ungültig. Er muss entweder eine ganze Zahl im Bereich [100-599] sein oder einem der speziellen Statuscodebereiche 1XX, 2XX, 3XX, 4XX oder 5XX entsprechen.
class.com.top_logic.service.openapi.client.registry.impl.I18NConstants.ERROR_REQUEST_FAILED__METHOD_ARGS_MESSAGE = Der Aufruf "{0}" mit den Argumenten {1} ist fehlgeschlagen: {2}
class.com.top_logic.service.openapi.client.registry.impl.call.request.I18NConstants.ERROR_COMPILING_EXPR__METHOD_PARAMETERS = Fehler beim Kompilieren des Anfrageinhalts für die Methode "{0}" mit den Parametern "{1}".
class.com.top_logic.service.openapi.client.registry.impl.call.request.I18NConstants.ILLEGAL_CONTENT_TYPE__TYPE_NAME = {0} ist kein legaler Inhaltstyp in Teil {1}.
class.com.top_logic.service.openapi.client.registry.impl.response.I18NConstants.ERROR_CALL_FAILED_NO_DETAILS = Keine Details verfügbar
class.com.top_logic.service.openapi.client.registry.impl.response.I18NConstants.ERROR_CALL_FAILED__FUN_ARGS_REASON_CODE_CONTENT = Der Aufruf "{0}" mit den Argumenten {1} ist fehlgeschlagen: {2} (Fehlercode {3}): {4}
com.top_logic.service.openapi.client.authentication.apikey.APIKeyAuthentication = API-Schlüssel
com.top_logic.service.openapi.client.authentication.apikey.APIKeyAuthentication.tooltip = <i>Authentifizierungskonfiguration</i> zur Authentifizierung mit einem API-Schlüssel.
com.top_logic.service.openapi.client.authentication.apikey.ClientAPIKeySecret = API-Schlüssel
com.top_logic.service.openapi.client.authentication.apikey.ClientAPIKeySecret.tooltip = <i>API-Schlüsselgeheimnis</i> für den <i>OpenAPI-Client</i>.
com.top_logic.service.openapi.client.authentication.config.ClientAuthentications = Client-Authentifizierungen
com.top_logic.service.openapi.client.authentication.config.ClientAuthentications.authentications = Authentifizierungen
com.top_logic.service.openapi.client.authentication.config.ClientAuthentications.authentications.tooltip = Alle verfügbaren Authentifizierungen.
com.top_logic.service.openapi.client.authentication.config.ClientAuthentications.tooltip = Konfigurationen von Client-Authentifizierungen.
com.top_logic.service.openapi.client.authentication.http.basic.BasicAuthentication = HTTP-Authentifizierung (BasicAuth)
com.top_logic.service.openapi.client.authentication.http.basic.BasicAuthentication.tooltip = Authentifizierung mit HTTP <i>BasicAuth-Mechanismus</i>.
com.top_logic.service.openapi.client.authentication.http.basic.ClientBasicAuthSecret = HTTP-Authentifizierung (BasicAuth)
com.top_logic.service.openapi.client.authentication.http.basic.ClientBasicAuthSecret.tooltip = <i>HTTP-Geheimnis</i> für <i>OpenAPI-Clients</i>.
com.top_logic.service.openapi.client.authentication.oauth.ClientCredentialSecret = OpenID-Authentifizierung
com.top_logic.service.openapi.client.authentication.oauth.ClientCredentialSecret.tooltip = Authentifizierungsdaten für einen <i>OpenAPI-Client</i> gegenüber dem <i>OpenID-Server</i>.
com.top_logic.service.openapi.client.authentication.oauth.user.ClientCredentials = OpenID-Authentifizierung
com.top_logic.service.openapi.client.authentication.oauth.user.ClientCredentials.tooltip = <i>Tokenbasierte Authentifizierung</i> zur Authentifizierung mit Client-Anmeldedaten.
com.top_logic.service.openapi.client.authentication.oauth.user.WithUserAuthentication = Mit Benutzerauthentifizierung
com.top_logic.service.openapi.client.authentication.oauth.user.WithUserAuthentication.tooltip = Verwendet zur Autorisierung das persönliche Token des aktuell über OIDC angemeldeten Benutzers.
com.top_logic.service.openapi.client.layout.ImportOpenAPIClient = Offenen API-Client importieren
com.top_logic.service.openapi.client.layout.ImportOpenAPIClient.tooltip = <i>Befehl</i> zum Importieren eines <i>OpenAPI-Clients</i>.
com.top_logic.service.openapi.client.registry.ServiceMethodRegistry = TL-Script-Funktionen für externe APIs
com.top_logic.service.openapi.client.registry.ServiceMethodRegistry.Config.authentications.tooltip = <i>Client-Authentifizierungen</i>, die zur Authentifizierung von Anfragen in <i>Methodendefinitionen</i> verwendet werden können.
com.top_logic.service.openapi.client.registry.ServiceMethodRegistry.Config.method-definitions = Funktionsdefinitionen
com.top_logic.service.openapi.client.registry.ServiceMethodRegistry.Config.method-definitions.tooltip = Definitionen für benutzerdefinierte TL-Script-Funktionen, die externe APIs aufrufen.
com.top_logic.service.openapi.client.registry.ServiceMethodRegistry.Config.secrets = Geheimnisse
com.top_logic.service.openapi.client.registry.ServiceMethodRegistry.Config.secrets.tooltip = Konfiguration der Geheimnisse, die zur Übermittlung an den <i>OpenAPI-Server</i> verwendet werden können.
com.top_logic.service.openapi.client.registry.ServiceMethodRegistry.ServiceRegistryPart.service-registry = Dienstleistungsverzeichnis
com.top_logic.service.openapi.client.registry.ServiceMethodRegistry.ServiceRegistryPart.service-registry.tooltip = Konfiguration der <i>TL-Script-Funktionen für externe APIs</i>, von denen diese ein Teil sind.
com.top_logic.service.openapi.client.registry.ServiceMethodRegistry.tooltip = Dienst zur Konfiguration von Client-Endpunkten für externe APIs, die über TL-Script-Funktionen aufgerufen werden können.
com.top_logic.service.openapi.client.registry.conf.InParameterContext.context = Kontext
com.top_logic.service.openapi.client.registry.conf.InParameterContext.context.tooltip = Der Kontext dieser Wertedefinition, um Zugang zu den aktuell definierten Parameternamen zu erhalten.
com.top_logic.service.openapi.client.registry.conf.MethodDefinition = Funktionsdefinition
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.authentication = Authentifizierung
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.authentication.tooltip = Name der <i>Authentifizierungskonfigurationen</i>, die für den Zugriff auf den <i>OpenAPI-Server</i> verwendet werden.
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.base-url = Basis-URL
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.base-url.tooltip = Vorlage für die URL zum Aufrufen der externen API. <p> Die Vorlage kann Platzhalter enthalten (<i>{param}</i>) mit Verweisen auf <i>Funktionsparameter</i> enthalten, die beim Aufruf der API ersetzt werden, um Argumente an die aufgerufene API zu übermitteln. </p>
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.call-builders = Aufbau der Abfrage
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.call-builders.tooltip = Angabe der Argumente, die an die Anfrage zum Aufruf der externen API übergeben werden.
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.http-method = HTTP-Methode
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.http-method.tooltip = Die <i>HTTP-Methode</i> zum Aufrufen der externen API.
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.name.tooltip = Der Name der TL-Script-Funktion, die die externe API aufruft.
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.optional-response-handlers = Optionale Antwort-Bearbeitung
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.optional-response-handlers.tooltip = Optionale Nachbearbeitung der Antwort auf den API-Aufruf für spezielle Antwortcodes.
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.parameters = Parameter der Funktion
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.parameters.tooltip = Definitionen von Parametern, die an die TL-Script-Funktion übergeben werden können, die die externe API aufruft. <p> Diese Parameter können beim <i>Aufbau der Abfrage</i> verwendet werden, um einen Wert an die externe API zu übergeben. </p>
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.response-handler = Antwort-Bearbeitung
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.response-handler.tooltip = Nachbearbeitung der Antwort auf den API-Aufruf.
com.top_logic.service.openapi.client.registry.conf.MethodDefinition.tooltip = Konfiguration einer TL-Script-Funktion, die eine externe API aufruft.
com.top_logic.service.openapi.client.registry.conf.ParameterContext.parameter-names = Namen der Parameter
com.top_logic.service.openapi.client.registry.conf.ParameterContext.parameter-names.tooltip = Zugriff auf die aktuell definierten Parameternamen.
com.top_logic.service.openapi.client.registry.conf.ParameterDefinition = Funktionsparameter
com.top_logic.service.openapi.client.registry.conf.ParameterDefinition.default-value = Standardwert
com.top_logic.service.openapi.client.registry.conf.ParameterDefinition.default-value.tooltip = Ausdruck, der ausgewertet wird, wenn bei einem Aufruf der TL-Script-Funktion kein Argument für diesen Parameter übergeben wird. <p> Nur relevant, wenn der Parameter nicht <i>erforderlich</i> ist. </p>
com.top_logic.service.openapi.client.registry.conf.ParameterDefinition.multiple = Mehrere
com.top_logic.service.openapi.client.registry.conf.ParameterDefinition.multiple.tooltip = Ob dieser Parameter mehrfach vorkommen kann.
com.top_logic.service.openapi.client.registry.conf.ParameterDefinition.name.tooltip = Name des Parameters. <p> Der Name des Parameters wird verwendet, um seinen Wert z. B. in der <i>Base URL</i><i>(Methodendefinition</i>) eines Dienstes zu referenzieren. </p>
com.top_logic.service.openapi.client.registry.conf.ParameterDefinition.required = Erforderlich
com.top_logic.service.openapi.client.registry.conf.ParameterDefinition.required.tooltip = Ob ein Wert für diesen <i>Funktionsparameter</i> angegeben werden muss, wenn die TL-Script-Funktion aufgerufen wird.
com.top_logic.service.openapi.client.registry.conf.ParameterDefinition.tooltip = Definition eines Parameters einer konfigurierten TL-Script-Funktion.
com.top_logic.service.openapi.client.registry.conf.ParameterDefinition.type = Typ
com.top_logic.service.openapi.client.registry.conf.ParameterDefinition.type.tooltip = Der erwartete Typ des Argumentwertes, der an die TL-Script-Funktion übergeben wird, die die externe API aufruft.
com.top_logic.service.openapi.client.registry.conf.ResponseForStatusCodes = Antwort für Statuscodes
com.top_logic.service.openapi.client.registry.conf.ResponseForStatusCodes.response-handler = Antwort-Bearbeitung
com.top_logic.service.openapi.client.registry.conf.ResponseForStatusCodes.response-handler.tooltip = Postprozessor der Antwort auf den API-Aufruf, wenn der Statuscode der Antwort in <i>Statuscodes</i> enthalten ist.
com.top_logic.service.openapi.client.registry.conf.ResponseForStatusCodes.status-codes = Statuscodes
com.top_logic.service.openapi.client.registry.conf.ResponseForStatusCodes.status-codes.tooltip = Die Statuscodes der Antwort, auf die der <i>Antwort-Bearbeitung</i> angewendet werden soll. Der Wert ist eine Liste konkreter Statuscodes (z. B. 202, 503) oder Bereiche von Statuscodes (<code>"1XX"</code>, <code>"2XX"</code>, <code>"3XX"</code>, <code>"4XX"</code> oder <code>"5XX"</code>).
com.top_logic.service.openapi.client.registry.conf.ResponseForStatusCodes.tooltip = Konfiguration eines <i>Antwort-Bearbeitung</i>, der für eine bestimmte Untergruppe von Statuscodes zu verwenden ist.
com.top_logic.service.openapi.client.registry.impl.call.request.CookieHeaderArgument = Cookie-Header-Argument
com.top_logic.service.openapi.client.registry.impl.call.request.CookieHeaderArgument.Config.name.tooltip = Name des Funktionsparameters und Cookie-Name, an den der Wert übergeben werden soll.
com.top_logic.service.openapi.client.registry.impl.call.request.CookieHeaderArgument.tooltip = Leitet einen Funktionsparameter direkt an einen Cookie-Wert weiter.
com.top_logic.service.openapi.client.registry.impl.call.request.HeaderArgument = Kopfzeilen-Argument
com.top_logic.service.openapi.client.registry.impl.call.request.HeaderArgument.Config.name.tooltip = Name der Kopfzeile. <p> Wird kein <i>Wert</i> angegeben, wird der Wert des Funktionsarguments mit demselben Namen verwendet. </p>
com.top_logic.service.openapi.client.registry.impl.call.request.HeaderArgument.Config.value = Wert
com.top_logic.service.openapi.client.registry.impl.call.request.HeaderArgument.Config.value.tooltip = Angabe des Wertes, der als Request-Header-Wert übergeben werden soll.
com.top_logic.service.openapi.client.registry.impl.call.request.HeaderArgument.tooltip = <i>Abfrage-Ersteller</i>, der einen Request-Header-Wert erstellt.
com.top_logic.service.openapi.client.registry.impl.call.request.JSONRequestBody = JSON-Anfrageinhalt
com.top_logic.service.openapi.client.registry.impl.call.request.JSONRequestBody.Config.json = JSON
com.top_logic.service.openapi.client.registry.impl.call.request.JSONRequestBody.Config.json.tooltip = Ausdruck, der einen JSON-Wert konstruiert. <p> Der Ausdruck hat Zugriff auf alle Parameterwerte, die implizit als TL-Script-Variablen definiert sind. </p> <p> Wird kein Ausdruck angegeben, wird ein JSON-Objekt erstellt, das eine Eigenschaft für jeden Funktionsparameter enthält. Jeder Eigenschaft wird der Wert zugewiesen, der als Argument an die TL-Script-Funktion für den entsprechenden Parameter übergeben wird. </p>
com.top_logic.service.openapi.client.registry.impl.call.request.JSONRequestBody.tooltip = <i>Abfrage-Ersteller</i>, der einen Request Body im JSON-Format erstellt.
com.top_logic.service.openapi.client.registry.impl.call.request.MultiPartRequestBody = Mehrteiliger Anfragekörper
com.top_logic.service.openapi.client.registry.impl.call.request.MultiPartRequestBody$MultiPartContent = Mehrteiliger Inhalt
com.top_logic.service.openapi.client.registry.impl.call.request.MultiPartRequestBody$MultiPartContent.tooltip = Teil eines mehrteiligen Antrags.
com.top_logic.service.openapi.client.registry.impl.call.request.MultiPartRequestBody.Config.parts = Teile
com.top_logic.service.openapi.client.registry.impl.call.request.MultiPartRequestBody.Config.parts.tooltip = Die Teile des Anfragekörpers.
com.top_logic.service.openapi.client.registry.impl.call.request.MultiPartRequestBody.MultiPartContent.content = Inhalt
com.top_logic.service.openapi.client.registry.impl.call.request.MultiPartRequestBody.MultiPartContent.content-type = Inhaltstyp
com.top_logic.service.openapi.client.registry.impl.call.request.MultiPartRequestBody.MultiPartContent.content-type.tooltip = Der Inhaltstyp für diesen Teil des Bodys. <p> Wenn nichts konfiguriert ist, wird der Inhaltstyp für die Anfrage dynamisch aus dem angegebenen Wert ermittelt. </p>
com.top_logic.service.openapi.client.registry.impl.call.request.MultiPartRequestBody.MultiPartContent.content.tooltip = Inhalt des Teils. <p> Der Ausdruck hat Zugriff auf alle Parameterwerte, die implizit als TL-Script-Variablen definiert sind. </p>
com.top_logic.service.openapi.client.registry.impl.call.request.MultiPartRequestBody.MultiPartContent.name.tooltip = Der Name des Teils.
com.top_logic.service.openapi.client.registry.impl.call.request.MultiPartRequestBody.tooltip = Erzeugt einen <i>Call Builder</i>, der einen mehrteiligen Request Body konstruiert.
com.top_logic.service.openapi.client.registry.impl.call.request.SimpleHeaderArgument = Einfaches Kopfzeilenargument
com.top_logic.service.openapi.client.registry.impl.call.request.SimpleHeaderArgument.Config.name.tooltip = Name des Funktionsparameters und des Anfragekopfes, an den der Wert übergeben werden soll.
com.top_logic.service.openapi.client.registry.impl.call.request.SimpleHeaderArgument.tooltip = Leitet einen Funktionsparameter direkt an einen Request-Header weiter.
com.top_logic.service.openapi.client.registry.impl.call.uri.PathArgument = Pfad-Argument
com.top_logic.service.openapi.client.registry.impl.call.uri.PathArgument.Config.value = Wert
com.top_logic.service.openapi.client.registry.impl.call.uri.PathArgument.Config.value.tooltip = Berechnung des Wertes, der als Pfadelement übergeben wird.
com.top_logic.service.openapi.client.registry.impl.call.uri.PathArgument.tooltip = <i>Abfrage-Ersteller</i>, der ein Pfadelement hinzufügt.
com.top_logic.service.openapi.client.registry.impl.call.uri.QueryArgument = Abfrage-Argument
com.top_logic.service.openapi.client.registry.impl.call.uri.QueryArgument.Config.name = Name
com.top_logic.service.openapi.client.registry.impl.call.uri.QueryArgument.Config.name.tooltip = Name des zu füllenden Abfrageparameters. <p> Wird <i>Wert</i> nicht angegeben, wird der Wert des Funktionsarguments mit demselben Namen verwendet. </p>
com.top_logic.service.openapi.client.registry.impl.call.uri.QueryArgument.Config.value = Wert
com.top_logic.service.openapi.client.registry.impl.call.uri.QueryArgument.Config.value.tooltip = Berechnung des Wertes, der als Abfrageargument zu übergeben ist.
com.top_logic.service.openapi.client.registry.impl.call.uri.QueryArgument.tooltip = <i>Abfrage-Ersteller</i>, der einen Abfrageparameter hinzufügt.
com.top_logic.service.openapi.client.registry.impl.call.uri.SimpleQueryArgument = Einfaches Abfrageargument
com.top_logic.service.openapi.client.registry.impl.call.uri.SimpleQueryArgument.Config.name.tooltip = Name des Funktionsparameters und des Abfragearguments, an das der Wert übergeben werden soll.
com.top_logic.service.openapi.client.registry.impl.call.uri.SimpleQueryArgument.tooltip = Leitet einen Funktionsparameter direkt als Abfrageparameter weiter.
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression = TL-Script
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression$Config$ResponseFormat = Antwortformat
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression$Config$ResponseFormat.tooltip = Das Format, in dem die Antwort verarbeitet werden muss.
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression.Config.ResponseFormat.BINARY = Binär
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression.Config.ResponseFormat.BINARY.tooltip = Die Antwort wird als binärer Inhalt verarbeitet.
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression.Config.ResponseFormat.JSON = JSON
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression.Config.ResponseFormat.JSON.tooltip = Die Antwort wird als JSON geparst.
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression.Config.ResponseFormat.TEXT = Text
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression.Config.ResponseFormat.TEXT.tooltip = Die Antwort wird als Text verarbeitet.
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression.Config.additional-arguments = Zusätzliche Argumente
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression.Config.additional-arguments.tooltip = Zusätzliche Argumente, die an die <i>Nachbearbeitung</i> übergeben werden.
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression.Config.format = Format
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression.Config.format.tooltip = Das Format, in dem der Inhalt der Nachricht verarbeitet werden muss.
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression.Config.post-processing = Nachbearbeitung
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression.Config.post-processing.tooltip = Funktion, die das tatsächliche Ergebnis des Aufrufs der Dienstmethode berechnet. <p> Die Funktion erwartet das Antwortobjekt im konfigurierten <i>Format</i> von der externen API als erstes Argument. Falls <i>zusätzliche Argumente</i> konfiguriert sind, werden diese ebenfalls an diese Funktion übergeben. </p> <p> Wenn keine Funktion angegeben ist, wird die formatierte Antwort direkt zurückgegeben. </p>
com.top_logic.service.openapi.client.registry.impl.response.ResponseHandlerByExpression.tooltip = <i>Anwort-Bearbeitung</i>, die den Antwortkörper in einem konfigurierten Format liest und die Antwort mit Hilfe eines <i>Ausdrucks</i> weiterverarbeitet.
com.top_logic.service.openapi.client.registry.impl.response.ResponseHeaderValue = Antwort-Header-Wert
com.top_logic.service.openapi.client.registry.impl.response.ResponseHeaderValue.Config.header = Kopfzeile
com.top_logic.service.openapi.client.registry.impl.response.ResponseHeaderValue.Config.header.tooltip = Name der Kopfzeile, der der Wert entnommen werden soll.
com.top_logic.service.openapi.client.registry.impl.response.ResponseHeaderValue.Config.multiple = Mehrere
com.top_logic.service.openapi.client.registry.impl.response.ResponseHeaderValue.Config.multiple.tooltip = Ob alle Kopfzeilen mit dem Namen <i>Header</i> gemeldet werden müssen. In diesem Fall ist der Wert eine Liste von Zeichenketten.
com.top_logic.service.openapi.client.registry.impl.response.ResponseHeaderValue.tooltip = Erzeugt einen <i>Antwort-Extraktor</i>, der auf den Header (bzw. die Header) der Antwort mit einem bestimmten Namen zugreift.
com.top_logic.service.openapi.client.registry.impl.value.ComputedValue = Berechneter Wert
com.top_logic.service.openapi.client.registry.impl.value.ComputedValue.Config.arguments = Argumente
com.top_logic.service.openapi.client.registry.impl.value.ComputedValue.Config.arguments.tooltip = An die <i>Funktion</i> übergebene Argumente.
com.top_logic.service.openapi.client.registry.impl.value.ComputedValue.Config.function = Funktion
com.top_logic.service.openapi.client.registry.impl.value.ComputedValue.Config.function.tooltip = Die Funktion berechnet den Endwert. <p> Es wird erwartet, dass die Funktion so viele Argumente annimmt, wie in <i>Argumente</i> angegeben. </p>
com.top_logic.service.openapi.client.registry.impl.value.ComputedValue.tooltip = Aus anderen Funktionsargumenten berechneter Wert.
com.top_logic.service.openapi.client.registry.impl.value.ConstantValue = Konstanter Wert
com.top_logic.service.openapi.client.registry.impl.value.ConstantValue.Config.value = Wert
com.top_logic.service.openapi.client.registry.impl.value.ConstantValue.Config.value.tooltip = Wert zu verwenden.
com.top_logic.service.openapi.client.registry.impl.value.ConstantValue.tooltip = Erzeugt einen <i>Wertproduzenten</i> mit einem konstanten konfigurierten Wert.
com.top_logic.service.openapi.client.registry.impl.value.ParameterValue = Parameterwert
com.top_logic.service.openapi.client.registry.impl.value.ParameterValue.Config.parameter = Parameter
com.top_logic.service.openapi.client.registry.impl.value.ParameterValue.Config.parameter.tooltip = Name des Funktionsparameters, dem der Wert entnommen werden soll.
com.top_logic.service.openapi.client.registry.impl.value.ParameterValue.tooltip = <i>Werteerzeuger</i>, der auf den Funktionsparameter mit einem bestimmten Namen zugreift.
