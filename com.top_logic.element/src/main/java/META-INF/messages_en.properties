class.com.top_logic.element.i18n.I18NConstants.I18N_PROXY_FIELD_LABEL__FIELD = Proxy for {0}
class.com.top_logic.element.layout.formeditor.I18NConstants.CONFIGURE_FORM_DEFINITION_COMMAND = Design form
class.com.top_logic.element.layout.formeditor.I18NConstants.CONFIGURE_FORM_DEFINITION_COMMAND.tooltip = Opens the form editor for the type of the object currently displayed. <p> If the displayed object's type has already a form definition, it is edited. Otherwise, a new form definition for the displayed object's type is created. </p> <p> The form definition my either be defined locally in this form or annotated to the object's type. When editing a form definition annotated to an object's type, you have the option to save the edited form locally to this component afterwards. </p>
class.com.top_logic.element.layout.formeditor.I18NConstants.DIALOG_TITLE_EDIT_FORM_ELEMENT__ELEMENT = Edit "{0}"...
class.com.top_logic.element.layout.formeditor.implementation.I18NConstants.TAB_LABEL = Tab
class.com.top_logic.element.layout.grid.I18NConstants.CONTEXT_NOT_PART_OF_TABLE__CONTEXT = The context object ''{0}'' is not part of the tree.
class.com.top_logic.element.layout.grid.I18NConstants.CONTEXT_NOT_UNIQUE__CONTEXT = The context object ''{0}'' exists multiple times in the tree.
class.com.top_logic.element.layout.grid.I18NConstants.NO_CONTEXT_OBJECT_FOR_ROW = No context object given for the new row.
class.com.top_logic.element.layout.grid.I18NConstants.NO_NEW_OBJECT_FOR_THIS_CONTEXT__CONTEXT = It's not possible to create a new object in this context: {0}
class.com.top_logic.element.layout.meta.I18NConstants.ERROR_MODULE_WITH_NAME_EXISTS__NAME = A module with name ''{0}'' already exists.
class.com.top_logic.element.layout.meta.I18NConstants.ERROR_PART_WITH_NAME_EXISTS__NAME_GENERALIZATION = A type part with name ''{0}'' already exists in the generalization ''{1}''.
class.com.top_logic.element.layout.meta.I18NConstants.ERROR_PART_WITH_NAME_EXISTS__NAME_TYPE = A type part with name ''{0}'' already exists in ''{1}''.
class.com.top_logic.element.layout.meta.I18NConstants.ERROR_TYPE_WITH_NAME_EXISTS__NAME_MODULE = A type with name ''{0}'' already exists in module ''{1}''.
class.com.top_logic.element.layout.meta.expression.I18NConstants.ERROR_LOADING_QUERY = The stored query could not be loaded.
class.com.top_logic.element.layout.meta.search.I18NConstants.NOT_EXECUTABLE_NO_SEARCH_EXECUTED = No search has been performed
class.com.top_logic.element.layout.meta.search.I18NConstants.NOT_EXECUTABLE_NO_SEARCH_RESULT = No search result available
class.com.top_logic.element.layout.meta.search.quick.I18NConstants.MORE_RESULTS = More results available, refine search...
class.com.top_logic.element.layout.meta.search.quick.I18NConstants.NO_RESULTS = No results available, generalise search...
class.com.top_logic.element.layout.meta.search.quick.I18NConstants.SEARCH_STRING_TOO_SHORT__MIN = Search entry requires at least {0} characters.
class.com.top_logic.element.layout.structured.I18NConstants.ERROR_NOT_A_STRUCTURED_ELEMENT__ELEMENT = The object {0} is not a structured element.
class.com.top_logic.element.meta.kbbased.I18NConstants.ERROR_SETTING_VALUE__ATTRIBUTE_VALUE = Problem setting attribute value ''{0}'' to ''{1}''.
class.com.top_logic.element.meta.kbbased.I18NConstants.NO_SUCH_GENERATOR__NAME = There is no generator with name ''{0}''.
class.com.top_logic.element.meta.kbbased.storage.I18NConstants.ERROR_CANNOT_ACCESS_ATTRIBUTE__OBJ_ATTR_ERR = Failed to access attribute "{1}" of "{0}": {2}
class.com.top_logic.element.meta.kbbased.storage.I18NConstants.ERROR_EMPTY_VALUE_IN_MANDATORY_ATTRIBUTE = The value must not be empty.
class.com.top_logic.element.meta.kbbased.storage.I18NConstants.ERROR_VALUE_IS_NOT_TLANNOTATION__VALUE = The given value {0} is not a TLAnnotation.
class.com.top_logic.element.model.I18NConstants.ERROR_UNDEFINED_ATTRIBUTE_TYPE__TYPE_ATTR_LOCATION = Undefined type ''{0}'' in module in attribute ''{1}'' at ''{2}''.
class.com.top_logic.element.model.export.ui.I18NConstants.NEW_MODULE_CONFIGURATION = New module configuration file created and entered into the application configuration. The configuration must be reloaded and all sessions must be terminated.
class.com.top_logic.element.model.export.ui.I18NConstants.NEW_MODULE_CONFIGURATION.tooltip = New module configuration stored.
com.top_logic.element.boundsec.ElementBoundHelper = Element bound helper
com.top_logic.element.boundsec.ElementSecurityStorage = Element security storage
com.top_logic.element.boundsec.ElementSecurityStorage.tooltip = The SecurityStorage stores the security permissions respecting rules.
com.top_logic.element.boundsec.attribute.AttributeClassifierManager = Attribute classifier manager
com.top_logic.element.boundsec.attribute.AttributeClassifierManager$TypeClassifications = Type classifications
com.top_logic.element.boundsec.attribute.AttributeClassifierManager$TypeClassifications.tooltip = Configuration of the type local classifications.
com.top_logic.element.boundsec.attribute.AttributeClassifierManager.Config.global-classifications = Global classifications
com.top_logic.element.boundsec.attribute.AttributeClassifierManager.Config.global-classifications.tooltip = Configuration of the global classifications.
com.top_logic.element.boundsec.attribute.AttributeClassifierManager.Config.type-classifications = Type classifications
com.top_logic.element.boundsec.attribute.AttributeClassifierManager.Config.type-classifications.tooltip = Type local classifications.
com.top_logic.element.boundsec.attribute.AttributeClassifierManager.TypeClassifications.classifications = Classifications
com.top_logic.element.boundsec.attribute.AttributeClassifierManager.TypeClassifications.classifications.tooltip = Configuration of the classifications.
com.top_logic.element.boundsec.attribute.AttributeClassifierManager.TypeClassifications.type = Type
com.top_logic.element.boundsec.attribute.AttributeClassifierManager.TypeClassifications.type.tooltip = Qualified name of the type.
com.top_logic.element.boundsec.attribute.AttributeClassifierManager.tooltip = Provides the available classifiers for meta attributes
com.top_logic.element.boundsec.attribute.MetaAttributeBasedSecurityProvider = Meta attribute based security provider
com.top_logic.element.boundsec.attribute.MetaAttributeBasedSecurityProvider.Config.protectAll = Protect all
com.top_logic.element.boundsec.attribute.MetaAttributeBasedSecurityProvider.Config.protected = Protected
com.top_logic.element.boundsec.attribute.MetaAttributeBasedSecurityProvider.tooltip = The MetaAttributeBasedSecurityProvider can be used in TableComponents (to protect table columns) and in other scenarios to protect the access to MetaAttributes and to other properties that are mapped to MetaAttributes.
com.top_logic.element.boundsec.manager.ElementAccessManager = Element access manager
com.top_logic.element.boundsec.manager.ElementAccessManager$MEConfig = ME configuration
com.top_logic.element.boundsec.manager.ElementAccessManager$MEConfig.tooltip = <i>Typed configuration</i> interface for configuring the role root for a meta element.
com.top_logic.element.boundsec.manager.ElementAccessManager.Config.commit-observer = Commit observer
com.top_logic.element.boundsec.manager.ElementAccessManager.Config.group-mapper = Group mapper
com.top_logic.element.boundsec.manager.ElementAccessManager.Config.meta-elements = Meta elements
com.top_logic.element.boundsec.manager.ElementAccessManager.Config.role-provider = Role provider
com.top_logic.element.boundsec.manager.ElementAccessManager.Config.role-rules = Role rules
com.top_logic.element.boundsec.manager.ElementAccessManager.Config.role-rules.tooltip = The role rule definition for the access manager.
com.top_logic.element.boundsec.manager.ElementAccessManager.MEConfig.role-root = Role root
com.top_logic.element.boundsec.manager.ElementAccessManager.tooltip = Element access manager extends the access manager in order to support roles based on attribute values.
com.top_logic.element.boundsec.manager.ElementSecurityUpdateManager = Element security update manager
com.top_logic.element.boundsec.manager.ElementSecurityUpdateManager.Config.log-handler = Log handler
com.top_logic.element.boundsec.manager.ElementSecurityUpdateManager.Config.log-handler.tooltip = The <i>log handler</i> is used to log security updates.
com.top_logic.element.boundsec.manager.ElementSecurityUpdateManager.tooltip = Algorithm updating the <i>security storage</i> when business objects change.
com.top_logic.element.boundsec.manager.FallbackAccessManager = Fallback access manager
com.top_logic.element.boundsec.manager.FallbackAccessManager.Config.fallback = Fallback
com.top_logic.element.boundsec.manager.FallbackAccessManager.Config.log-roles = Log roles
com.top_logic.element.boundsec.manager.FallbackAccessManager.tooltip = The FallbackAccessManager
com.top_logic.element.boundsec.manager.RebuildStrategy = Rebuild strategy
com.top_logic.element.boundsec.manager.RebuildStrategy.BLOCK = Block
com.top_logic.element.boundsec.manager.RebuildStrategy.BLOCK.tooltip = Waits until rebuilding is finished and blocks until then.
com.top_logic.element.boundsec.manager.RebuildStrategy.COMPUTE = Compute
com.top_logic.element.boundsec.manager.RebuildStrategy.COMPUTE.tooltip = Super class answers manually (will greatly reduce system performance).
com.top_logic.element.boundsec.manager.RebuildStrategy.DENY = Deny
com.top_logic.element.boundsec.manager.RebuildStrategy.DENY.tooltip = Answers immediately with no rights.
com.top_logic.element.boundsec.manager.RebuildStrategy.tooltip = <i>Security storage</i> rebuild strategy.
com.top_logic.element.boundsec.manager.StorageAccessManager = Storage access manager
com.top_logic.element.boundsec.manager.StorageAccessManager.Config.rebuild-after-startup = Rebuild after startup
com.top_logic.element.boundsec.manager.StorageAccessManager.Config.rebuild-strategy = Rebuild strategy
com.top_logic.element.boundsec.manager.StorageAccessManager.Config.rebuild-strategy.tooltip = The rebuild strategy to use.
com.top_logic.element.boundsec.manager.StorageAccessManager.Config.reset-on-init = Reset on init
com.top_logic.element.boundsec.manager.StorageAccessManager.Config.skip-rebuild-on-startup = Skip rebuild on startup
com.top_logic.element.boundsec.manager.StorageAccessManager.Config.storage = Storage
com.top_logic.element.boundsec.manager.StorageAccessManager.Config.update-manager = Update manager
com.top_logic.element.boundsec.manager.StorageAccessManager.Config.use-person-role-cache = Use person role cache
com.top_logic.element.boundsec.manager.StorageAccessManager.tooltip = The StorageAccessManager stores roles in the security storage for fast access.
com.top_logic.element.boundsec.manager.rule.ExternalRoleProvider.Config.rule-name = Rule name
com.top_logic.element.boundsec.manager.rule.RoleProvider$Type = Type
com.top_logic.element.boundsec.manager.rule.RoleProvider$Type.tooltip = The Type classifies the <i>role providers</i>
com.top_logic.element.boundsec.manager.rule.RoleProvider.Type.inheritance = Inheritance
com.top_logic.element.boundsec.manager.rule.RoleProvider.Type.inheritance.tooltip = The <i>role provider</i> grants roles based on roles granted on other objects; in this case <code>RoleProvider#getBaseObjects(Object)</code> and <code>RoleProvider#getSourceRole()</code> must provide a proper implementation.
com.top_logic.element.boundsec.manager.rule.RoleProvider.Type.reference = Reference
com.top_logic.element.boundsec.manager.rule.RoleProvider.Type.reference.tooltip = The <i>role provider</i> grants roles based on relations between objects and <i>groups</i>. The exact characteristics of this relation depends on the implementation.
com.top_logic.element.boundsec.manager.rule.config.InheritanceRule = Inheritance rule
com.top_logic.element.boundsec.manager.rule.config.InheritanceRule.tooltip = <i>Role rules configuration</i> special for inheritance rules.
com.top_logic.element.boundsec.manager.rule.config.PathElementConfig = Path element configuration
com.top_logic.element.boundsec.manager.rule.config.PathElementConfig.association = Association
com.top_logic.element.boundsec.manager.rule.config.PathElementConfig.attribute = Attribute
com.top_logic.element.boundsec.manager.rule.config.PathElementConfig.inverse = Inverse
com.top_logic.element.boundsec.manager.rule.config.PathElementConfig.meta-element = Meta element
com.top_logic.element.boundsec.manager.rule.config.PathElementConfig.tooltip = Configuration of a step in the <i>role rule configuration</i>.
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig = Role rule configuration
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.base = Base
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.base.tooltip = Definition of the "base" object to copy roles from.
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.inherit = Inherit
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.inherit.tooltip = Whether the Rule should also be applied to all sub types of <i>Meta element</i>.
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.meta-element = Meta element
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.meta-element.tooltip = Full qualified name of the <i>business object type</i> to that an object must have to get the given <i>Role</i>.
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.meta-object = Meta object
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.meta-object.tooltip = Name of the <i>meta object</i> which must an object use to write data to to get the given <i>Role</i>.
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.path = Path
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.path.tooltip = The configuration of the steps to get from the source object to the target object to apply role to.
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.resource-key = Resource key
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.resource-key.tooltip = <i>Resource key</i> defining the internationalisation for the rule.
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.role = Role
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.role.tooltip = Target roles which a user gets on the target objects.
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.source-meta-element = Source meta element
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.source-meta-element.tooltip = Optional name of the <i>business object type</i> which the source object must have to get the given <i>Role</i>.
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.source-meta-object = Source meta object
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.source-meta-object.tooltip = Optional name of the <i>meta object</i> which the source object must write data to to get the given <i>Role</i>.
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.source-role = Source role
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.source-role.tooltip = If the user has one of the role on the source object, it gets the target role on the target object.
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.tooltip = Configuration of a role rule.
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.type = Type
com.top_logic.element.boundsec.manager.rule.config.RoleRuleConfig.type.tooltip = Which kind of rule is this?
com.top_logic.element.boundsec.manager.rule.config.RoleRulesConfig = Role rules configuration
com.top_logic.element.boundsec.manager.rule.config.RoleRulesConfig.rules = Rules
com.top_logic.element.boundsec.manager.rule.config.RoleRulesConfig.rules.tooltip = The list of known role rule configurations.
com.top_logic.element.boundsec.manager.rule.config.RoleRulesConfig.tooltip = <i>Configuration item</i> defining all definitions of role rules in the application.
com.top_logic.element.comment.layout.CommentDialogComponent = Comment dialog component
com.top_logic.element.comment.layout.CommentDialogComponent$EditCommentHandler = Edit comment handler
com.top_logic.element.comment.layout.CommentDialogComponent$EditCommentHandler.tooltip = Perform the editing of a comment.
com.top_logic.element.comment.layout.CommentDialogComponent$NewCommentHandler = New comment handler
com.top_logic.element.comment.layout.CommentDialogComponent$NewCommentOpenerHandler = New comment opener handler
com.top_logic.element.comment.layout.CommentDialogComponent.Config.editComment = Edit comment
com.top_logic.element.comment.layout.CommentDialogComponent.tooltip = This component provides an input field for a new comment.
com.top_logic.element.comment.layout.CommentTableComponent = Comment table component
com.top_logic.element.comment.layout.CommentTableComponent.Config.attribute = Attribute
com.top_logic.element.comment.layout.CommentTableComponent.Config.editCommentComponentName = Edit comment component name
com.top_logic.element.comment.layout.CommentTableComponent.Config.editCommentComponentName.tooltip = The name of the component that edits a given comment.
com.top_logic.element.comment.layout.CommentTableComponent.Config.quoteCommentComponentName = Quote comment component name
com.top_logic.element.comment.layout.CommentTableComponent.Config.quoteCommentComponentName.tooltip = The name of the component that quotes a given comment.
com.top_logic.element.comment.layout.CommentTableComponent.tooltip = Table of comments for objects.
com.top_logic.element.comment.layout.CommentTableRenderer = Comment table renderer
com.top_logic.element.comment.layout.CommentTableRenderer.tooltip = Very special renderer for comments assigned to a wrapper.
com.top_logic.element.comment.layout.ConfiguredCommentDialogComponent = Configured comment dialog component
com.top_logic.element.comment.layout.ConfiguredCommentDialogComponent.Config.commentAttributeName = Comment attribute name
com.top_logic.element.comment.layout.Icons.EDIT = Image for the command to edit a comment.
com.top_logic.element.comment.layout.Icons.EDIT_DISABLED = Image for the disabled command to edit a comment.
com.top_logic.element.comment.layout.Icons.QUOTE = Image for the command to quote a comment.
com.top_logic.element.comment.layout.Icons.QUOTE_DISABLED = Image for the disabled command to quote a comment.
com.top_logic.element.config.AssociationConfig = Association configuration
com.top_logic.element.config.AssociationConfig$EndConfig = End configuration
com.top_logic.element.config.AssociationConfig$EndConfig.tooltip = Definition of an association end.
com.top_logic.element.config.AssociationConfig.attributes.tooltip = The <i>attribute configurations</i> by name.
com.top_logic.element.config.AssociationConfig.subsets = Subsets
com.top_logic.element.config.AssociationConfig.subsets.tooltip = Configuration of the names of the subsets of the configured <i>association</i>.
com.top_logic.element.config.AssociationConfig.tooltip = Definition of an association.
com.top_logic.element.config.AttributeConfig = Attribute configuration
com.top_logic.element.config.AttributeConfig.tooltip = Configuration options for <i>object property</i> model elements.
com.top_logic.element.config.AttributedTypeConfig.attributes = Attributes
com.top_logic.element.config.AttributedTypeConfig.attributes.tooltip = The <i>part configurations</i> by name.
com.top_logic.element.config.ClassConfig = Class configuration
com.top_logic.element.config.ClassConfig.abstract = Abstract
com.top_logic.element.config.ClassConfig.abstract.tooltip = Whether the type cannot be instantiated directly.
com.top_logic.element.config.ClassConfig.final = Final
com.top_logic.element.config.ClassConfig.final.tooltip = Whether this type cannot be specialized.
com.top_logic.element.config.ClassConfig.tooltip = Representation of configuration of a single element type (e.g. Project).
com.top_logic.element.config.EndAspect.aggregate = Aggregate
com.top_logic.element.config.EndAspect.aggregate.tooltip = Whether the referring object is part of the reference object. <p> Note: This property is only for documentation. During export, a back reference of a composition is marked "aggregate". During import, this property is not considered, because exactly back references of compositions are marked "aggregate". </p>
com.top_logic.element.config.EndAspect.composite = Composite
com.top_logic.element.config.EndAspect.composite.tooltip = Whether the referenced object is a part of the refering object.
com.top_logic.element.config.EndAspect.history-type = Historization
com.top_logic.element.config.EndAspect.history-type.tooltip = The type of history of the values. The values of this attribute can be either all current, historized, or a mixture of current and historized values.
com.top_logic.element.config.EndAspect.navigate = Navigate
com.top_logic.element.config.EndAspect.navigate.tooltip = Whether navigating this reference is efficient. <p> A reference is "efficient" if there is e.g. only a simple access. Assume that every project has one project manager. To go from the project to the corresponding project manager is therefore a simple reference access. </p> <p> The backward reference is essentially inefficient. If you want to know in which project you are the project manager then all projects are scanned and it is checked if you are the project manager of this project. </p>
com.top_logic.element.config.ExtendsConfig = Extends configuration
com.top_logic.element.config.ExtendsConfig.module-name = Module name
com.top_logic.element.config.ExtendsConfig.module-name.tooltip = The module name part of <i>Type</i>. <p> If <i>Type</i> is not qualified, <code>null</code> is returned. </p>
com.top_logic.element.config.ExtendsConfig.scope = Scope
com.top_logic.element.config.ExtendsConfig.scope.tooltip = The scope in which the referenced type is found. <p> Valid values are: </p> <ul> <li><code>"global"</code></li> <li><code>"this"</code></li> <li><code>"parent"</code></li> <li>The structure type of the nearest ancestor-or-self element that defines the <i>business object type</i></li> </ul>
com.top_logic.element.config.ExtendsConfig.tooltip = Configuration of the super type of the type defined in an <i>object type configuration</i>.
com.top_logic.element.config.ExtendsConfig.type = Type
com.top_logic.element.config.ExtendsConfig.type-name = Type name
com.top_logic.element.config.ExtendsConfig.type-name.tooltip = The local name part of <i>Type</i>
com.top_logic.element.config.ExtendsConfig.type.tooltip = Name of the super type. <p> When referencing types in another module, the name may be qualified by <code>[module-name]:[type-name]</code>. </p>
com.top_logic.element.config.InterfaceConfig = Interface configuration
com.top_logic.element.config.InterfaceConfig.tooltip = The configuration of a meta element belonging to a structured element.
com.top_logic.element.config.ModelConfig = Model configuration
com.top_logic.element.config.ModelConfig.modules = Modules
com.top_logic.element.config.ModelConfig.modules.tooltip = Defined <i>module configurations</i> in this <i>model configuration</i>.
com.top_logic.element.config.ModelConfig.tooltip = Representation of a structured element definition file (configuration for the <i>structured element factory</i>).
com.top_logic.element.config.ModuleConfig = Module configuration
com.top_logic.element.config.ModuleConfig.tooltip = Configuration of one module in the <i>model configuration</i>.
com.top_logic.element.config.ObjectTypeConfig.attributes.tooltip = The <i>attribute configurations</i> by name.
com.top_logic.element.config.ObjectTypeConfig.generalizations = Generalizations
com.top_logic.element.config.ObjectTypeConfig.generalizations.tooltip = The extended type.
com.top_logic.element.config.PartConfig.abstract = Abstract
com.top_logic.element.config.PartConfig.abstract.tooltip = Whether this attribute must be overridden in concrete classes.
com.top_logic.element.config.PartConfig.bag = Bag
com.top_logic.element.config.PartConfig.bag.tooltip = If <i>Multiple</i>, whether the same value may appear more than once in the values of this attribute (not set valued).
com.top_logic.element.config.PartConfig.mandatory = Mandatory
com.top_logic.element.config.PartConfig.mandatory.tooltip = Whether this attribute may not be empty.
com.top_logic.element.config.PartConfig.multiple = Multiple
com.top_logic.element.config.PartConfig.multiple.tooltip = Whether this attribute can hold multiple values of <i>Type</i> (collection valued).
com.top_logic.element.config.PartConfig.ordered = Ordered
com.top_logic.element.config.PartConfig.ordered.tooltip = If <i>Multiple</i>, whether the order of values of this attribute is significant (list or ordered set valued).
com.top_logic.element.config.PartConfig.override = Override
com.top_logic.element.config.PartConfig.override.tooltip = Whether this is an override of an existing reference. <p> Analogous to the Java <i>override</i> annotation. </p>
com.top_logic.element.config.ReferenceConfig = Reference configuration
com.top_logic.element.config.ReferenceConfig$ReferenceKind = Reference kind
com.top_logic.element.config.ReferenceConfig$ReferenceKind.tooltip = Classification of a reference in forwards and backwards.
com.top_logic.element.config.ReferenceConfig.ReferenceKind.BACKWARDS = Backwards
com.top_logic.element.config.ReferenceConfig.ReferenceKind.BACKWARDS.tooltip = A "backwards" reference.
com.top_logic.element.config.ReferenceConfig.ReferenceKind.FORWARDS = Forwards
com.top_logic.element.config.ReferenceConfig.ReferenceKind.FORWARDS.tooltip = A "forwards" reference.
com.top_logic.element.config.ReferenceConfig.ReferenceKind.NONE = None
com.top_logic.element.config.ReferenceConfig.ReferenceKind.NONE.tooltip = A reference with an explicitly defined association.
com.top_logic.element.config.ReferenceConfig.end = End
com.top_logic.element.config.ReferenceConfig.end.tooltip = Name of the association end, that implements this reference.
com.top_logic.element.config.ReferenceConfig.inverse-reference = Inverse reference
com.top_logic.element.config.ReferenceConfig.inverse-reference.tooltip = Name of the reference in the reference target type that represents the inverse navigation. <p> Can only be set for references of two-ended associations. </p>
com.top_logic.element.config.ReferenceConfig.kind = Kind
com.top_logic.element.config.ReferenceConfig.kind.tooltip = In a reference with implicit association, whether the corresponding association end of the implicitly created association should be the forwards, (index 1) or backwards (index 0) end. <p> <i>None</i> for a reference with explicit association, see <i>End</i>. </p> <p> If the value is <i>none</i>, but <i>End</i> is not set, the following holds: If <i>Inverse reference</i> is not set, the reference is considered to be <i>forwards</i>, <i>backwards</i> otherwise. </p>
com.top_logic.element.config.ReferenceConfig.tooltip = Definition of a reference.
com.top_logic.element.config.RoleAssignment = Role assignment
com.top_logic.element.config.RoleAssignment.group = Group
com.top_logic.element.config.RoleAssignment.group.tooltip = The group to which the <i>Role</i> are assigned on the context instance.
com.top_logic.element.config.RoleAssignment.role = Role
com.top_logic.element.config.RoleAssignment.role.tooltip = The assigned role(s). <p> Members of the <i>Group</i> get these roles on the annotated context object. </p>
com.top_logic.element.config.RoleAssignment.tooltip = Assignment of <i>Role</i> to a <i>Group</i> on the declaring context element.
com.top_logic.element.config.SingletonConfig = Singleton configuration
com.top_logic.element.config.SingletonConfig.name = Name
com.top_logic.element.config.SingletonConfig.name.tooltip = Name of the singleton object. <p> This special object gets a qualified model name such as an enumeration classifier. The qualified name of a singleton is <code>`my.module#SINGLETON_NAME`</code>. This qualified name can be used in TL-Script to access the object by name. The default singleton name in a module is <code>ROOT</code>, but any other name will do. Typically, singletons are used to distinguish the root node of a tree structure. </p>
com.top_logic.element.config.SingletonConfig.role-assignments = Role assignments
com.top_logic.element.config.SingletonConfig.role-assignments.tooltip = Roles assigned to group members on this instance.
com.top_logic.element.config.SingletonConfig.tooltip = Definition of a well-known named object (e.g. a structure root element).
com.top_logic.element.config.TypedPartAspect = Typed part aspect
com.top_logic.element.config.TypedPartAspect.tooltip = Definition aspect of a type part, that has a definition of its type.
com.top_logic.element.config.algorithm.MethodAlgorithmConfig.methodName = Method name
com.top_logic.element.config.algorithm.MethodAlgorithmConfig.methodName.tooltip = The name of the Java method to invoke at the context object.
com.top_logic.element.config.annotation.ConfigType = Configuration type
com.top_logic.element.config.annotation.ConfigType.tooltip = <i>Annotation</i> that provides a configuration name for which additional unversioned configuration is provided by <i>attribute settings</i>.
com.top_logic.element.config.annotation.ConfigType.value.tooltip = Configuration name identifying additional information.
com.top_logic.element.config.annotation.FolderType = Folder type
com.top_logic.element.config.annotation.FolderType.tooltip = <i>Annotation</i> that defines the folder type of an attribute of type <i>web folder</i>.
com.top_logic.element.config.annotation.ScopeRef = Scope reference
com.top_logic.element.config.annotation.ScopeRef.create-type = Create type
com.top_logic.element.config.annotation.ScopeRef.create-type.tooltip = The name of the concrete type to instantiate, when creating new elements.
com.top_logic.element.config.annotation.ScopeRef.scope-ref = Scope reference
com.top_logic.element.config.annotation.ScopeRef.scope-ref.tooltip = The scope reference.
com.top_logic.element.config.annotation.ScopeRef.tooltip = <i>Annotation</i> referencing a scope in which the attribute target type is declared.
com.top_logic.element.config.annotation.TLConstraint = Constraint
com.top_logic.element.config.annotation.TLConstraint.filter = Filter
com.top_logic.element.config.annotation.TLConstraint.filter.tooltip = The <i>object value filter</i> to filter options with.
com.top_logic.element.config.annotation.TLConstraint.tooltip = <i>Attribute annotation</i> specifying a filter that must accept attribute values.
com.top_logic.element.config.annotation.TLOptions = Options
com.top_logic.element.config.annotation.TLOptions.generator = Generator
com.top_logic.element.config.annotation.TLOptions.generator.tooltip = The <i>generator</i> computing options for a select field.
com.top_logic.element.config.annotation.TLOptions.tooltip = <i>Attribute annotation</i> specifying an algorithm to generate possible options for an attribute.
com.top_logic.element.config.annotation.TLReadOnlyColumns = Read only columns
com.top_logic.element.config.annotation.TLReadOnlyColumns.read-only-columns = Read only columns
com.top_logic.element.config.annotation.TLReadOnlyColumns.read-only-columns.tooltip = Technical names of read only columns.
com.top_logic.element.config.annotation.TLReadOnlyColumns.tooltip = Columns that the user can only read and not edit.
com.top_logic.element.config.annotation.TLSingletons = Singletons
com.top_logic.element.config.annotation.TLSingletons.singletons = Singletons
com.top_logic.element.config.annotation.TLSingletons.singletons.tooltip = Defined Singletons (structure root elements).
com.top_logic.element.config.annotation.TLSingletons.tooltip = <i>Annotation</i> holding the configuration of the singletons of a <i>module</i>.
com.top_logic.element.config.annotation.TLStorage = Storage
com.top_logic.element.config.annotation.TLStorage.implementation = Implementation
com.top_logic.element.config.annotation.TLStorage.implementation.tooltip = The <i>storage implementation</i> configuration.
com.top_logic.element.config.annotation.TLStorage.tooltip = <i>Annotation</i> choosing a custom <i>storage implementation</i> for an attribute. <p> The annotation can either be set on the <i>structured type part's</i> type, or directly on a <i>structured type part</i> itself. </p>
com.top_logic.element.config.annotation.TLValidityCheck = Validity check
com.top_logic.element.config.annotation.TLValidityCheck.tooltip = <i>Attribute annotation</i> specifying a periodic validity check for an attribute.
com.top_logic.element.config.annotation.TLValidityCheck.value.tooltip = A specification of the validity time.
com.top_logic.element.config.annotation.TLVisibleColumns = Available columns
com.top_logic.element.config.annotation.TLVisibleColumns.tooltip = All available columns a user can select from. <p> If this annotation is given on a reference, it has only an effect, if the reference is displayed as a table in a form. </p>
com.top_logic.element.config.annotation.TLVisibleColumns.visible-columns = Columns
com.top_logic.element.config.annotation.TLVisibleColumns.visible-columns.tooltip = Technical names of the columns that are available in a table derived from the annotated model element.
com.top_logic.element.config.annotation.Template = Template
com.top_logic.element.config.annotation.Template.tooltip = <i>Annotation</i> that provides a <i>attribute value locator</i> for locating a template for a <i>document</i>-typed attribute.
com.top_logic.element.config.annotation.Template.value = Value
com.top_logic.element.config.annotation.Template.value.tooltip = Algorithm to locate a template <i>document</i>.
com.top_logic.element.i18n.I18NStringTextPopupControl$CP = Cp
com.top_logic.element.i18n.I18NStringTextPopupControl$CP.tooltip = <i>Control provider</i> creating <i>internationalization string text popup controls</i>.
com.top_logic.element.journal.ShowHistoryDialog = Show history dialog
com.top_logic.element.layout.TypeInstanceListModelBuilder = Type instance list model builder
com.top_logic.element.layout.TypeInstanceListModelBuilder.Config.exclude-subtypes = Exclude subtypes
com.top_logic.element.layout.TypeInstanceListModelBuilder.Config.exclude-subtypes.tooltip = Should instances of subtypes be excluded?
com.top_logic.element.layout.TypeInstanceListModelBuilder.Config.meta-elements = Meta elements
com.top_logic.element.layout.TypeInstanceListModelBuilder.Config.meta-elements.tooltip = Comma-separated list of the <i>business object type</i> names whose instances should be returned.
com.top_logic.element.layout.TypeInstanceListModelBuilder.tooltip = A <i>list model builder</i> that returns instances of the configured types.
com.top_logic.element.layout.admin.component.ShowSecurityComponent = Show security component
com.top_logic.element.layout.admin.component.ShowSecurityComponent$RefreshCommand = Refresh command
com.top_logic.element.layout.admin.component.ShowSecurityComponent$RefreshCommand.tooltip = Calculates the result table.
com.top_logic.element.layout.admin.component.ShowSecurityComponent.Config.tableName = Table name
com.top_logic.element.layout.admin.component.ShowSecurityComponent.Config.tableName.tooltip = Name of the table that is displayed separate.
com.top_logic.element.layout.admin.component.ShowSecurityComponent.RefreshCommand.Config.tableName = Table name
com.top_logic.element.layout.admin.component.ShowSecurityComponent.RefreshCommand.Config.tableName.tooltip = Name of the table that is displayed separate.
com.top_logic.element.layout.admin.component.ShowSecurityComponent.tooltip = Shows security information for the selected elements.
com.top_logic.element.layout.create.AttributeBasedCreateTypeOptions = Attribute based create type options
com.top_logic.element.layout.create.AttributeBasedCreateTypeOptions.Config.attribute = Attribute
com.top_logic.element.layout.create.AttributeBasedCreateTypeOptions.Config.attribute.tooltip = The attribute whose value type should be computed.
com.top_logic.element.layout.create.AttributeBasedCreateTypeOptions.Config.owner = Owner
com.top_logic.element.layout.create.AttributeBasedCreateTypeOptions.Config.owner.tooltip = The type on which the attribute is defined. <p> This can also be a super type of a type that defines the attribute. That makes it possible to use this class in a layout template where the user specifies only a single type and that type is also used for computing the table configuration. </p>
com.top_logic.element.layout.create.AttributeBasedCreateTypeOptions.tooltip = <i>Create type options</i> that computes the TLClasses that are subtypes of a given attribute.
com.top_logic.element.layout.create.ConstantCreateTypeOptions = Constant type options
com.top_logic.element.layout.create.ConstantCreateTypeOptions.Config.include-subtypes = Include subtypes
com.top_logic.element.layout.create.ConstantCreateTypeOptions.Config.include-subtypes.tooltip = Whether to enable the user to choose the type to instantiate from all subtypes of <i>Type</i>.
com.top_logic.element.layout.create.ConstantCreateTypeOptions.Config.type = Type
com.top_logic.element.layout.create.ConstantCreateTypeOptions.Config.type.tooltip = The type to instantiate. <p> If the type is abstract or <i>Include subtypes</i> is true, the user is able to choose from all specializations of the given type. </p>
com.top_logic.element.layout.create.ConstantCreateTypeOptions.tooltip = <i>Create type options</i> that derive from a single static type.
com.top_logic.element.layout.create.CreateFormBuilder = Create form builder
com.top_logic.element.layout.create.CreateFormBuilder.UIOptions.header = Header
com.top_logic.element.layout.create.CreateFormBuilder.UIOptions.header.tooltip = The title displayed in the page header. <p> The resource created type can be embedded in title by using the placeholder <code>{0}.</code> </p>
com.top_logic.element.layout.create.CreateFormBuilder.UIOptions.typeOptions = Type options
com.top_logic.element.layout.create.CreateFormBuilder.UIOptions.typeOptions.tooltip = Algorithm to compute possible types that can be instantiated in the context defined by this component's model.
com.top_logic.element.layout.create.CreateFormBuilder.tooltip = <i>Form builder</i> that allows to generically create new objects and link them to their context. <p> As <i>Create handler</i> (<i>create component configuration</i>), use a subclass of <i>generic create handler</i>, e.g. <i>Generic structure create handler</i> for creating objects in a structure context. </p>
com.top_logic.element.layout.create.GenericCreateHandler = Generic create handler
com.top_logic.element.layout.create.GenericCreateHandler.tooltip = Create a new <i>object</i> in the context of e.g. a <i>create form builder</i>.
com.top_logic.element.layout.create.GenericStructureCreateHandler = Generic structure create handler
com.top_logic.element.layout.create.GenericStructureCreateHandler.tooltip = <i>Generic create handler</i> that links the created object as new child to its parent object in a structure.
com.top_logic.element.layout.create.MonomorphicCreateFormBuilder = Monomorphic create form builder
com.top_logic.element.layout.create.MonomorphicCreateFormBuilder$UIOptions = UI options
com.top_logic.element.layout.create.MonomorphicCreateFormBuilder$UIOptions.tooltip = Configuration options for <i>monomorphic create form builder</i> that are directly user-configurable.
com.top_logic.element.layout.create.MonomorphicCreateFormBuilder.UIOptions.formType = Form type
com.top_logic.element.layout.create.MonomorphicCreateFormBuilder.UIOptions.formType.tooltip = The concrete type to build the form for. <p> The displayed form can show all properties of the given type. By default, the form uses the the form definition annotated to the type. </p>
com.top_logic.element.layout.create.MonomorphicCreateFormBuilder.tooltip = <i>Form builder</i> that allows to create a form for objects of a configured concrete type.
com.top_logic.element.layout.formeditor.AbstractConfigureFormDefinitionCommand = Configure form definition command
com.top_logic.element.layout.formeditor.AbstractConfigureFormDefinitionCommand.tooltip = Command to change the view of a <i>form component</i> by editing the underlying <i>form definition</i>. <p> This command is only usable by <i>form components</i> instantiated from typed layout templates using the <i>configured dynamic form builder</i>. </p>
com.top_logic.element.layout.formeditor.ConfigureCreateFormDefinitionCommand = Configure create form definition command
com.top_logic.element.layout.formeditor.ConfigureCreateFormDefinitionCommand.tooltip = <i>Command</i> to edit a <i>form definition</i> of a <i>create component</i>.
com.top_logic.element.layout.formeditor.ConfigureEditFormDefinitionCommand = Configure edit form definition command
com.top_logic.element.layout.formeditor.ConfigureEditFormDefinitionCommand.tooltip = Command to change the view of a <i>form component</i> by editing the underlying <i>form definition</i>. <p> This command is only usable by <i>form components</i> instantiated from typed layout templates using the <i>configured dynamic form builder</i>. </p>
com.top_logic.element.layout.formeditor.ConfigureFormDefinitionAction.form-definition = Form definition
com.top_logic.element.layout.formeditor.ConfigureFormDefinitionAction.form-definition.tooltip = The customized form to store.
com.top_logic.element.layout.formeditor.ConfigureFormDefinitionAction.layout-component = Layout component
com.top_logic.element.layout.formeditor.ConfigureFormDefinitionAction.layout-component.tooltip = The name of the <i>component</i>.
com.top_logic.element.layout.formeditor.ConfigureFormDefinitionAction.standard-form = Standard form
com.top_logic.element.layout.formeditor.ConfigureFormDefinitionAction.standard-form.tooltip = Whether the standard form for the type is configured.
com.top_logic.element.layout.formeditor.ConfigureFormDefinitionAction.type = Type
com.top_logic.element.layout.formeditor.ConfigureFormDefinitionAction.type.tooltip = The name of the type of the form.
com.top_logic.element.layout.formeditor.ConfigureFormDefinitionActionOp = Configure form definition action
com.top_logic.element.layout.formeditor.ConfigureFormDefinitionActionOp.tooltip = The <i>application scripting action</i> replaces and store a <i>form definition</i> of a <i>structured type</i> for a <i>component</i>, or sets it as default for a <i>structured type</i>.
com.top_logic.element.layout.formeditor.DeleteFormDefinitionCommand = Delete form definition command
com.top_logic.element.layout.formeditor.DeleteFormDefinitionCommand.tooltip = Command deleting the local <i>form definition</i> of a <i>form component</i>. <p> This command is only usable by <i>form components</i> instantiated from typed layout templates using the <i>configured dynamic form builder</i>. </p>
com.top_logic.element.layout.formeditor.DisplayFormEditorBuilder$GlobalConfig = Global configuration
com.top_logic.element.layout.formeditor.DisplayFormEditorBuilder$GlobalConfig.tooltip = <i>Configuration item</i> for the <i>form editor toolbox control</i>.
com.top_logic.element.layout.formeditor.DisplayFormEditorBuilder.GlobalConfig.buttons = Buttons
com.top_logic.element.layout.formeditor.DisplayFormEditorBuilder.GlobalConfig.buttons.tooltip = List of elements to create buttons for.
com.top_logic.element.layout.formeditor.builder.ConfiguredDynamicFormBuilder = Configured dynamic form builder
com.top_logic.element.layout.formeditor.builder.ConfiguredDynamicFormBuilder.tooltip = <i>Form builder</i> creating a <i>form context</i> showing a selection of all available attributes of the business model type determined by a customized <i>form definition</i>. <p> The following priority hierarchy is used to get the <i>form definition</i>: </p> <ol> <li>Configured <i>form definition</i> on this builder.</li> <li>First annotated <i>form definition</i> on a super type for the current model type.</li> <li>Fallback: All attributes are displayed.</li> </ol>
com.top_logic.element.layout.formeditor.builder.EditFormBuilder = Edit form builder
com.top_logic.element.layout.formeditor.builder.EditFormBuilder$UIOptions = UI options
com.top_logic.element.layout.formeditor.builder.EditFormBuilder$UIOptions.tooltip = Options of <i>edit form builder</i> that can directly customized in the UI.
com.top_logic.element.layout.formeditor.builder.EditFormBuilder.UIOptions.showNoModel = Show without model
com.top_logic.element.layout.formeditor.builder.EditFormBuilder.UIOptions.showNoModel.tooltip = Whether the component should display, even if it's model is <code>null</code>. In this case, a "no model" message is displayed instead of hiding the component.
com.top_logic.element.layout.formeditor.builder.EditFormBuilder.UIOptions.type = Type
com.top_logic.element.layout.formeditor.builder.EditFormBuilder.UIOptions.type.tooltip = The required model type of the displayed object. <p> No value means that objects of all types are acceptable. </p> <p> If a value of an incompatible type is received, the component hides itself. The <code>null</code> value is handled especially. A component stays visible when it's model is <code>null</code>, only if the <i>show without model</i> option is set. </p>
com.top_logic.element.layout.formeditor.builder.EditFormBuilder.tooltip = <i>Form builder</i> that displays a configured <i>form definition</i> to a <i>structured type</i>.
com.top_logic.element.layout.formeditor.builder.FormsTemplateParameter.forms = Forms
com.top_logic.element.layout.formeditor.builder.FormsTemplateParameter.forms.tooltip = Form definitions to use for displaying objects in this component. <p> To display an object, the most specific form definition in this list is used that matches the object's type (or one of its primary generalizations). If no such form definition is found, a form definition is used that is annotated to the object's type. If there is no such form definition either, a generic form is rendered displaying all properties of the object. </p>
com.top_logic.element.layout.formeditor.builder.TypedFormDefinition = Typed form definition
com.top_logic.element.layout.formeditor.builder.TypedFormDefinition.formDefinition = Form definition
com.top_logic.element.layout.formeditor.builder.TypedFormDefinition.formDefinition.tooltip = The form to render for objects of the given <i>Type</i>.
com.top_logic.element.layout.formeditor.builder.TypedFormDefinition.tooltip = Configuration for a typed <i>form definition</i>.
com.top_logic.element.layout.formeditor.builder.TypedFormDefinition.type.tooltip = The type for which a form is defined. <p> If an object that is being displayed has the given type, this form definition is used to create the form. </p>
com.top_logic.element.layout.formeditor.definition.FieldDefinition.attribute = Attribute
com.top_logic.element.layout.formeditor.definition.FieldDefinition.attribute.tooltip = Returns the name of the attribute.
com.top_logic.element.layout.formeditor.definition.GroupProperties.collapsible = Collapsible
com.top_logic.element.layout.formeditor.definition.GroupProperties.collapsible.tooltip = Whether the group can be collapsed using a toggle button.
com.top_logic.element.layout.formeditor.definition.GroupProperties.collapsibleValue = Collapsible value
com.top_logic.element.layout.formeditor.definition.GroupProperties.collapsibleValue.tooltip = Whether this group can finally be collapsed.
com.top_logic.element.layout.formeditor.definition.GroupProperties.cssClass = Css class
com.top_logic.element.layout.formeditor.definition.GroupProperties.cssClass.tooltip = The CSS class(es) of the group.
com.top_logic.element.layout.formeditor.definition.GroupProperties.initiallyOpened = Initially opened
com.top_logic.element.layout.formeditor.definition.GroupProperties.initiallyOpened.tooltip = Whether the group is opened during first rendering.
com.top_logic.element.layout.formeditor.definition.GroupProperties.showBorder = Show border
com.top_logic.element.layout.formeditor.definition.GroupProperties.showBorder.tooltip = Whether the groups border is visible.
com.top_logic.element.layout.formeditor.definition.GroupProperties.showTitle = Show title
com.top_logic.element.layout.formeditor.definition.GroupProperties.showTitle.tooltip = Whether the groups title is visible.
com.top_logic.element.layout.formeditor.definition.GroupProperties.style = Style
com.top_logic.element.layout.formeditor.definition.GroupProperties.style.tooltip = The CSS style of the group.
com.top_logic.element.layout.formeditor.definition.GroupProperties.wholeLine = Whole line
com.top_logic.element.layout.formeditor.definition.GroupProperties.wholeLine.tooltip = Whether the group is rendered over the entire page width.
com.top_logic.element.layout.formeditor.definition.GroupProperties.width = Width
com.top_logic.element.layout.formeditor.definition.GroupProperties.width.tooltip = The width of the group in CSS units.
com.top_logic.element.layout.formeditor.definition.PDFExportAnnotation = PDF export annotation
com.top_logic.element.layout.formeditor.definition.PDFExportAnnotation.edited-type = Edited type
com.top_logic.element.layout.formeditor.definition.PDFExportAnnotation.edited-type.tooltip = The current type.
com.top_logic.element.layout.formeditor.definition.PDFExportAnnotation.export-form = Export form
com.top_logic.element.layout.formeditor.definition.PDFExportAnnotation.export-form.tooltip = The export form of the annotated type.
com.top_logic.element.layout.formeditor.definition.PDFExportAnnotation.tooltip = <i>Type annotation</i> to annotate an <i>form definition</i> when exporting the edited type as PDF.
com.top_logic.element.layout.formeditor.definition.TLFormDefinition = Form definition
com.top_logic.element.layout.formeditor.definition.TLFormDefinition.edited-type = Edited type
com.top_logic.element.layout.formeditor.definition.TLFormDefinition.edited-type.tooltip = The current type.
com.top_logic.element.layout.formeditor.definition.TLFormDefinition.form = Form
com.top_logic.element.layout.formeditor.definition.TLFormDefinition.form.tooltip = The <i>form definition</i> of the annotated type.
com.top_logic.element.layout.formeditor.definition.TLFormDefinition.tooltip = A <i>type annotation</i> to represent the structure of a form.
com.top_logic.element.layout.formeditor.definition.TabbarDefinition.tabs = Tabs
com.top_logic.element.layout.formeditor.definition.TabbarDefinition.tabs.tooltip = The tabs grouping other <i>form elements</i>. <p> Only the <i>form elements</i> of a single tab are visible together. </p>
com.top_logic.element.layout.formeditor.definition.TextDefinition.label = Label
com.top_logic.element.layout.formeditor.definition.TextDefinition.label.tooltip = Returns the label (title) of the group.
com.top_logic.element.layout.formeditor.definition.TitleDefinition.level = Level
com.top_logic.element.layout.formeditor.definition.TitleDefinition.level.tooltip = Returns the level of the heading for the HTML-tag.
com.top_logic.element.layout.formeditor.definition.WithUUID.uuid = Uuid
com.top_logic.element.layout.formeditor.definition.WithUUID.uuid.tooltip = Universally unique ID identifying this configuration.
com.top_logic.element.layout.formeditor.implementation.FieldDefinitionTemplateProvider = Field definition template provider
com.top_logic.element.layout.formeditor.implementation.FieldDefinitionTemplateProvider.tooltip = Creates a template for a <i>field definition</i> and stores the necessary information.
com.top_logic.element.layout.formeditor.implementation.GroupDefinitionTemplateProvider = Group definition template provider
com.top_logic.element.layout.formeditor.implementation.GroupDefinitionTemplateProvider.tooltip = Creates a template for a <i>group definition</i>.
com.top_logic.element.layout.formeditor.implementation.OtherAttributesTemplateProvider = Other attributes template provider
com.top_logic.element.layout.formeditor.implementation.OtherAttributesTemplateProvider.tooltip = <i>Form part</i> rendering an <i>other attributes</i> element.
com.top_logic.element.layout.formeditor.implementation.TabDefinitionTemplateProvider = Tab definition template provider
com.top_logic.element.layout.formeditor.implementation.TabDefinitionTemplateProvider.tooltip = <i>Form part</i> for a <i>tab definition</i>. <p> Note this template provider is exclusively used as part of the template generation of a <i>tabbar definition template provider</i>. </p>
com.top_logic.element.layout.formeditor.implementation.TabbarDefinitionTemplateProvider = Tabbar definition template provider
com.top_logic.element.layout.formeditor.implementation.TabbarDefinitionTemplateProvider.tooltip = <i>Form part</i> creating a tabbar for grouping elements of a form under different tabs.
com.top_logic.element.layout.formeditor.implementation.TitleDefinitionTemplateProvider = Title definition template provider
com.top_logic.element.layout.formeditor.implementation.TitleDefinitionTemplateProvider.tooltip = Creates a template for a <i>title definition</i> and stores the necessary information.
com.top_logic.element.layout.formeditor.implementation.additional.IsAdminProvider = Is administrator
com.top_logic.element.layout.formeditor.implementation.additional.IsAdminProvider.tooltip = Whether the edited <i>account</i> is an technical administrator.
com.top_logic.element.layout.genericimport.GenericDataImportAssistentComponent = Generic data import assistent component
com.top_logic.element.layout.genericimport.GenericDataImportAssistentComponent.Config.importConfigFile = Import configuration file
com.top_logic.element.layout.genericimport.GenericDataImportConfigComponent = Generic data import configuration component
com.top_logic.element.layout.genericimport.GenericDataImportConfigComponent$GenericDataImportConverterConfigHandler = Generic data import converter configuration handler
com.top_logic.element.layout.genericimport.GenericDataImportConfigComponent.Config.allowCommit = Allow commit
com.top_logic.element.layout.genericimport.GenericDataImportConfigComponent.Config.allowCreate = Allow create
com.top_logic.element.layout.genericimport.GenericDataImportConfigComponent.Config.allowUpdate = Allow update
com.top_logic.element.layout.genericimport.GenericDataImportConfigComponent.Config.rowSize = Row size
com.top_logic.element.layout.genericimport.GenericDataImportConfigComponent.tooltip = This component is used to configure a <i>generic data import configuration</i>
com.top_logic.element.layout.genericimport.GenericDataImportController = Generic data import controller
com.top_logic.element.layout.genericimport.GenericDataImportController$GenericDataImportUploadHandler = Generic data import upload handler
com.top_logic.element.layout.genericimport.GenericDataImportController.Config.configStep = Configuration step
com.top_logic.element.layout.genericimport.GenericDataImportController.Config.progressStep = Progress step
com.top_logic.element.layout.genericimport.GenericDataImportController.Config.uploadStep = Upload step
com.top_logic.element.layout.genericimport.GenericDataImportPreviewComponent = Generic data import preview component
com.top_logic.element.layout.genericimport.GenericDataImportProgressComponent = Generic data import progress component
com.top_logic.element.layout.genericimport.GenericDataImportProgressComponent$StartGenericImportTaskCommand = Start generic import task command
com.top_logic.element.layout.grid.AbstractGridCreateHandler = Grid create handler
com.top_logic.element.layout.grid.AbstractGridCreateHandler.Config.typeChooser = Type chooser
com.top_logic.element.layout.grid.AbstractGridCreateHandler.Config.typeChooser.tooltip = Whether the user can choose from concrete sub-types of the create type. <p> The value of this option is only relevant when there are multiple types to choose from. </p>
com.top_logic.element.layout.grid.AbstractGridCreateHandler.tooltip = Base class for <i>command handlers</i> starting a create operation in a <i>grid component</i>.
com.top_logic.element.layout.grid.AbstractTreeGridBuilder = Tree grid builder
com.top_logic.element.layout.grid.AbstractTreeGridBuilder.tooltip = Common base class for <i>grid builders</i> creating tree-structured grids.
com.top_logic.element.layout.grid.DefaultAccessorTableConfigProvider = Default accessor table configuration provider
com.top_logic.element.layout.grid.DefaultAccessorTableConfigProvider.Config.accessorClass = Accessor class
com.top_logic.element.layout.grid.DefaultAccessorTableConfigProvider.Config.accessorClass.tooltip = Class of the default <i>accessor</i> depending on the concrete <i>grid component</i>.
com.top_logic.element.layout.grid.DefaultAccessorTableConfigProvider.tooltip = Extension of <i>grid component table configuration provider</i> to set default column accessor.
com.top_logic.element.layout.grid.DefaultGridSaveCommandHandler = Default grid save command handler
com.top_logic.element.layout.grid.DefaultGridSaveCommandHandler.tooltip = <i>Default save command handler</i> that does skip the apply step, if the grid does not currently edit the selected object.
com.top_logic.element.layout.grid.GenericStructureCreateHandler = Generic structure create handler
com.top_logic.element.layout.grid.GenericStructureCreateHandler.Config.contextSelector = Context selector
com.top_logic.element.layout.grid.GenericStructureCreateHandler.Config.nodeType = Node type
com.top_logic.element.layout.grid.GenericStructureCreateHandler.tooltip = <i>Command handler</i> that can create <i>structured elements</i> in a <i>grid component</i> context.
com.top_logic.element.layout.grid.GridBusinessObjectNaming$GridBusinessObjectName = Grid business object name
com.top_logic.element.layout.grid.GridBusinessObjectNaming$GridBusinessObjectName.tooltip = <i>Model name</i> for the business object of a grid row.
com.top_logic.element.layout.grid.GridBusinessObjectNaming.GridBusinessObjectName.grid-row = Grid row
com.top_logic.element.layout.grid.GridBusinessObjectNaming.GridBusinessObjectName.grid-row.tooltip = <i>Model name</i> for a row in a <i>grid component</i>.
com.top_logic.element.layout.grid.GridComponent = Grid component
com.top_logic.element.layout.grid.GridComponent$AddSelectedToClipboard = Add selected to clipboard
com.top_logic.element.layout.grid.GridComponent$AddSelectedToClipboard.tooltip = Simple handler for adding all rows marked to the clipboard.
com.top_logic.element.layout.grid.GridComponent$ClearSelectedCheckboxes = Clear selected checkboxes
com.top_logic.element.layout.grid.GridComponent$ClearSelectedCheckboxes.tooltip = Clear all selected check boxes in the grid.
com.top_logic.element.layout.grid.GridComponent$GridApplyCommandHandler = Grid apply command handler
com.top_logic.element.layout.grid.GridComponent$GridApplyCommandHandler.tooltip = Handler to store the data of the currently selected row.
com.top_logic.element.layout.grid.GridComponent$SelectAllCheckboxes = Select all checkboxes
com.top_logic.element.layout.grid.GridComponent$SelectAllCheckboxes.tooltip = Selects all check boxes in the marker column of the grid.
com.top_logic.element.layout.grid.GridComponent.Config.componentTableConfigProvider = Component table configuration provider
com.top_logic.element.layout.grid.GridComponent.Config.componentTableConfigProvider.tooltip = Returns the factory to create programmatic <i>table configuration plug-in</i> for the configured <i>grid component</i>.
com.top_logic.element.layout.grid.GridComponent.Config.editComponentName = Edit component name
com.top_logic.element.layout.grid.GridComponent.Config.elementTypes = Element types
com.top_logic.element.layout.grid.GridComponent.Config.excludeColumns = Exclude columns
com.top_logic.element.layout.grid.GridComponent.Config.expandRoot.tooltip = This property is only relevant when <i>Model builder</i> is a <i>tree model builder</i>.
com.top_logic.element.layout.grid.GridComponent.Config.expandSelected.tooltip = This property is only relevant when <i>Model builder</i> is a <i>tree model builder</i>.
com.top_logic.element.layout.grid.GridComponent.Config.gridApplyHandlerClass = Grid apply handler class
com.top_logic.element.layout.grid.GridComponent.Config.modifier = Modifier
com.top_logic.element.layout.grid.GridComponent.Config.openInEdit = Open in edit
com.top_logic.element.layout.grid.GridComponent.Config.rootVisible.tooltip = This property is only relevant when <i>Model builder</i> is a <i>tree model builder</i>.
com.top_logic.element.layout.grid.GridComponent.Config.rowSecurityProviderClass = Row security provider class
com.top_logic.element.layout.grid.GridComponent.Config.showClipboardCommands = Show clipboard commands
com.top_logic.element.layout.grid.GridComponent.Config.showClipboardCommands.tooltip = Flag indicating whether to show clipboard commands or not
com.top_logic.element.layout.grid.GridComponent.Config.showDetailOpener = Show detail opener
com.top_logic.element.layout.grid.GridComponent.Config.showDetailOpener.tooltip = Configuration option whether detail dialog opener should be displayed.
com.top_logic.element.layout.grid.GridComponent.Config.showMarkerFields = Show marker fields
com.top_logic.element.layout.grid.GridComponent.Config.showMarkerFields.tooltip = Flag, whether to create marker fields.
com.top_logic.element.layout.grid.GridComponent.Config.showTechnicalColumn = Show technical column
com.top_logic.element.layout.grid.GridComponent.Config.showTechnicalColumn.tooltip = Flag indicating whether to show technical column or not
com.top_logic.element.layout.grid.GridComponent.Config.structureName = Structure name
com.top_logic.element.layout.grid.GridComponent.tooltip = Grid component that allows editing of a single row of a table.
com.top_logic.element.layout.grid.GridContextMenuFactory = Grid context menu factory
com.top_logic.element.layout.grid.GridContextMenuFactory.tooltip = <i>Selectable context menu factory</i> that maps grid rows to business objects.
com.top_logic.element.layout.grid.GridContextMenuProvider = Grid context menu provider
com.top_logic.element.layout.grid.GridContextMenuProvider.tooltip = <i>Selectable context menu provider</i> using <i>grid context menu factory</i> to create the context menu.
com.top_logic.element.layout.grid.GridCreateHandler = Grid create handler
com.top_logic.element.layout.grid.GridCreateHandler.Config.create-handler = Create handler
com.top_logic.element.layout.grid.GridCreateHandler.Config.create-handler-id = Create handler ID
com.top_logic.element.layout.grid.GridCreateHandler.Config.create-handler-id.tooltip = Command ID of the create handler to be used. <p> Either <i>Create handler</i> or <i>Create handler ID</i> must be given. </p>
com.top_logic.element.layout.grid.GridCreateHandler.Config.create-handler.tooltip = Configuration of the create handler used to create the persistent object from the transient object. <p> Either <i>Create handler</i> or <i>Create handler ID</i> must be given. </p>
com.top_logic.element.layout.grid.GridCreateHandler.Config.parent-types = Parent types
com.top_logic.element.layout.grid.GridCreateHandler.Config.parent-types.tooltip = Element types on which it is allowed to create a new object. <p> If empty the model of the component is used as create context, otherwise the selection. </p>
com.top_logic.element.layout.grid.GridCreateHandler.tooltip = Button to create a new <i>object</i> in the <i>grid component</i>.
com.top_logic.element.layout.grid.GridExcelExportHandler = Grid Excel export handler
com.top_logic.element.layout.grid.GridExcelExportHandler.Config.executability.tooltip = In contrast to <i>Excel export handler</i> this handler can be used when no model exists, as it is not needed to create export values. Moreover it can be used in edit mode.
com.top_logic.element.layout.grid.GridExcelExportHandler.tooltip = Allows export even if there is no model as not every grid component needs a model.
com.top_logic.element.layout.grid.GridTableConfig = Grid table configuration
com.top_logic.element.layout.grid.GridTableConfig.tooltip = <i>Form table configuration</i> with defaults for <i>grid component</i>.
com.top_logic.element.layout.grid.GridTreeTableNode$GridTreeTableNodeNaming$GridNodeName = Grid node name
com.top_logic.element.layout.grid.GridTreeTableNode$GridTreeTableNodeNaming$GridNodeName.tooltip = <i>Model name</i> of <i>grid tree table nodes</i>.
com.top_logic.element.layout.grid.GridTreeTableNode.GridTreeTableNodeNaming.GridNodeName.component = Component
com.top_logic.element.layout.grid.GridTreeTableNode.GridTreeTableNodeNaming.GridNodeName.component.tooltip = Reference to the context component.
com.top_logic.element.layout.grid.GridTreeTableNode.GridTreeTableNodeNaming.GridNodeName.path = Path
com.top_logic.element.layout.grid.GridTreeTableNode.GridTreeTableNodeNaming.GridNodeName.path.tooltip = Path from the root of a tree grid display to the referenced nodes in model names for business objects.
com.top_logic.element.layout.grid.GridTreeTableNodeLabelNaming$GridNodeLabelName = Grid node label name
com.top_logic.element.layout.grid.GridTreeTableNodeLabelNaming$GridNodeLabelName.tooltip = <i>Model name</i> for the <i>grid tree table node label naming</i>.
com.top_logic.element.layout.grid.GridTreeTableNodeLabelNaming.GridNodeLabelName.component = Component
com.top_logic.element.layout.grid.GridTreeTableNodeLabelNaming.GridNodeLabelName.component.tooltip = Reference to the <i>grid component</i>.
com.top_logic.element.layout.grid.GridTreeTableNodeLabelNaming.GridNodeLabelName.path = Path
com.top_logic.element.layout.grid.GridTreeTableNodeLabelNaming.GridNodeLabelName.path.tooltip = Path of labels from the root to the referenced node.
com.top_logic.element.layout.grid.GridTreeTableNodeResourceProvider = Grid tree table node resource provider
com.top_logic.element.layout.grid.GridTreeTableNodeResourceProvider.tooltip = <i>Accessor</i> for <i>grid tree table nodes</i>.
com.top_logic.element.layout.grid.Icons.GRID_EDIT_WIDTH = Grids technical column width in pixels. <p> This column contains commands to edit the row object. </p>
com.top_logic.element.layout.grid.Icons.OPEN_DETAIL = Image for the button to edit the row object in a grid.
com.top_logic.element.layout.grid.Icons.OPEN_DETAIL_DISABLED = Disabled image for the button to edit the row object in a grid.
com.top_logic.element.layout.grid.OpenDetailDialog$Naming$Name = Name
com.top_logic.element.layout.grid.OpenDetailDialog$Naming$Name.tooltip = <i>Model name</i> for <i>open detail dialog</i> commands in the <i>naming</i> scheme.
com.top_logic.element.layout.grid.OpenDetailDialog.Naming.Name.component = Component
com.top_logic.element.layout.grid.OpenDetailDialog.Naming.Name.component.tooltip = Description of the component displaying the table the detail dialog is opened for.
com.top_logic.element.layout.grid.OpenDetailDialog.Naming.Name.row = Row
com.top_logic.element.layout.grid.OpenDetailDialog.Naming.Name.row.tooltip = Description of the row the detail dialog is opened for.
com.top_logic.element.layout.grid.OpenGridCompareViewCommand = Open grid compare view command
com.top_logic.element.layout.grid.OpenGridCompareViewCommand.tooltip = <i>Open compare view command</i> for <i>grid component</i>.
com.top_logic.element.layout.grid.StructureGridBuilder = Structure grid builder
com.top_logic.element.layout.grid.StructureGridBuilder.Config.builder = Builder
com.top_logic.element.layout.grid.StructureGridBuilder.Config.builder.tooltip = Configuration of the actual <i>structure model builder</i>, that creates the tree.
com.top_logic.element.layout.grid.StructureGridBuilder.tooltip = <i>Grid builder</i> that retrieves its model objects from a <i>structure model builder</i>.
com.top_logic.element.layout.grid.TableGridBuilder = Table grid builder
com.top_logic.element.layout.grid.TableGridBuilder.Config.builder = Builder
com.top_logic.element.layout.grid.TableGridBuilder.Config.builder.tooltip = Configuration of the actual <i>list model builder</i>, that creates the rows in the table.
com.top_logic.element.layout.grid.TableGridBuilder.tooltip = <i>Grid builder</i> that creates a regular grid without hierarchy.
com.top_logic.element.layout.grid.TreeGridBuilder = Tree grid builder
com.top_logic.element.layout.grid.TreeGridBuilder.Config.builder = Builder
com.top_logic.element.layout.grid.TreeGridBuilder.Config.builder.tooltip = Configuration of the <i>tree model builder</i> that creates the tree.
com.top_logic.element.layout.grid.TreeGridBuilder.tooltip = <i>Grid builder</i> based on a <i>tree model builder</i>.
com.top_logic.element.layout.grid.TreeGridExpandCollapseAll = Tree grid expand collapse all
com.top_logic.element.layout.grid.TreeGridExpandCollapseAll.tooltip = Expands or collapse all nodes in the <i>grid component</i>.
com.top_logic.element.layout.instances.CreateInstanceHandler = Create instance handler
com.top_logic.element.layout.instances.CreateInstanceHandler.tooltip = <i>Command handler</i> that creates new grid row object of the type given as the grid's model (which is expected to be of type <i>business object type</i>).
com.top_logic.element.layout.instances.DirectInstancesTable = Direct instances table
com.top_logic.element.layout.instances.DirectInstancesTable.tooltip = <i>Table configuration plug-in</i> that configures a table with it's surrounding component's model (expecting it to be a <i>business object type</i>).
com.top_logic.element.layout.instances.InstanceBrowserGrid = Instance browser grid
com.top_logic.element.layout.instances.InstanceBrowserGrid.tooltip = <i>Grid component</i> for the generic instances table in the administration. <p> It overrides the <i>visibility</i> from the model and displays every column as editable, unless it is technically impossible (e.g. derived columns). </p>
com.top_logic.element.layout.meta.AttributeI18NColumns = Attribute internationalization columns
com.top_logic.element.layout.meta.AttributeI18NColumns.tooltip = <i>Table configuration plug-in</i> dynamically creating columns for all supported languages containing the localized name of an attribute.
com.top_logic.element.layout.meta.ControlProviderModificator = Control provider modificator
com.top_logic.element.layout.meta.ControlProviderModificator.Config.attribute = Attribute
com.top_logic.element.layout.meta.ControlProviderModificator.Config.attribute.tooltip = The name of the attribute whose <i>control provider</i> should be set.
com.top_logic.element.layout.meta.ControlProviderModificator.Config.controlProvider = Control provider
com.top_logic.element.layout.meta.ControlProviderModificator.Config.controlProvider.tooltip = The <i>control provider</i> to set at the <i>form field</i>. <p> The <i>control provider</i> is created just once per <i>form context modificator</i> instance. </p>
com.top_logic.element.layout.meta.ControlProviderModificator.tooltip = A <i>form context modificator</i> that sets a configured <i>control provider</i> at the field for the specified attribute.
com.top_logic.element.layout.meta.FormContextModificatorComposite = Form context modificator composite
com.top_logic.element.layout.meta.FormContextModificatorComposite.Config.children = Children
com.top_logic.element.layout.meta.FormContextModificatorComposite.Config.children.tooltip = The inner <i>form context modificators</i>.
com.top_logic.element.layout.meta.FormContextModificatorComposite.tooltip = A <i>form context modificator</i> that combines multiple others. <p> The <i>Children</i> are called in the configured order, except for the clear operation, for which they are called in the reverse order. </p>
com.top_logic.element.layout.meta.ModuleContainerApplyHandler = Module container apply handler
com.top_logic.element.layout.meta.ModuleContainerApplyHandler.tooltip = Applies changes of the underlying <i>module container</i>.
com.top_logic.element.layout.meta.ModuleContainerFormBuilder = Module container form builder
com.top_logic.element.layout.meta.ModuleContainerFormBuilder$EditModel = Edit model
com.top_logic.element.layout.meta.ModuleContainerFormBuilder$EditModel.tooltip = Model of the displayed form.
com.top_logic.element.layout.meta.ModuleContainerFormBuilder.tooltip = <i>Declarative form builder</i> builds the <i>form context</i> to display a <i>module container</i>.
com.top_logic.element.layout.meta.ShowAllAttributesCommand = Show all attributes command
com.top_logic.element.layout.meta.ShowAllAttributesCommand.tooltip = <i>Toggle command handler</i> that toggles the "show all" state of <i>meta attribute table list model builder</i>.
com.top_logic.element.layout.meta.TLBackReferenceFormBuilder = Back reference form builder
com.top_logic.element.layout.meta.TLBackReferenceFormBuilder$BackReferenceModel = Back reference
com.top_logic.element.layout.meta.TLBackReferenceFormBuilder$BackReferenceModel.tooltip = Configuration display of a <i>reference</i>.
com.top_logic.element.layout.meta.TLBackReferenceFormBuilder$EditModel = Edit model
com.top_logic.element.layout.meta.TLBackReferenceFormBuilder.BackReferenceModel.otherEnd = Forwards reference
com.top_logic.element.layout.meta.TLBackReferenceFormBuilder.BackReferenceModel.otherEnd.tooltip = The <i>reference</i> for for which a back reference should be created.
com.top_logic.element.layout.meta.TLBackReferenceFormBuilder.BackReferenceModel.selectOtherEnd = Select other end
com.top_logic.element.layout.meta.TLBackReferenceFormBuilder.BackReferenceModel.selectOtherEnd.tooltip = True if <i>forwards reference</i> is selectable otherwise it's immutable and not active.
com.top_logic.element.layout.meta.TLBackReferenceFormBuilder.EditModel.part-model.tooltip = Configuration of the <i>structured type part</i> to edit.
com.top_logic.element.layout.meta.TLBackReferenceFormBuilder.tooltip = Editor for backwards <i>references</i>
com.top_logic.element.layout.meta.TLEnumerationApplyHandler = Enumeration apply handler
com.top_logic.element.layout.meta.TLEnumerationApplyHandler.tooltip = Applies changes to a <i>classification</i> model element.
com.top_logic.element.layout.meta.TLEnumerationCreateHandler = Enumeration create handler
com.top_logic.element.layout.meta.TLEnumerationCreateHandler.tooltip = The <i>enumeration create handler</i> handles the creation of a new <i>classification</i>.
com.top_logic.element.layout.meta.TLEnumerationFormBuilder = Enumeration form builder
com.top_logic.element.layout.meta.TLEnumerationFormBuilder$ClassifierModel = Classifier
com.top_logic.element.layout.meta.TLEnumerationFormBuilder$ClassifierModel.tooltip = Model of the displayed classifier.
com.top_logic.element.layout.meta.TLEnumerationFormBuilder$EditModel = Edit model
com.top_logic.element.layout.meta.TLEnumerationFormBuilder$EditModel.tooltip = Model of the displayed enumeration.
com.top_logic.element.layout.meta.TLEnumerationFormBuilder.ClassifierModel.create = Create
com.top_logic.element.layout.meta.TLEnumerationFormBuilder.ClassifierModel.create.tooltip = Whether the <i>classifier</i> is currently created.
com.top_logic.element.layout.meta.TLEnumerationFormBuilder.EditModel.create = Create
com.top_logic.element.layout.meta.TLEnumerationFormBuilder.EditModel.create.tooltip = Whether this editor is in create mode.
com.top_logic.element.layout.meta.TLEnumerationFormBuilder.EditModel.i18nClassifiersConfig = Internationalization classifiers configuration
com.top_logic.element.layout.meta.TLEnumerationFormBuilder.EditModel.i18nClassifiersConfig.tooltip = Internationalized <i>classifier configuration</i>.
com.top_logic.element.layout.meta.TLEnumerationFormBuilder.EditModel.module = Module
com.top_logic.element.layout.meta.TLEnumerationFormBuilder.EditModel.module.tooltip = The owning module.
com.top_logic.element.layout.meta.TLEnumerationFormBuilder.tooltip = <i>Declarative form builder</i> for properties of a <i>classification</i>.
com.top_logic.element.layout.meta.TLModelPartDeleteHandler = Model part delete handler
com.top_logic.element.layout.meta.TLModelPartDeleteHandler.tooltip = Delete handler for a general <i>model part</i>.
com.top_logic.element.layout.meta.TLModuleApplyHandler = Module apply handler
com.top_logic.element.layout.meta.TLModuleApplyHandler.tooltip = Applies changes to a <i>module</i> model element.
com.top_logic.element.layout.meta.TLModuleCreateHandler = Module create handler
com.top_logic.element.layout.meta.TLModuleCreateHandler.tooltip = The <i>module create handler</i> handles the creation of a new <i>module</i>.
com.top_logic.element.layout.meta.TLModuleFormBuilder = Module form builder
com.top_logic.element.layout.meta.TLModuleFormBuilder$EditModel = Edit model
com.top_logic.element.layout.meta.TLModuleFormBuilder$EditModel.tooltip = Base edit properties of all <i>module</i> configurations.
com.top_logic.element.layout.meta.TLModuleFormBuilder.EditModel.create = Create
com.top_logic.element.layout.meta.TLModuleFormBuilder.EditModel.create.tooltip = Whether this editor is in create mode.
com.top_logic.element.layout.meta.TLModuleFormBuilder.tooltip = <i>Declarative form builder</i> for a <i>module</i>.
com.top_logic.element.layout.meta.TLOverrideFormBuilder = Override form builder
com.top_logic.element.layout.meta.TLOverrideFormBuilder$EditModel = Edit model
com.top_logic.element.layout.meta.TLOverrideFormBuilder$OverrideModel = Override model
com.top_logic.element.layout.meta.TLOverrideFormBuilder$OverrideModel.tooltip = Simplified configuration display of a <i>object property</i>.
com.top_logic.element.layout.meta.TLOverrideFormBuilder.EditModel.part-model.tooltip = Configuration of the <i>structured type part</i> to edit.
com.top_logic.element.layout.meta.TLOverrideFormBuilder.OverrideModel.overridden-part = Overridden part
com.top_logic.element.layout.meta.TLOverrideFormBuilder.OverrideModel.overridden-part.tooltip = Reference to the overridden <i>structured type part</i>.
com.top_logic.element.layout.meta.TLOverrideFormBuilder.tooltip = Editor for overriding <i>object propertys</i>
com.top_logic.element.layout.meta.TLPropertyFormBuilder = Property form builder
com.top_logic.element.layout.meta.TLPropertyFormBuilder$EditModel = Edit model
com.top_logic.element.layout.meta.TLPropertyFormBuilder$PropertyModel = Property model
com.top_logic.element.layout.meta.TLPropertyFormBuilder$PropertyModel.tooltip = Configuration display of a <i>object property</i>.
com.top_logic.element.layout.meta.TLPropertyFormBuilder.EditModel.part-model.tooltip = Configuration of the <i>structured type part</i> to edit.
com.top_logic.element.layout.meta.TLPropertyFormBuilder.tooltip = Editor for <i>object propertys</i>
com.top_logic.element.layout.meta.TLReferenceFormBuilder = Reference form builder
com.top_logic.element.layout.meta.TLReferenceFormBuilder$EditModel = Edit model
com.top_logic.element.layout.meta.TLReferenceFormBuilder$ReferenceModel = Reference model
com.top_logic.element.layout.meta.TLReferenceFormBuilder$ReferenceModel.tooltip = Configuration display of a <i>reference</i>.
com.top_logic.element.layout.meta.TLReferenceFormBuilder.EditModel.part-model.tooltip = Configuration of the <i>structured type part</i> to edit.
com.top_logic.element.layout.meta.TLReferenceFormBuilder.ReferenceModel.forwards-reference = Forwards reference
com.top_logic.element.layout.meta.TLReferenceFormBuilder.ReferenceModel.forwards-reference.tooltip = If this reference is a backwards reference, then this is the corresponding forwards reference.
com.top_logic.element.layout.meta.TLReferenceFormBuilder.tooltip = Editor for <i>references</i>
com.top_logic.element.layout.meta.TLStructuredTypeApplyHandler = Structured type apply handler
com.top_logic.element.layout.meta.TLStructuredTypeApplyHandler.tooltip = Applies changes to a <i>business object type</i> model element.
com.top_logic.element.layout.meta.TLStructuredTypeCreateHandler = Structured type create handler
com.top_logic.element.layout.meta.TLStructuredTypeCreateHandler.tooltip = The <i>structured type create handler</i> handles the creation of a new <i>business object type</i>.
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder = Structured type form builder
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder$EditModel = Edit model
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder$EditModel.tooltip = Model of the displayed form.
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.concrete = Concrete
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.concrete.tooltip = Not <i>Abstract</i>
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.create = Create
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.create.tooltip = Whether this editor is in create mode.
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.edited-type = Edited type
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.edited-type.tooltip = The existing type that is currently being edited.
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.editing = Editing
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.editing.tooltip = Not <i>Create</i>
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.extendable = Extendable
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.extendable.tooltip = Not <i>Final</i>
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.generalization-types = Generalization types
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.generalization-types.tooltip = Input property for <i>Generalizations</i>.
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.hasInstances = Has instances
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.hasInstances.tooltip = Whether the edited type is potentially instantiated.
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.hasSpecializations = Has specializations
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.hasSpecializations.tooltip = Whether the edited type has <i>Specialization types</i>.
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.module = Module
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.module.tooltip = The owning module.
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.noInstances = No instances
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.noInstances.tooltip = Not <i>Has instances</i>
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.noSpecializations = No specializations
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.noSpecializations.tooltip = Not <i>Has specializations</i>.
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.specialization-types = Specialization types
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.EditModel.specialization-types.tooltip = All currently known specializations of the displayed type.
com.top_logic.element.layout.meta.TLStructuredTypeFormBuilder.tooltip = <i>Declarative form builder</i> for properties of a <i>business object type</i>.
com.top_logic.element.layout.meta.TLStructuredTypePartApplyHandler = Structured type part apply handler
com.top_logic.element.layout.meta.TLStructuredTypePartApplyHandler.tooltip = Applies changes to a <i>structured type part</i> model element.
com.top_logic.element.layout.meta.TLStructuredTypePartCreateHandler = Structured type part create handler
com.top_logic.element.layout.meta.TLStructuredTypePartCreateHandler.tooltip = The <i>structured type part create handler</i> handles the creation of a new <i>structured type part</i> .
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder = Structured type part form builder
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder$EditModel = Edit model
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder$EditModel.tooltip = Model of the <i>structured type part</i> editor.
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.EditModel.context-type = Context type
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.EditModel.context-type.tooltip = The type in which the attribute is defined.
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.EditModel.creating = Creating
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.EditModel.creating.tooltip = Whether a new attribute is created (not a previously existing one is edited).
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.EditModel.part-model = Part model
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.EditModel.part-model.tooltip = Configuration of the <i>structured type part</i> to edit.
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.editModel = Edit model
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.editModel.tooltip = Access to the top-level editor.
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.multipleAndNew = Multiple and new
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.multipleAndNew.tooltip = Whether it is allowed to change the collection properties.
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.newAttribute = New attribute
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.newAttribute.tooltip = Not <i>Override</i>
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.resolved-type = Resolved type
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.resolved-type.tooltip = The resolved version of <i>Type</i>
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.type-kind = Type kind
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.PartModel.type-kind.tooltip = Kind of this part model used to limit the set of annotations that can be applied.
com.top_logic.element.layout.meta.TLStructuredTypePartFormBuilder.tooltip = Editor for <i>structured type parts</i>
com.top_logic.element.layout.meta.TemplateFormContextModificator = Template form context modificator
com.top_logic.element.layout.meta.TemplateFormContextModificator.tooltip = <i>Form context modificator</i> used in layout templates. <p> For example to limit the amount of editable columns </p>
com.top_logic.element.layout.meta.expression.ExpressionSelectorComponent = Expression selector component
com.top_logic.element.layout.meta.expression.ExpressionSelectorComponent.Config.configurator = Configurator
com.top_logic.element.layout.meta.expression.ExpressionSelectorComponent.Config.configurator.tooltip = The component displaying the search/report that is selected with this component.
com.top_logic.element.layout.meta.expression.ExpressionSelectorComponent.tooltip = A <i>component</i> for selecting a search or report expression. <p> The type parameter "W" represents the Wrapper that is selected. </p>
com.top_logic.element.layout.meta.expression.NewExpressionCommand = New expression command
com.top_logic.element.layout.meta.expression.NewExpressionCommand.tooltip = The common superclass for creating new searches and reports.
com.top_logic.element.layout.meta.expression.SaveExpressionCommand = Save expression command
com.top_logic.element.layout.meta.expression.SaveExpressionCommand.tooltip = The common superclass for saving searches and reports.
com.top_logic.element.layout.meta.search.AttributedSearchComponent = Object search component
com.top_logic.element.layout.meta.search.AttributedSearchComponent.Config.additionalResultColumnOptions = Additional result column options
com.top_logic.element.layout.meta.search.AttributedSearchComponent.Config.derivedAttributeDescriptionProviderClass = Derived attribute description provider class
com.top_logic.element.layout.meta.search.AttributedSearchComponent.Config.displayWithoutModel.tooltip = A search input component normally has no model, but should be displayed.
com.top_logic.element.layout.meta.search.AttributedSearchComponent.Config.fulltextExactMatch = Fulltext exact match
com.top_logic.element.layout.meta.search.AttributedSearchComponent.Config.fulltextIsAnd = Fulltext is and
com.top_logic.element.layout.meta.search.AttributedSearchComponent.Config.inputSupport = Input support
com.top_logic.element.layout.meta.search.AttributedSearchComponent.Config.metaElement = Meta element
com.top_logic.element.layout.meta.search.AttributedSearchComponent.Config.querySupport = Query support
com.top_logic.element.layout.meta.search.AttributedSearchComponent.Config.resultColumns = Result columns
com.top_logic.element.layout.meta.search.AttributedSearchComponent.Config.resultColumns.tooltip = The columns to display in the search result table. <p> This value influences only the initial result display. It is only relevant if the user has not selected a <i>stored query</i> and the <i>search model builder</i> is either no <i>extended search model builder</i> or returns an empty list. </p> <p> Note: If the value starts with <code>"IGNORED!"</code>, this configuration is ignored. </p>
com.top_logic.element.layout.meta.search.AttributedSearchComponent.Config.search-result-component = Search result component
com.top_logic.element.layout.meta.search.AttributedSearchComponent.Config.search-result-component.tooltip = The name of the component that displays the <i>search result set</i>.
com.top_logic.element.layout.meta.search.AttributedSearchComponent.Config.searchFilterSupportClass = Search filter support class
com.top_logic.element.layout.meta.search.AttributedSearchComponent.tooltip = Component for searching in a set of attributed objects. This component provides mechanism to search in a defined set of attributed objects, which will be provided by the <i>Model builder</i>.
com.top_logic.element.layout.meta.search.AttributedSearchResultComponent = Object search result component
com.top_logic.element.layout.meta.search.AttributedSearchResultComponent.Config.metaElement = Meta element
com.top_logic.element.layout.meta.search.AttributedSearchResultComponent.Config.metaElementBuilder = Meta element builder
com.top_logic.element.layout.meta.search.AttributedSearchResultComponent.tooltip = Display results from a search in a table.
com.top_logic.element.layout.meta.search.ConfigurationSearchModelBuilder = Configuration search model builder
com.top_logic.element.layout.meta.search.ConfigurationSearchModelBuilder.Config.excludedAttributesForColumns = Excluded attributes for columns
com.top_logic.element.layout.meta.search.ConfigurationSearchModelBuilder.Config.excludedAttributesForReporting = Excluded attributes for reporting
com.top_logic.element.layout.meta.search.ConfigurationSearchModelBuilder.Config.excludedAttributesForSearch = Excluded attributes for search
com.top_logic.element.layout.meta.search.ConfigurationSearchModelBuilder.Config.page = Page
com.top_logic.element.layout.meta.search.ConfigurationSearchModelBuilder.Config.searchObjectsProducer = Search objects producer
com.top_logic.element.layout.meta.search.ConfigurationSearchModelBuilder.Config.typedResultColumns = Typed result columns
com.top_logic.element.layout.meta.search.ConfigurationSearchModelBuilder.tooltip = The <i>configuration search model builder</i> get the neccessary information of the layout configuration. The attributes searchObjectsProducer, excludedAttributes, excludedAttributesForReporting, page and resultColumns can be following encoded. metaElementName1{value1},metaElementName2{value2} E.g. configuration ... page='projElement.Project{/jsp/project/search/SearchInput.jsp};riskItem.goal{/jsp/search/SearchInputGoal.jsp}' excludedAttributes='projElement.Project{testContainer,testContainerDate};riskItem.goal{responsible}' ... For all configured meta elements (e.g. projElement.Project and riskItem.goal) must the attribues: searchObjectsProducer, excludedAttributes, excludedAttributesForReporting, page and resultColumns have a configuration (see above). It isn't allow to leave a configuration for an declared meta element. In this case is the configuration (e.g. projElement.Project{}) empty but NOT missing.
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder = Default configurable search model builder
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder$ElementConfig = Element configuration
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder$ElementConfig.tooltip = Search configuration for one kind of business object.
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.Config.elements = Elements
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.Config.elements.tooltip = Elements supported by this search model builder (name is <i>business object type</i> (<i>business object type</i>) name).
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.ElementConfig.exclude = Exclude
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.ElementConfig.exclude-columns = Exclude columns
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.ElementConfig.exclude-columns.tooltip = Attribute names to be excluded from column selection.
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.ElementConfig.exclude-reporting = Exclude reporting
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.ElementConfig.exclude-reporting.tooltip = Attribute names to be excluded from reporting.
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.ElementConfig.exclude-search = Exclude search
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.ElementConfig.exclude-search.tooltip = Attribute names to be excluded from search.
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.ElementConfig.exclude.tooltip = Attribute names to be excluded from everything: <i>Exclude columns</i>, <i>Exclude reporting</i> and <i>Exclude search</i>.
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.ElementConfig.ko-type = Ko type
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.ElementConfig.ko-type.tooltip = Type of knowledge object to be found.
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.ElementConfig.page = Page
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.ElementConfig.page.tooltip = Input JSP to define the search.
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.ElementConfig.result-columns = Result columns
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.ElementConfig.result-columns.tooltip = Default column selection when initially displaying the search input and result page.
com.top_logic.element.layout.meta.search.DefaultConfigurableSearchModelBuilder.tooltip = Default configurable model builder for <i>object search component</i>.
com.top_logic.element.layout.meta.search.DeleteQueryCommandHandler = Delete query command handler
com.top_logic.element.layout.meta.search.DeleteQueryCommandHandler.tooltip = Delete a <i>stored query</i> from an <i>object search component</i>.
com.top_logic.element.layout.meta.search.DispatchingSearchModelBuilder = Dispatching search model builder
com.top_logic.element.layout.meta.search.DispatchingSearchModelBuilder.Config.modelBuilders = Model builders
com.top_logic.element.layout.meta.search.DispatchingSearchModelBuilder.tooltip = Extend the ExtendedSearchModelBuilder to dispatch to sub-modelBuilders via type.
com.top_logic.element.layout.meta.search.NewQueryComponent = New query component
com.top_logic.element.layout.meta.search.NewQueryComponent$NewQueryCommandHandler = New query command handler
com.top_logic.element.layout.meta.search.NewQueryComponent$NewQueryCommandHandler.tooltip = Create handler for stored queries. For creating a new stored query one has to define the name of the new query.
com.top_logic.element.layout.meta.search.NewQueryComponent.tooltip = Create component for stored queries. For creating a new stored query one has to define the name of the new query. NOTE: This code has been taken over from AbstractStoredQueryComponent.
com.top_logic.element.layout.meta.search.OpenDialogOnValidFormContextHandler = Open dialog on valid form context handler
com.top_logic.element.layout.meta.search.OpenDialogOnValidFormContextHandler.tooltip = Open a Dialog only when some underlying FormComponent has a valid FormContext.
com.top_logic.element.layout.meta.search.PublishableNewQueryComponent = Publishable new query component
com.top_logic.element.layout.meta.search.PublishableNewQueryComponent$PublishableNewQueryCommandHandler = Publishable new query command handler
com.top_logic.element.layout.meta.search.PublishableSaveQueryCommandHandler = Publishable save query command handler
com.top_logic.element.layout.meta.search.ResetSearchCommandHandler = Reset search command handler
com.top_logic.element.layout.meta.search.ResetSearchCommandHandler.tooltip = Reset the search input area to the state defined by a stored query.
com.top_logic.element.layout.meta.search.SaveQueryCommandHandler = Save query command handler
com.top_logic.element.layout.meta.search.SearchCommandHandler = Search command handler
com.top_logic.element.layout.meta.search.SearchCommandHandler.tooltip = Command for executing a search.
com.top_logic.element.layout.meta.search.SwitchSearchScopeCommandHandler = Switch search scope command handler
com.top_logic.element.layout.meta.search.quick.Icons.QUICK_SEARCH_VIEW = Template for rendering a quick search view.
com.top_logic.element.layout.meta.search.quick.QuickSearchCommand$Config = Configuration
com.top_logic.element.layout.meta.search.quick.QuickSearchCommand$Config.tooltip = Configuration of the <i>quick search command</i>.
com.top_logic.element.layout.meta.search.quick.QuickSearchCommand$SearchTypeConfig = Search type configuration
com.top_logic.element.layout.meta.search.quick.QuickSearchCommand$SearchTypeConfig.tooltip = Configuration for <i>Search attributes</i> (<i>quick search command configuration</i>).
com.top_logic.element.layout.meta.search.quick.QuickSearchCommand.Config.exclude-types = Exclude types
com.top_logic.element.layout.meta.search.quick.QuickSearchCommand.Config.exclude-types.tooltip = List of full qualified <i>type</i> (if <i>business object type</i> including subtypes) which an object must not have to occur in search result. <p> <i>Exclude types</i> win against <i>Include types</i>. </p>
com.top_logic.element.layout.meta.search.quick.QuickSearchCommand.Config.include-types = Include types
com.top_logic.element.layout.meta.search.quick.QuickSearchCommand.Config.include-types.tooltip = List of full qualified <i>type</i> (if <i>business object type</i> including subtypes) which an object must have to occur in search result.
com.top_logic.element.layout.meta.search.quick.QuickSearchCommand.Config.search-attributes = Search attributes
com.top_logic.element.layout.meta.search.quick.QuickSearchCommand.Config.search-attributes.tooltip = Map of qualified class names and their configured attributes that should be used for the search exclusively.
com.top_logic.element.layout.meta.search.quick.QuickSearchCommand.SearchTypeConfig.attributes = Attributes
com.top_logic.element.layout.meta.search.quick.QuickSearchCommand.SearchTypeConfig.attributes.tooltip = List of attributes that should be used for the search of the given <i>Type</i>.
com.top_logic.element.layout.meta.search.quick.QuickSearchCommand.SearchTypeConfig.type = Type
com.top_logic.element.layout.meta.search.quick.QuickSearchCommand.SearchTypeConfig.type.tooltip = Type of the <i>business object type</i>.
com.top_logic.element.layout.meta.search.quick.QuickSearchView.button = The button to execute the search.
com.top_logic.element.layout.meta.search.quick.QuickSearchView.input = The input field for the search string.
com.top_logic.element.layout.meta.search.quick.QuickSearchViewConfiguration = Quick search view configuration
com.top_logic.element.layout.meta.search.quick.QuickSearchViewConfiguration.Config.active = Active
com.top_logic.element.layout.meta.search.quick.QuickSearchViewConfiguration.Config.active.tooltip = Flag, if the quick search input field should be activated (and therefore be visible).
com.top_logic.element.layout.meta.search.quick.QuickSearchViewConfiguration.Config.maxResults = Maximum results
com.top_logic.element.layout.meta.search.quick.QuickSearchViewConfiguration.Config.maxResults.tooltip = The maximum number of results shown in the drop-down dialog.
com.top_logic.element.layout.meta.search.quick.QuickSearchViewConfiguration.Config.no-search-component = No search component
com.top_logic.element.layout.meta.search.quick.QuickSearchViewConfiguration.Config.no-search-component.tooltip = Whether no search component should be used when too many results are found.
com.top_logic.element.layout.meta.search.quick.QuickSearchViewConfiguration.Config.searchComponent = Search component
com.top_logic.element.layout.meta.search.quick.QuickSearchViewConfiguration.Config.searchComponent.tooltip = The name of the search component to go to when too many results are found.
com.top_logic.element.layout.meta.search.quick.QuickSearchViewConfiguration.Config.searchField = Search field
com.top_logic.element.layout.meta.search.quick.QuickSearchViewConfiguration.Config.searchField.tooltip = Name of the search field to create.
com.top_logic.element.layout.meta.search.quick.QuickSearchViewConfiguration.tooltip = Search input control with a full text search engine in its background.
com.top_logic.element.layout.person.ApplyRolesHandler = Apply roles handler
com.top_logic.element.layout.person.ApplyRolesHandler.tooltip = <i>Apply command handler</i> storing roles.
com.top_logic.element.layout.person.EditPersonOrGroupRolesMultiComponent = Edit person or group roles multiple component
com.top_logic.element.layout.person.EditPersonOrGroupRolesMultiComponent.Config.securityModule = Security module
com.top_logic.element.layout.person.EditPersonOrGroupRolesMultiComponent.Config.securityModule.tooltip = <i>Component channel</i> delivering the security module to configure.
com.top_logic.element.layout.person.EditPersonOrGroupRolesMultiComponent.tooltip = Component supports setting multiple roles for a person on the elements of a BoundObject-based tree
com.top_logic.element.layout.person.SaveRolesHandler = Save roles handler
com.top_logic.element.layout.person.SaveRolesHandler.tooltip = Corresponding save handler for <i>apply roles handler</i>.
com.top_logic.element.layout.role.GlobalEditRoleComponent = Global edit role component
com.top_logic.element.layout.role.GlobalEditRoleComponent.tooltip = Edit roles without binding object.
com.top_logic.element.layout.role.ScopedEditRoleComponent = Scoped edit role component
com.top_logic.element.layout.role.ScopedEditRoleComponent.tooltip = Edit roles that have a binding object
com.top_logic.element.layout.scripting.AttributeFieldMatcher = Attribute field matcher
com.top_logic.element.layout.scripting.AttributeFieldMatcher.Config.attribute = Attribute
com.top_logic.element.layout.scripting.AttributeFieldMatcher.Config.attribute.tooltip = Reference to the attribute itself.
com.top_logic.element.layout.scripting.AttributeFieldMatcher.Config.domain = Domain
com.top_logic.element.layout.scripting.AttributeFieldMatcher.Config.prefix = Prefix
com.top_logic.element.layout.scripting.AttributeFieldMatcher.Config.prefix.tooltip = Some custom prefix for the field's name.
com.top_logic.element.layout.scripting.AttributeFieldMatcher.Config.self = Self
com.top_logic.element.layout.scripting.AttributeFieldMatcher.Config.self.tooltip = Reference to the base object, may be <code>null</code>, if the attribute field is used for object creation.
com.top_logic.element.layout.scripting.AttributeFieldMatcher.tooltip = <i>Field matcher</i> based on the binding of an <i>structured type part</i> to a <i>form member</i>.
com.top_logic.element.layout.scripting.AttributeUpdateInput$Op = Op
com.top_logic.element.layout.scripting.AttributeUpdateInput$Op.tooltip = Default implementation of <i>attribute update input</i>.
com.top_logic.element.layout.scripting.ChildNamingScheme$ChildName = Child name
com.top_logic.element.layout.scripting.ChildNamingScheme.ChildName.parent = Parent
com.top_logic.element.layout.scripting.ChildNamingScheme.ChildName.parent.tooltip = The parent of the object.
com.top_logic.element.layout.scripting.CommentNamingScheme$CommentName = Comment name
com.top_logic.element.layout.scripting.CommentNamingScheme$CommentName.tooltip = <i>Model name</i> for a <i>comment</i>. <p> A <i>comment</i> is identified by its create revision. That is currently (for example in the comments table) the only unique identifier. </p>
com.top_logic.element.layout.scripting.CommentNamingScheme.CommentName.create-revision = Create revision
com.top_logic.element.layout.scripting.CommentNamingScheme.CommentName.create-revision.tooltip = The <i>model name</i> of the revision in witch the comment was created.
com.top_logic.element.layout.scripting.MetaAttributeNaming$MetaAttributeName = Meta attribute name
com.top_logic.element.layout.scripting.MetaAttributeNaming$MetaAttributeName.tooltip = Name to identify <i>structured type part</i>.
com.top_logic.element.layout.scripting.MetaAttributeNaming.MetaAttributeName.owner = Owner
com.top_logic.element.layout.scripting.MetaAttributeNaming.MetaAttributeName.owner.tooltip = The owner of the represented <i>structured type part</i>.
com.top_logic.element.layout.scripting.StructurePathNamingScheme$StructurePathName = Structure path name
com.top_logic.element.layout.scripting.StructurePathNamingScheme$StructurePathName.tooltip = The <i>model name</i> of the <i>structure path naming scheme</i>.
com.top_logic.element.layout.scripting.StructurePathNamingScheme.StructurePathName.label-path = Label path
com.top_logic.element.layout.scripting.StructurePathNamingScheme.StructurePathName.label-path.tooltip = The path to the element. <p> Root is not part of the path. </p>
com.top_logic.element.layout.scripting.StructurePathNamingScheme.StructurePathName.structure-name = Structure name
com.top_logic.element.layout.scripting.StructurePathNamingScheme.StructurePathName.structure-name.tooltip = The technical name of the structure.
com.top_logic.element.layout.scripting.StructuredElementNaming$Name = Name
com.top_logic.element.layout.scripting.StructuredElementNaming$Name.tooltip = <i>Model name</i> for <i>structured element naming</i>.
com.top_logic.element.layout.scripting.StructuredElementNaming.Name.path = Path
com.top_logic.element.layout.scripting.StructuredElementNaming.Name.path.tooltip = List of node names that describe a path from the structure root (exclusive) to the referenced node (inclusive).
com.top_logic.element.layout.scripting.StructuredElementNaming.Name.singleton = Singleton
com.top_logic.element.layout.scripting.StructuredElementNaming.Name.singleton-label = Singleton label
com.top_logic.element.layout.scripting.StructuredElementNaming.Name.singleton-label.tooltip = The label of the singleton.
com.top_logic.element.layout.scripting.StructuredElementNaming.Name.singleton.tooltip = The name of the singleton.
com.top_logic.element.layout.scripting.StructuredElementNaming.Name.structure = Structure
com.top_logic.element.layout.scripting.StructuredElementNaming.Name.structure.tooltip = The name of the structure the referenced object is part of.
com.top_logic.element.layout.scripting.TLObjectByLabelNaming$TLObjectByLabelName = Object by label name
com.top_logic.element.layout.scripting.TLObjectByLabelNaming$TLObjectByLabelName.tooltip = <i>Model name</i> for the <i>object by label naming</i>.
com.top_logic.element.layout.scripting.TLObjectByLabelNaming.TLObjectByLabelName.class-name = Class name
com.top_logic.element.layout.scripting.TLObjectByLabelNaming.TLObjectByLabelName.class-name.tooltip = The qualified name of the type.
com.top_logic.element.layout.scripting.TLObjectByLabelNaming.TLObjectByLabelName.object-label = Object label
com.top_logic.element.layout.scripting.TLObjectByLabelNaming.TLObjectByLabelName.object-label.tooltip = The label of the object.
com.top_logic.element.layout.security.AttributeClassifierRolesComponent = Attribute classifier roles component
com.top_logic.element.layout.security.AttributeClassifierRolesComponent$AttributeClassifirRolesApplyHandler = Attribute classifir roles apply handler
com.top_logic.element.layout.security.AttributeClassifierRolesComponent.tooltip = <i>Component</i> assigning access rights for roles on attribute classifications.
com.top_logic.element.layout.security.AttributeSecurityEditComponent = Attribute security edit component
com.top_logic.element.layout.security.AttributeSecurityEditComponent$AttributeClassificationApplyHandler = Attribute classification apply handler
com.top_logic.element.layout.security.AttributeSecurityEditComponent.tooltip = <i>Component</i> for classifying attributes.
com.top_logic.element.layout.security.ExportingEditRolesProfileComponent = Exporting edit roles profile component
com.top_logic.element.layout.security.ExportingEditRolesProfileComponent.tooltip = Register security export
com.top_logic.element.layout.security.RoleRulesComponent = Role rules component
com.top_logic.element.layout.security.handler.SecurityExportHandler = Security export handler
com.top_logic.element.layout.security.handler.SecurityExportHandler.tooltip = <i>Command handler</i> providing an export for all security settings. <ul> <li>Attribute classifications</li> <li>Permissions for roles on attribute classifications</li> <li>Rules for assigning roles on objects.</li> <li>Access rights for roles on components.</li> <li>Group assignments for persons.</li> </ul>
com.top_logic.element.layout.structured.AdminElementComponent = Admin element component
com.top_logic.element.layout.structured.AdminElementComponent$StructuredElementSwitchEditCommandHandler = Structured element switch edit command handler
com.top_logic.element.layout.structured.AdminElementComponent.Config.editRoot = Edit root
com.top_logic.element.layout.structured.AdminElementComponent.Config.structure = Structure
com.top_logic.element.layout.structured.AdminElementComponent.tooltip = Edit component for the <i>structured element</i>. This component is able to create, modify and delete a <i>structured element</i>. It will only refer the interface, not the implementation behind.
com.top_logic.element.layout.structured.CreateAttributedStructuredElementComponent = Create object structured element component
com.top_logic.element.layout.structured.CreateAttributedStructuredElementComponent$CreateAttributedStructuredElementCommandHandler = Create object structured element command handler
com.top_logic.element.layout.structured.CreateAttributedStructuredElementComponent$CreateAttributedStructuredElementCommandHandler.tooltip = Create a new attributed structured element.
com.top_logic.element.layout.structured.CreateAttributedStructuredElementComponent.Config.structureName = Structure name
com.top_logic.element.layout.structured.CreateAttributedStructuredElementComponent.tooltip = Create component for attributed structured elements.
com.top_logic.element.layout.structured.DefaultStructuredElementTreeModelBuilder = Default structured element tree model builder
com.top_logic.element.layout.structured.DefaultStructuredElementTreeModelBuilder.Config.structureName = Structure name
com.top_logic.element.layout.structured.DefaultStructuredElementTreeModelBuilder.Config.structureName.tooltip = Name of the structure to display (starting with the <code>"ROOT"</code> singleton).
com.top_logic.element.layout.structured.DefaultStructuredElementTreeModelBuilder.Config.treeFilters = Tree filters
com.top_logic.element.layout.structured.DefaultStructuredElementTreeModelBuilder.Config.treeFilters.tooltip = List of and-concatenated <i>filters</i> that select the nodes to display.
com.top_logic.element.layout.structured.DefaultStructuredElementTreeModelBuilder.tooltip = <i>Structure model builder</i> that provides a filtered <i>structured element</i> tree.
com.top_logic.element.layout.structured.MandatorAdminComponent = Mandator admin component
com.top_logic.element.layout.structured.MandatorAdminComponent$MandatorDeleteCommandhandler = Mandator delete commandhandler
com.top_logic.element.layout.structured.MandatorAdminComponent$NewMandatorCommandHandler = New mandator command handler
com.top_logic.element.layout.structured.MandatorAdminComponent$NewMandatorComponent = New mandator component
com.top_logic.element.layout.structured.MandatorAdminComponent.Config.maxIDLength = Maximum ID length
com.top_logic.element.layout.structured.MandatorAdminComponent.Config.minIDLength = Minimum ID length
com.top_logic.element.layout.structured.MandatorAdminComponent.tooltip = Component for managing mandators. Here you can create new mandators, remove old one and change some attributes.
com.top_logic.element.layout.structured.MandatorOverviewComponent = Mandator overview component
com.top_logic.element.layout.structured.MandatorOverviewComponent.tooltip = Show overview page for mandators with some attributes for normal user (no admin page).
com.top_logic.element.layout.structured.StructuredElementApplyHandler = Structured element apply handler
com.top_logic.element.layout.structured.StructuredElementApplyHandler.tooltip = Handler for applying changes to a structured element.
com.top_logic.element.layout.structured.StructuredElementCreateComponent = Structured element create component
com.top_logic.element.layout.structured.StructuredElementCreateComponent.tooltip = Component (usually a Dialog) to create a new StructuredElement.
com.top_logic.element.layout.structured.StructuredElementCreateHandler = Structured element create handler
com.top_logic.element.layout.structured.StructuredElementCreateHandler.tooltip = Create a new <i>structured element</i> in the context of a <i>structured element create component</i>.
com.top_logic.element.layout.structured.StructuredElementRemoveHandler = Structured element remove handler
com.top_logic.element.layout.structured.StructuredElementRemoveHandler.tooltip = Handler for removing an element. The remove will only be performed, if the removing is allowed by the element itself.
com.top_logic.element.layout.structured.StructuredElementTreeModelBuilder = Structured element tree model builder
com.top_logic.element.layout.structured.StructuredElementTreeModelBuilder.Config.treeFilter = Tree filter
com.top_logic.element.layout.structured.StructuredElementTreeModelBuilder.tooltip = This is an builder class which creates tree models for a whole element structure. <p> To be used in the <i>configurable structure edit component</i> as model builder. </p>
com.top_logic.element.layout.structured.WebfolderAwareMandatorAdminComponent = Webfolder aware mandator admin component
com.top_logic.element.layout.structured.WebfolderAwareMandatorAdminComponent.Config.webfolderAttribute = Webfolder attribute
com.top_logic.element.layout.structured.WebfolderAwareMandatorAdminComponent.tooltip = The WebfolderAwareMandatorAdminComponent extends the MandatorAdminComponent for the usage of document or webfolder attributes
com.top_logic.element.layout.structured.WholeStructureModelProvider = Whole structure model provider
com.top_logic.element.layout.structured.WholeStructureModelProvider.Config.structure = Structure
com.top_logic.element.layout.structured.WholeStructureModelProvider.tooltip = A <i>model provider</i> which constantly returns the root of a structure as business model.
com.top_logic.element.layout.table.AttributedStructureEditComponent = Object structure edit component
com.top_logic.element.layout.table.AttributedStructureEditComponent.tooltip = <i>Configurable structure edit component</i> for editing a tree containing <i>object</i>.
com.top_logic.element.layout.table.ReferenceListModelBuilder = Reference list model builder
com.top_logic.element.layout.table.ReferenceListModelBuilder.Config.reference = Reference
com.top_logic.element.layout.table.ReferenceListModelBuilder.Config.reference.tooltip = Name of the reference to retrieve values for display.
com.top_logic.element.layout.table.ReferenceListModelBuilder.tooltip = <i>List model builder</i> retrieving the list values by accessing a configured reference on the passed model.
com.top_logic.element.layout.table.StructureReferenceListModelBuilder = Structure reference list model builder
com.top_logic.element.layout.table.StructureReferenceListModelBuilder.Config.additionalTypes = Additional types
com.top_logic.element.layout.table.StructureReferenceListModelBuilder.Config.additionalTypes.tooltip = (Optional) additional types (in addition to the type defining the configured reference) for which values should be retrieved descending the structure. <p> If no additional types are configured, values are only displayed, if the component's model is an object defining <i>Reference</i>. </p>
com.top_logic.element.layout.table.StructureReferenceListModelBuilder.Config.structure = Structure
com.top_logic.element.layout.table.StructureReferenceListModelBuilder.Config.structure.tooltip = Definition of a model structure that serves as source for accessing <i>Reference</i>.
com.top_logic.element.layout.table.StructureReferenceListModelBuilder.tooltip = <i>Reference list model builder</i> that retrieves all values accessible through a configured reference from all elements in a substructure.
com.top_logic.element.layout.table.StructuredElementAttributeListModelBuilder = Structured element attribute list model builder
com.top_logic.element.layout.table.StructuredElementAttributeListModelBuilder.tooltip = Build a list model with values from an attribute of a <i>object</i>.
com.top_logic.element.layout.table.WrapperListModelBuilder = Object list model builder
com.top_logic.element.layout.table.WrapperListModelBuilder.Config.types = Types
com.top_logic.element.layout.table.WrapperListModelBuilder.Config.types.tooltip = Comma separated list of qualified type name of the <i>object</i> to be created.
com.top_logic.element.layout.table.WrapperListModelBuilder.tooltip = Provide <i>objects</i> as defined by the configuration for list and grid components.
com.top_logic.element.layout.table.WrapperStructureModelBuilder = Object structure model builder
com.top_logic.element.layout.table.WrapperStructureModelBuilder$ChildConfig = Child configuration
com.top_logic.element.layout.table.WrapperStructureModelBuilder$ChildConfig.tooltip = Configuration for a child node in the tree.
com.top_logic.element.layout.table.WrapperStructureModelBuilder.Config.child-attributes = Child attributes
com.top_logic.element.layout.table.WrapperStructureModelBuilder.Config.child-attributes.tooltip = Mapping for children of a currently selected node.
com.top_logic.element.layout.table.WrapperStructureModelBuilder.Config.root-objects = Root objects
com.top_logic.element.layout.table.WrapperStructureModelBuilder.Config.root-objects.tooltip = Return the model builder to be used for getting the root objects of the tree table.
com.top_logic.element.layout.table.WrapperStructureModelBuilder.tooltip = Build a tree structure out of wrappers which are no structured elements.
com.top_logic.element.layout.table.filter.ConfigurableAttributedTableFilterProvider = Configurable object table filter provider
com.top_logic.element.layout.table.filter.ConfigurableAttributedTableFilterProvider.Config.metaElement = Meta element
com.top_logic.element.layout.table.filter.ConfigurableAttributedTableFilterProvider.tooltip = A <i>table filter provider</i> which creates <i>table filter</i> for <i>structured type part</i> for a configured <i>business object type</i>.
com.top_logic.element.layout.table.provider.generic.ElementTableConfigModelInfoFactory = Element table configuration model info factory
com.top_logic.element.layout.table.provider.generic.ElementTableConfigModelInfoFactory.tooltip = <i>Table configuration model info factory implementation</i> for elements just available in tl-element.
com.top_logic.element.layout.table.tree.compare.AdapterRevisionCompareComponent = Adapter revision compare component
com.top_logic.element.layout.table.tree.compare.AdapterRevisionCompareComponent.Config.objectTypes = Object types
com.top_logic.element.layout.table.tree.compare.AdapterRevisionCompareComponent.Config.objectTypes.tooltip = String representation of object types, that shall be displayed in compare table.
com.top_logic.element.layout.table.tree.compare.AdapterRevisionCompareComponent.Config.tableConfigurationProvider = Table configuration provider
com.top_logic.element.layout.table.tree.compare.AdapterRevisionCompareComponent.Config.tableConfigurationProvider.tooltip = <i>Table configuration plug-in</i>, that will be applied to <i>table configurations</i> of comparison base and comparison change.
com.top_logic.element.layout.table.tree.compare.AdapterRevisionCompareComponent.tooltip = Invisible layout component, that will be used as model adapter of <i>revision compare component</i> to <i>compare tree table component</i>.
com.top_logic.element.layout.tree.StructureSelectorComponent = Structure selector component
com.top_logic.element.layout.tree.StructureSelectorComponent.Config.structures = Structures
com.top_logic.element.layout.tree.StructureSelectorComponent.tooltip = This class provides a selector for structures. The names of the structures presented are configured in the layout xml.
com.top_logic.element.layout.tree.StructuredElementTreeDropTarget = Structure element drop
com.top_logic.element.layout.tree.StructuredElementTreeDropTarget.tooltip = <i>Tree drop target</i> for dropping a <i>structured element</i>. <p> The <i>structured element</i> is removed from its parents and added to the new tree at the target location. </p>
com.top_logic.element.layout.version.CreateTagComponent = Create tag component
com.top_logic.element.layout.version.CreateTagComponent$CreateTagCommandHandler = Create tag command handler
com.top_logic.element.layout.version.CreateTagComponent$CreateTagCommandHandler.tooltip = General create command handler for the <i>tag</i>.
com.top_logic.element.layout.version.CreateTagComponent.Config.metaElement = Meta element
com.top_logic.element.layout.version.CreateTagComponent.tooltip = General create component for a <i>tag</i>.
com.top_logic.element.meta.AbstractStorageBase = Storage base
com.top_logic.element.meta.AbstractStorageBase.tooltip = Base class for all <i>storage implementations</i>.
com.top_logic.element.meta.AttributeSettings = Attribute settings
com.top_logic.element.meta.AttributeSettings$AttributeSetting = Attribute setting
com.top_logic.element.meta.AttributeSettings$AttributeSetting.tooltip = Implementation setting for a certain <i>structured type part</i> type.
com.top_logic.element.meta.AttributeSettings.AttributeSetting.config-name = Configuration name
com.top_logic.element.meta.AttributeSettings.AttributeSetting.config-name.tooltip = The implementation type name.
com.top_logic.element.meta.AttributeSettings.AttributeSetting.legacy-type-code = Legacy type code
com.top_logic.element.meta.AttributeSettings.AttributeSetting.legacy-type-code.tooltip = The legacy implementation identifier.
com.top_logic.element.meta.AttributeSettings.Config.attribute-settings = Attribute settings
com.top_logic.element.meta.AttributeSettings.Config.attribute-settings.tooltip = Attribute implementation settings.
com.top_logic.element.meta.AttributeSettings.tooltip = Service providing access to global <i>structured type part</i> settings.
com.top_logic.element.meta.AttributeUpdate$UpdateType = Update type
com.top_logic.element.meta.AttributeUpdate$UpdateType.tooltip = Classification of <i>attribute updates</i>.
com.top_logic.element.meta.AttributeUpdate.UpdateType.TYPE_SEARCH_COLLECTION = Type search collection
com.top_logic.element.meta.AttributeUpdate.UpdateType.TYPE_SEARCH_COLLECTION.tooltip = Type: a collection of search values.
com.top_logic.element.meta.AttributeUpdate.UpdateType.TYPE_SEARCH_RANGE = Type search range
com.top_logic.element.meta.AttributeUpdate.UpdateType.TYPE_SEARCH_RANGE.tooltip = Type:search range (from and to value).
com.top_logic.element.meta.AttributeUpdate.UpdateType.TYPE_SEARCH_SIMPLE = Type search simple
com.top_logic.element.meta.AttributeUpdate.UpdateType.TYPE_SEARCH_SIMPLE.tooltip = Type: simple search value.
com.top_logic.element.meta.AttributeUpdate.UpdateType.TYPE_SET_COLLECTION = Type set collection
com.top_logic.element.meta.AttributeUpdate.UpdateType.TYPE_SET_COLLECTION.tooltip = Type: set a collection value.
com.top_logic.element.meta.AttributeUpdate.UpdateType.TYPE_SET_SIMPLE = Type set simple
com.top_logic.element.meta.AttributeUpdate.UpdateType.TYPE_SET_SIMPLE.tooltip = Type: set a simple value.
com.top_logic.element.meta.MetaAttributeAlgorithm = Meta attribute algorithm
com.top_logic.element.meta.MetaAttributeAlgorithm.tooltip = This interface defines how an algorithm has to be implemented An Algorithm for calculation an attribute value. the Algorithm only defines a method to calculate a value.
com.top_logic.element.meta.MetaAttributeFactory = Meta attribute factory
com.top_logic.element.meta.MetaAttributeFactory.tooltip = Create/remove MetaAttributes in/from MetaElements.
com.top_logic.element.meta.MetaElementFactory = Meta element factory
com.top_logic.element.meta.MetaElementFactory.tooltip = Create <i>business object types</i> in their defining scopes.
com.top_logic.element.meta.TransientStorage = Transient storage
com.top_logic.element.meta.TransientStorage.tooltip = Dummy <i>storage implementation</i> for <i>transient objects</i>.
com.top_logic.element.meta.algorithm.MethodInvocationAlgorithm = Method invocation algorithm
com.top_logic.element.meta.algorithm.MethodInvocationAlgorithm.tooltip = <i>Meta attribute algorithm</i> that calls a method on the object and returns the method value. Note this algorithm works only with methods without parameters!!!
com.top_logic.element.meta.expr.ExpressionEvaluationAlgorithm = Expression evaluation algorithm
com.top_logic.element.meta.expr.ExpressionEvaluationAlgorithm.Config.expr = Expression
com.top_logic.element.meta.expr.ExpressionEvaluationAlgorithm.Config.expr.tooltip = The expression configuration.
com.top_logic.element.meta.expr.ExpressionEvaluationAlgorithm.tooltip = Default <i>meta attribute algorithm</i> that evaluates a configurable generic expression.
com.top_logic.element.meta.expr.internal.AsData = As data
com.top_logic.element.meta.expr.internal.AsData.tooltip = <i>Attribute value locator</i> that unwraps a <i>object</i>.
com.top_logic.element.meta.expr.internal.AsObject = As object
com.top_logic.element.meta.expr.internal.AsObject.tooltip = <i>Attribute value locator</i> that wraps a <i>knowledge item</i> back to a <i>object</i>.
com.top_logic.element.meta.expr.internal.AssociationDestinations = Association destinations
com.top_logic.element.meta.expr.internal.AssociationDestinations.tooltip = <i>Attribute value locator</i> that navigates over a <i>knowledge association</i> in forwards direction.
com.top_logic.element.meta.expr.internal.AssociationNavigation = Association navigation
com.top_logic.element.meta.expr.internal.AssociationNavigation.Config.association-name = Association name
com.top_logic.element.meta.expr.internal.AssociationNavigation.Config.association-name.tooltip = Name of the <i>knowledge association</i> to navigate.
com.top_logic.element.meta.expr.internal.AssociationNavigation.tooltip = <i>Attribute value locator</i> that navigates a <i>knowledge association</i>.
com.top_logic.element.meta.expr.internal.AssociationSources = Association sources
com.top_logic.element.meta.expr.internal.AssociationSources.tooltip = <i>Attribute value locator</i> that navigates over a <i>knowledge association</i> in backwards direction.
com.top_logic.element.meta.expr.internal.Chain = Chain
com.top_logic.element.meta.expr.internal.Chain.Config.steps = Steps
com.top_logic.element.meta.expr.internal.Chain.Config.steps.tooltip = Configuration of <i>attribute value locator</i> steps to chain together. <p> An <i>attribute value locator</i> in the chain is invoke on the value returned from the previous step. </p>
com.top_logic.element.meta.expr.internal.Chain.tooltip = <i>Attribute value locator</i> that delegates to a chain of <i>attribute value locators</i>.
com.top_logic.element.meta.expr.internal.FactoryDispatch = Factory dispatch
com.top_logic.element.meta.expr.internal.FactoryDispatch.Config.name = Name
com.top_logic.element.meta.expr.internal.FactoryDispatch.Config.name.tooltip = The name of the locator in the factory.
com.top_logic.element.meta.expr.internal.FactoryDispatch.Config.spec = Spec
com.top_logic.element.meta.expr.internal.FactoryDispatch.Config.spec.tooltip = The locator's sub-configuration.
com.top_logic.element.meta.expr.internal.FactoryDispatch.tooltip = <i>Attribute value locator</i> that dispatches to a configured locator.
com.top_logic.element.meta.expr.internal.GetValue = Get value
com.top_logic.element.meta.expr.internal.GetValue.Config.attribute = Attribute
com.top_logic.element.meta.expr.internal.GetValue.Config.attribute.tooltip = Name of the attribute to access. <p> The object whose attribute is accessed is either the base object declaring the attribute this <i>attribute value locator</i> is configured in, if it is the first locator, or the result of the previous <i>attribute value locator</i> in a <i>chain</i>. </p>
com.top_logic.element.meta.expr.internal.GetValue.tooltip = <i>Attribute value locator</i> that invokes the getValue() operation of a <i>value provider</i> object.
com.top_logic.element.meta.expr.internal.IndexAccess = Index access
com.top_logic.element.meta.expr.internal.IndexAccess.Config.index = Index
com.top_logic.element.meta.expr.internal.IndexAccess.Config.index.tooltip = The constant index in the surrounding list to access.
com.top_logic.element.meta.expr.internal.IndexAccess.tooltip = <i>Attribute value locator</i> that performs an indexed access to a <i>list</i>.
com.top_logic.element.meta.expr.internal.MethodCall = Method call
com.top_logic.element.meta.expr.internal.MethodCall.Config.method = Method
com.top_logic.element.meta.expr.internal.MethodCall.Config.method.tooltip = Name of the no-arg method to invoke. <p> To allow parsing the configuration, even if the referenced class does not yet exist, the <i>Method</i> is only optionally resolved. </p>
com.top_logic.element.meta.expr.internal.MethodCall.tooltip = <i>Attribute value locator</i> calling a business method declared on the target object itself.
com.top_logic.element.meta.expr.internal.NavigateBackwards = Navigate backwards
com.top_logic.element.meta.expr.internal.NavigateBackwards.Config.attribute-name = Attribute name
com.top_logic.element.meta.expr.internal.NavigateBackwards.Config.attribute-name.tooltip = The name of the reference to navigate backwards.
com.top_logic.element.meta.expr.internal.NavigateBackwards.tooltip = <i>Attribute value locator</i> that navigates a reference <i>structured type part</i> in backwards direction.
com.top_logic.element.meta.expr.internal.Parent = Parent
com.top_logic.element.meta.expr.internal.Parent.tooltip = <i>Attribute value locator</i> that returns the parent object of a <i>structured element</i>.
com.top_logic.element.meta.expr.internal.Root = Root
com.top_logic.element.meta.expr.internal.Root.tooltip = <i>Attribute value locator</i> that returns the root object of a <i>structured element</i>.
com.top_logic.element.meta.expr.internal.StructureContext = Structure context
com.top_logic.element.meta.expr.internal.StructureContext.tooltip = <i>Attribute value locator</i> that returns the the structure context of a <i>structured element</i>.
com.top_logic.element.meta.expr.internal.TypeOf = Type of
com.top_logic.element.meta.expr.internal.TypeOf.tooltip = <i>Attribute value locator</i> that filters source objects depending on their type.
com.top_logic.element.meta.form.FieldProviderAnnotation = Field provider annotation
com.top_logic.element.meta.form.FieldProviderAnnotation.impl = Implementation
com.top_logic.element.meta.form.FieldProviderAnnotation.impl.tooltip = Configuration of the <i>field provider</i> to use.
com.top_logic.element.meta.form.FieldProviderAnnotation.tooltip = <i>Attribute annotation</i> for annotating a <i>field provider</i>.
com.top_logic.element.meta.form.component.AbstractApplyAttributedCommandHandler = Apply object command handler
com.top_logic.element.meta.form.component.AbstractApplyAttributedCommandHandler.tooltip = Extended handler for apply (and save) commands with <i>object</i>. <p> Additionally to the <i>object apply command handler</i>, this class allows the automatic storage of values from the <i>object</i> objects via <code>#saveMetaAttributes(FormContext)</code>. This will only store the values defined in the <i>business object type</i>. </p>
com.top_logic.element.meta.form.component.AttributedCompareCommandHandler = Object compare command handler
com.top_logic.element.meta.form.component.AttributedCompareCommandHandler.tooltip = Show a compare view for <i>objects</i> in an <i>edit object component</i>.
com.top_logic.element.meta.form.component.DefaultApplyAttributedCommandHandler = Default apply object command handler
com.top_logic.element.meta.form.component.DefaultApplyAttributedCommandHandler.tooltip = Updates all attributes for the corresponding fields in the <i>form context</i>.
com.top_logic.element.meta.form.component.DefaultEditAttributedComponent = Default edit object component
com.top_logic.element.meta.form.component.DefaultEditAttributedComponent.Config.applyCommand.tooltip = Name of the <i>command handler</i> used to apply changes to the edited object.
com.top_logic.element.meta.form.component.DefaultEditAttributedComponent.Config.deleteCommand.tooltip = Name of the <i>command handler</i> used to delete the edited object.
com.top_logic.element.meta.form.component.DefaultEditAttributedComponent.Config.metaElementName = Meta element name
com.top_logic.element.meta.form.component.DefaultEditAttributedComponent.Config.metaElementName.tooltip = Configuration of the name of the <i>business object type</i> an object must have to be edited by a <i>default edit object component</i>.
com.top_logic.element.meta.form.component.DefaultEditAttributedComponent.tooltip = Simple implementation of <i>edit object component</i>.
com.top_logic.element.meta.form.component.EditAttributedComponent = Edit object component
com.top_logic.element.meta.form.component.EditAttributedComponent.Config.exclude-subtypes = Exclude subtypes
com.top_logic.element.meta.form.component.EditAttributedComponent.Config.exclude-subtypes.tooltip = Whether this component should only support direct instances of the component's intrinsic type and not instances of any sub-types of it.
com.top_logic.element.meta.form.component.EditAttributedComponent.Config.excludeAttributes = Exclude attributes
com.top_logic.element.meta.form.component.EditAttributedComponent.Config.excludeAttributes.tooltip = Name of the attributes not to include in the <i>form context</i>.
com.top_logic.element.meta.form.component.EditAttributedComponent.Config.excludeFromAdditionalAttributes = Exclude from additional attributes
com.top_logic.element.meta.form.component.EditAttributedComponent.Config.excludeFromAdditionalAttributes.tooltip = Name of the attributes to include in the <i>form context</i>, can be referenced in the JSP but are not included into the "additional attributes".
com.top_logic.element.meta.form.component.EditAttributedComponent.Config.modifier = Modifier
com.top_logic.element.meta.form.component.EditAttributedComponent.Config.modifier.tooltip = Modifying instance for the <i>form members</i> during creation of an input row.
com.top_logic.element.meta.form.component.EditAttributedComponent.Config.readOnlyAttributes = Read only attributes
com.top_logic.element.meta.form.component.EditAttributedComponent.Config.readOnlyAttributes.tooltip = Name of the attributes to display "read-only" in the <i>form context</i>.
com.top_logic.element.meta.form.component.EditAttributedComponent.tooltip = Edit component for <i>object</i> objects. This component will take care of the form context, when there are changes to the meta element representing this <i>object</i>.
com.top_logic.element.meta.form.component.SecuredTypeTableComponent = Secured type table component
com.top_logic.element.meta.form.component.SecuredTypeTableComponent.Config.checkerName = Checker name
com.top_logic.element.meta.form.component.SecuredTypeTableComponent.tooltip = The SecuredTypeTableComponent is a <i>table component</i> which shows only objects which are visible for the current user by the security.
com.top_logic.element.meta.form.component.TouchAllMetaAttributesCommandHandler = Touch all meta attributes command handler
com.top_logic.element.meta.form.component.TouchAllMetaAttributesCommandHandler.tooltip = Touches all attributes, which have an active validity check and are not read only.
com.top_logic.element.meta.form.component.TouchMetaAttributeCommandHandler = Touch meta attribute command handler
com.top_logic.element.meta.form.component.TouchMetaAttributeCommandHandler.tooltip = Touches an attribute.
com.top_logic.element.meta.form.component.TypeModelBuilder = Type model builder
com.top_logic.element.meta.form.component.TypeModelBuilder.Config.koType = Ko type
com.top_logic.element.meta.form.component.TypeModelBuilder.Config.koType.tooltip = Name of the table to get instances from.
com.top_logic.element.meta.form.component.TypeModelBuilder.tooltip = The <i>type model builder</i> creates a list of all Objects in a given table.
com.top_logic.element.meta.form.fieldprovider.AbstractWrapperFieldProvider.Config.show-table-dialog = Show table dialog
com.top_logic.element.meta.form.fieldprovider.ComplexFieldProvider = Complex field provider
com.top_logic.element.meta.form.fieldprovider.ComplexFieldProvider.Config.option-provider = Option provider
com.top_logic.element.meta.form.fieldprovider.ComplexFieldProvider.Config.option-provider.tooltip = The <i>option provider</i> that produces the options to choose from.
com.top_logic.element.meta.form.fieldprovider.ComplexFieldProvider.Config.select-dialog = Select dialog
com.top_logic.element.meta.form.fieldprovider.ComplexFieldProvider.Config.select-dialog.tooltip = Configuration for the select dialog (if it is used) of the result <i>select field</i>.
com.top_logic.element.meta.form.fieldprovider.ComplexFieldProvider.tooltip = <i>Field provider</i> for <i>structured type parts</i> of custom data type.
com.top_logic.element.meta.form.fieldprovider.ConfigurationFieldProvider$EditContext = Edit context
com.top_logic.element.meta.form.fieldprovider.ConfigurationFieldProvider$EditContext.tooltip = Context for editing <i>configuration item</i> values in model attributes. <p> When an editor is built for a <i>configuration item</i> stored in a persistent object property, it is placed in a surrounding <i>edit context</i> configuration with <i>Base model</i> being set to the edited instance. This allows to access this context from e.g. option providers declared for properties of the edited configuration. To use this feature, the <i>configuration item</i> type edited must extend <i>configuration part</i> and declare <i>edit context</i> as its <i>container</i> property type. </p>
com.top_logic.element.meta.form.fieldprovider.ConfigurationFieldProvider.EditContext.base-model = Base model
com.top_logic.element.meta.form.fieldprovider.ConfigurationFieldProvider.EditContext.base-model.tooltip = The persistent object, in which the <i>configuration item</i> value is stored.
com.top_logic.element.meta.form.fieldprovider.ConfigurationFieldProvider.EditContext.value = Value
com.top_logic.element.meta.form.fieldprovider.ConfigurationFieldProvider.EditContext.value.tooltip = The actual <i>configuration item</i> being edited.
com.top_logic.element.meta.form.fieldprovider.TableSupportingComplexFieldProvider = Table supporting complex field provider
com.top_logic.element.meta.form.fieldprovider.TableSupportingComplexFieldProvider.Config.select-table = Select table
com.top_logic.element.meta.form.fieldprovider.TableSupportingComplexFieldProvider.Config.select-table.tooltip = Definition of the table for the created select field.
com.top_logic.element.meta.form.fieldprovider.TableSupportingComplexFieldProvider.Config.table = Table
com.top_logic.element.meta.form.fieldprovider.TableSupportingComplexFieldProvider.Config.table.tooltip = Definition of the table for the created select field.
com.top_logic.element.meta.form.fieldprovider.TableSupportingComplexFieldProvider.tooltip = <i>Complex field provider</i> which gets an optional <i>table configuration</i> for the created select field.
com.top_logic.element.meta.form.fieldprovider.ValueDisplayFieldProvider = Value display field provider
com.top_logic.element.meta.form.fieldprovider.ValueDisplayFieldProvider.Config.renderer = Renderer
com.top_logic.element.meta.form.fieldprovider.ValueDisplayFieldProvider.Config.renderer.tooltip = Configuration of the renderer which is used to render the value of the field.
com.top_logic.element.meta.form.fieldprovider.ValueDisplayFieldProvider.tooltip = <i>Field provider</i> to create a display display value field.
com.top_logic.element.meta.form.fieldprovider.format.ConfigurationFormatProvider = Configuration format provider
com.top_logic.element.meta.form.fieldprovider.format.ConfigurationFormatProvider.Config.impl = Implementation
com.top_logic.element.meta.form.fieldprovider.format.ConfigurationFormatProvider.Config.impl.tooltip = The <i>configuration value provider</i> to adapt.
com.top_logic.element.meta.form.fieldprovider.format.ConfigurationFormatProvider.tooltip = <i>Format provider</i> adapting a <i>configuration value provider</i>.
com.top_logic.element.meta.form.fieldprovider.format.FormattedFieldProvider = Formatted field provider
com.top_logic.element.meta.form.fieldprovider.format.FormattedFieldProvider.Config.control-provider = Control provider
com.top_logic.element.meta.form.fieldprovider.format.FormattedFieldProvider.Config.control-provider.tooltip = <i>Control provider</i> to display the field.
com.top_logic.element.meta.form.fieldprovider.format.FormattedFieldProvider.Config.format = Format
com.top_logic.element.meta.form.fieldprovider.format.FormattedFieldProvider.Config.format.tooltip = The <i>format provider</i> to use for serializing and parsing the application-defined object.
com.top_logic.element.meta.form.fieldprovider.format.FormattedFieldProvider.tooltip = Configurable <i>field provider</i> that can be parameterised with a <i>format provider</i> for editing arbitrary application-defined objects in a custom string representation.
com.top_logic.element.meta.form.fieldprovider.format.JSONFormatProvider = JSON format provider
com.top_logic.element.meta.form.fieldprovider.format.JSONFormatProvider.Config.analyzer = Analyzer
com.top_logic.element.meta.form.fieldprovider.format.JSONFormatProvider.Config.analyzer.tooltip = The <i>value analyzer</i> that interprets the stored JSON string and reconstructs the JSON object.
com.top_logic.element.meta.form.fieldprovider.format.JSONFormatProvider.Config.factory = Factory
com.top_logic.element.meta.form.fieldprovider.format.JSONFormatProvider.Config.factory.tooltip = The <i>value factory</i> that creates the actual string representation of the stored JSON element.
com.top_logic.element.meta.form.fieldprovider.format.JSONFormatProvider.tooltip = <i>Format provider</i> creating <i>JSON format</i>.
com.top_logic.element.meta.form.fieldprovider.format.SingletonFormatProvider = Singleton format provider
com.top_logic.element.meta.form.fieldprovider.format.SingletonFormatProvider.Config.impl = Implementation
com.top_logic.element.meta.form.fieldprovider.format.SingletonFormatProvider.Config.impl.tooltip = The <i>configuration value provider</i> to adapt.
com.top_logic.element.meta.form.fieldprovider.format.SingletonFormatProvider.tooltip = <i>Format provider</i> adapting a <i>configuration value provider</i>.
com.top_logic.element.meta.form.overlay.TLFormObjectNaming$Name = Name
com.top_logic.element.meta.form.overlay.TLFormObjectNaming$Name.tooltip = <i>Model name</i> for <i>form object naming</i>.
com.top_logic.element.meta.form.overlay.TLFormObjectNaming.Name.domain = Domain
com.top_logic.element.meta.form.overlay.TLFormObjectNaming.Name.domain.tooltip = Domain of object being created.
com.top_logic.element.meta.form.overlay.TLFormObjectNaming.Name.edited-object = Edited object
com.top_logic.element.meta.form.overlay.TLFormObjectNaming.Name.edited-object.tooltip = Optional object being edited.
com.top_logic.element.meta.form.overlay.TLFormObjectNaming.Name.form-context = Form context
com.top_logic.element.meta.form.overlay.TLFormObjectNaming.Name.form-context.tooltip = The <i>attribute form context</i> to search in.
com.top_logic.element.meta.form.tag.BooleanTagProvider = Boolean tag provider
com.top_logic.element.meta.form.tag.BooleanTagProvider.Config.resetable = Resetable
com.top_logic.element.meta.form.tag.BooleanTagProvider.Config.resetable.tooltip = Whether the value can be reset to <code>null</code> at the UI.
com.top_logic.element.meta.form.tag.BooleanTagProvider.tooltip = <i>Display provider</i> for <i>boolean</i> attributes.
com.top_logic.element.meta.form.tag.CustomInputTagProvider = Custom input tag provider
com.top_logic.element.meta.form.tag.CustomInputTagProvider.Config.controlProvider = Control provider
com.top_logic.element.meta.form.tag.CustomInputTagProvider.Config.controlProvider.tooltip = The <i>control provider</i> to use for displaying the field. <p> If no <i>control provider</i> is specified, <i>default form field control provider</i> is used by default. </p>
com.top_logic.element.meta.form.tag.CustomInputTagProvider.tooltip = <i>Display provider</i> using <i>custom input tags</i>.
com.top_logic.element.meta.form.tag.StringTagProvider = String tag provider
com.top_logic.element.meta.form.tag.StringTagProvider.Config.columns = Columns
com.top_logic.element.meta.form.tag.StringTagProvider.Config.columns.tooltip = Default numbers of columns.
com.top_logic.element.meta.form.tag.StringTagProvider.tooltip = <i>Display provider</i> for <i>string</i> set attributes.
com.top_logic.element.meta.form.tag.TagProviderAnnotation = Tag provider annotation
com.top_logic.element.meta.form.tag.TagProviderAnnotation.impl = Implementation
com.top_logic.element.meta.form.tag.TagProviderAnnotation.impl.tooltip = Configuration of the <i>display provider</i> to use.
com.top_logic.element.meta.form.tag.TagProviderAnnotation.tooltip = <i>Attribute annotation</i> for annotating a <i>display provider</i>.
com.top_logic.element.meta.gui.AbstractCreateAttributedCommandHandler = Create object command handler
com.top_logic.element.meta.gui.AbstractCreateAttributedCommandHandler.tooltip = Extended handler for create commands with <i>object</i>. <p> Additionally to the <i>create command handler</i>, this class allows the automatic storage of values from the <i>object</i> objects via <code>#saveMetaAttributes(Map, Wrapper)</code>. This will only store the values defined in the <i>business object type</i>. </p>
com.top_logic.element.meta.gui.CreateAttributedComponent = Create object component
com.top_logic.element.meta.gui.CreateAttributedComponent.Config.modifier = Modifier
com.top_logic.element.meta.gui.CreateAttributedComponent.Config.modifier.tooltip = The <i>form context modificator</i> is used to modify the <i>form members</i> when a new object is created.
com.top_logic.element.meta.gui.CreateAttributedComponent.tooltip = Generic component to create a new object.
com.top_logic.element.meta.gui.DefaultCreateAttributedCommandHandler = Default create object command handler
com.top_logic.element.meta.gui.DefaultCreateAttributedCommandHandler.Config.context-attribute = Context attribute
com.top_logic.element.meta.gui.DefaultCreateAttributedCommandHandler.Config.context-attribute.tooltip = Optional name of the attribute of the newly created object where the the context object (model of the create component) should be stored. <p> If not given, the context object of the create component is not used. </p>
com.top_logic.element.meta.gui.DefaultCreateAttributedCommandHandler.Config.number-handler = Number handler
com.top_logic.element.meta.gui.DefaultCreateAttributedCommandHandler.Config.number-handler.tooltip = Optional name of a <i>ID generator</i> to generate a unique ID for the newly created object. <p> If given, <i>Unique ID</i> must be configured, too. </p>
com.top_logic.element.meta.gui.DefaultCreateAttributedCommandHandler.Config.unique-id = Unique ID
com.top_logic.element.meta.gui.DefaultCreateAttributedCommandHandler.Config.unique-id.tooltip = Optional name of an ID attribute in the newly created object, the generated ID from <i>Number handler</i> should be stored in. <p> This value is only used, if <i>Number handler</i> is given, too. </p>
com.top_logic.element.meta.gui.DefaultCreateAttributedCommandHandler.tooltip = <i>Command handler</i> to create a <i>object</i> with a certain type name.
com.top_logic.element.meta.gui.DefaultCreateAttributedComponent = Default create object component
com.top_logic.element.meta.gui.DefaultCreateAttributedComponent.tooltip = Default component to create an <i>object</i> object which is <b>NO</b> <i>structured element</i>.
com.top_logic.element.meta.kbbased.KBBasedMetaAttribute$GlobalConfig = Global configuration
com.top_logic.element.meta.kbbased.KBBasedMetaAttribute$GlobalConfig.tooltip = Configuration of application wide settings of <i>knowledge-base based meta attributes</i>.
com.top_logic.element.meta.kbbased.KBBasedMetaAttribute.GlobalConfig.use-classification = Use classification
com.top_logic.element.meta.kbbased.KBBasedMetaAttribute.GlobalConfig.use-classification.tooltip = Whether classification is actually used. This is a optimisation for applications without attribute security.
com.top_logic.element.meta.kbbased.KBBasedMetaAttributeFactory = Knowledge-base based meta attribute factory
com.top_logic.element.meta.kbbased.KBBasedMetaAttributeFactory.tooltip = Create/remove MetaAttributes in/from MetaElements.
com.top_logic.element.meta.kbbased.KBBasedMetaElementFactory = Knowledge-base based meta element factory
com.top_logic.element.meta.kbbased.KBBasedMetaElementFactory$SubtypeDefinition = Subtype definition
com.top_logic.element.meta.kbbased.KBBasedMetaElementFactory$SubtypeDefinition.tooltip = Possible sub types of a <i>knowledge-base based meta element</i>.
com.top_logic.element.meta.kbbased.KBBasedMetaElementFactory.SubtypeDefinition.ASSOCIATION = Association
com.top_logic.element.meta.kbbased.KBBasedMetaElementFactory.SubtypeDefinition.ASSOCIATION.tooltip = An <i>association</i>
com.top_logic.element.meta.kbbased.KBBasedMetaElementFactory.SubtypeDefinition.CLASS = Class
com.top_logic.element.meta.kbbased.KBBasedMetaElementFactory.SubtypeDefinition.CLASS.tooltip = A <i>business object type</i>
com.top_logic.element.meta.kbbased.KBBasedMetaElementFactory.tooltip = Create KBBasedMetaElements on (KB-stored) MetaElementHolders
com.top_logic.element.meta.kbbased.KBBasedSEMetaElementFactory = Knowledge-base based SE meta element factory
com.top_logic.element.meta.kbbased.KBBasedSEMetaElementFactory.tooltip = <i>Meta element factory</i> that is able to handle <i>structured element</i> as <i>meta element holder</i> and object.
com.top_logic.element.meta.kbbased.NamedConstraint = Named constraint
com.top_logic.element.meta.kbbased.NamedConstraint.Config.name = Name
com.top_logic.element.meta.kbbased.NamedConstraint.Config.name.tooltip = Constraint name in the <i>filter factory</i>.
com.top_logic.element.meta.kbbased.NamedConstraint.tooltip = Configured <i>object value filter</i> that dispatches to the <i>filter factory</i>.
com.top_logic.element.meta.kbbased.NamedOptions = Predefined options
com.top_logic.element.meta.kbbased.NamedOptions.Config.name.tooltip = Name of the <i>generator</i> in the application configuration to delegate to.
com.top_logic.element.meta.kbbased.NamedOptions.tooltip = <i>Generator</i> that delegates to a <i>generator</i> in the application configuration. <p> The <i>generator</i> in the application configuration are normally special generators that are generally not reusable but are intended for a specific application case. </p>
com.top_logic.element.meta.kbbased.PolymorphicTypeCacheFactory = Polymorphic type cache factory
com.top_logic.element.meta.kbbased.PolymorphicTypeCacheFactory$TypeMapping = Type mapping
com.top_logic.element.meta.kbbased.PolymorphicTypeCacheFactory$TypeMapping.tooltip = <i>Type reference</i> that is used for a special value.
com.top_logic.element.meta.kbbased.PolymorphicTypeCacheFactory.Config.key-attribute = Key attribute
com.top_logic.element.meta.kbbased.PolymorphicTypeCacheFactory.Config.key-attribute.tooltip = The attribute whose value decides about the actual <i>type</i>.
com.top_logic.element.meta.kbbased.PolymorphicTypeCacheFactory.Config.value-type-mapping = Value type mapping
com.top_logic.element.meta.kbbased.PolymorphicTypeCacheFactory.Config.value-type-mapping.tooltip = Mapping from possible values if the key attribute to the represented <i>type</i>.
com.top_logic.element.meta.kbbased.PolymorphicTypeCacheFactory.TypeMapping.value = Value
com.top_logic.element.meta.kbbased.PolymorphicTypeCacheFactory.TypeMapping.value.tooltip = The expected value which represents <i>Type</i>.
com.top_logic.element.meta.kbbased.PolymorphicTypeCacheFactory.tooltip = <i>Cache value factory</i> resolving a configured <i>type</i> by its qualified name. The concrete type is derived from some attribute value.
com.top_logic.element.meta.kbbased.StringSetOptions = String set options
com.top_logic.element.meta.kbbased.StringSetOptions.Config.locator = Locator
com.top_logic.element.meta.kbbased.StringSetOptions.Config.locator.tooltip = Algorithm providing potential values.
com.top_logic.element.meta.kbbased.StringSetOptions.tooltip = Default <i>generator</i> for <i>structured type parts</i> of <code>16384</code>.
com.top_logic.element.meta.kbbased.TLTypeCacheFactory = Type cache factory
com.top_logic.element.meta.kbbased.TLTypeCacheFactory.tooltip = <i>Cache value factory</i> resolving a configured <i>type</i> by its qualified name.
com.top_logic.element.meta.kbbased.WrapperMetaAttributeUtil = Object meta attribute util
com.top_logic.element.meta.kbbased.WrapperMetaAttributeUtil.tooltip = Utility methods for <i>structured type parts</i> with <i>objects</i> as values.
com.top_logic.element.meta.kbbased.filtergen.AttributeValueLocatorFactory = Attribute value locator factory
com.top_logic.element.meta.kbbased.filtergen.AttributeValueLocatorFactory.Config.locators = Locators
com.top_logic.element.meta.kbbased.filtergen.AttributeValueLocatorFactory.Config.locators.tooltip = Attribute value locators.
com.top_logic.element.meta.kbbased.filtergen.AttributeValueLocatorFactory.tooltip = Get QueryLocator for Wrapper based MetaAttributed
com.top_logic.element.meta.kbbased.filtergen.FilterFactory = Filter factory
com.top_logic.element.meta.kbbased.filtergen.FilterFactory$Config$FilterConfig = Filter configuration
com.top_logic.element.meta.kbbased.filtergen.FilterFactory$Config$FilterConfig.tooltip = A named filter configuration.
com.top_logic.element.meta.kbbased.filtergen.FilterFactory.Config.FilterConfig.impl = Implementation
com.top_logic.element.meta.kbbased.filtergen.FilterFactory.Config.filters = Filters
com.top_logic.element.meta.kbbased.filtergen.FilterFactory.Config.filters.tooltip = Configured filters by name.
com.top_logic.element.meta.kbbased.filtergen.FilterFactory.tooltip = Get Filter for Wrapper based MetaAttributed.
com.top_logic.element.meta.kbbased.filtergen.GeneratorFactory = Generator factory
com.top_logic.element.meta.kbbased.filtergen.GeneratorFactory$Config$GeneratorConfig = Generator configuration
com.top_logic.element.meta.kbbased.filtergen.GeneratorFactory$Config$GeneratorConfig.tooltip = Configuration of an <i>generator</i> within a <i>generator factory</i>.Each <i>generator</i> is known under a unique name.
com.top_logic.element.meta.kbbased.filtergen.GeneratorFactory$Config$GeneratorSpiConfig = Generator spi configuration
com.top_logic.element.meta.kbbased.filtergen.GeneratorFactory$Config$GeneratorSpiConfig.tooltip = Configuration of an <i>generator spi</i> within a <i>generator factory</i>. Each <i>generator spi</i> is known under a unique name.
com.top_logic.element.meta.kbbased.filtergen.GeneratorFactory.Config.GeneratorConfig.impl = Implementation
com.top_logic.element.meta.kbbased.filtergen.GeneratorFactory.Config.GeneratorConfig.impl.tooltip = Configuration of the <i>generator</i>.
com.top_logic.element.meta.kbbased.filtergen.GeneratorFactory.Config.GeneratorSpiConfig.impl = Implementation
com.top_logic.element.meta.kbbased.filtergen.GeneratorFactory.Config.GeneratorSpiConfig.impl.tooltip = Configuration of the <i>generator spi</i>.
com.top_logic.element.meta.kbbased.filtergen.GeneratorFactory.Config.generator-spis = Generator spis
com.top_logic.element.meta.kbbased.filtergen.GeneratorFactory.Config.generator-spis.tooltip = Configuration of all <i>generator spis</i> known by the factory.
com.top_logic.element.meta.kbbased.filtergen.GeneratorFactory.Config.generators = Generators
com.top_logic.element.meta.kbbased.filtergen.GeneratorFactory.Config.generators.tooltip = Configuration of all <i>generators</i> known by the factory.
com.top_logic.element.meta.kbbased.filtergen.GeneratorFactory.tooltip = Get the Generator for a config entry
com.top_logic.element.meta.kbbased.storage.AbstractDerivedStorage = Derived storage
com.top_logic.element.meta.kbbased.storage.AbstractDerivedStorage.tooltip = Base class for derived <i>storage implementations</i>.
com.top_logic.element.meta.kbbased.storage.AbstractStorage = Storage
com.top_logic.element.meta.kbbased.storage.AbstractStorage.tooltip = <i>Atomic storage</i> that can be updated.
com.top_logic.element.meta.kbbased.storage.AnnotationConfigsStorage.Config.db-attribute = Database attribute
com.top_logic.element.meta.kbbased.storage.AnnotationConfigsStorage.Config.db-attribute.tooltip = Name of the database attribute which holds the <i>annotation configs</i>.
com.top_logic.element.meta.kbbased.storage.AssociationQueryBasedStorage = Association query based storage
com.top_logic.element.meta.kbbased.storage.AssociationQueryBasedStorage.tooltip = An <i>storage</i> that is based on <i>association querys</i>. <p> The concrete subclass may use more than one query. </p>
com.top_logic.element.meta.kbbased.storage.AtomicStorage = Atomic storage
com.top_logic.element.meta.kbbased.storage.AtomicStorage.tooltip = <i>Storage implementation</i> of atomic values (no element add and remove).
com.top_logic.element.meta.kbbased.storage.CollectionStorage = Collection storage
com.top_logic.element.meta.kbbased.storage.CollectionStorage.tooltip = <i>Storage implementation</i> of a collection value.
com.top_logic.element.meta.kbbased.storage.DerivedStorage = Derived storage
com.top_logic.element.meta.kbbased.storage.DerivedStorage.Config.algorithm = Algorithm
com.top_logic.element.meta.kbbased.storage.DerivedStorage.Config.algorithm.tooltip = The algorithm to compute attribute values with.
com.top_logic.element.meta.kbbased.storage.DerivedStorage.tooltip = <i>Atomic storage</i> that computes its values.
com.top_logic.element.meta.kbbased.storage.DirectStorage = Direct storage
com.top_logic.element.meta.kbbased.storage.DirectStorage.Config.default-storage = Default storage
com.top_logic.element.meta.kbbased.storage.DirectStorage.Config.default-storage.tooltip = The <i>storage implementation</i> that is used to lookup default values.
com.top_logic.element.meta.kbbased.storage.DirectStorage.tooltip = <i>Storage implementation</i> that directly stores a value, even if its getter implementation calculates its values and therefore cannot store updates.
com.top_logic.element.meta.kbbased.storage.DocumentStorage = Document storage
com.top_logic.element.meta.kbbased.storage.DocumentStorage$TLFolderLocation = Folder location
com.top_logic.element.meta.kbbased.storage.DocumentStorage$TLFolderLocation.tooltip = <i>Attribute annotation</i> that provides an algorithm for looking up the folder in which to store an uploaded document.
com.top_logic.element.meta.kbbased.storage.DocumentStorage.Config.folder-path = Folder path
com.top_logic.element.meta.kbbased.storage.DocumentStorage.Config.folder-path.tooltip = Algorithm to find the <i>web folder</i> for document storage.
com.top_logic.element.meta.kbbased.storage.DocumentStorage.TLFolderLocation.value = Value
com.top_logic.element.meta.kbbased.storage.DocumentStorage.TLFolderLocation.value.tooltip = Algorithm that resolves the folder to store an uploaded document in.
com.top_logic.element.meta.kbbased.storage.DocumentStorage.tooltip = <i>Storage in separate table</i> for <i>document</i> values.
com.top_logic.element.meta.kbbased.storage.ExternalCollectionStorage = External collection storage
com.top_logic.element.meta.kbbased.storage.ExternalCollectionStorage.Config.iterated = Iterated
com.top_logic.element.meta.kbbased.storage.ExternalCollectionStorage.Config.iterated.tooltip = <i>Attribute value locator</i> that provides a collection of parameters for which a query is issued each.
com.top_logic.element.meta.kbbased.storage.ExternalCollectionStorage.tooltip = <i>External storage</i> that retrieves collection values.
com.top_logic.element.meta.kbbased.storage.ExternalStorage = External storage
com.top_logic.element.meta.kbbased.storage.ExternalStorage.Config.locator = Locator
com.top_logic.element.meta.kbbased.storage.ExternalStorage.Config.locator.tooltip = Optional algorithm that creates a dynamic <i>Query</i>.
com.top_logic.element.meta.kbbased.storage.ExternalStorage.Config.parameters = Parameters
com.top_logic.element.meta.kbbased.storage.ExternalStorage.Config.parameters.tooltip = The value providers for the <i>Query</i> parameters.
com.top_logic.element.meta.kbbased.storage.ExternalStorage.Config.query = Query
com.top_logic.element.meta.kbbased.storage.ExternalStorage.Config.query.tooltip = The query string that retrieves the result from the external data source.
com.top_logic.element.meta.kbbased.storage.ExternalStorage.Config.result = Result
com.top_logic.element.meta.kbbased.storage.ExternalStorage.Config.result.tooltip = The algorithm that derives the final values from the retrieved external data.
com.top_logic.element.meta.kbbased.storage.ExternalStorage.tooltip = <i>Atomic storage</i> that retrieves values from an external system.
com.top_logic.element.meta.kbbased.storage.FallbackExternalStorage = Fallback external storage
com.top_logic.element.meta.kbbased.storage.FallbackExternalStorage.tooltip = <i>External storage</i> that will lookup local values first.
com.top_logic.element.meta.kbbased.storage.ForeignKeyStorage = Storage in the source table
com.top_logic.element.meta.kbbased.storage.ForeignKeyStorage.Config.storage-attribute = Storage attribute
com.top_logic.element.meta.kbbased.storage.ForeignKeyStorage.Config.storage-attribute.tooltip = The name of the <i>MO reference</i> which is used to store the reference to. <p> If not set, it defaults to the name of the reference attribute name. </p>
com.top_logic.element.meta.kbbased.storage.ForeignKeyStorage.Config.storage-type = Storage type
com.top_logic.element.meta.kbbased.storage.ForeignKeyStorage.Config.storage-type.tooltip = Table type name that defines the <i>Storage attribute</i>.
com.top_logic.element.meta.kbbased.storage.ForeignKeyStorage.tooltip = <i>Storage</i> that stores a reference value as foreign key attribute.
com.top_logic.element.meta.kbbased.storage.HistoricStorage = Historic storage
com.top_logic.element.meta.kbbased.storage.HistoricStorage.tooltip = <i>Storage</i> for historic references.
com.top_logic.element.meta.kbbased.storage.ImageGalleryStorage = Image gallery storage
com.top_logic.element.meta.kbbased.storage.ImageGalleryStorage.tooltip = <i>Sorted storage in separate table</i>, that stores a list of <i>gallery images</i>. In addition to regular <i>sorted storage in separate table</i> it creates image wrapper on demand, if formerly transient images shall be stored.
com.top_logic.element.meta.kbbased.storage.InlineCollectionStorage = Inline collection storage
com.top_logic.element.meta.kbbased.storage.InlineCollectionStorage$StoreInTargetConfig = Store in target configuration
com.top_logic.element.meta.kbbased.storage.InlineCollectionStorage$StoreInTargetConfig.tooltip = Configuration options to store the referrer of an object inline in the table of the target.
com.top_logic.element.meta.kbbased.storage.InlineCollectionStorage.StoreInTargetConfig.container-column = Container column
com.top_logic.element.meta.kbbased.storage.InlineCollectionStorage.StoreInTargetConfig.container-column.tooltip = Name of the column in the target table which holds the referencing object.
com.top_logic.element.meta.kbbased.storage.InlineCollectionStorage.StoreInTargetConfig.reference-column = Reference column
com.top_logic.element.meta.kbbased.storage.InlineCollectionStorage.StoreInTargetConfig.reference-column.tooltip = Name of the column in the target table that holds the <i>reference</i> defining the association between referrer and referenced object. <p> May be <code>null</code>. In this case the container column must not be used by multiple references to store their values. </p>
com.top_logic.element.meta.kbbased.storage.InlineCollectionStorage.tooltip = <i>Collection storage</i> for references which is stored in the target. <p> If an element A refers to B1, B2, then this relation is saved by storing an inline reference to A in the table of B1 and B2. </p> <p> Especially, is it not possible to have A1, A2 both pointing to the same B with the same attribute. </p>
com.top_logic.element.meta.kbbased.storage.InlineListStorage = Sorted storage in the target table
com.top_logic.element.meta.kbbased.storage.InlineListStorage.Config.order-column = Order column
com.top_logic.element.meta.kbbased.storage.InlineListStorage.Config.order-column.tooltip = Name of the column in the target table that holds the order of the referenced objects.
com.top_logic.element.meta.kbbased.storage.InlineListStorage.tooltip = <i>Inline collection storage</i> for ordered references.
com.top_logic.element.meta.kbbased.storage.InlineSetStorage = Unsorted storage in the target table
com.top_logic.element.meta.kbbased.storage.InlineSetStorage.tooltip = <i>Inline collection storage</i> for unordered references.
com.top_logic.element.meta.kbbased.storage.LinkStorage = Link storage
com.top_logic.element.meta.kbbased.storage.LinkStorage$LinkStorageConfig = Link storage configuration
com.top_logic.element.meta.kbbased.storage.LinkStorage$LinkStorageConfig.tooltip = Configuration options for storages that store references to other objects.
com.top_logic.element.meta.kbbased.storage.LinkStorage.Config.storage-mapping = Storage mapping
com.top_logic.element.meta.kbbased.storage.LinkStorage.Config.storage-mapping.tooltip = Optional configuration of a <i>storage mapping</i> which maps the business object value to a <i>object</i> database value.
com.top_logic.element.meta.kbbased.storage.LinkStorage.LinkStorageConfig.monomorphic-table = Monomorphic table
com.top_logic.element.meta.kbbased.storage.LinkStorage.LinkStorageConfig.monomorphic-table.tooltip = Whether the table in <i>Table</i> is a monomorphic table.
com.top_logic.element.meta.kbbased.storage.LinkStorage.LinkStorageConfig.order-attribute = Order attribute
com.top_logic.element.meta.kbbased.storage.LinkStorage.LinkStorageConfig.order-attribute.tooltip = The sort order attribute in <i>Table</i>.
com.top_logic.element.meta.kbbased.storage.LinkStorage.LinkStorageConfig.table = Table
com.top_logic.element.meta.kbbased.storage.LinkStorage.LinkStorageConfig.table.tooltip = Configuration of the name of the table in which this <i>association storage</i> stores the reference.
com.top_logic.element.meta.kbbased.storage.LinkStorage.tooltip = <i>Collection storage</i> that creates association links.
com.top_logic.element.meta.kbbased.storage.ListStorage = Sorted storage in separate table
com.top_logic.element.meta.kbbased.storage.ListStorage.tooltip = <i>Link storage</i> that keeps the order of objects.
com.top_logic.element.meta.kbbased.storage.PrimitiveStorage = Primitive storage
com.top_logic.element.meta.kbbased.storage.PrimitiveStorage.Config.storage-mapping = Storage mapping
com.top_logic.element.meta.kbbased.storage.PrimitiveStorage.Config.storage-mapping.tooltip = The mapping to apply when loading and storing values. <p> If not set, the mapping from the target type of the attribute is used. </p>
com.top_logic.element.meta.kbbased.storage.PrimitiveStorage.tooltip = <i>Storage</i> for primitive values directly stored to persistency-layer attributes.
com.top_logic.element.meta.kbbased.storage.ReadOnlyForeignKeyStorage = Read only foreign key storage
com.top_logic.element.meta.kbbased.storage.ReadOnlyForeignKeyStorage.tooltip = <i>Storage in the source table</i> that is read-only. <p> This is a special storage which fetches the value from a reference attribute, but does not support setting a value. </p>
com.top_logic.element.meta.kbbased.storage.ReverseForeignKeyStorage = Storage in the target table
com.top_logic.element.meta.kbbased.storage.ReverseForeignKeyStorage.tooltip = <i>Storage</i> that stores a reference value by storing the referrer in a foreign key column in the target object. <p> This storage is therefore just usable when the "backwards reference" is also "to one". </p>
com.top_logic.element.meta.kbbased.storage.ReverseStorage = Reverse storage
com.top_logic.element.meta.kbbased.storage.ReverseStorage.tooltip = <i>Storage implementation</i> for an attribute representing the inverse navigation of another reference.
com.top_logic.element.meta.kbbased.storage.SetStorage = Unsorted storage in separate table
com.top_logic.element.meta.kbbased.storage.SetStorage.tooltip = <i>Link storage</i> that does not preserve the order of values.
com.top_logic.element.meta.kbbased.storage.SingletonLinkStorage = Storage in separate table
com.top_logic.element.meta.kbbased.storage.SingletonLinkStorage.tooltip = <i>Storage</i> that stores a singleton references as association link.
com.top_logic.element.meta.kbbased.storage.StringSetStorage = String set storage
com.top_logic.element.meta.kbbased.storage.StringSetStorage.Config.result = Result
com.top_logic.element.meta.kbbased.storage.StringSetStorage.tooltip = <i>Collection storage</i> that stores a set of strings.
com.top_logic.element.meta.kbbased.storage.StructuredElementStorage = Structured element storage
com.top_logic.element.meta.kbbased.storage.StructuredElementStorage.tooltip = <i>Sorted storage in separate table</i> for <i>structured elements</i>.
com.top_logic.element.meta.kbbased.storage.TLItemStorage = Item storage
com.top_logic.element.meta.kbbased.storage.TLItemStorage.Config.storage-mapping = Storage mapping
com.top_logic.element.meta.kbbased.storage.TLItemStorage.Config.storage-mapping.tooltip = Optional configuration of a <i>storage mapping</i> which maps the business object value to a <i>object</i> database value.
com.top_logic.element.meta.kbbased.storage.TLItemStorage.tooltip = Storage for <i>structured type parts</i> storing <i>objects</i>.
com.top_logic.element.meta.kbbased.storage.WithStorageAttribute.storage-attribute = Storage attribute
com.top_logic.element.meta.kbbased.storage.WithStorageAttribute.storage-attribute.tooltip = The name of the database column which is used to store the value. <p> If not set, it defaults to the name of the attribute. </p>
com.top_logic.element.meta.kbbased.storage.mappings.DirectMapping = Direct mapping
com.top_logic.element.meta.kbbased.storage.mappings.DirectMapping.Config.application-type = Application type
com.top_logic.element.meta.kbbased.storage.mappings.DirectMapping.Config.application-type.tooltip = The application value class.
com.top_logic.element.meta.kbbased.storage.mappings.DirectMapping.tooltip = <i>Storage mapping</i> that uses identical values at the database and application layer.
com.top_logic.element.meta.kbbased.storage.mappings.JSONStorageMapping = JSON storage mapping
com.top_logic.element.meta.kbbased.storage.mappings.JSONStorageMapping.Config.analyzer = Analyzer
com.top_logic.element.meta.kbbased.storage.mappings.JSONStorageMapping.Config.analyzer.tooltip = The <i>value analyzer</i> that interprets the stored JSON string and reconstructs the JSON object.
com.top_logic.element.meta.kbbased.storage.mappings.JSONStorageMapping.Config.factory = Factory
com.top_logic.element.meta.kbbased.storage.mappings.JSONStorageMapping.Config.factory.tooltip = The <i>value factory</i> that creates the actual string representation of the stored JSON element.
com.top_logic.element.meta.kbbased.storage.mappings.JSONStorageMapping.tooltip = <i>Configured storage mapping</i> storing JSON elements into a string column.
com.top_logic.element.meta.kbbased.storage.mappings.JavaEnumMapping = Java enum mapping
com.top_logic.element.meta.kbbased.storage.mappings.JavaEnumMapping.Config.enum = Enum
com.top_logic.element.meta.kbbased.storage.mappings.JavaEnumMapping.Config.enum.tooltip = The Java <i>enum</i> type to store.
com.top_logic.element.meta.kbbased.storage.mappings.JavaEnumMapping.tooltip = <i>Storage mapping</i> for storing Java <i>enum</i> values in model attributes.
com.top_logic.element.meta.query.CollectionFilterProviderAnnotation = Collection filter provider annotation
com.top_logic.element.meta.query.CollectionFilterProviderAnnotation.impl = Implementation
com.top_logic.element.meta.query.CollectionFilterProviderAnnotation.impl.tooltip = Configuration of the <i>collection filter provider</i> to use.
com.top_logic.element.meta.query.CollectionFilterProviderAnnotation.tooltip = <i>Attribute annotation</i> for annotating a <i>collection filter provider</i>.
com.top_logic.element.model.DeleteStoredTLModel = Delete stored model
com.top_logic.element.model.DeleteStoredTLModel.tooltip = <i>Row transformer</i> (and <i>migration processor</i>) that deletes the stored application model from the <i>knowledge base</i>.
com.top_logic.element.model.DynamicModelService = Dynamic model service
com.top_logic.element.model.DynamicModelService$Config$DeclarationConfig = Declaration configuration
com.top_logic.element.model.DynamicModelService$Config$DeclarationConfig.tooltip = Reference to a model file.
com.top_logic.element.model.DynamicModelService$Config$ModuleSetting = Module setting
com.top_logic.element.model.DynamicModelService$Config$ModuleSetting.tooltip = Configuration options for a module of the dynamic application model. <p> Overlay configuration to <i>module configuration</i>. </p> <p> Note: Ideally, <i>module setting</i> would be exactly <i>module configuration</i> and should automatically be interpreted as overlay configuration to the unified configuration read from all model declaration files. Unfortunately, this is not possible by using the type <i>model configuration</i> as (super interface of) <i>module setting</i>, because inheriting of (mandatory) attributes from the base configuration does not work: The base configuration is not known at the time, the settings are read. This would require to duplicate all mandatory attribute values in the settings overlay (e.g. the singleton types, even if only the role assignments should be specified in the settings). </p>
com.top_logic.element.model.DynamicModelService$MigrationProcessors = Migration processors
com.top_logic.element.model.DynamicModelService$MigrationProcessors.tooltip = Sequence of <i>migration processor</i> that can be execute to apply a model patch within a migration.
com.top_logic.element.model.DynamicModelService.Config.DeclarationConfig.file = File
com.top_logic.element.model.DynamicModelService.Config.DeclarationConfig.file.tooltip = Configuration file with the model types.
com.top_logic.element.model.DynamicModelService.Config.ModuleSetting.enabled = Enabled
com.top_logic.element.model.DynamicModelService.Config.ModuleSetting.enabled.tooltip = Whether the module is active in the current application setup.
com.top_logic.element.model.DynamicModelService.Config.ModuleSetting.name = Name
com.top_logic.element.model.DynamicModelService.Config.ModuleSetting.name.tooltip = The structure name
com.top_logic.element.model.DynamicModelService.Config.auto-upgrade = Auto upgrade
com.top_logic.element.model.DynamicModelService.Config.auto-upgrade.tooltip = Automatically adjusts the persistent application model to changes performed in the static model configuration during boot.
com.top_logic.element.model.DynamicModelService.Config.declarations = Declarations
com.top_logic.element.model.DynamicModelService.Config.declarations.tooltip = List of model file references that together build up the the application model.
com.top_logic.element.model.DynamicModelService.Config.settings = Settings
com.top_logic.element.model.DynamicModelService.Config.settings.tooltip = All configured modules of the dynamic application model.
com.top_logic.element.model.DynamicModelService.MigrationProcessors.processors = Processors
com.top_logic.element.model.DynamicModelService.MigrationProcessors.processors.tooltip = <i>Migration processors</i> to execute.
com.top_logic.element.model.DynamicModelService.tooltip = Service managing the dynamic application model.
com.top_logic.element.model.diff.config.AddAnnotations = Add annotations
com.top_logic.element.model.diff.config.AddAnnotations.tooltip = Describes the addition of a <i>annotation</i> to a <i>model part</i>.
com.top_logic.element.model.diff.config.AddGeneralization = Add generalization
com.top_logic.element.model.diff.config.AddGeneralization.tooltip = A new generalization was added to the list of generalizations of the referenced <i>Type</i>.
com.top_logic.element.model.diff.config.ClassUpdate.type = Type
com.top_logic.element.model.diff.config.ClassUpdate.type.tooltip = The <i>business object type</i> whose properties are changed.
com.top_logic.element.model.diff.config.CreateClassifier = Create classifier
com.top_logic.element.model.diff.config.CreateClassifier.before = Before
com.top_logic.element.model.diff.config.CreateClassifier.before.tooltip = The name of an existing <i>classifier</i> of <i>Type</i> before which to insert the new one. <p> If the value is <code>null</code>, the new <i>classifier</i> is appended to the list of classifiers. </p>
com.top_logic.element.model.diff.config.CreateClassifier.classifier-config = Classifier configuration
com.top_logic.element.model.diff.config.CreateClassifier.classifier-config.tooltip = Description of the <i>classifier</i> to add to <i>Type</i>.
com.top_logic.element.model.diff.config.CreateClassifier.tooltip = Creation of a <i>classifier</i>.
com.top_logic.element.model.diff.config.CreateModule = Create module
com.top_logic.element.model.diff.config.CreateModule.module = Module
com.top_logic.element.model.diff.config.CreateModule.module.tooltip = Description of the <i>module</i> to be created.
com.top_logic.element.model.diff.config.CreateModule.tooltip = Creation of a new <i>module</i>.
com.top_logic.element.model.diff.config.CreatePart.type = Type
com.top_logic.element.model.diff.config.CreatePart.type.tooltip = The <i>structured type</i> that gets a new <i>structured type part</i>.
com.top_logic.element.model.diff.config.CreateRole = Create role
com.top_logic.element.model.diff.config.CreateRole.role = Role
com.top_logic.element.model.diff.config.CreateRole.role.tooltip = Configuration of the new role to create within <i>Module</i>.
com.top_logic.element.model.diff.config.CreateRole.tooltip = <i>Diff element</i> requesting the creation of a new role.
com.top_logic.element.model.diff.config.CreateSingleton = Create singleton
com.top_logic.element.model.diff.config.CreateSingleton.singleton = Singleton
com.top_logic.element.model.diff.config.CreateSingleton.singleton.tooltip = Configuration of the new singleton to create within <i>Module</i>.
com.top_logic.element.model.diff.config.CreateSingleton.tooltip = <i>Diff element</i> requesting the creation of a new singleton.
com.top_logic.element.model.diff.config.CreateStructuredTypePart = Create structured type part
com.top_logic.element.model.diff.config.CreateStructuredTypePart.part = Part
com.top_logic.element.model.diff.config.CreateStructuredTypePart.part.tooltip = Description of the <i>structured type part</i> to add to <i>Type</i>.
com.top_logic.element.model.diff.config.CreateStructuredTypePart.tooltip = Creation of a <i>structured type part</i>.
com.top_logic.element.model.diff.config.CreateType = Create type
com.top_logic.element.model.diff.config.CreateType.tooltip = Creation of a new <i>type</i>.
com.top_logic.element.model.diff.config.CreateType.type = Type
com.top_logic.element.model.diff.config.CreateType.type.tooltip = Description of the <i>type</i> to create in <i>Module</i>.
com.top_logic.element.model.diff.config.Delete = Delete
com.top_logic.element.model.diff.config.Delete.name = Name
com.top_logic.element.model.diff.config.Delete.name.tooltip = The name of the <i>model part</i> to delete.
com.top_logic.element.model.diff.config.Delete.tooltip = Deletion of a <i>model part</i>.
com.top_logic.element.model.diff.config.DeleteRole = Delete role
com.top_logic.element.model.diff.config.DeleteRole.role = Role
com.top_logic.element.model.diff.config.DeleteRole.role.tooltip = Configuration of the role to delete within <i>Module</i>.
com.top_logic.element.model.diff.config.DeleteRole.tooltip = <i>Diff element</i> requesting the deletion of a role.
com.top_logic.element.model.diff.config.GeneralizationUpdate.generalization = Generalization
com.top_logic.element.model.diff.config.GeneralizationUpdate.generalization.tooltip = The <i>business object type</i> to add or remove to/from the type's list of generalizations.
com.top_logic.element.model.diff.config.MakeAbstract = Make
com.top_logic.element.model.diff.config.MakeAbstract.tooltip = <i>Class update</i> making a <i>business object type</i> abstract.
com.top_logic.element.model.diff.config.MakeConcrete = Make concrete
com.top_logic.element.model.diff.config.MakeConcrete.tooltip = <i>Class update</i> making a <i>business object type</i> concrete.
com.top_logic.element.model.diff.config.ModulePartDiff.module = Module
com.top_logic.element.model.diff.config.ModulePartDiff.module.tooltip = The <i>module</i> to add the new <i>type</i> to.
com.top_logic.element.model.diff.config.MoveClassifier = Move classifier
com.top_logic.element.model.diff.config.MoveClassifier.before = Before
com.top_logic.element.model.diff.config.MoveClassifier.before.tooltip = Local name of the <i>classifier</i> of the same <i>classification</i> as <i>Classifier</i> to insert the moved one before. <p> A value of <code>null</code> means to move the <i>Classifier</i> to the end of the list of classifiers of the modified enumeration. </p>
com.top_logic.element.model.diff.config.MoveClassifier.classifier = Classifier
com.top_logic.element.model.diff.config.MoveClassifier.classifier.tooltip = Qualified name of the <i>classifier</i> to move.
com.top_logic.element.model.diff.config.MoveClassifier.tooltip = Description of changing the index of a <i>classifier</i> within its <i>classification</i>.
com.top_logic.element.model.diff.config.MoveGeneralization = Move generalization
com.top_logic.element.model.diff.config.MoveGeneralization.tooltip = A generalization is moved within the list of generalizations of the referenced <i>Type</i>.
com.top_logic.element.model.diff.config.MoveStructuredTypePart = Move structured type part
com.top_logic.element.model.diff.config.MoveStructuredTypePart.part = Part
com.top_logic.element.model.diff.config.MoveStructuredTypePart.part.tooltip = Description of the <i>structured type part</i> to move within the properties of its type.
com.top_logic.element.model.diff.config.MoveStructuredTypePart.tooltip = Changing the oder of <i>structured type parts</i>.
com.top_logic.element.model.diff.config.OrderedGeneralizationUpdate.before = Before
com.top_logic.element.model.diff.config.OrderedGeneralizationUpdate.before.tooltip = The other generalization to add the <i>Generalization</i> before. <p> A value of <code>null</code> means to append to the list of generalizations. </p>
com.top_logic.element.model.diff.config.PartReference.before = Before
com.top_logic.element.model.diff.config.PartReference.before.tooltip = Local name of the another <i>structured type part</i> denoting an insert position. <p> A value of <code>null</code> means the position at the end of the part list. </p>
com.top_logic.element.model.diff.config.PartUpdate.part = Part
com.top_logic.element.model.diff.config.PartUpdate.part.tooltip = The qualified name of the <i>model part</i> to update.
com.top_logic.element.model.diff.config.RemoveAnnotation = Remove annotation
com.top_logic.element.model.diff.config.RemoveAnnotation.annotation = Annotation
com.top_logic.element.model.diff.config.RemoveAnnotation.annotation.tooltip = The annotation type to delete.
com.top_logic.element.model.diff.config.RemoveAnnotation.tooltip = Describes deleting a <i>annotation</i>.
com.top_logic.element.model.diff.config.RemoveGeneralization = Remove generalization
com.top_logic.element.model.diff.config.RemoveGeneralization.tooltip = Deletion of a generalization link.
com.top_logic.element.model.diff.config.RenamePart = Rename part
com.top_logic.element.model.diff.config.RenamePart.new-name = New name
com.top_logic.element.model.diff.config.RenamePart.new-name.tooltip = The new name of the part.
com.top_logic.element.model.diff.config.RenamePart.part = Part
com.top_logic.element.model.diff.config.RenamePart.part.tooltip = The <i>named part</i> to rename.
com.top_logic.element.model.diff.config.RenamePart.tooltip = Renaming of a <i>model part</i>.
com.top_logic.element.model.diff.config.SetAnnotations = Set annotations
com.top_logic.element.model.diff.config.SetAnnotations.tooltip = Describes the setting of <i>annotations</i> to a <i>model part</i>.
com.top_logic.element.model.diff.config.UpdateMandatory = Update mandatory
com.top_logic.element.model.diff.config.UpdateMandatory.mandatory = Mandatory
com.top_logic.element.model.diff.config.UpdateMandatory.mandatory.tooltip = The new mandatory state.
com.top_logic.element.model.diff.config.UpdateMandatory.tooltip = Update of the <code>mandatory</code> state of a <i>structured type part</i>.
com.top_logic.element.model.diff.config.UpdatePartType = Update part type
com.top_logic.element.model.diff.config.UpdatePartType.tooltip = Sets the type of a part.
com.top_logic.element.model.diff.config.UpdateStorageMapping = Update storage mapping
com.top_logic.element.model.diff.config.UpdateStorageMapping.storage-mapping = Storage mapping
com.top_logic.element.model.diff.config.UpdateStorageMapping.storage-mapping.tooltip = The <i>storage mapping</i> to apply when loading and storing values.
com.top_logic.element.model.diff.config.UpdateStorageMapping.tooltip = Updates the <i>storage mapping</i> of a <i>primitive</i>.
com.top_logic.element.model.export.ui.IDEModelExtractCommand = IDE model extract command
com.top_logic.element.model.export.ui.IDEModelExtractCommand.tooltip = <i>Command handler</i> storing a selected module in the model editor back to the development environment in which the app is running.
com.top_logic.element.model.export.ui.ModelExportCommand = Model export command
com.top_logic.element.model.export.ui.ModelExportCommand.tooltip = <i>Command handler</i> performing a model export in the <i>TopLogic</i>-native configuration syntax.
com.top_logic.element.model.i18n.I18NAttributeStorage = Internationalization attribute storage
com.top_logic.element.model.i18n.I18NAttributeStorage.tooltip = <i>Association query based storage</i> to store <i>resource keys</i>.
com.top_logic.element.model.importer.XMIModelImportHandler = XMI model import handler
com.top_logic.element.model.importer.XMIModelImportHandler$ModelUpload = Model upload
com.top_logic.element.model.importer.XMIModelImportHandler$ModelUpload.tooltip = GUI-Definition for the model upload dialog.
com.top_logic.element.model.importer.XMIModelImportHandler.ModelUpload.model-definition = Model definition
com.top_logic.element.model.importer.XMIModelImportHandler.ModelUpload.model-definition.tooltip = The model file to process.
com.top_logic.element.model.importer.XMIModelImportHandler.ModelUpload.partial-import = Partial import
com.top_logic.element.model.importer.XMIModelImportHandler.ModelUpload.partial-import.tooltip = Whether this model import should replace or extend existing modules. <ul> <li><code>true</code> if types of imported modules are added to the types of existing modules. A type that is imported and has the same name as an existing type replaces it.</li> <li><code>false</code> if imported modules replace existing modules.</li> </ul>
com.top_logic.element.model.importer.XMIModelImportHandler.tooltip = <i>Command handler</i> requesting a model definition upload and applying the changes to the current application model. <p> This handler is able to process <i>TopLogic</i> model definition XML files and UML/XMI model definitions. </p>
com.top_logic.element.model.migration.AbstractMoveCompositionLinks = Move composition links
com.top_logic.element.model.migration.AbstractMoveCompositionLinks.Config.reference = Reference
com.top_logic.element.model.migration.AbstractMoveCompositionLinks.Config.reference.tooltip = Name of the composition <i>reference</i> whose values must be moved.
com.top_logic.element.model.migration.AbstractMoveCompositionLinks.Config.source-table = Source table
com.top_logic.element.model.migration.AbstractMoveCompositionLinks.Config.source-table.tooltip = Name of the <i>MO class</i> which contains the links to move.
com.top_logic.element.model.migration.AbstractMoveCompositionLinks.tooltip = <i>Migration processor</i> moving composition links from a source to a target table.
com.top_logic.element.model.migration.ChangeAttributeTargetType = Change attribute target type
com.top_logic.element.model.migration.ChangeAttributeTargetType.ChangeRefConfig.part.tooltip = Qualified name of the <i>association end</i> whose type must be changed.
com.top_logic.element.model.migration.ChangeAttributeTargetType.ChangeRefConfig.reference = Reference
com.top_logic.element.model.migration.ChangeAttributeTargetType.ChangeRefConfig.reference.tooltip = Qualified name of the <i>reference</i>.
com.top_logic.element.model.migration.ChangeAttributeTargetType.ChangeRefConfig.source.tooltip = For a concrete <i>reference</i>, no source is needed.
com.top_logic.element.model.migration.ChangeAttributeTargetType.Config.part = Part
com.top_logic.element.model.migration.ChangeAttributeTargetType.Config.part.tooltip = Qualified name of the concrete part whose type must be changed.
com.top_logic.element.model.migration.ChangeAttributeTargetType.Config.source = Source
com.top_logic.element.model.migration.ChangeAttributeTargetType.Config.source.tooltip = Qualified name of the source type.
com.top_logic.element.model.migration.ChangeAttributeTargetType.Config.target = Target
com.top_logic.element.model.migration.ChangeAttributeTargetType.Config.target.tooltip = Qualified name of the target type.
com.top_logic.element.model.migration.ChangeAttributeTargetType.tooltip = <i>Migration processor</i> changing the target type of all type parts.
com.top_logic.element.model.migration.InlineCompositionLinks = Inline composition links
com.top_logic.element.model.migration.InlineCompositionLinks.Config.container = Container
com.top_logic.element.model.migration.InlineCompositionLinks.Config.container-order = Container order
com.top_logic.element.model.migration.InlineCompositionLinks.Config.container-order.tooltip = Name of the int attribute containing the sort order of the element in its container.
com.top_logic.element.model.migration.InlineCompositionLinks.Config.container-reference = Container reference
com.top_logic.element.model.migration.InlineCompositionLinks.Config.container-reference.tooltip = Name of the <i>MO reference</i> that contains the composition reference.
com.top_logic.element.model.migration.InlineCompositionLinks.Config.container.tooltip = Name of the <i>MO reference</i> that contains the container element.
com.top_logic.element.model.migration.InlineCompositionLinks.tooltip = <i>Migration processor</i> inlining composition links from a link table to the target table.
com.top_logic.element.model.migration.MoveCompositionLinks = Move composition links
com.top_logic.element.model.migration.MoveCompositionLinks.Config.target-table = Target table
com.top_logic.element.model.migration.MoveCompositionLinks.Config.target-table.tooltip = Name of the <i>MO class</i> to which the links must be moved.
com.top_logic.element.model.migration.MoveCompositionLinks.tooltip = <i>Migration processor</i> moving composition links from a source to a target table.
com.top_logic.element.model.migration.RemoveModuleContentsFromModelBaseline = Remove module contents from model baseline
com.top_logic.element.model.migration.RemoveModuleContentsFromModelBaseline.Config.modules = Modules
com.top_logic.element.model.migration.RemoveModuleContentsFromModelBaseline.Config.modules.tooltip = Modules to drop from the baseline.
com.top_logic.element.model.migration.RemoveModuleContentsFromModelBaseline.tooltip = <i>Migration processor</i> removing the contents of the legacy modules form the model baseline. <p> This is useful, if e.g. the module references its table types. The the remove cannot be automatically migrated, since the the baseline can no longer be loaded. By removing the module contents in the baseline, the baseline can again be loaded and the removal of the module is triggered successfully. </p>
com.top_logic.element.model.migration.TableTypeStorageAnnotationUpdate = Table type storage annotation update
com.top_logic.element.model.migration.TableTypeStorageAnnotationUpdate.tooltip = <i>Event rewriter</i> fixing storage implementation annotations for legacy table types.
com.top_logic.element.model.migration.Ticket27999InsertAbstractColumn = Ticket27999insert column
com.top_logic.element.model.migration.Ticket27999InsertAbstractColumn.Config.create-column-processor = Create column processor
com.top_logic.element.model.migration.Ticket27999InsertAbstractColumn.Config.create-column-processor.tooltip = The <i>migration processor</i> that creates the abstract column.
com.top_logic.element.model.migration.Ticket27999InsertAbstractColumn.tooltip = <i>Migration processor</i> that adds the column "abstract" in the table "MetaAttribute".
com.top_logic.element.model.migration.XsltModelBaselineProcessor = Xslt model baseline processor
com.top_logic.element.model.migration.XsltModelBaselineProcessor.tooltip = <i>Migration processor</i> that applies a XSLT to the stored base-line of the application model (as preparation for an automatic model migration).
com.top_logic.element.model.migration.model.AbstractCreateTypePartProcessor = Create type part processor
com.top_logic.element.model.migration.model.AbstractCreateTypePartProcessor.Config.abstract = Abstract
com.top_logic.element.model.migration.model.AbstractCreateTypePartProcessor.Config.abstract.tooltip = See <i>Abstract</i> (<i>part configuration</i>).
com.top_logic.element.model.migration.model.AbstractCreateTypePartProcessor.Config.bag = Bag
com.top_logic.element.model.migration.model.AbstractCreateTypePartProcessor.Config.bag.tooltip = See <i>Bag</i> (<i>part configuration</i>). <p> This value is unused unless the part is multiple. </p>
com.top_logic.element.model.migration.model.AbstractCreateTypePartProcessor.Config.mandatory = Mandatory
com.top_logic.element.model.migration.model.AbstractCreateTypePartProcessor.Config.mandatory.tooltip = See <i>Mandatory</i> (<i>part configuration</i>)
com.top_logic.element.model.migration.model.AbstractCreateTypePartProcessor.Config.multiple = Multiple
com.top_logic.element.model.migration.model.AbstractCreateTypePartProcessor.Config.multiple.tooltip = See <i>Multiple</i> (<i>part configuration</i>).
com.top_logic.element.model.migration.model.AbstractCreateTypePartProcessor.Config.name = Name
com.top_logic.element.model.migration.model.AbstractCreateTypePartProcessor.Config.name.tooltip = Qualified name of the <i>configuration</i>.
com.top_logic.element.model.migration.model.AbstractCreateTypePartProcessor.Config.ordered = Ordered
com.top_logic.element.model.migration.model.AbstractCreateTypePartProcessor.Config.ordered.tooltip = See <i>Ordered</i> (<i>part configuration</i>). <p> This value is unused unless the part is multiple. </p>
com.top_logic.element.model.migration.model.AbstractCreateTypePartProcessor.tooltip = Abstract <i>migration processor</i> creating <i>type part</i>.
com.top_logic.element.model.migration.model.AbstractEndAspectProcessor = End aspect processor
com.top_logic.element.model.migration.model.AbstractEndAspectProcessor.Config.aggregate = Aggregate
com.top_logic.element.model.migration.model.AbstractEndAspectProcessor.Config.aggregate.tooltip = See <i>Aggregate</i> (<i>end aspect</i>).
com.top_logic.element.model.migration.model.AbstractEndAspectProcessor.Config.composite = Composite
com.top_logic.element.model.migration.model.AbstractEndAspectProcessor.Config.composite.tooltip = See <i>Composite</i> (<i>end aspect</i>).
com.top_logic.element.model.migration.model.AbstractEndAspectProcessor.Config.history-type = Historization
com.top_logic.element.model.migration.model.AbstractEndAspectProcessor.Config.history-type.tooltip = See <i>historization</i>.
com.top_logic.element.model.migration.model.AbstractEndAspectProcessor.Config.navigate = Navigate
com.top_logic.element.model.migration.model.AbstractEndAspectProcessor.Config.navigate.tooltip = See <i>Navigate</i> (<i>end aspect</i>).
com.top_logic.element.model.migration.model.AbstractEndAspectProcessor.tooltip = <i>Migration processor</i> handling properties like an <i>end aspect</i>.
com.top_logic.element.model.migration.model.AddTLAnnotations = Add annotations
com.top_logic.element.model.migration.model.AddTLAnnotations.Config.name = Name
com.top_logic.element.model.migration.model.AddTLAnnotations.Config.name.tooltip = Qualified name of the <i>model part</i> to add annotations to.
com.top_logic.element.model.migration.model.AddTLAnnotations.tooltip = <i>Migration processor</i> for adding annotations to a model element. Already existing annotations are replaced.
com.top_logic.element.model.migration.model.AddTLClassGeneralization = Add class generalization
com.top_logic.element.model.migration.model.AddTLClassGeneralization$Generalization = Generalization
com.top_logic.element.model.migration.model.AddTLClassGeneralization$Generalization.tooltip = Configuration of a generalization.
com.top_logic.element.model.migration.model.AddTLClassGeneralization.Config.generalizations = Generalizations
com.top_logic.element.model.migration.model.AddTLClassGeneralization.Config.generalizations.tooltip = The extended types.
com.top_logic.element.model.migration.model.AddTLClassGeneralization.Config.name = Name
com.top_logic.element.model.migration.model.AddTLClassGeneralization.Config.name.tooltip = Qualified name of the <i>business object type</i> to add generalizations for.
com.top_logic.element.model.migration.model.AddTLClassGeneralization.Generalization.type = Type
com.top_logic.element.model.migration.model.AddTLClassGeneralization.Generalization.type.tooltip = The extended type.
com.top_logic.element.model.migration.model.AddTLClassGeneralization.tooltip = <i>Migration processor</i> creating generalizations from a <i>business object type</i> to a list of other <i>business object typees</i>.
com.top_logic.element.model.migration.model.CreateInverseTLReferenceProcessor = Create inverse reference processor
com.top_logic.element.model.migration.model.CreateInverseTLReferenceProcessor.Config.inverse-reference = Inverse reference
com.top_logic.element.model.migration.model.CreateInverseTLReferenceProcessor.Config.inverse-reference.tooltip = Qualified name of the inverse reference.
com.top_logic.element.model.migration.model.CreateInverseTLReferenceProcessor.tooltip = <i>Migration processor</i> to create an inverse <i>reference</i>.
com.top_logic.element.model.migration.model.CreateTLAssociationEndProcessor = Create association end processor
com.top_logic.element.model.migration.model.CreateTLAssociationEndProcessor.Config.type = Type
com.top_logic.element.model.migration.model.CreateTLAssociationEndProcessor.Config.type.tooltip = Target type of the <i>association end</i>.
com.top_logic.element.model.migration.model.CreateTLAssociationEndProcessor.tooltip = <i>Migration processor</i> creating <i>association end</i>.
com.top_logic.element.model.migration.model.CreateTLAssociationProcessor = Create association processor
com.top_logic.element.model.migration.model.CreateTLAssociationProcessor.Config.name = Name
com.top_logic.element.model.migration.model.CreateTLAssociationProcessor.Config.name.tooltip = Qualified name of the <i>association</i> to create.
com.top_logic.element.model.migration.model.CreateTLAssociationProcessor.tooltip = <i>Migration processor</i> creating a <i>association</i>.
com.top_logic.element.model.migration.model.CreateTLClassProcessor = Create class processor
com.top_logic.element.model.migration.model.CreateTLClassProcessor.Config.abstract = Abstract
com.top_logic.element.model.migration.model.CreateTLClassProcessor.Config.abstract.tooltip = See <i>Abstract</i> (<i>class configuration</i>).
com.top_logic.element.model.migration.model.CreateTLClassProcessor.Config.final = Final
com.top_logic.element.model.migration.model.CreateTLClassProcessor.Config.final.tooltip = See <i>Final</i> (<i>class configuration</i>).
com.top_logic.element.model.migration.model.CreateTLClassProcessor.Config.name = Name
com.top_logic.element.model.migration.model.CreateTLClassProcessor.Config.name.tooltip = Qualified name of the new <i>business object type</i>.
com.top_logic.element.model.migration.model.CreateTLClassProcessor.Config.primary-generalization = Primary generalization
com.top_logic.element.model.migration.model.CreateTLClassProcessor.Config.primary-generalization.tooltip = Name of the primary generalization for the new <i>business object type</i>.
com.top_logic.element.model.migration.model.CreateTLClassProcessor.Config.without-primary-generalization = Without primary generalization
com.top_logic.element.model.migration.model.CreateTLClassProcessor.Config.without-primary-generalization.tooltip = Whether no primary generalization is given. <p> Each type needs a primary generalization. At least <code>"TLObject"</code> can be used. If <i>Without primary generalization</i> is set, the user <b>must</b> ensure that a later <i>migration processor</i> creates a generalization for the type. </p>
com.top_logic.element.model.migration.model.CreateTLClassProcessor.tooltip = <i>Migration processor</i> creating a new <i>business object type</i>.
com.top_logic.element.model.migration.model.CreateTLClassifierProcessor = Create classifier processor
com.top_logic.element.model.migration.model.CreateTLClassifierProcessor.Config.name = Name
com.top_logic.element.model.migration.model.CreateTLClassifierProcessor.Config.name.tooltip = Qualified name of the new <i>classifier</i>.
com.top_logic.element.model.migration.model.CreateTLClassifierProcessor.tooltip = <i>Migration processor</i> creating a new <i>classifier</i>.
com.top_logic.element.model.migration.model.CreateTLDatatypeProcessor = Create datatype processor
com.top_logic.element.model.migration.model.CreateTLDatatypeProcessor.Config.kind = Kind
com.top_logic.element.model.migration.model.CreateTLDatatypeProcessor.Config.kind.tooltip = The datatype kind.
com.top_logic.element.model.migration.model.CreateTLDatatypeProcessor.Config.name = Name
com.top_logic.element.model.migration.model.CreateTLDatatypeProcessor.Config.name.tooltip = Qualified name of the new <i>primitive</i>.
com.top_logic.element.model.migration.model.CreateTLDatatypeProcessor.Config.storage-mapping = Storage mapping
com.top_logic.element.model.migration.model.CreateTLDatatypeProcessor.Config.storage-mapping.tooltip = The <i>storage mapping</i> to apply when loading and storing values.
com.top_logic.element.model.migration.model.CreateTLDatatypeProcessor.tooltip = <i>Migration processor</i> creating a new <i>primitive</i>.
com.top_logic.element.model.migration.model.CreateTLEndReferenceProcessor = Create end reference processor
com.top_logic.element.model.migration.model.CreateTLEndReferenceProcessor.Config.end = End
com.top_logic.element.model.migration.model.CreateTLEndReferenceProcessor.Config.end.tooltip = Qualified name of the corresponding association end.
com.top_logic.element.model.migration.model.CreateTLEndReferenceProcessor.Config.name = Name
com.top_logic.element.model.migration.model.CreateTLEndReferenceProcessor.Config.name.tooltip = Qualified name of the new <i>reference</i>.
com.top_logic.element.model.migration.model.CreateTLEndReferenceProcessor.tooltip = <i>Migration processor</i> creating a <i>reference</i> for an existing <i>association end</i>.
com.top_logic.element.model.migration.model.CreateTLEnumerationProcessor = Create enumeration processor
com.top_logic.element.model.migration.model.CreateTLEnumerationProcessor.Config.name = Name
com.top_logic.element.model.migration.model.CreateTLEnumerationProcessor.Config.name.tooltip = Qualified name of the new <i>classification</i>.
com.top_logic.element.model.migration.model.CreateTLEnumerationProcessor.tooltip = <i>Migration processor</i> creating a new <i>classification</i>.
com.top_logic.element.model.migration.model.CreateTLModuleProcessor = Create module processor
com.top_logic.element.model.migration.model.CreateTLModuleProcessor.tooltip = <i>Migration processor</i> creating <i>module</i>.
com.top_logic.element.model.migration.model.CreateTLObjectProcessor = Create object processor
com.top_logic.element.model.migration.model.CreateTLObjectProcessor$Value = Value
com.top_logic.element.model.migration.model.CreateTLObjectProcessor$Value.tooltip = Column value for a new <i>object</i>.
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Config.no-type-column = No type column
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Config.no-type-column.tooltip = Whether the table has no <code>"tType"</code> column. <p> A table that stores entries for exactly one type may have no type column. The <code>"tType"</code> is computed in this case. </p>
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Config.table = Table
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Config.table.tooltip = Name of the table in which the <i>object</i> must be created.
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Config.type = Type
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Config.type.tooltip = Type of the new created object.
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Config.values = Values
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Config.values.tooltip = Table values for the new object.
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Value.column = Column
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Value.column-type = Column type
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Value.column-type.tooltip = Database type of the column.
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Value.column.tooltip = Name of the database column. <p> Note: This is the real name of the column in the database, usually in capital letters and separated by underscore. </p>
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Value.value = Value
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Value.value-supplier = Value supplier
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Value.value-supplier.tooltip = Supplier for the value for <i>Column</i>. <p> Note: If <code>null</code>, <i>Value</i> is used. </p>
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.Value.value.tooltip = Formatted value for <i>Column</i>. <p> Note: If <i>Value supplier</i> is set, this value is ignored. </p>
com.top_logic.element.model.migration.model.CreateTLObjectProcessor.tooltip = <i>Migration processor</i> creating a new <i>object</i>.
com.top_logic.element.model.migration.model.CreateTLPropertyProcessor = Create property processor
com.top_logic.element.model.migration.model.CreateTLPropertyProcessor.Config.type = Type
com.top_logic.element.model.migration.model.CreateTLPropertyProcessor.Config.type.tooltip = See <i>Type</i> (<i>type reference</i>).
com.top_logic.element.model.migration.model.CreateTLPropertyProcessor.tooltip = <i>Migration processor</i> creating a primitive attribute.
com.top_logic.element.model.migration.model.CreateTLReferenceProcessor = Create reference processor
com.top_logic.element.model.migration.model.CreateTLReferenceProcessor.Config.type = Type
com.top_logic.element.model.migration.model.CreateTLReferenceProcessor.Config.type.tooltip = Qualified name of the target type.
com.top_logic.element.model.migration.model.CreateTLReferenceProcessor.tooltip = <i>Migration processor</i> creates a new <i>reference</i>.
com.top_logic.element.model.migration.model.CreateTLSingletonProcessor = Create singleton processor
com.top_logic.element.model.migration.model.CreateTLSingletonProcessor.Config.module = Module
com.top_logic.element.model.migration.model.CreateTLSingletonProcessor.Config.module.tooltip = Name of the module to create singleton for.
com.top_logic.element.model.migration.model.CreateTLSingletonProcessor.Config.name = Name
com.top_logic.element.model.migration.model.CreateTLSingletonProcessor.Config.name.tooltip = Name of the singleton in the module.
com.top_logic.element.model.migration.model.CreateTLSingletonProcessor.Config.singleton = Singleton
com.top_logic.element.model.migration.model.CreateTLSingletonProcessor.Config.singleton.tooltip = Configuration of the new singleton.
com.top_logic.element.model.migration.model.CreateTLSingletonProcessor.tooltip = <i>Migration processor</i> creating a new singleton for a module.
com.top_logic.element.model.migration.model.DeleteTLClassProcessor = Delete class processor
com.top_logic.element.model.migration.model.DeleteTLClassProcessor.Config.fail-on-existing-attributes = Fail on existing attributes
com.top_logic.element.model.migration.model.DeleteTLClassProcessor.Config.fail-on-existing-attributes.tooltip = Whether it is a failure if the class is not empty.
com.top_logic.element.model.migration.model.DeleteTLClassProcessor.Config.name = Name
com.top_logic.element.model.migration.model.DeleteTLClassProcessor.Config.name.tooltip = Qualified name of the <i>business object type</i> to delete.
com.top_logic.element.model.migration.model.DeleteTLClassProcessor.Config.type-table = Type table
com.top_logic.element.model.migration.model.DeleteTLClassProcessor.Config.type-table.tooltip = The table in which <i>Name</i> stores the data. <p> When the class is deleted, data for the class in the given table are removed. </p>
com.top_logic.element.model.migration.model.DeleteTLClassProcessor.tooltip = <i>Migration processor</i> deleting no longer used <i>structured type</i>.
com.top_logic.element.model.migration.model.DeleteTLDatatypeProcessor = Delete datatype processor
com.top_logic.element.model.migration.model.DeleteTLDatatypeProcessor.Config.name = Name
com.top_logic.element.model.migration.model.DeleteTLDatatypeProcessor.Config.name.tooltip = Qualified name of the <i>primitive</i> to delete.
com.top_logic.element.model.migration.model.DeleteTLDatatypeProcessor.tooltip = <i>Migration processor</i> deleting no longer used <i>primitive</i>.
com.top_logic.element.model.migration.model.DeleteTLEnumerationProcessor = Delete enumeration processor
com.top_logic.element.model.migration.model.DeleteTLEnumerationProcessor.Config.fail-on-existing-classifiers = Fail on existing classifiers
com.top_logic.element.model.migration.model.DeleteTLEnumerationProcessor.Config.fail-on-existing-classifiers.tooltip = Whether it is a failure if the <i>classification</i> still has a <i>classifier</i>.
com.top_logic.element.model.migration.model.DeleteTLEnumerationProcessor.Config.name = Name
com.top_logic.element.model.migration.model.DeleteTLEnumerationProcessor.Config.name.tooltip = Qualified name of the <i>classification</i> to delete.
com.top_logic.element.model.migration.model.DeleteTLEnumerationProcessor.tooltip = <i>Migration processor</i> for deleting a <i>classification</i>.
com.top_logic.element.model.migration.model.DeleteTLModuleProcessor = Delete module processor
com.top_logic.element.model.migration.model.DeleteTLModuleProcessor.Config.fail-on-existing-types = Fail on existing types
com.top_logic.element.model.migration.model.DeleteTLModuleProcessor.Config.fail-on-existing-types.tooltip = Whether it is a failure if the module is not empty.
com.top_logic.element.model.migration.model.DeleteTLModuleProcessor.tooltip = <i>Migration processor</i> deleting no longer used <i>module</i>.
com.top_logic.element.model.migration.model.DeleteTLPropertyProcessor = Delete property processor
com.top_logic.element.model.migration.model.DeleteTLPropertyProcessor.Config.name = Name
com.top_logic.element.model.migration.model.DeleteTLPropertyProcessor.Config.name.tooltip = Qualified name of the <i>object property</i> to delete.
com.top_logic.element.model.migration.model.DeleteTLPropertyProcessor.Config.type-tables = Type tables
com.top_logic.element.model.migration.model.DeleteTLPropertyProcessor.Config.type-tables.tooltip = The list of tables in which the the owner type of <i>Name</i> stores the data. <p> When the attribute is deleted, data in the <code>"FlexData"</code> table are deleted for elements storing in one of the given tables. </p>
com.top_logic.element.model.migration.model.DeleteTLPropertyProcessor.tooltip = <i>Migration processor</i> deleting no longer used <i>object property</i>.
com.top_logic.element.model.migration.model.DeleteTLReferenceProcessor = Delete reference processor
com.top_logic.element.model.migration.model.DeleteTLReferenceProcessor.Config.association-table = Association table
com.top_logic.element.model.migration.model.DeleteTLReferenceProcessor.Config.association-table.tooltip = Name of the <code>"hasWrapperAttValueBaseAssociation"</code> table in which the data for the reference to delete are stored. <p> Note: This value must only be set, when the reference is not an overridden attribute. </p>
com.top_logic.element.model.migration.model.DeleteTLReferenceProcessor.Config.inverse = Inverse
com.top_logic.element.model.migration.model.DeleteTLReferenceProcessor.Config.inverse.tooltip = Whether the reference to delete is an inverse reference.
com.top_logic.element.model.migration.model.DeleteTLReferenceProcessor.Config.name = Name
com.top_logic.element.model.migration.model.DeleteTLReferenceProcessor.Config.name.tooltip = Qualified name of the <i>reference</i> to delete.
com.top_logic.element.model.migration.model.DeleteTLReferenceProcessor.InverseConfig.name.tooltip = Qualified name of the inverse <i>reference</i> to delete.
com.top_logic.element.model.migration.model.DeleteTLReferenceProcessor.tooltip = <i>Migration processor</i> deleting no longer used <i>reference</i>.
com.top_logic.element.model.migration.model.MarkTLTypePartOverride = Mark type part override
com.top_logic.element.model.migration.model.MarkTLTypePartOverride.Config.definition = Definition
com.top_logic.element.model.migration.model.MarkTLTypePartOverride.Config.definition.tooltip = Qualified name of the definition of the overriding part, i.e. the top level part in the override chain.
com.top_logic.element.model.migration.model.MarkTLTypePartOverride.Config.name = Name
com.top_logic.element.model.migration.model.MarkTLTypePartOverride.Config.name.tooltip = Qualified name of the overriding part.
com.top_logic.element.model.migration.model.MarkTLTypePartOverride.tooltip = <i>Migration processor</i> marks a <i>structured type part</i> as override of another part.
com.top_logic.element.model.migration.model.RemoveTLAnnotations = Remove annotations
com.top_logic.element.model.migration.model.RemoveTLAnnotations$AnnotationConfig = Annotation configuration
com.top_logic.element.model.migration.model.RemoveTLAnnotations$AnnotationConfig.tooltip = Configuration of an annotation type.
com.top_logic.element.model.migration.model.RemoveTLAnnotations.AnnotationConfig.class = Class
com.top_logic.element.model.migration.model.RemoveTLAnnotations.AnnotationConfig.class.tooltip = The annotation type to remove.
com.top_logic.element.model.migration.model.RemoveTLAnnotations.Config.annotations = Annotations
com.top_logic.element.model.migration.model.RemoveTLAnnotations.Config.annotations.tooltip = The annotation types to remove.
com.top_logic.element.model.migration.model.RemoveTLAnnotations.Config.name = Name
com.top_logic.element.model.migration.model.RemoveTLAnnotations.Config.name.tooltip = Qualified name of the <i>model part</i> to remove annotations from.
com.top_logic.element.model.migration.model.RemoveTLAnnotations.tooltip = <i>Migration processor</i> for removing annotations from a model element.
com.top_logic.element.model.migration.model.RemoveTLClassGeneralization = Remove class generalization
com.top_logic.element.model.migration.model.RemoveTLClassGeneralization.Config.generalizations = Generalizations
com.top_logic.element.model.migration.model.RemoveTLClassGeneralization.Config.generalizations.tooltip = The extended types.
com.top_logic.element.model.migration.model.RemoveTLClassGeneralization.Config.name = Name
com.top_logic.element.model.migration.model.RemoveTLClassGeneralization.Config.name.tooltip = Qualified name of the <i>business object type</i> to remove generalizations from.
com.top_logic.element.model.migration.model.RemoveTLClassGeneralization.tooltip = <i>Migration processor</i> removing generalizations from a <i>business object type</i>.
com.top_logic.element.model.migration.model.ReorderTLClassGeneralization = Reorder class generalization
com.top_logic.element.model.migration.model.ReorderTLClassGeneralization.Config.before = Before
com.top_logic.element.model.migration.model.ReorderTLClassGeneralization.Config.before.tooltip = The name of the generalization of <i>Type</i> which must be the direct successor of the reordered generalization. <p> May be <code>null</code>. In this case the generalization is moved to the end of the list. </p>
com.top_logic.element.model.migration.model.ReorderTLClassGeneralization.Config.generalization = Generalization
com.top_logic.element.model.migration.model.ReorderTLClassGeneralization.Config.generalization.tooltip = Qualified name of the generalization that is reordered.
com.top_logic.element.model.migration.model.ReorderTLClassGeneralization.Config.type = Type
com.top_logic.element.model.migration.model.ReorderTLClassGeneralization.Config.type.tooltip = Qualified name of the specialization <i>type</i>.
com.top_logic.element.model.migration.model.ReorderTLClassGeneralization.tooltip = <i>Migration processor</i> changing the order of a <i>business object type</i> generalization relation.
com.top_logic.element.model.migration.model.ReorderTLTypePart = Reorder type part
com.top_logic.element.model.migration.model.ReorderTLTypePart.Config.before = Before
com.top_logic.element.model.migration.model.ReorderTLTypePart.Config.before.tooltip = The name of the <i>type part</i> which must be the direct successor of the reordered <i>type part</i>. <p> May be <code>null</code>. In this case the part is moved to the end of the list. </p>
com.top_logic.element.model.migration.model.ReorderTLTypePart.Config.name = Name
com.top_logic.element.model.migration.model.ReorderTLTypePart.Config.name.tooltip = Qualified name of the <i>type part</i> to reorder.
com.top_logic.element.model.migration.model.ReorderTLTypePart.tooltip = <i>Migration processor</i> changing the order of an <i>type part</i>.
com.top_logic.element.model.migration.model.SetDefaultTLClassifierProcessor = Set default classifier processor
com.top_logic.element.model.migration.model.SetDefaultTLClassifierProcessor.Config.default-classifier = Default classifier
com.top_logic.element.model.migration.model.SetDefaultTLClassifierProcessor.Config.default-classifier.tooltip = Name of the classifier in <i>Enumeration</i> that must be default. If <code>null</code>, no classifier will be default.
com.top_logic.element.model.migration.model.SetDefaultTLClassifierProcessor.Config.enumeration = Enumeration
com.top_logic.element.model.migration.model.SetDefaultTLClassifierProcessor.Config.enumeration.tooltip = Qualified name of the <i>classification</i> to update.
com.top_logic.element.model.migration.model.SetDefaultTLClassifierProcessor.tooltip = <i>Migration processor</i> defining the default <i>classifier</i> in a <i>classification</i>.
com.top_logic.element.model.migration.model.TLModelBaseLineMigrationProcessor$SkipModelBaselineApaption = Skip model baseline apaption
com.top_logic.element.model.migration.model.TLModelBaseLineMigrationProcessor$SkipModelBaselineApaption.tooltip = Configuration for a <i>migration processor</i> to skip change of model base line in exceptional cases.
com.top_logic.element.model.migration.model.TLModelBaseLineMigrationProcessor.SkipModelBaselineApaption.skip-model-baseline-change = Skip model baseline change
com.top_logic.element.model.migration.model.TLModelBaseLineMigrationProcessor.SkipModelBaselineApaption.skip-model-baseline-change.tooltip = Whether the model base line in the database must not be changed. <p> This configuration is an additional option for <i>migration processor</i> which normally change the model baseline. Here you can configure that this does not happen in exceptional cases. </p>
com.top_logic.element.model.migration.model.UpdateTLAnnotations = Update annotations
com.top_logic.element.model.migration.model.UpdateTLAnnotations.Config.name = Name
com.top_logic.element.model.migration.model.UpdateTLAnnotations.Config.name.tooltip = Qualified name of the <i>model part</i> whose annotations must be updated.
com.top_logic.element.model.migration.model.UpdateTLAnnotations.tooltip = <i>Migration processor</i> for updating the annotations of a model element.
com.top_logic.element.model.migration.model.UpdateTLAssociationEndProcessor = Update association end processor
com.top_logic.element.model.migration.model.UpdateTLAssociationEndProcessor$UpdateEndAspectConfig = Update end aspect configuration
com.top_logic.element.model.migration.model.UpdateTLAssociationEndProcessor$UpdateEndAspectConfig.tooltip = <i>Update type part configuration</i> for association end aspects.
com.top_logic.element.model.migration.model.UpdateTLAssociationEndProcessor.UpdateEndAspectConfig.aggregate = Aggregate
com.top_logic.element.model.migration.model.UpdateTLAssociationEndProcessor.UpdateEndAspectConfig.aggregate.tooltip = See <i>Aggregate</i> (<i>end aspect</i>).
com.top_logic.element.model.migration.model.UpdateTLAssociationEndProcessor.UpdateEndAspectConfig.composite = Composite
com.top_logic.element.model.migration.model.UpdateTLAssociationEndProcessor.UpdateEndAspectConfig.composite.tooltip = See <i>Composite</i> (<i>end aspect</i>).
com.top_logic.element.model.migration.model.UpdateTLAssociationEndProcessor.UpdateEndAspectConfig.history-type = Historization
com.top_logic.element.model.migration.model.UpdateTLAssociationEndProcessor.UpdateEndAspectConfig.history-type.tooltip = See <i>historization</i>.
com.top_logic.element.model.migration.model.UpdateTLAssociationEndProcessor.UpdateEndAspectConfig.navigate = Navigate
com.top_logic.element.model.migration.model.UpdateTLAssociationEndProcessor.UpdateEndAspectConfig.navigate.tooltip = See <i>Navigate</i> (<i>end aspect</i>).
com.top_logic.element.model.migration.model.UpdateTLAssociationEndProcessor.tooltip = <i>Migration processor</i> updating a <i>association end</i>.
com.top_logic.element.model.migration.model.UpdateTLAssociationProcessor = Update association processor
com.top_logic.element.model.migration.model.UpdateTLAssociationProcessor.Config.name = Name
com.top_logic.element.model.migration.model.UpdateTLAssociationProcessor.Config.name.tooltip = Qualified name of the <i>association</i> to update.
com.top_logic.element.model.migration.model.UpdateTLAssociationProcessor.Config.new-name = New name
com.top_logic.element.model.migration.model.UpdateTLAssociationProcessor.Config.new-name.tooltip = New name of the association including the new module.
com.top_logic.element.model.migration.model.UpdateTLAssociationProcessor.tooltip = <i>Migration processor</i> updating a <i>association</i>.
com.top_logic.element.model.migration.model.UpdateTLClassProcessor = Update class processor
com.top_logic.element.model.migration.model.UpdateTLClassProcessor.Config.abstract = Abstract
com.top_logic.element.model.migration.model.UpdateTLClassProcessor.Config.abstract.tooltip = See <i>Abstract</i> (<i>class configuration</i>). <p> If the value is not set, the value in the database remains unchanged. </p>
com.top_logic.element.model.migration.model.UpdateTLClassProcessor.Config.final = Final
com.top_logic.element.model.migration.model.UpdateTLClassProcessor.Config.final.tooltip = See <i>Final</i> (<i>class configuration</i>). <p> If the value is not set, the value in the database remains unchanged. </p>
com.top_logic.element.model.migration.model.UpdateTLClassProcessor.Config.name = Name
com.top_logic.element.model.migration.model.UpdateTLClassProcessor.Config.name.tooltip = Qualified name of the <i>business object type</i> to update.
com.top_logic.element.model.migration.model.UpdateTLClassProcessor.Config.new-name = New name
com.top_logic.element.model.migration.model.UpdateTLClassProcessor.Config.new-name.tooltip = New name of the class including the new module.
com.top_logic.element.model.migration.model.UpdateTLClassProcessor.tooltip = <i>Migration processor</i> updating a <i>business object type</i>.
com.top_logic.element.model.migration.model.UpdateTLDataTypeProcessor = Update data type processor
com.top_logic.element.model.migration.model.UpdateTLDataTypeProcessor.Config.db-mapping = Database mapping
com.top_logic.element.model.migration.model.UpdateTLDataTypeProcessor.Config.db-mapping.tooltip = New way in which values of this data type are stored in the database.
com.top_logic.element.model.migration.model.UpdateTLDataTypeProcessor.Config.kind = Kind
com.top_logic.element.model.migration.model.UpdateTLDataTypeProcessor.Config.kind.tooltip = See <i>Kind</i> (<i>datatype configuration</i>).
com.top_logic.element.model.migration.model.UpdateTLDataTypeProcessor.Config.name = Name
com.top_logic.element.model.migration.model.UpdateTLDataTypeProcessor.Config.name.tooltip = Qualified name of the <i>primitive</i> to update.
com.top_logic.element.model.migration.model.UpdateTLDataTypeProcessor.Config.new-name = New name
com.top_logic.element.model.migration.model.UpdateTLDataTypeProcessor.Config.new-name.tooltip = New name of the data type including the new module.
com.top_logic.element.model.migration.model.UpdateTLDataTypeProcessor.Config.storage-mapping = Storage mapping
com.top_logic.element.model.migration.model.UpdateTLDataTypeProcessor.Config.storage-mapping.tooltip = The <i>storage mapping</i> to apply when loading and storing values.
com.top_logic.element.model.migration.model.UpdateTLDataTypeProcessor.tooltip = <i>Migration processor</i> updating a <i>primitive</i>.
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor = Update property processor
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor$UpdateTypePartConfig = Update type part configuration
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor$UpdateTypePartConfig.tooltip = Configuration to update properties of a <i>type part</i>.
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.Config.new-type = New type
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.Config.new-type.tooltip = See <i>Type</i> (<i>type reference</i>).
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.UpdateTypePartConfig.abstract = Abstract
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.UpdateTypePartConfig.abstract.tooltip = See <i>Abstract</i> (<i>part configuration</i>).
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.UpdateTypePartConfig.bag = Bag
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.UpdateTypePartConfig.bag.tooltip = See <i>Bag</i> (<i>part configuration</i>).
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.UpdateTypePartConfig.mandatory = Mandatory
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.UpdateTypePartConfig.mandatory.tooltip = See <i>Mandatory</i> (<i>part configuration</i>).
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.UpdateTypePartConfig.multiple = Multiple
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.UpdateTypePartConfig.multiple.tooltip = See <i>Multiple</i> (<i>part configuration</i>).
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.UpdateTypePartConfig.name = Name
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.UpdateTypePartConfig.name.tooltip = Qualified name of the <i>type part</i> to update.
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.UpdateTypePartConfig.new-name = New name
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.UpdateTypePartConfig.new-name.tooltip = New name for the given property, including new module and new owner.
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.UpdateTypePartConfig.ordered = Ordered
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.UpdateTypePartConfig.ordered.tooltip = See <i>Ordered</i> (<i>part configuration</i>).
com.top_logic.element.model.migration.model.UpdateTLPropertyProcessor.tooltip = <i>Migration processor</i> updating a primitive attribute.
com.top_logic.element.model.migration.model.UpdateTLReferenceProcessor = Update reference processor
com.top_logic.element.model.migration.model.UpdateTLReferenceProcessor.Config.inverse = Inverse
com.top_logic.element.model.migration.model.UpdateTLReferenceProcessor.Config.inverse.tooltip = Whether the reference to update is an inverse reference.
com.top_logic.element.model.migration.model.UpdateTLReferenceProcessor.Config.new-end = New end
com.top_logic.element.model.migration.model.UpdateTLReferenceProcessor.Config.new-end.tooltip = Name of the new reference association end.
com.top_logic.element.model.migration.model.UpdateTLReferenceProcessor.Config.new-type = New type
com.top_logic.element.model.migration.model.UpdateTLReferenceProcessor.Config.new-type.tooltip = Qualified name of the target type.
com.top_logic.element.model.migration.model.UpdateTLReferenceProcessor.tooltip = <i>Migration processor</i> updating a <i>reference</i>.
com.top_logic.element.model.migration.model.refactor.AlterColumnProcessor = Alter column processor
com.top_logic.element.model.migration.model.refactor.AlterColumnProcessor.Config.column = Column
com.top_logic.element.model.migration.model.refactor.AlterColumnProcessor.Config.column.tooltip = The old name of the column. <p> The name expected is the logical name of the column as defined in the <em>TopLogic</em> meta schema. If the <i>Table</i> does not define a column of the given name, the flex-data for the corresponding table is migrated. </p>
com.top_logic.element.model.migration.model.refactor.AlterColumnProcessor.Config.new-db-name = New database name
com.top_logic.element.model.migration.model.refactor.AlterColumnProcessor.Config.new-db-name.tooltip = The new concrete name of the column used in the database.
com.top_logic.element.model.migration.model.refactor.AlterColumnProcessor.Config.new-mandatory = New mandatory
com.top_logic.element.model.migration.model.refactor.AlterColumnProcessor.Config.new-mandatory.tooltip = The new mandatory mode.
com.top_logic.element.model.migration.model.refactor.AlterColumnProcessor.Config.new-name = New name
com.top_logic.element.model.migration.model.refactor.AlterColumnProcessor.Config.new-name.tooltip = The new logical name of the column.
com.top_logic.element.model.migration.model.refactor.AlterColumnProcessor.Config.new-type = New type
com.top_logic.element.model.migration.model.refactor.AlterColumnProcessor.Config.new-type.tooltip = The new column type.
com.top_logic.element.model.migration.model.refactor.AlterColumnProcessor.Config.table = Table
com.top_logic.element.model.migration.model.refactor.AlterColumnProcessor.Config.table.tooltip = Logical name of the table to copy from. <p> The name expected is the logical name of the table as defined in the <em>TopLogic</em> meta schema. </p>
com.top_logic.element.model.migration.model.refactor.AlterColumnProcessor.tooltip = <i>Migration processor</i> renaming a table column or updating its properties.
com.top_logic.element.model.migration.model.refactor.ChangeLinkReferenceProcessor = Change link reference processor
com.top_logic.element.model.migration.model.refactor.ChangeLinkReferenceProcessor.Config.dest-table = Dest table
com.top_logic.element.model.migration.model.refactor.ChangeLinkReferenceProcessor.Config.dest-table.tooltip = When set, only change those references pointing to objects in the given table.
com.top_logic.element.model.migration.model.refactor.ChangeLinkReferenceProcessor.Config.reference-column = Reference column
com.top_logic.element.model.migration.model.refactor.ChangeLinkReferenceProcessor.Config.reference-column.tooltip = Name of the reference column of the given <i>Table</i> that contains the reference associated with the link stored in a table row.
com.top_logic.element.model.migration.model.refactor.ChangeLinkReferenceProcessor.Config.source-ref = Source reference
com.top_logic.element.model.migration.model.refactor.ChangeLinkReferenceProcessor.Config.source-ref.tooltip = The reference in the source model.
com.top_logic.element.model.migration.model.refactor.ChangeLinkReferenceProcessor.Config.source-table = Source table
com.top_logic.element.model.migration.model.refactor.ChangeLinkReferenceProcessor.Config.source-table.tooltip = When set, only change those references originating from objects in the given table.
com.top_logic.element.model.migration.model.refactor.ChangeLinkReferenceProcessor.Config.table = Table
com.top_logic.element.model.migration.model.refactor.ChangeLinkReferenceProcessor.Config.table.tooltip = The name of the table, where the objects of the source type are stored.
com.top_logic.element.model.migration.model.refactor.ChangeLinkReferenceProcessor.Config.target-ref = Target reference
com.top_logic.element.model.migration.model.refactor.ChangeLinkReferenceProcessor.Config.target-ref.tooltip = The reference in the target model to which the existing links should be assigned to.
com.top_logic.element.model.migration.model.refactor.ChangeLinkReferenceProcessor.tooltip = <i>Migration processor</i> that changes the <i>reference</i> of links stored in polymorphic link tables.
com.top_logic.element.model.migration.model.refactor.ChangeObjectTypeProcessor = Change object type processor
com.top_logic.element.model.migration.model.refactor.ChangeObjectTypeProcessor.Config.source-type = Source type
com.top_logic.element.model.migration.model.refactor.ChangeObjectTypeProcessor.Config.source-type.tooltip = The type of the objects that should be changed.
com.top_logic.element.model.migration.model.refactor.ChangeObjectTypeProcessor.Config.table = Table
com.top_logic.element.model.migration.model.refactor.ChangeObjectTypeProcessor.Config.table.tooltip = The name of the table, where the objects of the source type are stored.
com.top_logic.element.model.migration.model.refactor.ChangeObjectTypeProcessor.Config.target-type = Target type
com.top_logic.element.model.migration.model.refactor.ChangeObjectTypeProcessor.Config.target-type.tooltip = The new type the modified objects should be assigned to.
com.top_logic.element.model.migration.model.refactor.ChangeObjectTypeProcessor.tooltip = <i>Migration processor</i> that changes the type of objects from a concrete source type to a concrete destination type.
com.top_logic.element.model.migration.model.refactor.ChangeReferencedObjectsTypeProcessor = Change referenced objects type processor
com.top_logic.element.model.migration.model.refactor.ChangeReferencedObjectsTypeProcessor.Config.association-table = Association table
com.top_logic.element.model.migration.model.refactor.ChangeReferencedObjectsTypeProcessor.Config.association-table.tooltip = Database name of the association table of the given reference.
com.top_logic.element.model.migration.model.refactor.ChangeReferencedObjectsTypeProcessor.Config.reference = Reference
com.top_logic.element.model.migration.model.refactor.ChangeReferencedObjectsTypeProcessor.Config.reference.tooltip = Qualified name of the reference of whose referenced objects should be changed.
com.top_logic.element.model.migration.model.refactor.ChangeReferencedObjectsTypeProcessor.Config.source-type = Source type
com.top_logic.element.model.migration.model.refactor.ChangeReferencedObjectsTypeProcessor.Config.source-type.tooltip = The type of the objects that should be changed.
com.top_logic.element.model.migration.model.refactor.ChangeReferencedObjectsTypeProcessor.Config.table = Table
com.top_logic.element.model.migration.model.refactor.ChangeReferencedObjectsTypeProcessor.Config.table.tooltip = The name of the table, where the objects whose type should be changed are stored.
com.top_logic.element.model.migration.model.refactor.ChangeReferencedObjectsTypeProcessor.Config.target-type = Target type
com.top_logic.element.model.migration.model.refactor.ChangeReferencedObjectsTypeProcessor.Config.target-type.tooltip = The new type the modified objects should be assigned to.
com.top_logic.element.model.migration.model.refactor.ChangeReferencedObjectsTypeProcessor.tooltip = <i>Migration processor</i> that changes the type of objects that are referenced by a given reference from some concrete source type to some concrete destination type.
com.top_logic.element.model.migration.model.refactor.CopyTableDataProcessor = Copy table data processor
com.top_logic.element.model.migration.model.refactor.CopyTableDataProcessor.Config.dest-table = Dest table
com.top_logic.element.model.migration.model.refactor.CopyTableDataProcessor.Config.dest-table.tooltip = Name of the table to copy to.
com.top_logic.element.model.migration.model.refactor.CopyTableDataProcessor.Config.source-table = Source table
com.top_logic.element.model.migration.model.refactor.CopyTableDataProcessor.Config.source-table.tooltip = Name of the table to copy from.
com.top_logic.element.model.migration.model.refactor.CopyTableDataProcessor.tooltip = <i>Migration processor</i> copying data from one table to another.
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences = Exchange model references
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences$Config$AssociationUpdate = Association update
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences$Config$AssociationUpdate.tooltip = Specification of an association table to update.
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences$Config$TableUpdate = Table update
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences$Config$TableUpdate.tooltip = Specification of a table to update.
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.AssociationUpdate.reference = Reference
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.AssociationUpdate.reference-column = Reference column
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.AssociationUpdate.reference-column.tooltip = Name of the reference column of the given <i>Table</i> that contains the reference associated with the link stored in a table row.
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.AssociationUpdate.reference.tooltip = The reference stored in this association table that potentially stores mapped model parts.
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.AssociationUpdate.value-column = Value column
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.AssociationUpdate.value-column.tooltip = The reference attribute of the association table that points to the value that should be mapped.
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.TableUpdate.columns = Columns
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.TableUpdate.columns.tooltip = The references attributes of the given table that potentially store model references to update.
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.TableUpdate.type = Type
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.TableUpdate.type.tooltip = The type of objects stored in this table that should be changed.
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.UpdateTarget.table = Table
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.UpdateTarget.table.tooltip = The name of the table, that defines the columns to be updated.
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.model-refs = Model refs
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.model-refs.tooltip = Mapping of qualified names of model elements. <p> The key is the qualified name of the original model element and the value is the qualified name of the model element that should be assigned instead. </p>
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.updates = Updates
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.Config.updates.tooltip = The tables to update.
com.top_logic.element.model.migration.model.refactor.ExchangeModelReferences.tooltip = <i>Migration processor</i> that exchanges references to model elements (such as enumeration classifiers). <p> This processor can be used in combination with a type change of a reference attribute from enum A to enum B to update the data in addition to the model update. </p>
com.top_logic.element.model.migration.model.refactor.InternationalizeAttributeProcessor = Internationalize attribute processor
com.top_logic.element.model.migration.model.refactor.InternationalizeAttributeProcessor.Config.attribute = Attribute
com.top_logic.element.model.migration.model.refactor.InternationalizeAttributeProcessor.Config.attribute.tooltip = The attribute whose values should be internationalized.
com.top_logic.element.model.migration.model.refactor.InternationalizeAttributeProcessor.Config.columns = Columns
com.top_logic.element.model.migration.model.refactor.InternationalizeAttributeProcessor.Config.columns.tooltip = The supported languages mapped to column names, where the value for the corresponding language is stored.
com.top_logic.element.model.migration.model.refactor.InternationalizeAttributeProcessor.Config.table = Table
com.top_logic.element.model.migration.model.refactor.InternationalizeAttributeProcessor.Config.table.tooltip = The name of the table, that defines the non-internationalized attribute as column.
com.top_logic.element.model.migration.model.refactor.InternationalizeAttributeProcessor.tooltip = <i>Migration processor</i> that makes string attributes to I18N attributes.
com.top_logic.element.model.migration.model.refactor.InvertLinkTableProcessor = Invert link table processor
com.top_logic.element.model.migration.model.refactor.InvertLinkTableProcessor.Config.dest = Dest
com.top_logic.element.model.migration.model.refactor.InvertLinkTableProcessor.Config.dest.tooltip = The name of the destination end of the association.
com.top_logic.element.model.migration.model.refactor.InvertLinkTableProcessor.Config.src = Src
com.top_logic.element.model.migration.model.refactor.InvertLinkTableProcessor.Config.src.tooltip = The name of the source end of the association.
com.top_logic.element.model.migration.model.refactor.InvertLinkTableProcessor.Config.table = Table
com.top_logic.element.model.migration.model.refactor.InvertLinkTableProcessor.Config.table.tooltip = Name of the link table to invert links in.
com.top_logic.element.model.migration.model.refactor.InvertLinkTableProcessor.tooltip = <i>Migration processor</i> swapping link directions in an association table.
com.top_logic.element.model.migration.model.refactor.MoveLinksProcessor = Move links processor
com.top_logic.element.model.migration.model.refactor.MoveLinksProcessor.Config.dest-table = Dest table
com.top_logic.element.model.migration.model.refactor.MoveLinksProcessor.Config.dest-table.tooltip = Name of the table to move the links to.
com.top_logic.element.model.migration.model.refactor.MoveLinksProcessor.Config.reference = Reference
com.top_logic.element.model.migration.model.refactor.MoveLinksProcessor.Config.reference-column = Reference column
com.top_logic.element.model.migration.model.refactor.MoveLinksProcessor.Config.reference-column.tooltip = Name of the reference column of the given <i>Source table</i> that contains the reference associated with the link stored in a table row.
com.top_logic.element.model.migration.model.refactor.MoveLinksProcessor.Config.reference.tooltip = The reference whose links should be moved.
com.top_logic.element.model.migration.model.refactor.MoveLinksProcessor.Config.source-table = Source table
com.top_logic.element.model.migration.model.refactor.MoveLinksProcessor.Config.source-table.tooltip = Name of the table to take the links from.
com.top_logic.element.model.migration.model.refactor.MoveLinksProcessor.tooltip = <i>Migration processor</i> moving reference links from one table to another.
com.top_logic.element.model.migration.model.refactor.MoveObjectsProcessor = Move objects processor
com.top_logic.element.model.migration.model.refactor.MoveObjectsProcessor.Config.dest-table = Dest table
com.top_logic.element.model.migration.model.refactor.MoveObjectsProcessor.Config.dest-table.tooltip = Name of the table to move the objects to.
com.top_logic.element.model.migration.model.refactor.MoveObjectsProcessor.Config.monomorphic = Monomorphic
com.top_logic.element.model.migration.model.refactor.MoveObjectsProcessor.Config.monomorphic.tooltip = Whether to only move objects of the given type excluding sub-classes.
com.top_logic.element.model.migration.model.refactor.MoveObjectsProcessor.Config.source-table = Source table
com.top_logic.element.model.migration.model.refactor.MoveObjectsProcessor.Config.source-table.tooltip = Name of the table to take the objects from.
com.top_logic.element.model.migration.model.refactor.MoveObjectsProcessor.Config.types = Types
com.top_logic.element.model.migration.model.refactor.MoveObjectsProcessor.Config.types.tooltip = The type of objects to move.
com.top_logic.element.model.migration.model.refactor.MoveObjectsProcessor.tooltip = <i>Migration processor</i> moving objects from one table to another.
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor = Remove bridge object processor
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.bridge-table = Bridge table
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.bridge-table.tooltip = The name of the table containing the bridge objects.
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.bridge-type = Bridge type
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.bridge-type.tooltip = The bridge object type.
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.dest-association-table = Dest association table
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.dest-association-table.tooltip = The association table storing source reference links.
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.dest-bridge-column = Dest bridge column
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.dest-bridge-column.tooltip = The column containing the foreign key pointing to the bridge object in the <i>Dest association table</i>.
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.dest-reference = Dest reference
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.dest-reference-column = Dest reference column
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.dest-reference-column.tooltip = The column containing the reference in the <i>Source association table</i>.
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.dest-reference.tooltip = The reference linking source objects to bridge objects.
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.dest-value-column = Dest value column
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.dest-value-column.tooltip = The column containing the foreign key in <i>Dest association table</i> pointing to the new values of the direct reference (the objects pointed to by the bridge object).
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.direct-association-table = Direct association table
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.direct-association-table.tooltip = The association table that should receive the new direct links.
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.direct-dest-key-column = Direct dest key column
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.direct-dest-key-column.tooltip = The foreign key column pointing to the destination object in the direct association table.
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.direct-reference = Direct reference
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.direct-reference-column = Direct reference column
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.direct-reference-column.tooltip = The column containing the reference in the <i>Direct association table</i>.
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.direct-reference.tooltip = The direct model reference that should be synthesized. <p> After the migration, the direct reference connects the source objects directly with the destination objects without the intermitting bridge objects. </p>
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.direct-source-key-column = Direct source key column
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.direct-source-key-column.tooltip = The foreign key column pointing to the source object in the direct association table.
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.source-association-table = Source association table
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.source-association-table.tooltip = The association table storing source reference links.
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.source-bridge-column = Source bridge column
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.source-bridge-column.tooltip = The column containing the foreign key pointing to the bridge object in the <i>Source association table</i>.
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.source-owner-column = Source owner column
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.source-owner-column.tooltip = The column containing the foreign key in <i>Source association table</i> pointing to the new source of the direct reference (the owner of the objects pointed to by the bridge object).
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.source-reference = Source reference
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.source-reference-column = Source reference column
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.source-reference-column.tooltip = The column containing the reference in the <i>Source association table</i>.
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.Config.source-reference.tooltip = The reference linking source objects to bridge objects.
com.top_logic.element.model.migration.model.refactor.RemoveBridgeObjectProcessor.tooltip = <i>Migration processor</i> that makes logical links represented by a bridge object between source and target objects direct links. <p> In the following situation, where a `Src1` object is linked through a `owner` Reference to a `Bridge1` object that itself is linked through a `child` reference to multiple `Dest` objects, this processor creates direct links between `Src1` and `Dest1`..`Dest2` objects. </p> <pre> +--> Dest1 Src1 --owner--> Bridge1 --child--| +--> Dest2 </pre> <p> Note: This migration step creates new links allowing to delete the bridge object (and its links) later on. The actual deletion must be done in an explicit step later on. </p>
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor = Synthesize link order processor
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor.Config.factor = Factor
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor.Config.factor.tooltip = Factor to multiply the index with to get the internal ordering value.
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor.Config.link-table = Link table
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor.Config.link-table.tooltip = The name of the link table that defines the order attribute to be filled.
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor.Config.order-column = Order column
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor.Config.order-column.tooltip = The order column in the link table to fill.
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor.Config.scope-ref = Scope reference
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor.Config.scope-ref.tooltip = Reference to the scope/parent object. <p> An order is established by sorting all values of the <i>Source order attribute</i> for all links originating from the same scope object. </p>
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor.Config.source-order-attribute = Source order attribute
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor.Config.source-order-attribute.tooltip = The attribute in the source table to take the order information from.
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor.Config.source-ref = Source reference
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor.Config.source-ref.tooltip = The reference to the object from which the order information is taken.
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor.Config.source-table = Source table
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor.Config.source-table.tooltip = The object table from which the order information is extracted.
com.top_logic.element.model.migration.model.refactor.SynthesizeLinkOrderProcessor.tooltip = <i>Migration processor</i> fills an order attribute of a link table.
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor = Synthesize links processor
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor.Config.association-table = Association table
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor.Config.association-table.tooltip = Database name of the association table of the given reference.
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor.Config.is-sorted = Is sorted
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor.Config.is-sorted.tooltip = Whether this reference is sorted.
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor.Config.reference = Reference
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor.Config.reference.tooltip = Qualified name of the reference for that links should be added.
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor.Config.source-table = Source table
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor.Config.source-table.tooltip = Database table name where objects of the source type are stored.
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor.Config.source-type = Source type
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor.Config.source-type.tooltip = Qualified name of the type whose instances are the source of the links that should be added to <i>Association table</i>.
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor.Config.target-table = Target table
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor.Config.target-table.tooltip = Database table name where objects of the source type are stored.
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor.Config.target-type = Target type
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor.Config.target-type.tooltip = Qualified name of the type whose instances are the target of the links that should be added to <i>Association table</i>.
com.top_logic.element.model.migration.model.refactor.SynthesizeLinksProcessor.tooltip = <i>Migration processor</i> adding links to the association table of the configured <i>reference</i> between all objects of the configured source and target types.
com.top_logic.element.model.provider.EnumDefaultProvider = Enum default provider
com.top_logic.element.model.provider.EnumDefaultProvider.Config.annotation = Annotation
com.top_logic.element.model.provider.EnumDefaultProvider.Config.annotation.tooltip = <i>Annotation</i> container of this <i>configuration</i>.
com.top_logic.element.model.provider.EnumDefaultProvider.Config.value = Value
com.top_logic.element.model.provider.EnumDefaultProvider.Config.value.tooltip = The qualified name of the default <i>classifier</i>.
com.top_logic.element.model.provider.EnumDefaultProvider.tooltip = <i>Default value computation</i> for <i>structured type part</i> of type enumeration.
com.top_logic.element.model.util.AbstractAssociationFilter = Association filter
com.top_logic.element.model.util.AbstractAssociationFilter.tooltip = An <i>configurable filter</i> that accepts abstract <i>associations</i>.
com.top_logic.element.model.util.HiddenModelPartFilter = Hidden model part filter
com.top_logic.element.model.util.HiddenModelPartFilter.tooltip = A <i>typed filter</i> that accepts hidden <i>model parts</i>.
com.top_logic.element.model.util.TypeReferenceConfig = Type reference configuration
com.top_logic.element.model.util.TypeReferenceConfig.element = Element
com.top_logic.element.model.util.TypeReferenceConfig.element.tooltip = Meta element name of the <i>object</i> to be created.
com.top_logic.element.model.util.TypeReferenceConfig.structure = Structure
com.top_logic.element.model.util.TypeReferenceConfig.structure.tooltip = Structure name the <i>object</i> lives in.
com.top_logic.element.model.util.TypeReferenceConfig.tooltip = Description of a class type. <p> This interface provides notations for "structure"/"element" description (old way) and also for "type" (which is the new way). </p>
com.top_logic.element.model.util.TypeReferenceConfig.type = Type
com.top_logic.element.model.util.TypeReferenceConfig.type.tooltip = Qualified type name of the <i>object</i> to be created.
com.top_logic.element.singleton.SingletonManager = Singleton manager
com.top_logic.element.singleton.SingletonManager.class = Class
com.top_logic.element.singleton.SingletonManager.tooltip = Configuration for the singleton manager.
com.top_logic.element.structured.locking.AncestorsLockStrategy = Ancestors lock strategy
com.top_logic.element.structured.locking.AncestorsLockStrategy.tooltip = <i>Lock strategy</i> that creates <i>locks</i> for all elements on the path to root of a given <i>structured element</i> excluding the element itself. <p> Note: This is a specialized <i>lock strategy</i> for <i>structured elements</i> that could easily be formulated using TL-Script: </p> <code> &lt;tokens objects="m -> recursion($m, n -> $n.get(`tl.element:StructuredElement#parent`), 1)"/> </code>
com.top_logic.element.structured.locking.AncestorsOrSelfLockStrategy = Ancestors or self lock strategy
com.top_logic.element.structured.locking.AncestorsOrSelfLockStrategy.tooltip = <i>Lock strategy</i> that creates <i>locks</i> for all elements on the path to root of a given <i>structured element</i>. <p> Note: This is a specialized <i>lock strategy</i> for <i>structured elements</i> that could easily be formulated using TL-Script: </p> <code> &lt;tokens objects="m -> recursion($m, n -> $n.get(`tl.element:StructuredElement#parent`), 0)"/> </code>
com.top_logic.element.structured.util.ConfiguredNumberHandler = Configured number handler
com.top_logic.element.structured.util.ConfiguredNumberHandler$UIConfig = UI configuration
com.top_logic.element.structured.util.ConfiguredNumberHandler$UIConfig.tooltip = <i>Configured number handler</i> options that are directly configurable at the UI.
com.top_logic.element.structured.util.ConfiguredNumberHandler.Config.retry-count = Retry count
com.top_logic.element.structured.util.ConfiguredNumberHandler.Config.retry-count.tooltip = How often the <i>ID generator</i> tries to create a new number before a failure occurs.
com.top_logic.element.structured.util.ConfiguredNumberHandler.UIConfig.date-pattern = Date format
com.top_logic.element.structured.util.ConfiguredNumberHandler.UIConfig.date-pattern.tooltip = Format of the current date to use as part of the ID. <p> For example, the following pattern letters can be used: </p> <blockquote> <table> <tr> <th>Pattern</th> <th>Description</th> <th>Example</th> </tr> <tr> <td><code>yyyy</code></td> <td>Year</td> <td><code>1996</code></td> </tr> <tr> <td><code>MM</code></td> <td>Month in year</td> <td><code>07</code></td> </tr> <tr> <td><code>ww</code></td> <td>Week in year</td> <td><code>27</code></td> </tr> <tr> <td><code>dd</code></td> <td>Day in month</td> <td><code>10</code></td> </tr> <tr> <td><code>HH</code></td> <td>Hour in day (0-23)</td> <td><code>0</code></td> </tr> <tr> <td><code>mm</code></td> <td>Minute in hour</td> <td><code>30</code></td> </tr> <tr> <td><code>ss</code></td> <td>Second in minute</td> <td><code>55</code></td> </tr> <tr> <td><code>SSS</code></td> <td>Millisecond</td> <td><code>978</code></td> </tr> </table> </blockquote> <p> If a value is given, the generated numbers start a new sequence for each unique value produced by this format. E.g. when using the value <code>yyyy</code> a new sequence of numbers is started for each year. </p> <p> The formatted value replaces the <code>"%DATE%"</code> placeholder in <i>ID pattern</i>. </p>
com.top_logic.element.structured.util.ConfiguredNumberHandler.UIConfig.dynamic-sequence-name = Dynamic sequence name
com.top_logic.element.structured.util.ConfiguredNumberHandler.UIConfig.dynamic-sequence-name.tooltip = Function computing a dynamic sequence name based on the context, in which a new object is created. <p> If given, a new sequence of numbers is started for each unique value computed from the creation context of the object. </p> <p> The computed value replaces the <code>"%OBJECT%"</code> placeholder in <i>ID pattern</i>. </p>
com.top_logic.element.structured.util.ConfiguredNumberHandler.UIConfig.number-pattern = Number format
com.top_logic.element.structured.util.ConfiguredNumberHandler.UIConfig.number-pattern.tooltip = Format of the consecutive number added to the generated ID. <p> The formatted value replaces the <code>"%NUMBER%"</code> placeholder in <i>ID pattern</i>. </p> <p> The value must be a valid <i>decimal format</i> format pattern. </p> <p> The value <code>000</code> formats the number with three digits including leading zeros, while <code>#</code> formats the number with as much digits as required without leading zeros. </p>
com.top_logic.element.structured.util.ConfiguredNumberHandler.UIConfig.pattern = ID pattern
com.top_logic.element.structured.util.ConfiguredNumberHandler.UIConfig.pattern.tooltip = Template for the generated ID. <p> The template must contain the placeholder <code>"%NUMBER%"</code> that is replaced with a consecutive number. The format of this number is given in <i>number format</i>. If <i>Dynamic sequence name</i> is given, the pattern may also contain the placeholder <code>"%OBJECT%"</code> to add an indication of the number range to the ID. If <i>date format</i> is given, the pattern may contain the placeholder <code>"%DATE%"</code> to add an indication of the time slot the number range belongs to. </p>
com.top_logic.element.structured.util.ConfiguredNumberHandler.tooltip = <i>ID generator</i> based on a <i>sequence manager</i> providing the sequence of raw numbers.
com.top_logic.element.structured.util.NumberHandlerDefaultProvider = Generated ID
com.top_logic.element.structured.util.NumberHandlerDefaultProvider.Config.sequence-name = Sequence name
com.top_logic.element.structured.util.NumberHandlerDefaultProvider.Config.sequence-name.tooltip = Identifier for the sequence of numbers. <p> The same value in <i>Sequence name</i> in the default specification of multiple attributes guarantee that the generated numbers for all those attributes are unique. Using different <i>Sequence names</i> result in the same number to be assigned to different attributes with such a default specification. </p>
com.top_logic.element.structured.util.NumberHandlerDefaultProvider.tooltip = <i>Default value computation</i> that creates unique identifiers with some built-in formatting. <p> The created sequence number within the identifier is guaranteed to be continuous. Therefore, those identifiers can only be created during the commit of a transaction. Therefore, the attribute that uses this default provider must be hidden in create context. </p>
com.top_logic.element.structured.util.NumberHandlerFactory = Number handler factory
com.top_logic.element.structured.util.NumberHandlerFactory.Config.handlers = Handlers
com.top_logic.element.structured.util.NumberHandlerFactory.Config.handlers.tooltip = The configuration of the <i>ID generators</i>.
com.top_logic.element.structured.util.NumberHandlerFactory.tooltip = This class handles the <i>ID generators</i>. This class gets information from the xml config file and creates a map with all known <i>ID generator</i>.
com.top_logic.element.structured.util.SequenceDefaultProvider = Continuous ID
com.top_logic.element.structured.util.SequenceDefaultProvider.Config.dynamic-sequence-name = Dynamic sequence name
com.top_logic.element.structured.util.SequenceDefaultProvider.Config.dynamic-sequence-name.tooltip = Function computing a dynamic sequence name based on the context, in which a new object is created. <p> If given, a new sequence of numbers is started for each unique value computed from the creation context of the object. </p>
com.top_logic.element.structured.util.SequenceDefaultProvider.Config.sequence-name = Sequence name
com.top_logic.element.structured.util.SequenceDefaultProvider.Config.sequence-name.tooltip = Identifier for the sequence of numbers. <p> The same value in <i>Sequence name</i> in the default specification of multiple attributes guarantee that the generated numbers for all those attributes are unique. Using different <i>Sequence names</i> result in the same number to be assigned to different attributes with such a default specification. </p>
com.top_logic.element.structured.util.SequenceDefaultProvider.tooltip = <i>Default value computation</i> that creates a default value for an integer attribute from a sequence. <p> The created identifiers are guaranteed to be continuous. Those identifiers can only be created during the commit of a transaction. Therefore, the attribute that uses this default provider must be hidden in create context. </p>
com.top_logic.element.structured.util.StructureRootDisabledExecRule = Structure root disabled exec rule
com.top_logic.element.structured.util.StructureRootDisabledExecRule.Config.hidden = Hidden
com.top_logic.element.structured.util.StructureRootDisabledExecRule.Config.hidden.tooltip = Whether the <i>executable state</i> should be hidden.
com.top_logic.element.structured.util.StructureRootDisabledExecRule.Config.i18n-reason-key = Internationalization reason key
com.top_logic.element.structured.util.StructureRootDisabledExecRule.Config.i18n-reason-key.tooltip = Reason to disable the command for root objects.
com.top_logic.element.structured.util.StructureRootDisabledExecRule.tooltip = <i>Executability rule</i> that disables or hides a command for a structure root node.
com.top_logic.element.util.dbadmin.DeleteTable = Delete table
com.top_logic.element.util.dbadmin.DeleteTable.tooltip = <i>Command handler</i> that removes a table type, if it is not used.
com.top_logic.element.util.dbadmin.IDESchemaExtractCommand = IDE schema extract command
com.top_logic.element.util.dbadmin.IDESchemaExtractCommand.tooltip = <i>Command handler</i> that writes back the schema configuration to the file system. <p> During next boot, the changes will be applied (if only changes are performed that support automatic migration). </p>
com.top_logic.element.util.dbadmin.TableUsageListModelBuilder = Table usage list model builder
com.top_logic.element.util.dbadmin.TableUsageListModelBuilder.Config.schema = Schema
com.top_logic.element.util.dbadmin.TableUsageListModelBuilder.Config.schema.tooltip = The property to access for generating the contents.
com.top_logic.element.util.dbadmin.TableUsageListModelBuilder.tooltip = <i>List model builder</i> that finds references to a given table.
com.top_logic.element.util.model.ElementCompatibilityService = Element compatibility service
com.top_logic.element.util.model.ElementCompatibilityService.tooltip = Com.top_logic.element variant of <i>compatibility service</i>.
com.top_logic.element.util.model.ElementModelService = Element model service
com.top_logic.element.util.model.ElementModelService.tooltip = <i>Model service</i> for <i>model</i> based on <i>business object type</i> and <i>structured type part</i>.
