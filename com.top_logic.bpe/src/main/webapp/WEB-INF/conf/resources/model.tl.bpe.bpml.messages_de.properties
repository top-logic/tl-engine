model.tl.bpe = Business Process Engine
model.tl.bpe.bpml = BPML Model
model.tl.bpe.bpml.Annotated = Annotated
model.tl.bpe.bpml.Annotated.annotationAssociations = Annotationslinks
model.tl.bpe.bpml.AnnotationAssociation = AnnotationAssociation
model.tl.bpe.bpml.AnnotationAssociation.source = Annotiertes Element
model.tl.bpe.bpml.AnnotationAssociation.target = Annotation
model.tl.bpe.bpml.AnnotationContainer = AnnotationContainer
model.tl.bpe.bpml.AnnotationContainer.annotationDefinitions = Annotationen
model.tl.bpe.bpml.ApprovalState = Workflow-Status
model.tl.bpe.bpml.ApprovalState.Development = In Arbeit
model.tl.bpe.bpml.ApprovalState.Released = Aktiv
model.tl.bpe.bpml.ApprovalState.Retired = Abgekündigt
model.tl.bpe.bpml.BPTimeGranularity = Zeit-Granularität
model.tl.bpe.bpml.BoundaryEvent = BoundaryEvent
model.tl.bpe.bpml.BoundaryEvent.attachedTo = Gebunden an
model.tl.bpe.bpml.BoundaryEvent.cancelActivity = Stoppt die Aktivität
model.tl.bpe.bpml.BusinessRuleTask = BusinessRuleTask
model.tl.bpe.bpml.CallActivity = CallActivity
model.tl.bpe.bpml.CancelEventDefinition = Abbrechen
model.tl.bpe.bpml.Collaboration = Collaboration
model.tl.bpe.bpml.Collaboration.diagram = Diagramm
model.tl.bpe.bpml.Collaboration.messageFlows = Nachrichten
model.tl.bpe.bpml.Collaboration.myProcessesDescription = "Meine Prozesse" Beschreibung
model.tl.bpe.bpml.Collaboration.myProcessesDescription.tooltip = Beschreibung, die auf der Kachel "Meine Prozesse" in der generischen Workflow-Ansicht dargestellt werden soll.
model.tl.bpe.bpml.Collaboration.myProcessesIcon = "Meine Prozesse" Icon
model.tl.bpe.bpml.Collaboration.myProcessesIcon.tooltip = Bild, das auf der Kachel "Meine Prozesse" in der generischen Workflow-Ansicht dargestellt werden soll.
model.tl.bpe.bpml.Collaboration.myProcessesTitle = "Meine Prozesse" Titel
model.tl.bpe.bpml.Collaboration.myProcessesTitle.tooltip = Alternativer Titel for die Kachel "Meine Prozesse" in der generischen Workflow-Ansicht.
model.tl.bpe.bpml.Collaboration.myTasksDescription = "Meine Aufgaben" Beschreibung
model.tl.bpe.bpml.Collaboration.myTasksDescription.tooltip = Beschreibung, die auf der Kachel "Meine Aufgaben" in der generischen Workflow-Ansicht angezeigt werden soll.\ 
model.tl.bpe.bpml.Collaboration.myTasksIcon = "Meine Aufgaben" Icon
model.tl.bpe.bpml.Collaboration.myTasksIcon.tooltip = Bild, das auf der Kachel "Meine Aufgaben" in der generischen Workflow-Ansicht dargestellt werden soll.
model.tl.bpe.bpml.Collaboration.myTasksTitle = "Meine Aufgaben" Titel
model.tl.bpe.bpml.Collaboration.myTasksTitle.tooltip = Alternativer Titel for die Kachel "Meine Aufgaben" in der generischen Workflow-Ansicht.
model.tl.bpe.bpml.Collaboration.participants = Teilnehmer
model.tl.bpe.bpml.Collaboration.processes = Prozesse
model.tl.bpe.bpml.Collaboration.state = Status
model.tl.bpe.bpml.CompensateEventDefinition = Ausgleich
model.tl.bpe.bpml.ComplexGateway = ComplexGateway
model.tl.bpe.bpml.ConditionalEventDefinition = Bedingt
model.tl.bpe.bpml.DefaultGateway = DefaultGateway
model.tl.bpe.bpml.DefaultGateway.defaultFlow = Standardweg
model.tl.bpe.bpml.Described = Described
model.tl.bpe.bpml.Described.description = Beschreibung
model.tl.bpe.bpml.DisplayDescription = DisplayDescription
model.tl.bpe.bpml.Edge = Edge
model.tl.bpe.bpml.Edge.label = Label
model.tl.bpe.bpml.Edge.label.tooltip = Bezeichnung der Kante, wie sie einem Benutzer während der Workflow-Bearbeitung angezeigt werden soll (z. B. bei der Entscheidungsfindung oder als Text auf einer Schaltfläche).
model.tl.bpe.bpml.Edge.process = Prozess
model.tl.bpe.bpml.Edge.source = Von
model.tl.bpe.bpml.Edge.target = Nach
model.tl.bpe.bpml.Edge.title = Bezeichnung
model.tl.bpe.bpml.Edge.title.tooltip = Bezeichnung der Kannte, wie sie einem Nutzer bei der Workflow-Bearbeitung angezeigt werden soll (z.B. beim Treffen einer Entscheidung oder als Text auf einem Knopf).
model.tl.bpe.bpml.Edge.tooltip = Tooltip
model.tl.bpe.bpml.Edge.tooltip.tooltip = Weitergehende Anleitung  die dem Nutzer des Workflows für diesen Übergang angezeigt werden soll. Die Anleitung sollte dem Nutzer die Konsequenzen einer eventuell zu treffenden Entscheidung klarmachen.
model.tl.bpe.bpml.Edge.weight = Gewicht
model.tl.bpe.bpml.Edge.weight.tooltip = Ein Gewicht, das die Ordnung der Kante in einem Auswahldialog für eine Nutzerentscheidung bestimmt. Je größer die Zahl, desto weiter unten wird die Kante in die Entscheidungsliste einsortiert. Alle Kanten, die ein Gewicht haben werden vor Kanten ohne Gewicht angezeigt.
model.tl.bpe.bpml.EndEvent = EndEvent
model.tl.bpe.bpml.ErrorEventDefinition = Fehler
model.tl.bpe.bpml.EscalationEventDefinition = Eskalation
model.tl.bpe.bpml.Event = Event
model.tl.bpe.bpml.Event.definition = Definition
model.tl.bpe.bpml.EventBasedGateway = EventBasedGateway
model.tl.bpe.bpml.EventDefinition = EventDefinition
model.tl.bpe.bpml.EventDefinition.event = Ereignis
model.tl.bpe.bpml.ExclusiveGateway = ExclusiveGateway
model.tl.bpe.bpml.ExclusiveGateway.automatic = Automatisch
model.tl.bpe.bpml.Externalized = Externalized
model.tl.bpe.bpml.Externalized.extId = Diagramm-ID
model.tl.bpe.bpml.FlowSource = FlowSource
model.tl.bpe.bpml.FlowTarget = FlowTarget
model.tl.bpe.bpml.Gateway = Gateway
model.tl.bpe.bpml.Iconified = Iconified
model.tl.bpe.bpml.Iconified.icon = Symbol
model.tl.bpe.bpml.InclusiveGateway = InclusiveGateway
model.tl.bpe.bpml.IntermediateCatchEvent = IntermediateCatchEvent
model.tl.bpe.bpml.IntermediateEvent = IntermediateEvent
model.tl.bpe.bpml.IntermediateMessageThrowEvent = IntermediateMessageThrowEvent
model.tl.bpe.bpml.IntermediateThrowEvent = IntermediateThrowEvent
model.tl.bpe.bpml.Lane = Lane
model.tl.bpe.bpml.Lane.nodes = Knoten
model.tl.bpe.bpml.Lane.owner = Eigner
model.tl.bpe.bpml.Lane.title = Bezeichnung
model.tl.bpe.bpml.Lane.title.tooltip = Bezeichnung der Lane, wie sie einem Nutzer bei der Workflow-Bearbeitung angezeigt werden soll.
model.tl.bpe.bpml.LaneSet = LaneSet
model.tl.bpe.bpml.LaneSet.actorGroups = Gruppe der Akteure
model.tl.bpe.bpml.LaneSet.actorRule = Akteur-Funktion
model.tl.bpe.bpml.LaneSet.actorRule.tooltip = Funktion welche aus der Prozess-Instanz (übergeben als einziges Argument) die Menge der möglichen Aktoren (Personen oder Gruppen) berechnet.
model.tl.bpe.bpml.LaneSet.lanes = Bahnen
model.tl.bpe.bpml.ManualTask = ManualTask
model.tl.bpe.bpml.ManualTask.canEdit = Bearbeitbar
model.tl.bpe.bpml.ManualTask.canEdit.tooltip = Ob das Formular in diesem Prozesschritt bearbeitet werden kann. Wenn nicht, dann dient es nur der Anzeige des Zustandes des aktuellen Prozessobjektes.
model.tl.bpe.bpml.ManualTask.displayDescription = Darstellung
model.tl.bpe.bpml.ManualTask.formDefinition = Darstellung
model.tl.bpe.bpml.ManualTask.formDefinition.tooltip = Formular für diesen Prozesschritt. Dieses Formular wird einem Nutzer angezeigt, der für diesen Prozesschritt als Bearbeiter zugeordnet ist.
model.tl.bpe.bpml.MessageEventDefinition = Nachricht
model.tl.bpe.bpml.MessageFlow = MessageFlow
model.tl.bpe.bpml.MessageFlow.collaboration = Collaboration
model.tl.bpe.bpml.MessageFlow.connectExpession = Prozessverbindung
model.tl.bpe.bpml.MessageFlow.connectExpession.tooltip = Funktion mit zwei Argumenten (sendende Prozessinstanz und empfangende Prozessinstanz), welche als Seiteneffekt eine Verknüpfung der beiden Prozessinstanzen herstellt.
model.tl.bpe.bpml.MessageFlow.source = Von
model.tl.bpe.bpml.MessageFlow.target = Nach
model.tl.bpe.bpml.Named = Named
model.tl.bpe.bpml.Named.name = Name
model.tl.bpe.bpml.Named.name.tooltip = Technische Bezeichnung des Diagramm-Elements.
model.tl.bpe.bpml.Node = Node
model.tl.bpe.bpml.Node.incomming = Eingänge
model.tl.bpe.bpml.Node.lane = Bahn
model.tl.bpe.bpml.Node.outgoing = Ausgänge
model.tl.bpe.bpml.Node.process = Prozess
model.tl.bpe.bpml.ParallelGateway = ParallelGateway
model.tl.bpe.bpml.Participant = Participant
model.tl.bpe.bpml.Participant.collaboration = Collaboration
model.tl.bpe.bpml.Participant.defaultOperation = Standardoperation
model.tl.bpe.bpml.Participant.defaultOperation.tooltip = Operation, die bei jedem Schritt im Workflow zusätzlich ausgeführt wird.\n\nDie Funktion erhält vier Argumente, das Prozessobjekt, die alte Aufgabe, die neue Aufgabe (sofern vorhanden) und die Formulardaten des Auswahldialogs für die nächste Aufgabe. Ist für den Übergang kein Formulartyp definiert, ist das letzte Argument null. Werden mehrere parallele Aufgaben gestartet, ist das dritte Argument eine Menge mit allen Folgeaufgaben.\n\nWenn die Prozessdurchführung auf einen End-Event trifft, wird keine neue Aufgabe angelegt.
model.tl.bpe.bpml.Participant.displayDescription = Darstellung
model.tl.bpe.bpml.Participant.dynamicName = Test-ID
model.tl.bpe.bpml.Participant.dynamicName.tooltip = Funktion, welche für automatisierte Tests eine ID für eine Aufgabe berechnet.
model.tl.bpe.bpml.Participant.edgeFormType = Formularmodell
model.tl.bpe.bpml.Participant.edgeFormType.tooltip = Der Typ, der das Formular beschreibt, das bei einem Zustandsübergang aus einer manuellen Aufgabe heraus dem Nutzer angezeigt werden soll. Für Attribute dieses Typs werden Eingabefelder in dem Forumar angezeigt, das sonst nur die nächste Aufgabe zur Auswahl stellt.
model.tl.bpe.bpml.Participant.exportDescription = Exportbeschreibung
model.tl.bpe.bpml.Participant.modelType = Modell-Typ
model.tl.bpe.bpml.Participant.modelType.tooltip = Typ des prozessgesteuerten Objektes (der Prozessdurchführung). Eine Instanz dieses Typs wird beim Starten eines Prozesses angelegt.
model.tl.bpe.bpml.Participant.process = Prozess
model.tl.bpe.bpml.Participant.taskLabel = Dynamische Aufgabenbeschreibung
model.tl.bpe.bpml.Participant.taskLabel.tooltip = Funktion, die den Namen einer Aufgabe in Workflow-Ansichten berechnet, wenn für die Aufgabe selbst kein Name konfiguriert ist.\n\nDie Funktion erhält zwei Argumente, die Prozessausführung und die aktuelle Aufgabe.
model.tl.bpe.bpml.Participant.taskTitle = Template für Task-Titel
model.tl.bpe.bpml.Participant.taskTitle.tooltip = Text mit eingebetteten Ausdrücken. Über die Variable $model kann auf die aktuelle Aufgabe zugegriffen werden.
model.tl.bpe.bpml.Participant.tokenType = Zustandstyp
model.tl.bpe.bpml.Participant.tokenType.tooltip = Der Typ des Objektes, das den Zustand einer Prozessdurchführung in der aktuellen Aufgabe beschreibt.\n\nDer Verlauf einer Prozessdurchführung setzt sich aus der Liste aller Zustandsobjekte zusammen, die im Laufe der Prozessdurchführung angelegt wurden. In jedem dieser Objekte wird mindestens die Verweildauer des Prozesses in dieser Aufgabe und der Bearbeiter der Aufgabe gespeichert.\n\nDurch Angabe eines eigenen Typs für das Zustandsobjekt können weitere Informationen im Verlauf des Prozesses gesammelt werden, die nicht direkt mit dem Prozessobjekt selbst verknüpft sind.
model.tl.bpe.bpml.Process = Process
model.tl.bpe.bpml.Process.collaboration = Collaboration
model.tl.bpe.bpml.Process.edges = Kanten
model.tl.bpe.bpml.Process.isExecutable = Ausführbar
model.tl.bpe.bpml.Process.nodes = Knoten
model.tl.bpe.bpml.Process.participant = Teilnehmer
model.tl.bpe.bpml.ProcessFormDefinition = [missing:model.tl.bpe.bpml.ProcessFormDefinition]
model.tl.bpe.bpml.ReceiveTask = ReceiveTask
model.tl.bpe.bpml.ScriptTask = ScriptTask
model.tl.bpe.bpml.SendTask = SendTask
model.tl.bpe.bpml.SendTask.contentTemplate = Inhalt
model.tl.bpe.bpml.SendTask.contentTemplate.tooltip = Text mit eingebetteten Ausdrücken. Über die Variable $model kann auf die aktuelle Aufgabe zugegriffen werden.
model.tl.bpe.bpml.SendTask.receiverGroups = Empfänger Gruppen
model.tl.bpe.bpml.SendTask.receiverRule = Empfänger Regel
model.tl.bpe.bpml.SendTask.receiverRule.tooltip = Funktion, welche die Empfänger (Personen) berechnet. Die Funktion erhält als einziges Argument die aktuelle Prozess-Instanz.
model.tl.bpe.bpml.SendTask.subjectTemplate = Betreff
model.tl.bpe.bpml.SendTask.subjectTemplate.tooltip = Text mit eingebetteten Ausdrücken. Über die Variable $model kann auf die aktuelle Aufgabe zugegriffen werden.
model.tl.bpe.bpml.SequenceFlow = SequenceFlow
model.tl.bpe.bpml.SequenceFlow.formType = Formulartyp
model.tl.bpe.bpml.SequenceFlow.formType.tooltip = Modell für das Formular, das beim Zustandsübergang aus einer manuellen Aufgabe angezeigt wird. Die zugehörige Operation erhält dieses Formular, um die eingegebenen Werte weiterzuverarbeiten. \n\nBei Angabe eines Formulartyps muss zwingend auch eine Operation angegeben werden, da die eingegebenen Werte ansonsten unberücksichtigt bleiben.
model.tl.bpe.bpml.SequenceFlow.operation = Operation
model.tl.bpe.bpml.SequenceFlow.operation.tooltip = Auszuführende Operation, wenn der Workflow über diese Kante läuft. \n\nDie Angabe einer Operation kann nur an Kanten angegeben werden, die von einer manuellen Aufgabe beginnen. Die Angabe einer Operation ist gleichbedeutend mit der Modellierung eines Service-Tasks. Eine Operation an einer Kante vereinfacht das Diagramm und erzeugt keine zusätzlichen Einträge in der Historie der Prozessdurchführung.\n\nDie Funktion erhält vier Argumente, das Prozessobjekt, die alte Aufgabe, die neue Aufgabe (sofern vorhanden) und die Formulardaten des Auswahldialogs für die nächste Aufgabe. Ist für den Übergang kein Formulartyp definiert, ist das letzte Argument null. Werden mehrere parallele Aufgaben gestartet, ist das dritte Argument eine Menge mit allen Folgeaufgaben.
model.tl.bpe.bpml.SequenceFlow.rule = Bedingung
model.tl.bpe.bpml.SequenceFlow.rule.tooltip = Prädikatsfunktion, die bei gegebener Prozess-Instanz (als einziges Argument) testet, ob der Weg gegangen werden kann. Die Funktion muss hierfür entweder einen Wahrheitswert oder einen (internationalisierten) Fehlertext, der den Fehler beschreibt, liefern.
model.tl.bpe.bpml.SequenceFlowRule = [missing:model.tl.bpe.bpml.SequenceFlowRule]
model.tl.bpe.bpml.ServiceTask = ServiceTask
model.tl.bpe.bpml.ServiceTask.action = Aktion
model.tl.bpe.bpml.ServiceTask.action.tooltip = Operation, die ausgeführt werden soll. Der Funktion wird als einziges Argument die aktuelle Prozess-Instanz übergeben.
model.tl.bpe.bpml.SignalEventDefinition = Signal
model.tl.bpe.bpml.StartEvent = StartEvent
model.tl.bpe.bpml.StartEvent.title = Bezeichnung
model.tl.bpe.bpml.StartEvent.title.tooltip = Bezeichnung des Start Events, wie sie einem Benutzer während der Workflow-Bearbeitung angezeigt werden soll.
model.tl.bpe.bpml.SubProcess = SubProcess
model.tl.bpe.bpml.Task = Task
model.tl.bpe.bpml.Task.boundaryEvents = Boundary Events
model.tl.bpe.bpml.Task.label = Label
model.tl.bpe.bpml.Task.label.tooltip = Bezeichnung der Aufgabe, wie sie einem Benutzer während der Workflow-Bearbeitung angezeigt werden soll (z. B. in einer Überschrift).
model.tl.bpe.bpml.Task.labelFunction = Label Funktion
model.tl.bpe.bpml.Task.labelFunction.tooltip = Dynamische Berechnung des Aufgabennamens, wie er einem Benutzer während der Workflow-Bearbeitung angezeigt werden soll. Das Prozessmodell und die aktuelle Aufgabe können in die Berechnung einbezogen werden. Es wird eine Funktion mit drei Argumenten erwartet. Die aktuelle Prozessausführung (Instanz von `tl.bpe.execution:ProcessExecution`) wird als erstes Argument, die aktuell bearbeitete Aufgabe (`tl.bpe.bpml:Task`) als zweites Argument und der aktuelle Prozessschritt (`tl.bpe.execution:Token`) als drittes Argument übergeben.
model.tl.bpe.bpml.Task.title = Bezeichnung
model.tl.bpe.bpml.Task.title.tooltip = Bezeichnung der Aufgabe, wie sie einem Nutzer bei der Workflow-Bearbeitung angezeigt werden soll (z.B. in einer Überschrift).
model.tl.bpe.bpml.Task.titleFunction = Berechnung der Bezeichnung
model.tl.bpe.bpml.Task.titleFunction.tooltip = Dynamische Berechnung der Bezeichnung einer Aufgabe, wie sie einem Nutzer bei der Workflow-Bearbeitung angezeigt werden soll. In die Berechnung kann das Prozessmodell und die aktuelle Aufgabe einfließen.\n\nErwartet wird eine Funktion mit drei Argumenten. Als erstes Argument wird die aktuelle Prozessdurchführung (Instanz von `tl.bpe.execution:ProcessExecution`), als zweites Argument die aktuell bearbeitete Aufgabe (`tl.bpe.bpml:Task`) und als drittes Argument der aktuelle Prozesschritt (`tl.bpe.execution:Token`) übergeben.
model.tl.bpe.bpml.Task.tokenType = Zustandstyp
model.tl.bpe.bpml.Task.tokenType.tooltip = Der Typ des Objektes, das den Zustand einer Prozessdurchführung in der aktuellen Aufgabe beschreibt.\n\nDer Verlauf einer Prozessdurchführung setzt sich aus der Liste aller Zustandsobjekte zusammen, die im Laufe der Prozessdurchführung angelegt wurden. In jedem dieser Objekte wird mindestens die Verweildauer des Prozesses in dieser Aufgabe und der Bearbeiter der Aufgabe gespeichert.\n\nDurch Angabe eines eigenen Typs für das Zustandsobjekt können weitere Informationen im Verlauf des Prozesses gesammelt werden, die nicht direkt mit dem Prozessobjekt selbst verknüpft sind.
model.tl.bpe.bpml.TerminateEventDefinition = Beenden
model.tl.bpe.bpml.TextAnnotation = TextAnnotation
model.tl.bpe.bpml.TextAnnotation.annotationAssociations = Annotationslinks
model.tl.bpe.bpml.TextAnnotation.text = Text
model.tl.bpe.bpml.TimerEventDefinition = Zeit
model.tl.bpe.bpml.TimerEventDefinition.delayInMillis = Wartezeit
model.tl.bpe.bpml.TimerEventDefinition.delayInUnit = Wartezeit
model.tl.bpe.bpml.TimerEventDefinition.timeUnit = Einheit
model.tl.bpe.bpml.UserTask = UserTask
