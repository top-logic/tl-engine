/* Generated By:JavaCC: Do not edit this line. SearchExpressionParserConstants.java */
/*
 * SPDX-FileCopyrightText: 2018 (c) Business Operation Systems GmbH <info@top-logic.com>
 * 
 * SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-BOS-TopLogic-1.0
 */
package com.top_logic.model.search.expr.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SearchExpressionParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SPACE = 1;
  /** RegularExpression Id. */
  int TAB = 2;
  /** RegularExpression Id. */
  int CR = 3;
  /** RegularExpression Id. */
  int NL = 4;
  /** RegularExpression Id. */
  int BLOCK_COMMENT = 5;
  /** RegularExpression Id. */
  int LINE_COMMENT = 6;
  /** RegularExpression Id. */
  int TRUE = 7;
  /** RegularExpression Id. */
  int FALSE = 8;
  /** RegularExpression Id. */
  int NULL = 9;
  /** RegularExpression Id. */
  int AND = 10;
  /** RegularExpression Id. */
  int OR = 11;
  /** RegularExpression Id. */
  int THIS = 12;
  /** RegularExpression Id. */
  int TUPLE = 13;
  /** RegularExpression Id. */
  int SWITCH = 14;
  /** RegularExpression Id. */
  int DEFAULT_KEYWORRD = 15;
  /** RegularExpression Id. */
  int NAME = 16;
  /** RegularExpression Id. */
  int CHAIN = 17;
  /** RegularExpression Id. */
  int ACCESS = 18;
  /** RegularExpression Id. */
  int VAR = 19;
  /** RegularExpression Id. */
  int STRING = 20;
  /** RegularExpression Id. */
  int RESKEY = 21;
  /** RegularExpression Id. */
  int LANGTAG = 22;
  /** RegularExpression Id. */
  int QUOTE = 23;
  /** RegularExpression Id. */
  int INT = 24;
  /** RegularExpression Id. */
  int NUM = 25;
  /** RegularExpression Id. */
  int FLOAT = 26;
  /** RegularExpression Id. */
  int MODEL_NAME = 27;
  /** RegularExpression Id. */
  int MODULE = 28;
  /** RegularExpression Id. */
  int TYPE = 29;
  /** RegularExpression Id. */
  int PART = 30;
  /** RegularExpression Id. */
  int SINGLETON = 31;
  /** RegularExpression Id. */
  int BLOCK_START = 32;
  /** RegularExpression Id. */
  int BLOCK_END = 33;
  /** RegularExpression Id. */
  int SCRIPT_END = 34;
  /** RegularExpression Id. */
  int HTML_START = 35;
  /** RegularExpression Id. */
  int JSP_COMMENT_START = 36;
  /** RegularExpression Id. */
  int JSP_COMMENT = 37;
  /** RegularExpression Id. */
  int XML_COMMENT_START = 38;
  /** RegularExpression Id. */
  int XML_COMMENT = 39;
  /** RegularExpression Id. */
  int EMBEDD = 40;
  /** RegularExpression Id. */
  int SCRIPT = 41;
  /** RegularExpression Id. */
  int TAG_START = 42;
  /** RegularExpression Id. */
  int END_TAG = 43;
  /** RegularExpression Id. */
  int TAG_NAME = 44;
  /** RegularExpression Id. */
  int HTML_STOP = 45;
  /** RegularExpression Id. */
  int TEXT_CONTENT = 46;
  /** RegularExpression Id. */
  int WS = 47;
  /** RegularExpression Id. */
  int WS_OPT = 48;
  /** RegularExpression Id. */
  int TEXT_EMBEDD = 49;
  /** RegularExpression Id. */
  int PLAIN_TEXT = 50;
  /** RegularExpression Id. */
  int TAG_SPACE = 51;
  /** RegularExpression Id. */
  int TAG_TAB = 52;
  /** RegularExpression Id. */
  int TAG_CR = 53;
  /** RegularExpression Id. */
  int TAG_NL = 54;
  /** RegularExpression Id. */
  int ATTRIBUTE_NAME = 55;
  /** RegularExpression Id. */
  int EQ = 56;
  /** RegularExpression Id. */
  int QUOT_START = 57;
  /** RegularExpression Id. */
  int TAG_END = 58;
  /** RegularExpression Id. */
  int END_EMPTY_TAG = 59;
  /** RegularExpression Id. */
  int EMBEDD_ATTR = 60;
  /** RegularExpression Id. */
  int QUOT_END = 61;
  /** RegularExpression Id. */
  int ATTRIBUTE_TEXT = 62;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int HTML = 1;
  /** Lexical state. */
  int TEXT = 2;
  /** Lexical state. */
  int TAG = 3;
  /** Lexical state. */
  int ATTR_CONTENT = 4;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<BLOCK_COMMENT>",
    "<LINE_COMMENT>",
    "\"true\"",
    "\"false\"",
    "\"null\"",
    "<AND>",
    "<OR>",
    "\"this\"",
    "\"tuple\"",
    "\"switch\"",
    "\"default\"",
    "<NAME>",
    "\"..\"",
    "\".\"",
    "<VAR>",
    "<STRING>",
    "<RESKEY>",
    "<LANGTAG>",
    "<QUOTE>",
    "<INT>",
    "<NUM>",
    "<FLOAT>",
    "<MODEL_NAME>",
    "<MODULE>",
    "<TYPE>",
    "<PART>",
    "<SINGLETON>",
    "\"{\"",
    "\"}\"",
    "\"</script>\"",
    "\"{{{\"",
    "\"<%--\"",
    "<JSP_COMMENT>",
    "\"<!--\"",
    "<XML_COMMENT>",
    "\"{\"",
    "<SCRIPT>",
    "<TAG_START>",
    "<END_TAG>",
    "<TAG_NAME>",
    "\"}}}\"",
    "<TEXT_CONTENT>",
    "<WS>",
    "<WS_OPT>",
    "\"{\"",
    "<PLAIN_TEXT>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<ATTRIBUTE_NAME>",
    "\"=\"",
    "\"\\\"\"",
    "\">\"",
    "\"/>\"",
    "\"{\"",
    "\"\\\"\"",
    "<ATTRIBUTE_TEXT>",
    "\"->\"",
    "\"?\"",
    "\":\"",
    "\"==\"",
    "\"!=\"",
    "\">=\"",
    "\">\"",
    "\"<=\"",
    "\"<\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"!\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\"=\"",
    "\"#(\"",
  };

}
