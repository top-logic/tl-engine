com.top_logic.graphic.blocks.server.component.BlocksComponent = Blocks component
com.top_logic.graphic.blocks.server.component.BlocksComponent.tooltip = <i>Component</i> displaying a <i>block model</i>.
com.top_logic.graphic.flow.server.ui.FlowChartComponent = Flow chart component
com.top_logic.graphic.flow.server.ui.FlowChartComponent.Config.context-menu-factory = Context menu factory
com.top_logic.graphic.flow.server.ui.FlowChartComponent.Config.context-menu-factory.tooltip = The provider for the diagram elemnt's context menu.
com.top_logic.graphic.flow.server.ui.FlowChartComponent.tooltip = <i>Component</i> displaying a flow chart.
com.top_logic.graphic.flow.server.ui.ScriptFlowChartBuilder = Script flow chart builder
com.top_logic.graphic.flow.server.ui.ScriptFlowChartBuilder.Config.HandlerDefinition.name.tooltip = Unique name of the defined handler. <p> The defined handler is available to the create chart script as an implicitly defined variable with that name. When defining a handler with name <code>onClick</code>, this handler is available to the script as variable <code>$onClick</code>. </p>
com.top_logic.graphic.flow.server.ui.ScriptFlowChartBuilder.Config.create-chart = Create chart
com.top_logic.graphic.flow.server.ui.ScriptFlowChartBuilder.Config.create-chart.tooltip = Function creating a flow chart form a given model.
com.top_logic.graphic.flow.server.ui.ScriptFlowChartBuilder.Config.handlers = Handlers
com.top_logic.graphic.flow.server.ui.ScriptFlowChartBuilder.Config.handlers.tooltip = Specification of interactions with the diagram contents. <p> The handlers defined here can be bound to diagram elements in the create chart script by referencing them as implicitly defined variables. </p>
com.top_logic.graphic.flow.server.ui.ScriptFlowChartBuilder.Config.observed = Observed
com.top_logic.graphic.flow.server.ui.ScriptFlowChartBuilder.Config.observed.tooltip = Function that retrieves the business objects to observe for change for a given diagram element's user object. <p> The function receives a diagram element as first argument and the component's model as second argument. </p> <pre> <code>userObject -> model -> ...</code> </pre> <p> The diagram gets updated, whenever an observed object gets changed or deleted. </p> <p> If not given, the default is to observe the user object of diagram elements. This would correspond to the function: </p> <pre> <code>userObject -> userObject</code> </pre>
com.top_logic.graphic.flow.server.ui.ScriptFlowChartBuilder.Config.supports-model = Supports model
com.top_logic.graphic.flow.server.ui.ScriptFlowChartBuilder.Config.supports-model.tooltip = Predicate that decides, whether a given model can be displayed as flow chart.
com.top_logic.graphic.flow.server.ui.ScriptFlowChartBuilder.tooltip = <i>Flow chart builder</i> that can be implemented by TL-Script.
com.top_logic.graphic.flow.server.ui.handler.ScriptedClickHandler = Scripted click handler
com.top_logic.graphic.flow.server.ui.handler.ScriptedClickHandler.Config.script = Script
com.top_logic.graphic.flow.server.ui.handler.ScriptedClickHandler.Config.script.tooltip = Function that retrieves the <i>click target</i> diagram element. <p> The function's result is passed to configured UI actions. </p> <p> If no script is provided, the user object of the clicked diagram element is used as input for further UI actions. </p>
com.top_logic.graphic.flow.server.ui.handler.ScriptedClickHandler.tooltip = <i>Click handler</i> that can be implemented in TL-Script.
com.top_logic.graphic.flow.server.ui.handler.ScriptedDropHandler = Scripted drop handler
com.top_logic.graphic.flow.server.ui.handler.ScriptedDropHandler.Config.script = Script
com.top_logic.graphic.flow.server.ui.handler.ScriptedDropHandler.Config.script.tooltip = Function that retrieves the <i>drop region</i> diagram element, the dragged objects and the model of the drag source from which the drag operation was initiated. <pre> <code>node -> dragged -> source -> ...</code> </pre> <p> The function's result is passed to configured UI actions. </p> <p> If no script is provided, a list with the user object of the clicked diagram element as first element and the list of dragged objects as second element is used as input for further UI actions. </p>
com.top_logic.graphic.flow.server.ui.handler.ScriptedDropHandler.tooltip = <i>Server drop handler</i> that can be implemented in TL-Script.
