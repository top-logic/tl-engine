class.com.top_logic.model.search.expr.I18NConstants.ERROR_NOT_A_TYPE__VAL_EXPR = Der Wert "{0}" ist kein Typ im Ausdruck: {1}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_AMBIGUOUS_ARGUMENT__FUN_NAME = Ein Argument darf in einem Funktionsaufruf nur einmal definiert werden. Das Argument "{1}" der Funktion "{0}" ist mehr als einmal definiert.
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_INVALID_NAMED_ARGUMENT_ORDER = Positionale Argumente dürfen nur am Anfang der Argumentliste stehen.
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_MANDATORY_ARGUMENT__ARG_EXPR = Das Argument "{0}" ist im Ausdruck "{1}" obligatorisch.
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_NO_NAMED_ARGUMENTS__FUN_NAME = Es gibt kein benanntes Argument "{1}" in der Funktion "{0}". Die Funktion hat keine benannten Argumente.
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_NO_SUCH_NAMED_ARGUMENT__FUN_NAME_AVAIL = Kein solches benanntes Argument "{1}" in Funktion "{0}". Mögliche Argumente sind: {2}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_SINGLE_ARGUMENT_EXPECTED__CNT_EXPR = Es wird nur ein einziges Argument erwartet, aber es wurden {0} eingegeben: {1}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_TWO_ARGUMENTS_EXPECTED__CNT_EXPR = Zwei Argumente werden erwartet, aber {0} wurden eingegeben: {1}
class.com.top_logic.model.search.expr.config.operations.binary.I18NConstants.ERROR_INVALID_CONTENT_TYPE_SPECIFIED__VALUE_MSG = Ungültiger Inhaltstyp "{0}" angegeben: {1}
class.com.top_logic.model.search.expr.config.operations.revision.I18NConstants.ERROR_NEGATIVE_COMMIT_NR__EXPR_COMMIT = Die angegebene Commit-Nummer {1} darf nicht negativ sein: {0}
class.com.top_logic.model.search.expr.config.operations.revision.I18NConstants.ERROR_REVISION_ARGUMENT_NULL__EXPR = Die angegebene Revision ist null in: {0}.
class.com.top_logic.model.search.expr.config.operations.revision.I18NConstants.ERROR_UNKNOWN_COMMIT_NR__EXPR_COMMIT = Die angegebene Commit-Nummer {1} ist unbekannt: {0}
class.com.top_logic.model.search.providers.I18NConstants.CREATE_OBJECT_DEFAULT_LABEL = Objekt erstellen
class.com.top_logic.model.search.providers.I18NConstants.CREATE_OBJECT_DEFAULT_LABEL.help = Standardbeschriftung für das Öffnen eines generischen Erstellungsdialogs.
class.com.top_logic.model.search.providers.I18NConstants.NEW_LINE = Neue Zeile
class.com.top_logic.model.search.ui.selector.I18NConstants.EXECUTING_STORED_QUERY_FAILED = Das Ausführen der gespeicherten Abfrage ist fehlgeschlagen
com.top_logic.model.search.ModelBasedSearch = Modellbasierte Suche
com.top_logic.model.search.ModelBasedSearch$SearchConfig = Suchvorgang
com.top_logic.model.search.ModelBasedSearch$SearchConfig.tooltip = Die Konfiguration einer modellbasierten Suche. <p> Es können verschiedene Suchen (z.B.: normaler Benutzer, Power-User, Entwickler) in einer Anwendung durchgeführt werden. Um diese Suchen zu konfigurieren, wird die eigentliche Suchkonfiguration in diese Schnittstelle extrahiert, und das <i>modellbasierte Suchmodul</i> kann verschiedene dieser Konfigurationen haben. </p>
com.top_logic.model.search.ModelBasedSearch.Config.searches = Suchvorgänge
com.top_logic.model.search.ModelBasedSearch.Config.searches.tooltip = In einer Anwendung kann es verschiedene Suchvorgänge geben (z.B.: normaler Benutzer, Power-User, Entwickler).
com.top_logic.model.search.ModelBasedSearch.SearchConfig.additional-predefined-parameters = Zusätzliche vordefinierte Parameter
com.top_logic.model.search.ModelBasedSearch.SearchConfig.additional-predefined-parameters.tooltip = <i>Anbieter-Suchausdruck-Builder</i> zusätzlich zu den in <i>Methoden</i> registrierten<i> (Such-Builder-Konfiguration</i>).
com.top_logic.model.search.ModelBasedSearch.SearchConfig.combinators = Kombinatoren
com.top_logic.model.search.ModelBasedSearch.SearchConfig.combinators.tooltip = Die <i>Suchausdruck-Kombinatoren</i>, die bei der Suche verfügbar sein sollten.
com.top_logic.model.search.ModelBasedSearch.SearchConfig.disable-optimizations = Optimierungen deaktivieren
com.top_logic.model.search.ModelBasedSearch.SearchConfig.disable-optimizations.tooltip = Aktivieren Sie Optimierungen. <p> Das Deaktivieren der Optimierungen kann z.B. für das Debugging nützlich sein. </p>
com.top_logic.model.search.ModelBasedSearch.SearchConfig.disabled-predefined-parameters = Deaktivierte vordefinierte Parameter
com.top_logic.model.search.ModelBasedSearch.SearchConfig.disabled-predefined-parameters.tooltip = <i>Anbieter-Suchausdruck-Builder</i> zum Deaktivieren von den in <i>Methoden</i> registrierten<i> Suchausdrücken</i><i> (Such-Builder-Konfiguration</i>).
com.top_logic.model.search.ModelBasedSearch.SearchConfig.include-subtype-usages = Subtyp-Verwendungen einbeziehen
com.top_logic.model.search.ModelBasedSearch.SearchConfig.include-subtype-usages.tooltip = Ob Verwendungen von Subtypen einbezogen werden sollen, wenn Verwendungen eines Typs angezeigt werden.
com.top_logic.model.search.ModelBasedSearch.SearchConfig.max-attributes-shown = Maximal angezeigte Attribute
com.top_logic.model.search.ModelBasedSearch.SearchConfig.max-attributes-shown.tooltip = Wenn für einen Typ keine Haupteigenschaften definiert sind, ist dies die maximale Anzahl von Attributen für <i>Attribut</i><i> (Attributfilter</i>), die angeboten werden, bevor der Benutzer den <i>Attributfilter</i> auswählt. <p> Die anderen Attribute werden angeboten, sobald der Benutzer den <i>Attributfilter</i> auswählt. </p>
com.top_logic.model.search.ModelBasedSearch.tooltip = Das Modul der modellbasierten Suche. <p> Enthält die Konfigurationsoptionen für die Suche. Dies hat zwei Vorteile. Erstens wären sie ohne dieses Modul auf alle Unterpakete verteilt, die z.B. in Optionsanbietern versteckt sind. Zweitens erlaubt dies mehrere Suchkonfigurationen. Zum Beispiel eine für die normalen Benutzer, eine für Power-User und eine für Entwickler. </p>
com.top_logic.model.search.annotate.CodeEditorLanguage = Sprache des Code-Editors
com.top_logic.model.search.annotate.CodeEditorLanguage.tooltip = <i>Attribut-Annotation</i>, die für ein <code>Code</code> gesetzt werden muss, um die Sprache des Code-Editors auszuwählen.
com.top_logic.model.search.annotate.CodeEditorLanguage.value = Wert
com.top_logic.model.search.annotate.CodeEditorLanguage.value.tooltip = Die Sprache des Code-Editors, die für das annotierte Attribut verwendet werden soll.
com.top_logic.model.search.annotate.TLNumberOfEditorRows = Anzahl der Editorzeilen
com.top_logic.model.search.annotate.TLNumberOfEditorRows.max = Maximum
com.top_logic.model.search.annotate.TLNumberOfEditorRows.max.tooltip = Maximale Anzahl von Editorzeilen, die angezeigt werden.
com.top_logic.model.search.annotate.TLNumberOfEditorRows.min = Minimum
com.top_logic.model.search.annotate.TLNumberOfEditorRows.min.tooltip = Mindestanzahl der Editorzeilen, die angezeigt werden.
com.top_logic.model.search.annotate.TLNumberOfEditorRows.tooltip = <i>Anmerkung</i>, die die Anzahl der angezeigten Zeilen für Expr-Attribute definiert.
com.top_logic.model.search.annotate.TLSearchOptions = Suchoptionen
com.top_logic.model.search.annotate.TLSearchOptions$ConfiguredLiterals = Konfigurierte Literale
com.top_logic.model.search.annotate.TLSearchOptions$ConfiguredLiterals.tooltip = Implementierung von <i>Standardliteralen</i><i> (Suchoptionen</i>).
com.top_logic.model.search.annotate.TLSearchOptions$ConfiguredOperators = Konfigurierte Operatoren
com.top_logic.model.search.annotate.TLSearchOptions$ConfiguredOperators.tooltip = Implementierung <i>von Standardoperatoren</i><i> (Suchoptionen</i>).
com.top_logic.model.search.annotate.TLSearchOptions$DummyValueContext = Dummy-Werte-Kontext
com.top_logic.model.search.annotate.TLSearchOptions$DummyValueContext.tooltip = Implementierung eines<i> Wertekontextes</i>, der die Konfiguration von <i>Suchausdrücken</i> innerhalb von Modellannotationen ermöglicht.
com.top_logic.model.search.annotate.TLSearchOptions.ConfiguredLiterals.Config.literals = Literarische Werke
com.top_logic.model.search.annotate.TLSearchOptions.ConfiguredOperators.Config.operators = Betreiber
com.top_logic.model.search.annotate.TLSearchOptions.literals = Literarische Werke
com.top_logic.model.search.annotate.TLSearchOptions.literals.tooltip = Fabrik für Wertoptionen in der Such-UI für den annotierten <i>primitiven</i> Typ.
com.top_logic.model.search.annotate.TLSearchOptions.operators = Betreiber
com.top_logic.model.search.annotate.TLSearchOptions.operators.tooltip = Fabrik für <i>Operator-Optionen</i> in der Such-UI für den annotierten <i>primitiven</i> Typ.
com.top_logic.model.search.annotate.TLSearchOptions.tooltip = Such-Anpassung für <i>primitive</i> Typen.
com.top_logic.model.search.constraint.DeleteConstraintByExpression = Lösch-Beschränkung über Ausdruck
com.top_logic.model.search.constraint.DeleteConstraintByExpression.Config.expr = Funktion
com.top_logic.model.search.constraint.DeleteConstraintByExpression.Config.expr.tooltip = Funktion, die auf ein Objekt aufgerufen wird, das auf Löschung geprüft wird. <p> Um das Löschen zu erlauben, muss <code>true</code> oder <code>null</code> zurückgegeben werden. Jeder andere Wert verweigert die Löschung. Eine zurückgegebene String-Meldung oder ein Ressourcenschlüssel, der erklärt, warum die Instanz nicht gelöscht werden kann, wird verwendet, um dem Benutzer zu zeigen, warum die Aktion nicht ausgeführt werden konnte. </p>
com.top_logic.model.search.constraint.DeleteConstraintByExpression.tooltip = <i>Beschränkung löschen</i>, die durch einen Suchausdruck konfiguriert werden kann.
com.top_logic.model.search.expr.Add$Builder = Erbauer
com.top_logic.model.search.expr.Add$Builder.tooltip = <i>Methoden-Builder</i> erstellt <i>add</i>.
com.top_logic.model.search.expr.ArithmeticExpr$Op = Op
com.top_logic.model.search.expr.ArithmeticExpr$Op.tooltip = Der arithmetische Operator.
com.top_logic.model.search.expr.ArithmeticExpr.Op.ADD = Addition
com.top_logic.model.search.expr.ArithmeticExpr.Op.ADD.tooltip = Addition
com.top_logic.model.search.expr.ArithmeticExpr.Op.DIV = Division
com.top_logic.model.search.expr.ArithmeticExpr.Op.DIV.tooltip = Abteilung
com.top_logic.model.search.expr.ArithmeticExpr.Op.MOD = Modulo-Operation
com.top_logic.model.search.expr.ArithmeticExpr.Op.MOD.tooltip = Modulo-Operation
com.top_logic.model.search.expr.ArithmeticExpr.Op.MUL = Multiplikation
com.top_logic.model.search.expr.ArithmeticExpr.Op.MUL.tooltip = Multiplikation
com.top_logic.model.search.expr.ArithmeticExpr.Op.SUB = Substraktion
com.top_logic.model.search.expr.ArithmeticExpr.Op.SUB.tooltip = Subtraktion
com.top_logic.model.search.expr.CalendarField$Builder = Erbauer
com.top_logic.model.search.expr.CalendarField$Builder.tooltip = <i>Methodenersteller</i>, der ein <i>Kalenderfeld</i> erstellt.
com.top_logic.model.search.expr.CalendarField$Field = Bereich
com.top_logic.model.search.expr.CalendarField$Field.tooltip = Angabe des <i>Kalenderfeldes</i>, auf das zugegriffen werden soll.
com.top_logic.model.search.expr.CalendarField.Builder.Config.field = Bereich
com.top_logic.model.search.expr.CalendarField.Builder.Config.field.tooltip = Das <i>Kalenderfeld</i> für den Zugriff.
com.top_logic.model.search.expr.CalendarField.Field.AM_PM = Am pm
com.top_logic.model.search.expr.CalendarField.Field.AM_PM.tooltip = Siehe <code>9</code>
com.top_logic.model.search.expr.CalendarField.Field.DAY = Tag
com.top_logic.model.search.expr.CalendarField.Field.DAY.tooltip = Siehe <code>5</code>
com.top_logic.model.search.expr.CalendarField.Field.DAY_OF_WEEK = Tag der Woche
com.top_logic.model.search.expr.CalendarField.Field.DAY_OF_WEEK.tooltip = Siehe <code>7</code>
com.top_logic.model.search.expr.CalendarField.Field.DAY_OF_WEEK_IN_MONTH = Wochentag im Monat
com.top_logic.model.search.expr.CalendarField.Field.DAY_OF_WEEK_IN_MONTH.tooltip = Siehe <code>8</code>
com.top_logic.model.search.expr.CalendarField.Field.DAY_OF_YEAR = Tag des Jahres
com.top_logic.model.search.expr.CalendarField.Field.DAY_OF_YEAR.tooltip = Siehe <code>6</code>
com.top_logic.model.search.expr.CalendarField.Field.DST_OFFSET = Dst-Versatz
com.top_logic.model.search.expr.CalendarField.Field.DST_OFFSET.tooltip = Siehe <code>16</code>
com.top_logic.model.search.expr.CalendarField.Field.ERA = Ära
com.top_logic.model.search.expr.CalendarField.Field.ERA.tooltip = Siehe <code>0</code>
com.top_logic.model.search.expr.CalendarField.Field.HOUR = Stunde
com.top_logic.model.search.expr.CalendarField.Field.HOUR.tooltip = Siehe <code>11</code>
com.top_logic.model.search.expr.CalendarField.Field.HOUR_12 = Stunde 12
com.top_logic.model.search.expr.CalendarField.Field.HOUR_12.tooltip = Siehe <code>10</code>
com.top_logic.model.search.expr.CalendarField.Field.MILLISECOND = Millisekunde
com.top_logic.model.search.expr.CalendarField.Field.MILLISECOND.tooltip = Siehe <code>14</code>
com.top_logic.model.search.expr.CalendarField.Field.MINUTE = Minute
com.top_logic.model.search.expr.CalendarField.Field.MINUTE.tooltip = Siehe <code>12</code>
com.top_logic.model.search.expr.CalendarField.Field.MONTH = Monat
com.top_logic.model.search.expr.CalendarField.Field.MONTH.tooltip = Siehe <code>2</code>
com.top_logic.model.search.expr.CalendarField.Field.SECOND = Zweite
com.top_logic.model.search.expr.CalendarField.Field.SECOND.tooltip = Siehe <code>13</code>
com.top_logic.model.search.expr.CalendarField.Field.WEEK = Woche
com.top_logic.model.search.expr.CalendarField.Field.WEEK.tooltip = Siehe <code>3</code>
com.top_logic.model.search.expr.CalendarField.Field.WEEK_OF_MONTH = Woche des Monats
com.top_logic.model.search.expr.CalendarField.Field.WEEK_OF_MONTH.tooltip = Siehe <code>4</code>
com.top_logic.model.search.expr.CalendarField.Field.YEAR = Jahr
com.top_logic.model.search.expr.CalendarField.Field.YEAR.tooltip = Siehe <code>1</code>
com.top_logic.model.search.expr.CalendarField.Field.ZONE_OFFSET = Zonenversatz
com.top_logic.model.search.expr.CalendarField.Field.ZONE_OFFSET.tooltip = Siehe <code>15</code>
com.top_logic.model.search.expr.CalendarUpdate$Builder = Erbauer
com.top_logic.model.search.expr.CalendarUpdate$Builder.tooltip = <i>Methodenersteller</i>, der eine <i>Kalenderaktualisierung</i> erstellt.
com.top_logic.model.search.expr.CalendarUpdate$Op = Op
com.top_logic.model.search.expr.CalendarUpdate$Op.tooltip = <i>Kalender-Aktualisierungsvorgang</i>.
com.top_logic.model.search.expr.CalendarUpdate.Builder.Config.field = Bereich
com.top_logic.model.search.expr.CalendarUpdate.Builder.Config.field.tooltip = Das zu aktualisierende <i>Kalenderfeld</i>.
com.top_logic.model.search.expr.CalendarUpdate.Builder.Config.op = Op
com.top_logic.model.search.expr.CalendarUpdate.Builder.Config.op.tooltip = Die durchzuführende Operation.
com.top_logic.model.search.expr.CalendarUpdate.Op.ADD = hinzufügen
com.top_logic.model.search.expr.CalendarUpdate.Op.ADD.tooltip = Fügt den angegebenen Wert zum angegebenen <i>Kalenderfeld</i> hinzu.
com.top_logic.model.search.expr.CalendarUpdate.Op.SET = einstellen
com.top_logic.model.search.expr.CalendarUpdate.Op.SET.tooltip = Setzt das <i>Kalenderfeld</i> auf den neuen Wert.
com.top_logic.model.search.expr.CompareKind = Art vergleichen
com.top_logic.model.search.expr.CompareKind.GE = Ge
com.top_logic.model.search.expr.CompareKind.GE.tooltip = Die linke Seite ist größer oder gleich der rechten Seite.
com.top_logic.model.search.expr.CompareKind.GT = Gt
com.top_logic.model.search.expr.CompareKind.GT.tooltip = Die linke Seite ist auf der rechten Seite größer.
com.top_logic.model.search.expr.CompareKind.LE = Le
com.top_logic.model.search.expr.CompareKind.LE.tooltip = Die linke Seite ist kleiner oder gleich der rechten Seite.
com.top_logic.model.search.expr.CompareKind.LT = Leutnant
com.top_logic.model.search.expr.CompareKind.LT.tooltip = Die linke Seite ist kleiner als die rechte Seite.
com.top_logic.model.search.expr.CompareKind.tooltip = Art der <i>Vergleichsoperatoren</i> mit vollständig vergleichbarem Vergleich.
com.top_logic.model.search.expr.Concat$Builder = Erbauer
com.top_logic.model.search.expr.Concat$Builder.tooltip = <i>Methoden-Builder</i>, der <i>Konkat</i> erstellt.
com.top_logic.model.search.expr.CreateObject$Builder = Erbauer
com.top_logic.model.search.expr.CreateObject$Builder.tooltip = Builder, der einen <i>Objektausdruck</i> erstellt.
com.top_logic.model.search.expr.DateExpr$Builder = Erbauer
com.top_logic.model.search.expr.DateExpr$Builder.tooltip = <i>Methodenersteller</i>, der <i>Datumsexpr.</i>
com.top_logic.model.search.expr.DateFormatExpr$Builder = Erbauer
com.top_logic.model.search.expr.DateFormatExpr$Builder.tooltip = <i>Methoden-Builder</i> für <i>Datumsformat expr.</i>
com.top_logic.model.search.expr.DateTimeExpr$Builder = Erbauer
com.top_logic.model.search.expr.DateTimeExpr$Builder.tooltip = <i>Methoden-Builder</i>, der <i>Datum und Uhrzeit expr.</i>
com.top_logic.model.search.expr.DeleteObject$Builder = Ersteller
com.top_logic.model.search.expr.DeleteObject$Builder.tooltip = Builder, der einen Ausdruck für ein <i>Löschobjekt</i> erstellt.
com.top_logic.model.search.expr.DynamicAll$Builder = Ersteller
com.top_logic.model.search.expr.DynamicAll$Builder.tooltip = <i>Einfacher Methodenersteller</i>, der <i>alles dynamisch</i> erstellt.
com.top_logic.model.search.expr.DynamicGet$Builder = Erbauer
com.top_logic.model.search.expr.DynamicGet$Builder.tooltip = <i>Einfacher Methoden-Builder</i>, der <i>dynamische Gets</i> erstellt.
com.top_logic.model.search.expr.DynamicReferers$Builder = Ersteller
com.top_logic.model.search.expr.DynamicReferers$Builder.tooltip = <i>Einfacher Methodenbauer</i> zum Erstellen <i>dynamischer Referer</i>.
com.top_logic.model.search.expr.DynamicSet$Builder = Ersteller
com.top_logic.model.search.expr.DynamicSet$Builder.tooltip = <i>Einfacher Methodenbauer</i>, der ein <i>dynamisches Set</i> erstellt.
com.top_logic.model.search.expr.ElementAt$Builder = Erbauer
com.top_logic.model.search.expr.ElementAt$Builder.tooltip = <i>Methoden-Builder</i>, der <i>Element at</i> erstellt.
com.top_logic.model.search.expr.ElementIndex$Builder = Erbauer
com.top_logic.model.search.expr.ElementIndex$Builder.tooltip = <i>Method Builder</i> erstellt <i>Elementindex</i>.
com.top_logic.model.search.expr.FirstElement$Builder = Erbauer
com.top_logic.model.search.expr.FirstElement$Builder.tooltip = <i>Method Builder</i> erstellt <i>erstes Element</i>.
com.top_logic.model.search.expr.FormatExpr$Builder = Erbauer
com.top_logic.model.search.expr.FormatExpr$Builder.tooltip = <i>Methoden-Builder</i> für <i>Formatausdrucke</i>.
com.top_logic.model.search.expr.Info$Builder = Erbauer
com.top_logic.model.search.expr.Info$Builder.tooltip = <i>Method Builder</i> erstellt <i>Informationen</i>.
com.top_logic.model.search.expr.LastElement$Builder = Erbauer
com.top_logic.model.search.expr.LastElement$Builder.tooltip = <i>Methoden-Builder</i>, der das <i>letzte Element</i> erstellt.
com.top_logic.model.search.expr.Log$Builder = Ersteller
com.top_logic.model.search.expr.Log$Builder.tooltip = <i>Method builder</i> creating <i>log</i>.
com.top_logic.model.search.expr.MessageFormatExpr$Builder = Erbauer
com.top_logic.model.search.expr.MessageFormatExpr$Builder.tooltip = <i>Methoden-Builder</i> für <i>Nachrichtenformat expr.</i>
com.top_logic.model.search.expr.NumerFormatExpr$Builder = Erbauer
com.top_logic.model.search.expr.NumerFormatExpr$Builder.tooltip = <i>Methoden-Builder</i> für <i>Zahlenformat expr.</i>
com.top_logic.model.search.expr.ParseExpr$Builder = Erbauer
com.top_logic.model.search.expr.ParseExpr$Builder.tooltip = <i>Methoden-Builder</i> für <i>Parse-Exprs</i>.
com.top_logic.model.search.expr.ReduceOperation$Builder = Erbauer
com.top_logic.model.search.expr.ReduceOperation$Builder.tooltip = Builder, der einen <i>Objektausdruck</i> erstellt.
com.top_logic.model.search.expr.ResolveModelPart$Builder = Bauherr
com.top_logic.model.search.expr.ResolveModelPart$Builder.tooltip = <i>Methodenersteller</i>, der das <i>Modellteil auflöst</i>.
com.top_logic.model.search.expr.Reverse$Builder = Bauherr
com.top_logic.model.search.expr.Reverse$Builder.tooltip = <i>Methodenersteller</i> erstellt <i>Rückwärtsgang</i>.
com.top_logic.model.search.expr.Sleep$Builder = Bauherr
com.top_logic.model.search.expr.Sleep$Builder.tooltip = <i>Methodenersteller</i>, der <i>Schlaf</i> erzeugt.
com.top_logic.model.search.expr.SubList$Builder = Erbauer
com.top_logic.model.search.expr.SubList$Builder.tooltip = <i>Methodenersteller</i>, der <i>eine Teilliste</i> erstellt.
com.top_logic.model.search.expr.Throw$Builder = Erbauer
com.top_logic.model.search.expr.Throw$Builder.tooltip = <i>Methoden-Builder</i>, der <i>Wurf</i> erzeugt.
com.top_logic.model.search.expr.ToDate$Builder = Erbauer
com.top_logic.model.search.expr.ToDate$Builder.tooltip = <i>Bisheriger</i> Ersteller der<i> Methode</i>.
com.top_logic.model.search.expr.ToMillis$Builder = Erbauer
com.top_logic.model.search.expr.ToMillis$Builder.tooltip = <i>Method Builder</i> erstellt <i>bis Millis</i>.
com.top_logic.model.search.expr.ToString$Builder = Erbauer
com.top_logic.model.search.expr.ToString$Builder.tooltip = <i>Methoden-Builder</i> für <i>to string</i>.
com.top_logic.model.search.expr.ToSystemCalendar$Builder = Erbauer
com.top_logic.model.search.expr.ToSystemCalendar$Builder.tooltip = <i>Methodenersteller</i>, der einen <i>To-System-Kalender</i> erstellt.
com.top_logic.model.search.expr.ToUserCalendar$Builder = Erbauer
com.top_logic.model.search.expr.ToUserCalendar$Builder.tooltip = <i>Method Builder</i> erstellt <i>einen Benutzerkalender</i>.
com.top_logic.model.search.expr.config.SearchBuilder = Suchausdruck-Generator
com.top_logic.model.search.expr.config.SearchBuilder.Config.method-resolvers = Methodenauflöser
com.top_logic.model.search.expr.config.SearchBuilder.Config.method-resolvers.tooltip = Auflöser für dynamisch definierte Methoden.
com.top_logic.model.search.expr.config.SearchBuilder.Config.methods = Methoden
com.top_logic.model.search.expr.config.SearchBuilder.Config.methods.tooltip = Methoden-Plug-ins.
com.top_logic.model.search.expr.config.SearchBuilder.tooltip = <i>Expression Visitor</i>, der aus einem <i>Expression</i> Parse Tree einen operationalen <i>Suchausdruck</i> erzeugt.
com.top_logic.model.search.expr.config.dom.Expr$Add = hinzufügen
com.top_logic.model.search.expr.config.dom.Expr$Add.tooltip = Ergänzung.
com.top_logic.model.search.expr.config.dom.Expr$And = Und
com.top_logic.model.search.expr.config.dom.Expr$And.tooltip = Boolescher und Operator.
com.top_logic.model.search.expr.config.dom.Expr$Apply = Bewerben Sie sich unter
com.top_logic.model.search.expr.config.dom.Expr$Apply.tooltip = Anwendung der Funktion.
com.top_logic.model.search.expr.config.dom.Expr$Arg = Argument
com.top_logic.model.search.expr.config.dom.Expr$Arg.tooltip = Ein Argument für einen (eingebauten) Methodenaufruf.
com.top_logic.model.search.expr.config.dom.Expr$Assign = beauftragen
com.top_logic.model.search.expr.config.dom.Expr$Assign.tooltip = Bindung des Wertes eines Ausdrucks an eine lokale Variable.
com.top_logic.model.search.expr.config.dom.Expr$At = Unter
com.top_logic.model.search.expr.config.dom.Expr$At.tooltip = Indexzugriff auf einen Sammelwert.
com.top_logic.model.search.expr.config.dom.Expr$Attribute = Attribut
com.top_logic.model.search.expr.config.dom.Expr$Attribute.tooltip = Ein Attribut eines <i>Start-Tags</i>.
com.top_logic.model.search.expr.config.dom.Expr$AttributeContents = Attribut-Inhalte
com.top_logic.model.search.expr.config.dom.Expr$AttributeContents.tooltip = Sammlung von <i>Attribut-Inhalten</i> für Attribute, die aus mehreren Teilen zusammengesetzt sind.
com.top_logic.model.search.expr.config.dom.Expr$Block = Block
com.top_logic.model.search.expr.config.dom.Expr$Block.tooltip = Direkter Zugriff auf den Kontextwert.
com.top_logic.model.search.expr.config.dom.Expr$Cmp = Cmp
com.top_logic.model.search.expr.config.dom.Expr$Cmp.tooltip = Operator vergleichen.
com.top_logic.model.search.expr.config.dom.Expr$Define = Definieren Sie
com.top_logic.model.search.expr.config.dom.Expr$Define.tooltip = Bindung eines Wertes an eine Kontextvariable.
com.top_logic.model.search.expr.config.dom.Expr$Div = Abteilung
com.top_logic.model.search.expr.config.dom.Expr$Div.tooltip = Abteilung.
com.top_logic.model.search.expr.config.dom.Expr$EmbeddedExpression = Eingebetteter Ausdruck
com.top_logic.model.search.expr.config.dom.Expr$EmbeddedExpression.tooltip = Ein <i>Ausdruck</i>, der in ein <i>HTML-Makro</i> eingebettet ist.
com.top_logic.model.search.expr.config.dom.Expr$EndTag = Ende-Tag
com.top_logic.model.search.expr.config.dom.Expr$EndTag.tooltip = Ein HTML-End-Tag.
com.top_logic.model.search.expr.config.dom.Expr$Eq = Äq
com.top_logic.model.search.expr.config.dom.Expr$Eq.tooltip = Vergleich der Gleichheit.
com.top_logic.model.search.expr.config.dom.Expr$False = Falsch
com.top_logic.model.search.expr.config.dom.Expr$False.tooltip = Das boolesche <code>false</code>.
com.top_logic.model.search.expr.config.dom.Expr$Html = HTML
com.top_logic.model.search.expr.config.dom.Expr$Html.tooltip = Ein HTML-Makro mit potenziell <i>eingebetteten Ausdrücken</i>.
com.top_logic.model.search.expr.config.dom.Expr$Method = Methode
com.top_logic.model.search.expr.config.dom.Expr$Method.tooltip = Ein Methodenaufruf mit Instanz-Syntax <code>self.method(...)</code>.
com.top_logic.model.search.expr.config.dom.Expr$Mod = Modulo-Operation
com.top_logic.model.search.expr.config.dom.Expr$Mod.tooltip = Modulo-Operation.
com.top_logic.model.search.expr.config.dom.Expr$ModuleLiteral = Modul-Literal
com.top_logic.model.search.expr.config.dom.Expr$ModuleLiteral.tooltip = <i>Modellliteral</i>, das ein <i>Modul</i> referenziert.
com.top_logic.model.search.expr.config.dom.Expr$Mul = Multiplikation
com.top_logic.model.search.expr.config.dom.Expr$Mul.tooltip = Multiplikation.
com.top_logic.model.search.expr.config.dom.Expr$Not = Verneinung
com.top_logic.model.search.expr.config.dom.Expr$Not.tooltip = Boolescher "nicht" Operator.
com.top_logic.model.search.expr.config.dom.Expr$Null = Null
com.top_logic.model.search.expr.config.dom.Expr$Null.tooltip = Das <code>null</code>.
com.top_logic.model.search.expr.config.dom.Expr$NumberLiteral = Zahlenliteral
com.top_logic.model.search.expr.config.dom.Expr$NumberLiteral.tooltip = Eine wörtliche <i>Zahl</i>.
com.top_logic.model.search.expr.config.dom.Expr$Or = Oder
com.top_logic.model.search.expr.config.dom.Expr$Or.tooltip = Boolescher oder Operator.
com.top_logic.model.search.expr.config.dom.Expr$PartLiteral = Teil wörtlich
com.top_logic.model.search.expr.config.dom.Expr$PartLiteral.tooltip = <i>Modell-Literalreferenzierung</i> eines <i>Typenteils</i>.
com.top_logic.model.search.expr.config.dom.Expr$ResKeyLiteral = Ressourcenschlüssel-Literal
com.top_logic.model.search.expr.config.dom.Expr$ResKeyLiteral$LangStringConfig = Konfiguration der Langzeichenkette
com.top_logic.model.search.expr.config.dom.Expr$ResKeyLiteral$LangStringConfig.tooltip = Eine sprachgetaggte Zeichenfolge.
com.top_logic.model.search.expr.config.dom.Expr$ResKeyLiteral.tooltip = Ein String-Literal in mehreren Sprachen.
com.top_logic.model.search.expr.config.dom.Expr$ResKeyReference = Schlüsselreferenz der Ressource
com.top_logic.model.search.expr.config.dom.Expr$ResKeyReference.tooltip = Ein Verweis auf einen <i>Ressourcenschlüssel</i>.
com.top_logic.model.search.expr.config.dom.Expr$SingletonLiteral = Singleton-Wortlaut
com.top_logic.model.search.expr.config.dom.Expr$SingletonLiteral.tooltip = <i>Modell,</i> das<i> wörtlich</i> auf ein Singleton verweist.
com.top_logic.model.search.expr.config.dom.Expr$StartTag = Start-Tag
com.top_logic.model.search.expr.config.dom.Expr$StartTag.tooltip = Ein HTML-Start-Tag.
com.top_logic.model.search.expr.config.dom.Expr$StaticMethod = Statisches Verfahren
com.top_logic.model.search.expr.config.dom.Expr$StaticMethod.tooltip = Ein Methodenaufruf mit statischer Syntax <code>method(...)</code>.
com.top_logic.model.search.expr.config.dom.Expr$StringLiteral = String-Literal
com.top_logic.model.search.expr.config.dom.Expr$StringLiteral.tooltip = Ein <i>String-Literal</i>.
com.top_logic.model.search.expr.config.dom.Expr$Sub = Subtraktion
com.top_logic.model.search.expr.config.dom.Expr$Sub.tooltip = Subtraktion.
com.top_logic.model.search.expr.config.dom.Expr$TextContent = Inhalt des Textes
com.top_logic.model.search.expr.config.dom.Expr$TextContent.tooltip = Textlicher Inhalt eines <i>HTML-Makros</i>.
com.top_logic.model.search.expr.config.dom.Expr$True = Wahr
com.top_logic.model.search.expr.config.dom.Expr$True.tooltip = Das boolesche <code>true</code>.
com.top_logic.model.search.expr.config.dom.Expr$Tuple = Tupel
com.top_logic.model.search.expr.config.dom.Expr$Tuple$Coord = Coord
com.top_logic.model.search.expr.config.dom.Expr$Tuple$Coord.tooltip = Eine einzelne Koordinate, die Werte in einem <i>Tupel</i> erzeugt.
com.top_logic.model.search.expr.config.dom.Expr$Tuple.tooltip = Kreuzprodukt von Mengenausdrücken zur Erstellung von Tupellisten.
com.top_logic.model.search.expr.config.dom.Expr$TypeLiteral = Buchstabieren
com.top_logic.model.search.expr.config.dom.Expr$TypeLiteral.tooltip = <i>Modellliteral</i>, das einen <i>Typ</i> referenziert.
com.top_logic.model.search.expr.config.dom.Expr$Var = Variable
com.top_logic.model.search.expr.config.dom.Expr$Var.tooltip = Der Wert einer Variablen.
com.top_logic.model.search.expr.config.dom.Expr$Wrapped = Eingepackt
com.top_logic.model.search.expr.config.dom.Expr$Wrapped.tooltip = <i>Ausdrucks-Wrapper</i>. <p> Nützlich für die Eigenschaft der obersten Ebene eines Konfigurationselements, um die Verwendung benutzerdefinierter Tagnamen zur Auswahl des Typs der obersten Ebene oder als Ergebnis eines Parsers zu ermöglichen, um den ursprünglich formatierten Quellcode beizubehalten. </p>
com.top_logic.model.search.expr.config.dom.Expr.AbstractMethod.args = Argumente
com.top_logic.model.search.expr.config.dom.Expr.AbstractMethod.args.tooltip = Die Argumente für den Aufruf.
com.top_logic.model.search.expr.config.dom.Expr.AbstractMethod.name = Name
com.top_logic.model.search.expr.config.dom.Expr.AbstractMethod.name.tooltip = Der Name der aufzurufenden Methode.
com.top_logic.model.search.expr.config.dom.Expr.AbstractTag.tag = Tag
com.top_logic.model.search.expr.config.dom.Expr.AbstractTag.tag.tooltip = Der Tag-Name.
com.top_logic.model.search.expr.config.dom.Expr.AbstractTypeLiteral.module = Modul
com.top_logic.model.search.expr.config.dom.Expr.AbstractTypeLiteral.module.tooltip = Das besitzende <i>Modul</i> des referenzierten Modellteils.
com.top_logic.model.search.expr.config.dom.Expr.Apply.arg = Arg
com.top_logic.model.search.expr.config.dom.Expr.Apply.arg.tooltip = Das Argument, auf <i>Fun</i> überzugehen.
com.top_logic.model.search.expr.config.dom.Expr.Apply.fun = Funktion
com.top_logic.model.search.expr.config.dom.Expr.Apply.fun.tooltip = Die mit <i>Arg</i> aufzurufende Funktion.
com.top_logic.model.search.expr.config.dom.Expr.Arg.name = Name
com.top_logic.model.search.expr.config.dom.Expr.Arg.name.tooltip = Ein optionaler Name für den Fall eines benannten Arguments. <p> Wenn der Name <code>null</code> ist, wurde ein Positionsargument angegeben. </p>
com.top_logic.model.search.expr.config.dom.Expr.Arg.value = Wert
com.top_logic.model.search.expr.config.dom.Expr.Arg.value.tooltip = Das Argument Wert.
com.top_logic.model.search.expr.config.dom.Expr.Assign.expr = Ausdruck
com.top_logic.model.search.expr.config.dom.Expr.Assign.expr.tooltip = Der Ausdruck, der den Wert liefert, der mit <i>Name</i> an die Variable gebunden ist.
com.top_logic.model.search.expr.config.dom.Expr.Assign.name = Name
com.top_logic.model.search.expr.config.dom.Expr.Assign.name.tooltip = Der Name der Variablen, die gebunden ist.
com.top_logic.model.search.expr.config.dom.Expr.At.index = Index
com.top_logic.model.search.expr.config.dom.Expr.At.index.tooltip = Der Index-Ausdruck.
com.top_logic.model.search.expr.config.dom.Expr.At.self = Selbst
com.top_logic.model.search.expr.config.dom.Expr.At.self.tooltip = Die Sammlung, auf die zugegriffen wird.
com.top_logic.model.search.expr.config.dom.Expr.Attribute.name = Name
com.top_logic.model.search.expr.config.dom.Expr.Attribute.name.tooltip = Der Attributname.
com.top_logic.model.search.expr.config.dom.Expr.Attribute.value = Wert
com.top_logic.model.search.expr.config.dom.Expr.Attribute.value.tooltip = Der Attributwert.
com.top_logic.model.search.expr.config.dom.Expr.AttributeContents.values = Werte
com.top_logic.model.search.expr.config.dom.Expr.AttributeContents.values.tooltip = Sequenz von <i>Attributinhaltswerten</i>, die innerhalb des Attributs erweitert werden sollen.
com.top_logic.model.search.expr.config.dom.Expr.Block.contents = Inhalt
com.top_logic.model.search.expr.config.dom.Expr.Block.contents.tooltip = Die Inhalte, die nacheinander ausgeführt werden sollen.
com.top_logic.model.search.expr.config.dom.Expr.Cmp.kind = Art
com.top_logic.model.search.expr.config.dom.Expr.Cmp.kind.tooltip = Der durchzuführende Vergleich.
com.top_logic.model.search.expr.config.dom.Expr.Define.expr = Ausdruck
com.top_logic.model.search.expr.config.dom.Expr.Define.expr.tooltip = Der Ausdruck, der mit der variablen Bindung im Umfang zu bewerten ist.
com.top_logic.model.search.expr.config.dom.Expr.Define.name = Name
com.top_logic.model.search.expr.config.dom.Expr.Define.name.tooltip = Der Variablenname, an den der Kontextwert gebunden ist.
com.top_logic.model.search.expr.config.dom.Expr.EmbeddedExpression.expr = Ausdruck
com.top_logic.model.search.expr.config.dom.Expr.EmbeddedExpression.expr.tooltip = Der zu bewertende Ausdruck.
com.top_logic.model.search.expr.config.dom.Expr.Html.contents = Inhalt
com.top_logic.model.search.expr.config.dom.Expr.Html.contents.tooltip = Der HTML-Inhalt.
com.top_logic.model.search.expr.config.dom.Expr.Method.self = Selbst
com.top_logic.model.search.expr.config.dom.Expr.Method.self.tooltip = Der Wert, bei dem die Methode aufgerufen werden soll.
com.top_logic.model.search.expr.config.dom.Expr.ModuleLiteral.name = Name
com.top_logic.model.search.expr.config.dom.Expr.ModuleLiteral.name.tooltip = Der Modulname.
com.top_logic.model.search.expr.config.dom.Expr.Not.expr = Ausdruck
com.top_logic.model.search.expr.config.dom.Expr.Not.expr.tooltip = Der negierte boolesche Wert.
com.top_logic.model.search.expr.config.dom.Expr.NumberLiteral.value = Wert
com.top_logic.model.search.expr.config.dom.Expr.NumberLiteral.value.tooltip = Der wörtliche Wert.
com.top_logic.model.search.expr.config.dom.Expr.Operation.operands = Operanden
com.top_logic.model.search.expr.config.dom.Expr.Operation.operands.tooltip = Die Operanden, die in dieser <i>Operation</i> kombiniert werden sollen.
com.top_logic.model.search.expr.config.dom.Expr.PartLiteral.name = Name
com.top_logic.model.search.expr.config.dom.Expr.PartLiteral.name.tooltip = Der Name des referenzierten <i>Typteils</i>.
com.top_logic.model.search.expr.config.dom.Expr.PartLiteral.type = Typ
com.top_logic.model.search.expr.config.dom.Expr.PartLiteral.type.tooltip = Der Name des besitzenden Typs.
com.top_logic.model.search.expr.config.dom.Expr.ResKeyLiteral.key = Schlüssel
com.top_logic.model.search.expr.config.dom.Expr.ResKeyLiteral.key.tooltip = Name des Schlüssels relativ zum umgebenden <i>Ressourcenschlüssel-Literal</i>.
com.top_logic.model.search.expr.config.dom.Expr.ResKeyLiteral.suffixes = Nachsilben
com.top_logic.model.search.expr.config.dom.Expr.ResKeyLiteral.suffixes.tooltip = \ <i>Suffix-Ressourcenschlüssel-Literal</i>, indiziert durch ihren <i>Schlüssel</i>.
com.top_logic.model.search.expr.config.dom.Expr.ResKeyLiteral.values = Werte
com.top_logic.model.search.expr.config.dom.Expr.ResKeyLiteral.values.tooltip = Übersetzungen in verschiedene Sprachen.
com.top_logic.model.search.expr.config.dom.Expr.ResKeyReference.key = Schlüssel
com.top_logic.model.search.expr.config.dom.Expr.ResKeyReference.key.tooltip = Der Schlüssel.
com.top_logic.model.search.expr.config.dom.Expr.SingletonLiteral.module = Modul
com.top_logic.model.search.expr.config.dom.Expr.SingletonLiteral.module.tooltip = Der Modulname.
com.top_logic.model.search.expr.config.dom.Expr.SingletonLiteral.name = Name
com.top_logic.model.search.expr.config.dom.Expr.SingletonLiteral.name.tooltip = Der Singleton-Name.
com.top_logic.model.search.expr.config.dom.Expr.StartTag.attributes = Eigenschaften
com.top_logic.model.search.expr.config.dom.Expr.StartTag.attributes.tooltip = Attribute des <i>Tags</i>
com.top_logic.model.search.expr.config.dom.Expr.StartTag.empty = Leere
com.top_logic.model.search.expr.config.dom.Expr.StartTag.empty.tooltip = Ob das Tag leer ist (kein explizites End-Tag hat).
com.top_logic.model.search.expr.config.dom.Expr.StringLiteral.value = Wert
com.top_logic.model.search.expr.config.dom.Expr.StringLiteral.value.tooltip = Der wörtliche Wert.
com.top_logic.model.search.expr.config.dom.Expr.TextContent.value = Wert
com.top_logic.model.search.expr.config.dom.Expr.TextContent.value.tooltip = Der wörtliche Text.
com.top_logic.model.search.expr.config.dom.Expr.Tuple.Coord.expr = Ausdruck
com.top_logic.model.search.expr.config.dom.Expr.Tuple.Coord.expr.tooltip = Der <i>Ausdruck</i>, der die Menge der Werte für diese Koordinate erzeugt. <p> Der Ausdruck kann freie Variablen enthalten, die sich auf die Namen der vorangehenden Koordinaten des umgebenden <i>Tupels</i> beziehen. Bei der Ausführung werden diese Variablen an die tatsächlichen Werte der vorangehenden Koordinaten gebunden, um den konkreten Tupelwert zu erzeugen. </p>
com.top_logic.model.search.expr.config.dom.Expr.Tuple.Coord.name = Name
com.top_logic.model.search.expr.config.dom.Expr.Tuple.Coord.name.tooltip = Der Name der Koordinate.
com.top_logic.model.search.expr.config.dom.Expr.Tuple.Coord.optional = Fakultativ
com.top_logic.model.search.expr.config.dom.Expr.Tuple.Coord.optional.tooltip = Ob der Wert <code>null</code> erzeugt wird, wenn <i>Expr</i> die leere Liste erzeugt. <p> Wenn ein <i>Tupel</i> eine nicht-optionale Koordinate hat, deren <i>Expr</i> die leere Liste erzeugt, ist das Ergebnis des <i>Tupelausdrucks</i> leer. </p>
com.top_logic.model.search.expr.config.dom.Expr.Tuple.coords = Koordinaten
com.top_logic.model.search.expr.config.dom.Expr.Tuple.coords.tooltip = Die Koordinaten, aus denen die resultierenden Tupel zusammengesetzt sind.
com.top_logic.model.search.expr.config.dom.Expr.TypeLiteral.name = Name
com.top_logic.model.search.expr.config.dom.Expr.TypeLiteral.name.tooltip = Der Name des Typs.
com.top_logic.model.search.expr.config.dom.Expr.Var.name = Name
com.top_logic.model.search.expr.config.dom.Expr.Var.name.tooltip = Name der referenzierten Kontextvariablen.
com.top_logic.model.search.expr.config.dom.Expr.Wrapped.expr = Ausdruck
com.top_logic.model.search.expr.config.dom.Expr.Wrapped.expr.tooltip = Der verpackte <i>Ausdruck</i>.
com.top_logic.model.search.expr.config.dom.Expr.Wrapped.src = Src
com.top_logic.model.search.expr.config.dom.Expr.Wrapped.src.tooltip = Der Original-Quellcode von <i>Expr</i>, wenn er von einem Parser erzeugt wurde, sonst <code>null</code>.
com.top_logic.model.search.expr.config.operations.AbstractMethodBuilder = Methoden-Builder
com.top_logic.model.search.expr.config.operations.AbstractMethodBuilder.tooltip = Basisklasse für <i>Methoden-Builder</i>.
com.top_logic.model.search.expr.config.operations.AbstractSimpleMethodBuilder = Einfacher Methoden-Builder
com.top_logic.model.search.expr.config.operations.AbstractSimpleMethodBuilder.tooltip = <i>Methoden-Builder</i> ohne zusätzliche Konfiguration.
com.top_logic.model.search.expr.config.operations.AliasResolver$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.AliasResolver$Builder.tooltip = <i>Einfacher Methodenersteller</i>, der einen <i>Alias-Resolver</i> erstellt.
com.top_logic.model.search.expr.config.operations.AllBuilder = Alle Baumeister
com.top_logic.model.search.expr.config.operations.AllBuilder.tooltip = <i>Methoden-Builder</i>, der <i>alle</i> Ausdrücke erstellt.
com.top_logic.model.search.expr.config.operations.ApplyBuilder = Builder anwenden
com.top_logic.model.search.expr.config.operations.ApplyBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>Aufrufausdrücken</i>.
com.top_logic.model.search.expr.config.operations.AssociationNavigationBuilder = Hersteller von Verbandsnavigation
com.top_logic.model.search.expr.config.operations.AssociationNavigationBuilder.tooltip = <i>Methoden-Builder</i>, der <i>Assoziations-Navigationsausdrücke</i> erstellt.
com.top_logic.model.search.expr.config.operations.Attribute$Builder = Erbauer
com.top_logic.model.search.expr.config.operations.Attribute$Builder.tooltip = <i>Method Builder</i> erstellt <i>Attribut</i>.
com.top_logic.model.search.expr.config.operations.ComparatorBuilder = Komparator-Bauer
com.top_logic.model.search.expr.config.operations.ComparatorBuilder.tooltip = Abkürzung zum Erstellen einer Vergleichsfunktion aus einer Zugriffsfunktion.
com.top_logic.model.search.expr.config.operations.CompareBuilder = Builder vergleichen
com.top_logic.model.search.expr.config.operations.CompareBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>Vergleichsausdrücken</i>.
com.top_logic.model.search.expr.config.operations.CompareOpBuilder = Builder vergleichen
com.top_logic.model.search.expr.config.operations.CompareOpBuilder.Config.operator = Betreiber
com.top_logic.model.search.expr.config.operations.CompareOpBuilder.Config.operator.tooltip = Der Vergleichsoperator.
com.top_logic.model.search.expr.config.operations.CompareOpBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>Vergleichsausdrücken</i>.
com.top_logic.model.search.expr.config.operations.Container$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.Container$Builder.tooltip = <i>Methodenersteller</i>, der den <i>Container</i> erstellt.
com.top_logic.model.search.expr.config.operations.ContainerReference$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.ContainerReference$Builder.tooltip = <i>Methodenersteller</i>, der eine <i>Containerreferenz</i> erzeugt.
com.top_logic.model.search.expr.config.operations.ContainsAllBuilder = Enthält alle Builder
com.top_logic.model.search.expr.config.operations.ContainsAllBuilder.tooltip = Die Erstellung des<i> Methoden-Builders</i> <i>enthält alle</i> Ausdrücke.
com.top_logic.model.search.expr.config.operations.ContainsElementBuilder = Enthält Element-Builder
com.top_logic.model.search.expr.config.operations.ContainsElementBuilder.tooltip = Das Erstellen von<i> Methoden Builder</i> <i>enthält Elementausdrücke</i>.
com.top_logic.model.search.expr.config.operations.ContainsSomeBuilder = Enthält einige Builder
com.top_logic.model.search.expr.config.operations.ContainsSomeBuilder.tooltip = Das Erstellen von<i> Methoden Builder</i> <i>enthält einige</i> Ausdrücke.
com.top_logic.model.search.expr.config.operations.Copy$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.Copy$Builder.tooltip = <i>Methodenersteller</i>, der eine <i>Kopie</i> erstellt.
com.top_logic.model.search.expr.config.operations.Count$Builder = Erbauer
com.top_logic.model.search.expr.config.operations.Count$Builder.tooltip = <i>Der Methodenersteller</i> erstellt die <i>Zählung</i>.
com.top_logic.model.search.expr.config.operations.DayBuilder = Day-Builder
com.top_logic.model.search.expr.config.operations.DayBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>Get-Day-Ausdrücken</i>.
com.top_logic.model.search.expr.config.operations.DescBuilder = Desc-Bauer
com.top_logic.model.search.expr.config.operations.DescBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>desc-Ausdrücken</i>.
com.top_logic.model.search.expr.config.operations.EmptySetBuilder = Leerer Set-Bauer
com.top_logic.model.search.expr.config.operations.EmptySetBuilder.tooltip = <i>Methoden-Builder</i>, der <i>Suchausdrücke</i> erstellt, die den leeren Satz darstellen.
com.top_logic.model.search.expr.config.operations.EqualsUnversioned$Builder = Bauherr
com.top_logic.model.search.expr.config.operations.EqualsUnversioned$Builder.tooltip = <i>Method builder</i> creating <i>equals unversioned</i>.
com.top_logic.model.search.expr.config.operations.FilterBuilder = Filter-Bauer
com.top_logic.model.search.expr.config.operations.FilterBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>Filterausdrücken</i>.
com.top_logic.model.search.expr.config.operations.FlattenBuilder = Bauherr abflachen
com.top_logic.model.search.expr.config.operations.FlattenBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>Flatten-Ausdrücken</i>.
com.top_logic.model.search.expr.config.operations.ForeachBuilder = Foreach-Bauer
com.top_logic.model.search.expr.config.operations.ForeachBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>foreach-Ausdrücken</i>.
com.top_logic.model.search.expr.config.operations.GetBuilder = Bauherr holen
com.top_logic.model.search.expr.config.operations.GetBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>Zugriffs-</i> oder <i>dynamischen Get-Ausdrücken</i>.
com.top_logic.model.search.expr.config.operations.IconBuilder$Builder = Bauherr
com.top_logic.model.search.expr.config.operations.IconBuilder$Builder.tooltip = <i>Einfache Methode</i> zur Erstellung von <i>Symbolen</i>.
com.top_logic.model.search.expr.config.operations.IfElseBuilder = Wenn sonst Erbauer
com.top_logic.model.search.expr.config.operations.IfElseBuilder.tooltip = <i>Methoden-Builder</i>, der <i>if else-Ausdrücke</i> erstellt.
com.top_logic.model.search.expr.config.operations.InstanceOfBuilder = Instanz des Erbauers
com.top_logic.model.search.expr.config.operations.InstanceOfBuilder.tooltip = <i>Methoden-Builder</i>, der <i>eine Instanz von</i> Ausdrücken erzeugt.
com.top_logic.model.search.expr.config.operations.IntersectionBuilder = Schnittpunkt-Bauer
com.top_logic.model.search.expr.config.operations.IntersectionBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>Schnittmengenausdrücken</i>.
com.top_logic.model.search.expr.config.operations.IsDateEqualBuilder = Ist Datum gleich Baumeister
com.top_logic.model.search.expr.config.operations.IsDateEqualBuilder.tooltip = <i>Methodenersteller</i>, der einen <i>Suchausdruck</i> zum Vergleich von <i>Datumswerten</i> erstellt.
com.top_logic.model.search.expr.config.operations.IsDateGreaterBuilder = Ist Datum größer Baumeister
com.top_logic.model.search.expr.config.operations.IsDateGreaterBuilder.tooltip = <i>Methodenersteller</i>, der einen <i>Suchausdruck</i> zum Vergleich von <i>Datumswerten</i> erstellt.
com.top_logic.model.search.expr.config.operations.IsEmptyBuilder = Ist leerer Bauherr
com.top_logic.model.search.expr.config.operations.IsEmptyBuilder.tooltip = <i>Method Builder</i> erstellen <i>ist leere</i> Ausdrücke.
com.top_logic.model.search.expr.config.operations.IsEqualBuilder = Ist gleichwertiger Baumeister
com.top_logic.model.search.expr.config.operations.IsEqualBuilder.tooltip = <i>Method Builder</i> erstellen <i>ist gleich</i> Ausdrücke.
com.top_logic.model.search.expr.config.operations.IsFloatEqualBuilder = Ist Schwimmer gleich Konstrukteur
com.top_logic.model.search.expr.config.operations.IsFloatEqualBuilder.tooltip = Die Erstellung von Ausdrücken<i> des Methoden-Builders</i> <i>ist float-gleiche Builder-Ausdrücke</i>.
com.top_logic.model.search.expr.config.operations.IsFloatGreaterBuilder = Ist Schwimmer größer Konstrukteur
com.top_logic.model.search.expr.config.operations.IsFloatGreaterBuilder.tooltip = <i>Methoden-Builder</i> erstellen <i>ist float größere Builder-Ausdrücke</i>.
com.top_logic.model.search.expr.config.operations.IsStringEqualBuilder = Ist Zeichenfolge gleich Builder
com.top_logic.model.search.expr.config.operations.IsStringEqualBuilder.tooltip = <i>Der Methoden-Builder</i> erstellt <i>String Equal</i> Expressions.
com.top_logic.model.search.expr.config.operations.IsStringGreaterBuilder = Ist Zeichenfolge größer Builder
com.top_logic.model.search.expr.config.operations.IsStringGreaterBuilder.tooltip = <i>Method Builder</i> erstellen <i>ist Zeichenfolge größere</i> Ausdrücke.
com.top_logic.model.search.expr.config.operations.LengthBuilder = Länge Baumeister
com.top_logic.model.search.expr.config.operations.LengthBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>Längenausdrücken</i>.
com.top_logic.model.search.expr.config.operations.ListBuilder = Listenersteller
com.top_logic.model.search.expr.config.operations.ListBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>Listenausdrücken</i>.
com.top_logic.model.search.expr.config.operations.NoArgMethodBuilder = Kein Arg-Methode-Builder
com.top_logic.model.search.expr.config.operations.NoArgMethodBuilder.tooltip = <i>Method Builder</i> für Methoden ohne Argumente.
com.top_logic.model.search.expr.config.operations.RecursionBuilder = Erbauer der Rekursion
com.top_logic.model.search.expr.config.operations.RecursionBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>Rekursionsausdrücken</i>.
com.top_logic.model.search.expr.config.operations.ReferersBuilder = Referenten-Bauer
com.top_logic.model.search.expr.config.operations.ReferersBuilder.tooltip = <i>Methodenersteller</i>, der <i>Referer</i> oder <i>dynamische Referer-Ausdrücke</i> erstellt.
com.top_logic.model.search.expr.config.operations.ResKeyArgumentsBuilder = Ressource Schlüsselargumente Erbauer
com.top_logic.model.search.expr.config.operations.ResKeyArgumentsBuilder.tooltip = <i>Method Builder</i> zur Erstellung von Ausdrücken für <i>Ressourcen-Schlüsselargumente</i>.
com.top_logic.model.search.expr.config.operations.ResourceBuilder$Builder = Bauherr
com.top_logic.model.search.expr.config.operations.ResourceBuilder$Builder.tooltip = <i>Einfacher Methoden-Builder</i>, der <i>Ressourcen-Builder</i> erstellt.
com.top_logic.model.search.expr.config.operations.RoundBuilder = Runde Baumeister
com.top_logic.model.search.expr.config.operations.RoundBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>runden</i> Ausdrücken.
com.top_logic.model.search.expr.config.operations.SetBuilder = Set-Builder
com.top_logic.model.search.expr.config.operations.SetBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>Aktualisierungsausdrücken</i>.
com.top_logic.model.search.expr.config.operations.SingleArgMethodBuilder = Einzel-Arg-Methode-Builder
com.top_logic.model.search.expr.config.operations.SingleArgMethodBuilder.tooltip = <i>Method Builder</i> für Methoden mit einem einzigen Argument.
com.top_logic.model.search.expr.config.operations.SingleElementBuilder = Einzel-Element-Bauer
com.top_logic.model.search.expr.config.operations.SingleElementBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>Einzelelementausdrücken</i>.
com.top_logic.model.search.expr.config.operations.SingletonBuilder = Singleton-Bauer
com.top_logic.model.search.expr.config.operations.SingletonBuilder.tooltip = <i>Method Builder</i> zum Erstellen von <i>Singleton-Ausdrücken</i>.
com.top_logic.model.search.expr.config.operations.SizeBuilder = Größe Builder
com.top_logic.model.search.expr.config.operations.SizeBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>Größenausdrücken</i>.
com.top_logic.model.search.expr.config.operations.SortBuilder = Sortier-Builder
com.top_logic.model.search.expr.config.operations.SortBuilder.tooltip = <i>Methoden-Builder</i> zum Erstellen von <i>Sortierausdrücken</i>.
com.top_logic.model.search.expr.config.operations.StringContainsBuilder = Zeichenfolge enthält Builder
com.top_logic.model.search.expr.config.operations.StringContainsBuilder.tooltip = <i>Der Methoden-Builder</i>, der <i>eine Zeichenfolge</i> erstellt, <i>enthält Builder-Ausdrücke</i>.
com.top_logic.model.search.expr.config.operations.StringEndsWithBuilder = Saitenenden mit Builder
com.top_logic.model.search.expr.config.operations.StringEndsWithBuilder.tooltip = <i>Methoden-Builder</i>, der <i>Zeichenkettenenden mit</i> Ausdrücken erzeugt.
com.top_logic.model.search.expr.config.operations.StringStartsWithBuilder = Zeichenfolge beginnt mit Builder
com.top_logic.model.search.expr.config.operations.StringStartsWithBuilder.tooltip = <i>Der Methodenersteller</i>, der eine <i>Zeichenfolge</i> erstellt, <i>beginnt mit</i> Ausdrücken.
com.top_logic.model.search.expr.config.operations.ToBoolean$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.ToBoolean$Builder.tooltip = <i>Einfacher Methodenersteller</i> zum Erstellen einer <i>Liste</i>.
com.top_logic.model.search.expr.config.operations.ToList$Builder = Erbauer
com.top_logic.model.search.expr.config.operations.ToList$Builder.tooltip = <i>Einfacher Methoden-Builder</i>, der <i>zur Liste</i> erstellt.
com.top_logic.model.search.expr.config.operations.ToSet$Builder = Erbauer
com.top_logic.model.search.expr.config.operations.ToSet$Builder.tooltip = <i>Einfacher Methoden-Builder</i>, der die <i>zu setzende</i><i>Methode</i> erstellt.
com.top_logic.model.search.expr.config.operations.TwoArgMethodBuilder = Zwei-Arg-Methode-Builder
com.top_logic.model.search.expr.config.operations.TwoArgMethodBuilder.tooltip = <i>Method Builder</i> für Methoden mit einem einzigen Argument.
com.top_logic.model.search.expr.config.operations.TwoArgOptionalBooleanMethodBuilder = Optionaler boolescher Methoden-Builder mit zwei Argumenten
com.top_logic.model.search.expr.config.operations.TwoArgOptionalBooleanMethodBuilder.tooltip = <i>Method Builder</i> für Methoden mit einem einzigen Argument.
com.top_logic.model.search.expr.config.operations.Type$Builder = Erbauer
com.top_logic.model.search.expr.config.operations.Type$Builder.tooltip = <i>Method Builder</i> erstellt <i>Typ</i>.
com.top_logic.model.search.expr.config.operations.UnionBuilder = Gewerkschaftserrichter
com.top_logic.model.search.expr.config.operations.UnionBuilder.tooltip = <i>Methodenbauer, der</i> <i>Gewerkschaften</i> gründet.
com.top_logic.model.search.expr.config.operations.arithmetic.Ceil$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.arithmetic.Ceil$Builder.tooltip = <i>Methodenbauer</i> erstellt <i>Decke</i>.
com.top_logic.model.search.expr.config.operations.arithmetic.Floor$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.arithmetic.Floor$Builder.tooltip = <i>Method builder</i> creating <i>floor</i>.
com.top_logic.model.search.expr.config.operations.arithmetic.NextId$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.arithmetic.NextId$Builder.tooltip = <i>Method builder</i> creating <i>next ID</i>.
com.top_logic.model.search.expr.config.operations.binary.Binary$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.binary.Binary$Builder.tooltip = <i>Methodenersteller</i> zur Erstellung von <i>Binärdaten</i>.
com.top_logic.model.search.expr.config.operations.binary.ZipArchive$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.binary.ZipArchive$Builder.tooltip = <i>Methodenersteller</i> zur Erstellung von <i>Zip-Archivausdrücken</i>.
com.top_logic.model.search.expr.config.operations.binary.ZipEntry$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.binary.ZipEntry$Builder.tooltip = <i>Methodenersteller</i>, der Instanzen von <i>Zip-Einträgen</i> erstellt.
com.top_logic.model.search.expr.config.operations.cache.GroupBy$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.cache.GroupBy$Builder.tooltip = <i>Methodenersteller</i> erstellt <i>Gruppe nach</i>.
com.top_logic.model.search.expr.config.operations.cache.IndexBy$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.cache.IndexBy$Builder.tooltip = <i>Methodenersteller</i> erstellt <i>Index durch</i>.
com.top_logic.model.search.expr.config.operations.cache.IndexReduce$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.cache.IndexReduce$Builder.tooltip = <i>Methodenersteller</i> erstellt <i>Index reduzieren</i>.
com.top_logic.model.search.expr.config.operations.regex.Regex$Builder = Erbauer
com.top_logic.model.search.expr.config.operations.regex.Regex$Builder.tooltip = <i>Methoden-Builder</i> zum Erstellen <i>regulärer Ausdrücke</i>.
com.top_logic.model.search.expr.config.operations.regex.RegexEnd$Builder = Erbauer
com.top_logic.model.search.expr.config.operations.regex.RegexEnd$Builder.tooltip = <i>Methoden-Builder</i>, der das <i>Ende regulärer Ausdrücke</i> erzeugt.
com.top_logic.model.search.expr.config.operations.regex.RegexGroup$Builder = Erbauer
com.top_logic.model.search.expr.config.operations.regex.RegexGroup$Builder.tooltip = <i>Methoden-Builder</i> zum Erstellen <i>einer Gruppe regulärer Ausdrücke</i>.
com.top_logic.model.search.expr.config.operations.regex.RegexReplace$Builder = Erbauer
com.top_logic.model.search.expr.config.operations.regex.RegexReplace$Builder.tooltip = <i>Methoden-Builder</i> zum <i>Ersetzen regulärer Ausdrücke</i>.
com.top_logic.model.search.expr.config.operations.regex.RegexSearch$Builder = Erbauer
com.top_logic.model.search.expr.config.operations.regex.RegexSearch$Builder.tooltip = <i>Methoden-Builder</i> zur Erstellung <i>einer Suche mit regulären Ausdrücken</i>.
com.top_logic.model.search.expr.config.operations.regex.RegexStart$Builder = Erbauer
com.top_logic.model.search.expr.config.operations.regex.RegexStart$Builder.tooltip = <i>Methoden-Builder</i>, der <i>den Start regulärer Ausdrücke</i> erzeugt.
com.top_logic.model.search.expr.config.operations.revision.CreateRevision$Builder = Bauherr
com.top_logic.model.search.expr.config.operations.revision.CreateRevision$Builder.tooltip = <i>Einfacher Methoden-Builder</i> zum Erstellen <i>einer Revision</i>.
com.top_logic.model.search.expr.config.operations.revision.CurrentRevision$Builder = Bauherr
com.top_logic.model.search.expr.config.operations.revision.CurrentRevision$Builder.tooltip = <i>Einfache Methode zur</i> Erstellung der <i>aktuellen Revision</i>.
com.top_logic.model.search.expr.config.operations.revision.GetRevision$Builder = Bauherr
com.top_logic.model.search.expr.config.operations.revision.GetRevision$Builder.tooltip = <i>Einfacher Methoden-Builder</i> zum Erstellen von <i>Get-Revision</i>.
com.top_logic.model.search.expr.config.operations.revision.InCurrent$Builder = Bauherr
com.top_logic.model.search.expr.config.operations.revision.InCurrent$Builder.tooltip = <i>Einfache Methodenerstellung</i> <i>in Strom</i>.
com.top_logic.model.search.expr.config.operations.revision.InRevision$Builder = Bauherr
com.top_logic.model.search.expr.config.operations.revision.InRevision$Builder.tooltip = <i>Einfacher Methodik-Builder</i>, der <i>in der Revision</i> erstellt wird.
com.top_logic.model.search.expr.config.operations.revision.ModifiedRevision$Builder = Bauherr
com.top_logic.model.search.expr.config.operations.revision.ModifiedRevision$Builder.tooltip = <i>Einfacher Methodenersteller</i>, der eine <i>geänderte Revision</i> erstellt.
com.top_logic.model.search.expr.config.operations.revision.RevisionAt$Builder = Bauherr
com.top_logic.model.search.expr.config.operations.revision.RevisionAt$Builder.tooltip = <i>Einfache Methode zur</i> Erstellung von <i>Revisionen bei</i>.
com.top_logic.model.search.expr.config.operations.revision.RevisionForCommit$Builder = Bauherr
com.top_logic.model.search.expr.config.operations.revision.RevisionForCommit$Builder.tooltip = <i>Einfacher Methodenersteller</i>, der <i>Revisionen für Commits</i> erstellt.
com.top_logic.model.search.expr.config.operations.string.Internationalize$Builder = Bauherr
com.top_logic.model.search.expr.config.operations.string.Internationalize$Builder.tooltip = <i>Einfacher Methodenersteller</i> zur Erstellung einer <i>Internationalisierungsfunktion</i>.
com.top_logic.model.search.expr.config.operations.string.SubString$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.string.SubString$Builder.tooltip = <i>Methodenersteller</i> erzeugt <i>Sub-String</i>.
com.top_logic.model.search.expr.config.operations.string.ToLowerCase$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.string.ToLowerCase$Builder.tooltip = <i>Methodenersteller</i> <i>auf Kleinschreibung</i> umstellen.
com.top_logic.model.search.expr.config.operations.string.ToUpperCase$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.string.ToUpperCase$Builder.tooltip = <i>Methodenersteller</i> <i>auf Großbuchstaben</i> erstellen.
com.top_logic.model.search.expr.config.operations.string.Translate$Builder = Bauherr
com.top_logic.model.search.expr.config.operations.string.Translate$Builder.tooltip = <i>Einfacher Methodenersteller</i>, der eine <i>Übersetzungsfunktion</i> erstellt.
com.top_logic.model.search.expr.config.operations.struct.GetKey$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.struct.GetKey$Builder.tooltip = <i>Methodenersteller</i>, der den <i>Get-Schlüssel</i> erzeugt.
com.top_logic.model.search.expr.config.operations.struct.GetValue$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.struct.GetValue$Builder.tooltip = <i>Methodenersteller</i>, der den <i>Get-Wert</i> erzeugt.
com.top_logic.model.search.expr.config.operations.struct.KeySet$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.struct.KeySet$Builder.tooltip = <i>Methodenersteller</i> beim Erstellen des <i>Schlüsselsatzes</i>.
com.top_logic.model.search.expr.config.operations.struct.NewStruct$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.struct.NewStruct$Builder.tooltip = <i>Methodenersteller</i>, der eine <i>neue struct</i>.
com.top_logic.model.search.expr.config.operations.struct.StructTypeDef$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.struct.StructTypeDef$Builder.tooltip = <i>Methodenersteller</i>, der den <i>Strukturtyp def</i>.
com.top_logic.model.search.expr.config.operations.struct.Values$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.struct.Values$Builder.tooltip = <i>Methodenersteller</i>, der <i>Werte</i> erzeugt.
com.top_logic.model.search.expr.config.operations.web.ContextPath$Builder = Ersteller
com.top_logic.model.search.expr.config.operations.web.ContextPath$Builder.tooltip = <i>Methodenersteller</i> erstellt <i>Kontextpfad</i>.
com.top_logic.model.search.expr.reductions.Average$Builder = Erbauer
com.top_logic.model.search.expr.reductions.Average$Builder.tooltip = <i>Method Builder</i> erstellt <i>Durchschnitt</i>.
com.top_logic.model.search.expr.reductions.Max$Builder = Erbauer
com.top_logic.model.search.expr.reductions.Max$Builder.tooltip = <i>Methoden-Builder</i>, der das <i>Maximum</i> erzeugt.
com.top_logic.model.search.expr.reductions.Min$Builder = Erbauer
com.top_logic.model.search.expr.reductions.Min$Builder.tooltip = <i>Method Builder</i> erstellt <i>Minimum</i>.
com.top_logic.model.search.expr.reductions.Sum$Builder = Erbauer
com.top_logic.model.search.expr.reductions.Sum$Builder.tooltip = <i>Methodenhersteller, der</i> eine <i>Summe</i> erstellt.
com.top_logic.model.search.expr.supplier.SearchExpressionCurrentPerson = Suchausdruck aktuelle Person
com.top_logic.model.search.expr.supplier.SearchExpressionCurrentPerson.tooltip = <i>Anbietersuchausdruck-Builder</i> für die aktuelle <i>Person</i>.
com.top_logic.model.search.expr.supplier.SearchExpressionNow = Suchausdruck jetzt
com.top_logic.model.search.expr.supplier.SearchExpressionNow.tooltip = <i>Builder für Lieferantensuchausdrücke</i> für das aktuelle Datum und die aktuelle Uhrzeit.
com.top_logic.model.search.expr.supplier.SearchExpressionToday = Suchausdruck heute
com.top_logic.model.search.expr.supplier.SearchExpressionToday.tooltip = <i>Builder für Lieferantensuchausdrücke</i> für den aktuellen Tag.
com.top_logic.model.search.expr.supplier.SupplierSearchExpressionBuilder = Anbieter-Suchausdruck-Builder
com.top_logic.model.search.expr.supplier.SupplierSearchExpressionBuilder.tooltip = <i>Methoden-Builder</i>, der einen <i>Anbieter-Suchausdruck</i> erstellt.
com.top_logic.model.search.fieldprovider.SearchExpressionFieldProvider = Suchausdruck Feldanbieter
com.top_logic.model.search.fieldprovider.SearchExpressionFieldProvider.tooltip = <i>Feldanbieter</i>, der den Feldeigenschaften Konfigurationsoptionen des Editors hinzufügt, z. B. die maximal angezeigten Zeilen.
com.top_logic.model.search.form.DisplayDocumentBuilder = Document Builder anzeigen
com.top_logic.model.search.form.DisplayDocumentBuilder.Config.document = Dokument
com.top_logic.model.search.form.DisplayDocumentBuilder.Config.document.tooltip = Suchausdruck, der zur Berechnung des anzuzeigenden Dokuments aus dem Geschäftsmodell verwendet wird.
com.top_logic.model.search.form.DisplayDocumentBuilder.tooltip = <i>Display document builder</i> Berechnung des anzuzeigenden Dokuments anhand eines <i>Ausdrucks</i> aus dem angegebenen Geschäftsmodell.
com.top_logic.model.search.form.DocumentTilePreview = Vorschau der Dokumentenkachel
com.top_logic.model.search.form.DocumentTilePreview.Config.document = Dokument
com.top_logic.model.search.form.DocumentTilePreview.Config.document.tooltip = Suchausdruck, der zur Berechnung des anzuzeigenden Dokuments aus dem Geschäftsmodell verwendet wird.
com.top_logic.model.search.form.DocumentTilePreview.Config.model = Modell
com.top_logic.model.search.form.DocumentTilePreview.Config.model.tooltip = Suchausdruck, der zur Berechnung des Modells verwendet wird, das zur Bestimmung des Dokuments von verwendet wird.
com.top_logic.model.search.form.DocumentTilePreview.tooltip = Kachelvorschau, um ein PDF-Dokument als Vorschau in einer Kachel anzuzeigen.
com.top_logic.model.search.form.ExprBasedTilePreview = Ausdrucksbasierte Kachelvorschau
com.top_logic.model.search.form.ExprBasedTilePreview.Config.description = Beschreibung
com.top_logic.model.search.form.ExprBasedTilePreview.Config.description.tooltip = <i>Expression</i>, der die Beschreibung der Vorschau berechnet. <p> Es wird erwartet, dass der Ausdruck ein Eingabeelement akzeptiert, nämlich das von <i>Model</i> zurückgegebene Modell. Es wird erwartet, dass der <i>Ausdruck</i> ein Objekt zurückgibt, das als Textwert angezeigt werden kann, z. B. ein <i>Ressourcenschlüssel</i> oder ein einfacher String. </p>
com.top_logic.model.search.form.ExprBasedTilePreview.Config.icon.tooltip = Eigentlich unbenutzt.
com.top_logic.model.search.form.ExprBasedTilePreview.Config.image = Bild
com.top_logic.model.search.form.ExprBasedTilePreview.Config.image.tooltip = <i>Ausdruck</i>, der das Symbol der Vorschau berechnet. <p> Es wird erwartet, dass der Ausdruck ein Eingabeelement akzeptiert, nämlich das von <i>Model</i> zurückgegebene Modell. Es wird erwartet, dass der <i>Ausdruck</i> entweder ein <i>Themenbild</i> oder die Quelle für ein Bild zurückgibt, z. B. "css:fas fa-bug". </p>
com.top_logic.model.search.form.ExprBasedTilePreview.Config.label = Bezeichnung
com.top_logic.model.search.form.ExprBasedTilePreview.Config.label.tooltip = <i>Expression</i> berechnet das Label der Vorschau. <p> Es wird erwartet, dass der Ausdruck ein Eingabeelement akzeptiert, nämlich das von <i>Model</i> zurückgegebene Modell. Es wird erwartet, dass der <i>Ausdruck</i> ein Objekt zurückgibt, das als Textwert angezeigt werden kann, z. B. ein <i>Ressourcenschlüssel</i> oder ein einfacher String. </p>
com.top_logic.model.search.form.ExprBasedTilePreview.Config.model = Modell
com.top_logic.model.search.form.ExprBasedTilePreview.Config.model.tooltip = <i>Modellspezifikation</i>, die für die Berechnung von <i>Label</i>, <i>Beschreibung</i> und <i>Bild</i> verwendet wird.
com.top_logic.model.search.form.ExprBasedTilePreview.tooltip = <i>Bezeichungsbasierte Vorschau</i>, deren Bezeichnung, Beschreibung und Bild durch einige konfigurierte Ausdrücke berechnet werden.
com.top_logic.model.search.form.GalleryPreview = Galerie-Vorschau
com.top_logic.model.search.form.GalleryPreview.Config.gallery-attribute = Galerie-Attribut
com.top_logic.model.search.form.GalleryPreview.Config.gallery-attribute.tooltip = Name des Galerie-Attributs, dessen Wert zur Erstellung der Vorschau verwendet wird.
com.top_logic.model.search.form.GalleryPreview.Config.icon = Icon
com.top_logic.model.search.form.GalleryPreview.Config.icon.tooltip = Symbol, das angezeigt wird, wenn kein Bild aus dem Modell ermittelt werden kann. <p> Das kann passieren, wenn das angegebene Modell nicht vom richtigen <i>Typ</i> ist oder das Galerie-Attribut derzeit nicht ausgefüllt ist. </p>
com.top_logic.model.search.form.GalleryPreview.Config.type.tooltip = Der Typ, von dem das Attribut der Galerie stammt.
com.top_logic.model.search.form.GalleryPreview.tooltip = Vorschau, die das erste Bild eines Galerie-Attributs als Vorschau anzeigt.
com.top_logic.model.search.locking.LockStrategyByExpression = Sperrstrategie über Ausdruck
com.top_logic.model.search.locking.LockStrategyByExpression.Config.objects = Objekte
com.top_logic.model.search.locking.LockStrategyByExpression.Config.objects.tooltip = Funktion, die eine Menge von Objekten erzeugt, für die Token der Art <i>Kind</i> zugewiesen werden sollen.
com.top_logic.model.search.locking.LockStrategyByExpression.tooltip = <i>Sperrstrategie</i>, die ihren Geltungsbereich mit einem Suchausdruck auswählt.
com.top_logic.model.search.migration.DefaultByExpressionProcessor = Vorgabe durch den Ausdrucksprozessor
com.top_logic.model.search.migration.DefaultByExpressionProcessor.tooltip = Migriert den <i>berechneten Standardwert</i> durch Entfernen des Wertes für die Eigenschaft "ui configuration" unter Verwendung des angegebenen Rewriters.
com.top_logic.model.search.persistency.attribute.AbstractExpressionAttribute = Ausdrucks-Attribut
com.top_logic.model.search.persistency.attribute.AbstractExpressionAttribute.Config.expr = Ausdruck
com.top_logic.model.search.persistency.attribute.AbstractExpressionAttribute.Config.expr.tooltip = Der Ausdruck, mit dem der Attributwert berechnet wird. <p> Es wird erwartet, dass der Ausdruck eine Funktion ist, die das Kontextobjekt, das das Attribut deklariert, als einziges Argument annimmt. </p>
com.top_logic.model.search.persistency.attribute.AbstractExpressionAttribute.tooltip = <i>Abgeleiteter Speicher</i> für ein Attribut, das auf einem konfigurierten Suchausdruck basiert.
com.top_logic.model.search.persistency.attribute.macro.MacroAttribute = Makro-Attribut
com.top_logic.model.search.persistency.attribute.macro.MacroAttribute.tooltip = <i>Abgeleiteter Speicher</i>, der die Erweiterung eines Suchausdrucksmakros ermöglicht. <p> Der Wert eines <i>Makroattributs</i> ist ein <i>Suchausdruck</i>, der den konfigurierten Ausdruck auf dem das Attribut definierenden Objekt aufruft. </p>
com.top_logic.model.search.providers.AccessorByExpression = Accessor nach Ausdruck
com.top_logic.model.search.providers.AccessorByExpression.Config.getter = Getter
com.top_logic.model.search.providers.AccessorByExpression.Config.getter.tooltip = Die Getter-Funktion, die den Spaltenwert abruft. <p> Es wird erwartet, dass der Ausdruck eine Funktion mit zwei Argumenten ist, die das Zeilenobjekt als erstes Argument und den Spaltennamen als zweites Argument erhält. </p>
com.top_logic.model.search.providers.AccessorByExpression.Config.setter = Einrichter
com.top_logic.model.search.providers.AccessorByExpression.Config.setter.tooltip = Optionale Einrichterfunktion. <p> Es wird erwartet, dass der Ausdruck eine dreigliedrige Funktion <code>row -> value -> column -> {...}</code> ist, die das Zeilenobjekt als erstes Argument, den neu zu setzenden Wert als zweites Argument und den Spaltennamen als drittes Argument erhält. </p>
com.top_logic.model.search.providers.AccessorByExpression.tooltip = Konfigurierbarer <i>Accessor</i> mit TL-Script-Ausdrücken.
com.top_logic.model.search.providers.AttributeByExpression = Attribut über Ausdruck
com.top_logic.model.search.providers.AttributeByExpression.tooltip = <i>Attributwert-Locator</i>, der mit Hilfe von Suchausdrücken konfiguriert werden kann.
com.top_logic.model.search.providers.AttributeValueBindingByExpression = Attributwert-Bindung über Ausdruck
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.key-attributes = Schlüsselattribute
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.key-attributes.tooltip = Die Attributnamen, in denen die abgerufenen Schlüsselwerte gespeichert werden sollen. <p> Wenn mehr als ein Attributname konfiguriert ist, wird erwartet, dass der <i>Key fun</i> eine Liste mit so vielen Einträgen berechnet, wie Schlüsselattributnamen angegeben werden. </p> <p> Wenn nur ein einziger Schlüsselattributname angegeben wird, kann der <i>Key fun</i> einen einzelnen Wert berechnen, der als Schlüssel verwendet werden soll. </p>
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.key-fun = Schlüssel-Funktion
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.key-fun.tooltip = Funktion, die einen Schlüssel aus einem gegebenen Objekt berechnet. <p> Die Funktion muss so viele Werte abrufen, wie <i>Schlüsselattribute</i> Namen enthalten. </p> <p> Wenn mehrere Schlüsselwerte zurückgegeben werden, müssen sie in eine Liste eingeschlossen werden. Das Ergebnis kann Schlüsselwerte beliebigen Typs (einschließlich <code>null</code>) enthalten, aber nur ihre kanonische String-Repräsentation wird gespeichert und später zum Abruf an <i>Resolver fun</i> übergeben. </p>
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.reference-tag = Referenz-Tag
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.reference-tag.tooltip = Der Tag-Name, der zum Speichern mehrerer Referenzen für ein Mehrfach-Attribut verwendet werden soll.
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.resolver-fun = Resolver-Funktion
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.resolver-fun.tooltip = Funktion, die ein Objekt auflöst, das so viele Werte wie <i>Schlüsselattribute</i> enthält, enthält Namen. <p> Wenn <i>Schlüsselattribute</i> einen einzigen Namen enthalten, wird eine Funktion mit einem Argument erwartet. Wenn <i>Schlüsselattribute</i> <code>n</code> Namen enthalten, wird eine Funktion <code>n</code> erwartet. Alle übergebenen Schlüsselargumente sind entweder vom Typ <i>String</i> oder <code>null</code>. </p>
com.top_logic.model.search.providers.AttributeValueBindingByExpression.tooltip = <i>Bindung von Attributwerten</i> durch konfigurierte Schlüsselextraktor- und Schlüsselauflösungsfunktionen in TL-Script.
com.top_logic.model.search.providers.AttributeValueLocatorByExpression = Attributwert-Locator durch Ausdruck
com.top_logic.model.search.providers.AttributeValueLocatorByExpression.Config.expr = Ausdruck
com.top_logic.model.search.providers.AttributeValueLocatorByExpression.Config.expr.tooltip = Funktion, die ein Objekt auflöst. <p> Die Funktion erwartet das Basisobjekt als einzelnes Argument. </p>
com.top_logic.model.search.providers.AttributeValueLocatorByExpression.tooltip = <i>Attributwert-Locator</i>, der mit einem TL-Script-Ausdruck implementiert werden kann.
com.top_logic.model.search.providers.BidirectionalTransformLinkingByExpression = Bidirektionale Transformation
com.top_logic.model.search.providers.BidirectionalTransformLinkingByExpression.Config.function = Funktion
com.top_logic.model.search.providers.BidirectionalTransformLinkingByExpression.Config.function.tooltip = Die Transformation, die auf den Wert des Eingangskanals angewendet werden soll. <p> Die Funktion erhält den Wert des Eingangskanals als erstes Argument und den alten Kanalwert als zweites Argument. </p>
com.top_logic.model.search.providers.BidirectionalTransformLinkingByExpression.Config.inverse-function = Inverse Funktion
com.top_logic.model.search.providers.BidirectionalTransformLinkingByExpression.Config.inverse-function.tooltip = Die Transformation zurück, um den Wert für den Eingangskanal zu erhalten. <p> Die Funktion erhält den Wert des transformierten Kanals als erstes Argument. </p>
com.top_logic.model.search.providers.BidirectionalTransformLinkingByExpression.tooltip = <i>Kanalverknüpfung</i>, die einen <i>bidirektionalen Transformationskanal</i> erzeugt, der die in TL-Script implementierte Vorwärts- und Rückwärtstransformation anwendet.
com.top_logic.model.search.providers.CommandHandlerByExpression = Befehlshandler über Ausdruck
com.top_logic.model.search.providers.CommandHandlerByExpression.Config.close-dialog = Dialog schließen
com.top_logic.model.search.providers.CommandHandlerByExpression.Config.close-dialog.tooltip = Ob ein aktiver Dialog geschlossen werden soll, wird in diesem <i>Befehlshandler</i> ausgeführt. <p> Dieses Flag hat keine Bedeutung, wenn der Befehl nicht innerhalb eines Dialogs ausgeführt wird. </p>
com.top_logic.model.search.providers.CommandHandlerByExpression.Config.operation = Operation
com.top_logic.model.search.providers.CommandHandlerByExpression.Config.operation.tooltip = Die auszuführende Operation. <p> Es wird erwartet, dass der Ausdruck eine Funktion ist, die das <i>Zielmodell</i> als einziges Argument annimmt. Die Funktion kann ein beliebiges Ergebnis zurückgeben. Das erzeugte Ergebnis wird an potenzielle <i>Post create actions</i> übergeben, die konfiguriert sind. </p>
com.top_logic.model.search.providers.CommandHandlerByExpression.tooltip = <i>Befehlshandler</i>, der das Zielmodell als einziges Argument nimmt und eine Modelloperation ausführt. <p> Die Modelloperation kann mit einem TL-Script-Ausdruck konfiguriert werden. </p>
com.top_logic.model.search.providers.ComputedColumnProviderByExpression = Berechneter Spaltenanbieter durch Ausdruck
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.accessor = Spaltenwert
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.accessor.tooltip = Funktion, die den Wert der Spalte abruft. <p> Die Funktion erwartet das Zeilenobjekt als einziges Argument. </p> <p> Das Ergebnis der Funktion wird in der Tabellenzelle angezeigt, die durch diesen Spaltenanbieter und das angegebene Zeilenobjekt definiert ist. </p>
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.columnType = Spaltentyp
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.columnType.tooltip = Typ der Werte, die in dieser Spalte angezeigt werden.
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.columnVisibility = Sichtbarkeit
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.columnVisibility.tooltip = Die Sichtbarkeit der erstellten Spalte.
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.updater = Speicheroperation
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.Config.updater.tooltip = Optionale Operation, die einen aktualisierten Spaltenwert speichert. <p> Wenn keine Operation angegeben wird, kann die Spalte nicht bearbeitet werden. </p> <p> Die Operation erwartet das Zeilenobjekt als erstes Argument und den neuen Wert, der gespeichert werden soll, als zweites Argument. </p> <p> Die Operation wird ausgeführt, wenn eine bearbeitete Zeile gespeichert wird und der Benutzer den angezeigten Wert bearbeitet hat. </p>
com.top_logic.model.search.providers.ComputedColumnProviderByExpression.tooltip = <i>Tabellenkonfigurationsanbieter</i>, der eine einzelne berechnete Spalte zu einer Tabelle oder einem Gitter hinzufügt.
com.top_logic.model.search.providers.ConstraintCheckByExpression = Konsistenzregel über Ausdruck
com.top_logic.model.search.providers.ConstraintCheckByExpression.Config.check = Überprüfung
com.top_logic.model.search.providers.ConstraintCheckByExpression.Config.check.tooltip = Funktion, die eine Konsistenzbeschränkung für ein Objekt überprüft. <p> Die Funktion erwartet den aktuellen Wert des Kontextattributs als erstes Argument und das Basisobjekt, das das Attribut definiert, als zweites Argument. Ein Fehler wird durch die Rückgabe eines internationalisierten Textes, der das Problem beschreibt, signalisiert. Ein Wert <code>null</code> wird als Erfolg interpretiert:</p> <code>value -> object -> [expression computing <i>resource key</i>]</code> <p> Das Kontextattribut ist das Attribut, an das dieser <i>Constraint-Prüfalgorithmus</i> annotiert wird. Sein Wert ist der zu prüfende Hauptwert. Alle Fehlermeldungen der Prüfung werden im Eingabefeld für dieses Kontextattribut angezeigt, wenn die Prüfung in der Benutzeroberfläche durchgeführt wird.</p>
com.top_logic.model.search.providers.ConstraintCheckByExpression.tooltip = <i>Konsistenzregel</i>, die durch TL-Script-Ausdrücke parametrisiert werden kann.
com.top_logic.model.search.providers.CreateTypeOptionsByExpression = Dynamische Typ-Optionen
com.top_logic.model.search.providers.CreateTypeOptionsByExpression.Config.default-type = Standardtyp
com.top_logic.model.search.providers.CreateTypeOptionsByExpression.Config.default-type.tooltip = Funktion zur Auswahl des Standardanlegtyps für den gegebenen Kontext. <p> Die Funktion erwartet zwei Argumente. Das erste Argument ist das Kontextmodell und das zweite Argument ist die Liste der möglichen Erzeugungstypen, die durch <i>Mögliche Typen</i> berechnet wird. Das Funktionsergebnis wird als der Typ erwartet, der standardmäßig erstellt werden soll, wenn der Benutzer nicht aus den <i>Möglichen Typen</i> auswählt.</p> <p> Wenn nicht angegeben, wird standardmäßig der erste aus den <i>Möglichen Typen</i> zurückgegebene Typ gewählt.</p>
com.top_logic.model.search.providers.CreateTypeOptionsByExpression.Config.include-subtypes = Subtypen einbeziehen
com.top_logic.model.search.providers.CreateTypeOptionsByExpression.Config.include-subtypes.tooltip = Ob automatisch alle Untertypen für Klassen hinzugefügt werden sollen, die von <i>Mögliche Typen</i> zurückgegeben werden.
com.top_logic.model.search.providers.CreateTypeOptionsByExpression.Config.possible-types = Mögliche Typen
com.top_logic.model.search.providers.CreateTypeOptionsByExpression.Config.possible-types.tooltip = Funktionsberechnung möglich, Typen für den gegebenen Kontext zu erstellen. <p> Die Funktion erwartet das Kontextmodell als einzelnes Argument. Von der Funktion wird erwartet, dass sie eine Liste von Typen zurückgibt, die in diesem Kontext instanziiert werden können. </p>
com.top_logic.model.search.providers.CreateTypeOptionsByExpression.tooltip = <i>Erstellen Sie</i> eine Implementierung von<i>Typoptionen</i>, die mit TL-Script-Ausdrücken parametrisiert werden können.
com.top_logic.model.search.providers.DefaultByExpression = Berechneter Standardwert
com.top_logic.model.search.providers.DefaultByExpression.Config.in-transaction = In Transaktion
com.top_logic.model.search.providers.DefaultByExpression.Config.in-transaction.tooltip = Ob die Berechnung in <i>Wert</i> verzögert werden soll, bis die Transaktion create ausgeführt wird. <p> Diese Einstellung ist notwendig, wenn das Skript in <i>Wert</i> eine Operation ausführt, die nur im Transaktionskontext ausgeführt werden kann (z. B. <code>new</code>). </p> <p> Beim Setzen dieser Option ist es ratsam, die Eigenschaft im Erstellungsdialog mit der Anmerkung <i>Sichtbarkeit bei der Anlage</i> auszublenden. </p>
com.top_logic.model.search.providers.DefaultByExpression.Config.value = Wert
com.top_logic.model.search.providers.DefaultByExpression.Config.value.tooltip = Funktion, die den Standardwert für das annotierte Attribut berechnet. <p> Es wird erwartet, dass die Funktion das Kontextobjekt des neu erstellten Objekts als einziges Argument akzeptiert. Das Kontextobjekt des neuen Objekts wird an die Funktion <code>new</code> an der Stelle übergeben, an der das Objekt erstellt wird. In Baumstrukturen ist das Kontextobjekt typischerweise der übergeordnete Knoten des neu angelegten Knotens. </p>
com.top_logic.model.search.providers.DefaultByExpression.tooltip = <i>Standardanbieter</i>, der den Standardwert aus einem Ausdruck abruft.
com.top_logic.model.search.providers.DropTargetByExpressionConfig.canDrop = Ausführbarkeit der Drop-Operation
com.top_logic.model.search.providers.DropTargetByExpressionConfig.canDrop.tooltip = Funktion, die prüft, ob ein Drop im Kontext eines referenzierten Elements durchgeführt werden kann.
com.top_logic.model.search.providers.DropTargetByExpressionConfig.handleDrop = Drop-Operation
com.top_logic.model.search.providers.DropTargetByExpressionConfig.handleDrop.tooltip = Operation, die einen Drop im Kontext eines referenzierten Elements ausführt. <p> Die Argumente hängen von der konkreten Handler-Unterklasse ab. </p> <p> Der von der Funktion zurückgegebene Wert wird an mögliche Post-Drop-Aktionen übergeben. </p>
com.top_logic.model.search.providers.DropTargetByExpressionConfig.postCreateActions = Aktionen nach dem Drop
com.top_logic.model.search.providers.DropTargetByExpressionConfig.postCreateActions.tooltip = Aktionen, die ausgeführt werden, nachdem das gezogene Element abgelegt wurde. <p> Diese Aktionen erhalten als Modell das Objekt, das von der konfigurierten Drop-Funktionalität zurückgegeben wird. </p>
com.top_logic.model.search.providers.DynamicColumnProviderByExpression = Dynamischer Spaltenanbieter nach Ausdruck
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.accessor = Spaltenwert
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.accessor.tooltip = Funktion, die den Wert der Spalte abruft. <p> Die Funktion erwartet zwei Argumente. Das erste Argument ist das Zeilenobjekt. Das zweite Argument ist das Spaltenobjekt, wie es von der Funktion <i>Spalten</i> abgerufen wird.</p> <p> Das Ergebnis der Funktion wird in der Tabellenzelle angezeigt, die durch das angegebene Zeilen- und Spaltenobjekt definiert ist. </p>
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columnLabel = Spaltenbezeichnung
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columnLabel.tooltip = Optionale Funktion zur Berechnung der Spaltenbeschriftung. <p> Die Funktion erwartet zwei Argumente. Das erste Argument ist eines der Spaltenobjekte, wie es von der Funktion <i>Spalten</i> zurückgegeben wird. Das zweite Argument ist das Modell der Komponente.</p> <p> Als Ergebnis wird der Spaltenname erwartet. Das Ergebnis kann entweder eine Internationalisierungsressource, eine Zeichenkette oder ein beliebiges anderes Objekt sein, dessen textuelle Darstellung in der Spaltenüberschrift angezeigt werden kann. </p> <p> Wenn keine Label-Funktion angegeben wird, wird die textuelle Darstellung des Spaltenobjekts, wie sie von der Funktion <i>Spalten</i> berechnet wird, als Label verwendet.</p>
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columnType = Spaltentyp
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columnType.tooltip = Typ der Werte, die in einer bestimmten Spalte angezeigt werden. <p> Wenn alle Spalten denselben Werttyp haben, kann ein Modell-Typ-Literal angegeben werden, z. B. "tl.core:Integer". Wenn die Spalten unterschiedliche Typen haben, kann eine Funktion angegeben werden, die den Spaltentyp errechnet. </p> <p> Die Typfunktion erwartet zwei Argumente. Das erste Argument ist eines der Spaltenobjekte, die von der Funktion <i>Columns</i> zurückgegeben werden. Das zweite Argument ist das Modell der Komponente. </p> <p> Das Ergebnis der type-Funktion muss ein Verweis auf einen <i>TopLogic</i>-Typ sein (ein primitiver Typ wie "tl.core:Integer", eine Aufzählung oder ein anderer Klassentyp). </p>
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columnVisibility = Sichtbarkeit
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columnVisibility.tooltip = Die Sichtbarkeit der erstellten Spalten.
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columns = Spalten
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.columns.tooltip = Funktion zur Berechnung von Spalten. <p> Eine Spalte ist ein beliebiges Objekt, das die Spalte identifiziert. Dieses Spaltenobjekt wird an die anderen Funktionen zur Berechnung der Beschriftung und zum Speichern und Abrufen von Werten weitergegeben. </p> <p> Die Funktion Spalten erwartet das Modell der Komponente als einziges Argument. Als Ergebnis wird eine beliebige Liste von Objekten erwartet, die als Repräsentanten für die erzeugten Tabellenspalten dienen. </p>
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.idPrefix = ID-Präfix
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.idPrefix.tooltip = Gemeinsames technisches Präfix, das an jeden technischen Spaltennamen aller von diesem Anbieter erstellten Spalten angehängt wird.
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.updater = Speicheroperation
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.Config.updater.tooltip = Optionale Operation, die einen aktualisierten Spaltenwert speichert. <p> Wenn keine Operation angegeben wird, kann die Spalte nicht bearbeitet werden. </p> <p> Die Operation erwartet drei Argumente. Das erste Argument ist das Zeilenobjekt. Das zweite Argument ist das Spaltenobjekt, wie es von der Funktion <i>Spalten</i> abgerufen wird. Das dritte Argument ist der neue Wert, der gespeichert werden soll.</p> <p> Die Operation wird ausgeführt, wenn eine bearbeitete Zeile gespeichert wird und der Benutzer den angezeigten Wert bearbeitet hat. </p>
com.top_logic.model.search.providers.DynamicColumnProviderByExpression.tooltip = <i>Tabellenkonfigurationsanbieter</i>, der eine dynamische Anzahl zusätzlicher Spalten zu seiner Tabelle hinzufügt.
com.top_logic.model.search.providers.ExecutabilityByExpression = Ausführbarkeit über Ausdruck
com.top_logic.model.search.providers.ExecutabilityByExpression.Config.decision = Entscheidung
com.top_logic.model.search.providers.ExecutabilityByExpression.Config.decision.tooltip = Funktion, die entscheidet, ob ein Befehl aktuell ausgeführt werden kann. <p> Die Funktion nimmt das Zielmodell des Befehls als einziges Argument. Um die Ausführung zu erlauben, muss <code>true</code> oder <code>null</code> zurückgegeben werden. Jeder andere Wert verweigert die Ausführung. Wenn <i>Show disabled</i> auf <code>true</code> konfiguriert ist, wird ein Funktionsergebnis ungleich 3 als Grund für den deaktivierten Zustand verwendet, der dem Benutzer angezeigt wird. Es ist am besten, einen <i>Ressourcenschlüssel</i> mit einem internationalisierten Grund zurückzugeben. Ein String-Ergebnis wird als nicht internationalisierter Text verwendet. Jeder andere Wert erzeugt keinen Grund.</p>
com.top_logic.model.search.providers.ExecutabilityByExpression.Config.show-disabled = Deaktiviert anzeigen
com.top_logic.model.search.providers.ExecutabilityByExpression.Config.show-disabled.tooltip = Ob ein nicht ausführbarer Befehl im deaktivierten Zustand angezeigt wird. <p> Ein Wert von <code>false</code> bedeutet, dass ein nicht ausführbarer Befehl ausgeblendet wird. Wenn ein deaktivierter Befehl angezeigt wird, sollte <i>Decision</i> einen Grund für die Nichtausführbarkeit angeben. </p>
com.top_logic.model.search.providers.ExecutabilityByExpression.tooltip = <i>Ausführbarkeitsregel</i>, die mit einem TL-Skript-Ausdruck parametrisiert werden kann.
com.top_logic.model.search.providers.FilterByExpression = Nach Ausdruck filtern
com.top_logic.model.search.providers.FilterByExpression.Config.predicate = Prädikat
com.top_logic.model.search.providers.FilterByExpression.Config.predicate.tooltip = Die Funktion, die entscheidet, ob das zweite Argument eine gültige Option für das Attribut des als erstes Argument angegebenen Objekts ist.
com.top_logic.model.search.providers.FilterByExpression.tooltip = <i>Objektwertfilter</i>, der mit Hilfe von Suchausdrücken zur Einschränkung der Optionen dynamisch konfiguriert werden kann.
com.top_logic.model.search.providers.GenericCreateHandlerByExpression = Generischer Create-Handler nach Ausdruck
com.top_logic.model.search.providers.GenericCreateHandlerByExpression.Config.linkOperation = Link-Operation
com.top_logic.model.search.providers.GenericCreateHandlerByExpression.Config.linkOperation.tooltip = Optionale Operation, die das neu erstellte Objekt mit seinem Erstellungskontext verknüpft. <p> Es wird eine Funktion mit drei Argumenten erwartet. Das erste Argument ist der Container des neuen Objekts, das zweite Argument ist das neu erstellte Objekt selbst und das dritte Argument ist der Erstellungskontext. Der Erstellungskontext ist das Modell, auf dem dieser Create-Handler ausgeführt wird. Normalerweise ist dies das Modell der Erstellungskomponente, auf der diese Komponente, in der dieser Handler registriert ist, ausgeführt wird. In besonderen Fällen kann der Erstellungskontext durch Setzen von <i>Target</i> angepasst werden, um anzugeben, woher der Erstellungskontext bezogen werden soll. </p>
com.top_logic.model.search.providers.GenericCreateHandlerByExpression.tooltip = <i>Generischer Create-Handler</i>, der es erlaubt, neu erstellte Objekte mit Hilfe einer TL-Script-Operation mit ihrem Kontext zu verknüpfen.
com.top_logic.model.search.providers.GridApplyHandlerByExpression = Grid-Anwendungs-Handler durch Ausdruck
com.top_logic.model.search.providers.GridApplyHandlerByExpression.Config.can-edit = Kann bearbeiten
com.top_logic.model.search.providers.GridApplyHandlerByExpression.Config.can-edit.tooltip = Funktion, die entscheidet, ob die ausgewählte Zeile bearbeitet werden kann. <p> Die Funktion erwartet zwei Argumente. Das erste Argument ist das fragliche Zeilenobjekt. Das zweite Argument ist das Modell der Komponente. </p>
com.top_logic.model.search.providers.GridApplyHandlerByExpression.Config.post-apply-script = Skript anwenden
com.top_logic.model.search.providers.GridApplyHandlerByExpression.Config.post-apply-script.tooltip = Skript, das ausgeführt wird, nachdem das bearbeitete Modell mit neuen Werten aus dem Formular aktualisiert wurde und bevor die Anwendungstransaktion abgeschlossen ist. <p> Das Skript erwartet das bearbeitete Objekt als erstes Argument und das Komponenten-Basismodell als zweites Argument. </p>
com.top_logic.model.search.providers.GridApplyHandlerByExpression.tooltip = <i>Grid-Apply-Handler</i>, der durch TL-Script parametrisiert werden kann.
com.top_logic.model.search.providers.GridCreateHandlerByExpression = Neue Zeile
com.top_logic.model.search.providers.GridCreateHandlerByExpression.Config.createContext = Container
com.top_logic.model.search.providers.GridCreateHandlerByExpression.Config.createContext.tooltip = Funktion, die den Container des zu erstellenden Objekts bereitstellt. <p> Normalerweise hat der Container eines Objekts eine Kompositionsreferenz, die das Objekt enthält. Während der Erstellung ist das neue Objekt noch nicht Teil einer Kompositionsreferenz, aber es gibt vor, Teil des berechneten Containerobjekts zu sein. Dies ist nützlich, wenn sich die Standardwertberechnungen von Attributen auf die <code>tContainer()</code>-Funktion des zu erstellenden Objekts beziehen. Wird einem neuen Objekt ein Erstellungskontext zugewiesen, so gibt die <code>tContainer()</code>-Funktion des zu erstellenden Objekts den bereitgestellten Erstellungskontext zurück. </p> <p> Die Funktion nimmt das <i>Zielmodell</i> des Befehls als Argument. </p> <p> Wenn es nicht angegeben wird, wird standardmäßig das Modell der Komponente verwendet. </p>
com.top_logic.model.search.providers.GridCreateHandlerByExpression.Config.createType = Typ erstellen
com.top_logic.model.search.providers.GridCreateHandlerByExpression.Config.createType.tooltip = Qualifizierter Name des zu erstellenden <i>Typs</i>.
com.top_logic.model.search.providers.GridCreateHandlerByExpression.Config.initOperation = Initialisierung
com.top_logic.model.search.providers.GridCreateHandlerByExpression.Config.initOperation.tooltip = Optionale Funktion, die das neue Objekt mit seinem Kontext verknüpft. <p> Die Funktion benötigt drei Argumente. Das erste Argument ist das Container-Objekt, das in <i>container</i> berechnet wird, das zweite Argument ist das neu erstellte Objekt und das dritte Argument ist das Zielmodell des Befehls. </p> <p> Wenn das Ergebnis der Funktion entweder ein <i>Ressourcenschlüssel</i> oder ein <i>String</i> ist, wird es als Fehlerbeschreibung interpretiert und die Zuweisung schlägt mit dieser Meldung fehl. </p> <p> Wenn dieser Vorgang aufgerufen wird, sind die in der Benutzeroberfläche eingegebenen Feldwerte bereits auf das neu erstellte Objekt angewendet worden. </p>
com.top_logic.model.search.providers.GridCreateHandlerByExpression.tooltip = <i>Grid erstellen Handler</i>, die mit TL-Script-Ausdrücken parametrisiert werden können.
com.top_logic.model.search.providers.GridDragSourceByExpression = Benutzerdefinierter Grid-Drag
com.top_logic.model.search.providers.GridDragSourceByExpression.tooltip = Drag Operation für Grids, die vollständig über Modellabfragen konfiguriert werden können.
com.top_logic.model.search.providers.GridDropTargetByExpression = Rasterabwurfziel nach Ausdruck
com.top_logic.model.search.providers.GridDropTargetByExpression.tooltip = <i>Tabellenablageziel</i> für Grids, die vollständig über Modellabfragen konfiguriert werden können.
com.top_logic.model.search.providers.IconProviderByExpression = Icon-Berechnung
com.top_logic.model.search.providers.IconProviderByExpression.Config.icon = Icon
com.top_logic.model.search.providers.IconProviderByExpression.Config.icon.tooltip = Funktion, die das Icon für ein gegebenes Objekt berechnet. <p> Die Funktion erwartet das Objekt, für das das Icon ausgerechnet werden soll, als einziges Argument. Das Funktionsergebnis muss entweder das Icon selbst oder ein String sein, der die Icon-Ressource repräsentiert. </p> <p> Eine Icon-Referenz kann von einem Model-Attribut vom Typ <code>tl.core:Icon</code> abgerufen werden. Eine gültige Icon-Ressource wäre "css:fas fa-car-side". </p> <p> Wenn die Funktion <code>null</code> zurückgibt, wird das statische Icon des Typs verwendet, der für den Typ des Objekts definiert ist. </p>
com.top_logic.model.search.providers.IconProviderByExpression.tooltip = <i>Icon-Provider</i>, der mit einem TL-Script-Ausdruck parametriert werden kann.
com.top_logic.model.search.providers.LabelByExpression = Beschriftung nach Ausdruck
com.top_logic.model.search.providers.LabelByExpression.Config.css-class = Css-Klasse
com.top_logic.model.search.providers.LabelByExpression.Config.css-class.tooltip = CSS-Klasse, die für jedes Objekt zurückgegeben wird. Wenn nicht gesetzt, wird der Wert aus dem inneren Provider verwendet.
com.top_logic.model.search.providers.LabelByExpression.Config.image = Bild
com.top_logic.model.search.providers.LabelByExpression.Config.image.tooltip = Ein konstantes Bild, das für alle Objekte verwendet wird. Wenn nicht gesetzt, wird der Wert aus dem inneren Provider verwendet.
com.top_logic.model.search.providers.LabelByExpression.Config.inner = Inner
com.top_logic.model.search.providers.LabelByExpression.Config.inner.tooltip = Konfiguration des <i>Ressourcenanbieters</i>, um von ihm andere Eigenschaften als Label und Tooltip zu erhalten.
com.top_logic.model.search.providers.LabelByExpression.Config.label = Beschriftung
com.top_logic.model.search.providers.LabelByExpression.Config.label.tooltip = Der Ausdruck, der mit dem Objekt ausgeführt wird, für das die Bezeichnung erforderlich ist. <p> Es wird erwartet, dass der <i>Ausdruck</i> ein Argument verwendet. </p>
com.top_logic.model.search.providers.LabelByExpression.Config.tooltip = Tooltip
com.top_logic.model.search.providers.LabelByExpression.Config.tooltip.tooltip = Der Ausdruck, der mit dem Objekt ausgeführt wird, für das die QuickInfo erforderlich ist. <p> Es wird erwartet, dass der <i>Ausdruck</i> ein Argument verwendet. </p>
com.top_logic.model.search.providers.LabelByExpression.tooltip = <i>Proxy-Ressourcenanbieter</i>, der die Beschriftung und den Tooltip anhand eines <i>Ausdrucks</i> aus dem Basisobjekt berechnet. Andere Methoden werden an einen konfigurierten <i>Ressourcenanbieter</i> delegiert.
com.top_logic.model.search.providers.LabelProviderByExpression = Beschriftung über Ausdruck
com.top_logic.model.search.providers.LabelProviderByExpression.Config.label = Beschriftung
com.top_logic.model.search.providers.LabelProviderByExpression.Config.label.tooltip = Funktion, die das Label eines gegebenen Objekts berechnet. <p> Die Funktion erwartet das Objekt, für das eine Beschriftung benötigt wird, als einziges Argument. Das Ergebnis der Funktion wird als Beschriftung angezeigt. </p>
com.top_logic.model.search.providers.LabelProviderByExpression.tooltip = <i>Label-Provider</i>, der mit einem <i>TL-Script-Ausdruck</i> implementiert werden kann.
com.top_logic.model.search.providers.ListModelByExpression = Modell nach Ausdruck auflisten
com.top_logic.model.search.providers.ListModelByExpression.Config.elements = Elemente
com.top_logic.model.search.providers.ListModelByExpression.Config.elements.tooltip = Ausdrucksabfrage von Listenelementen im Kontext des Komponentenmodells. <p> Es wird erwartet, dass der Ausdruck eine Funktion ist, die das Modell der Komponente als einziges Argument verwendet. </p> <p> Beispiel: Um alle Elemente mit einem bestimmten Typ abzurufen, z.B. alle Demo A, müssen Sie schreiben: <pre><code>all(`DemoTypes:DemoTypes.A`)</code> </pre>als Abkürzung für <pre><code>model -> all(`DemoTypes:DemoTypes.A`)</code> </pre></p>
com.top_logic.model.search.providers.ListModelByExpression.Config.modelForElement = Modell für Element
com.top_logic.model.search.providers.ListModelByExpression.Config.modelForElement.tooltip = Funktion zum Abrufen eines Komponentenmodells für ein zu wählendes Element. <h3>Parameter</h3> <table class="tlDocTable"> <thead> <tr> <th>Name</th> <th>Beschreibung</th> </tr> </thead> <tbody> <tr> <td><code>selection</code></td> <td>Eine neue Auswahl, die in der Komponente gesetzt werden soll. Hinweis: In einer Komponente, die Mehrfachauswahlen unterstützt, kann dies eine Auflistung von Elementen sein.</td> </tr> <tr> <td><code>model</code></td> <td>Das aktuelle Modell der Komponente.</td> </tr> </tbody> </table> <h3>Ergebnis</h3> <p> Das neue Modell der Komponente, angepasst an die angegebene neue Auswahl, die gesetzt werden soll. Das neue Modell sollte so gewählt werden, dass die Funktion "Elemente der Liste" eine Liste berechnet, die die angegebene Auswahl enthält. </p> <p> Hinweis: In der Reihenfolge der Argumente steht das Modell der Komponente an letzter Stelle, damit dieses Argument weggelassen werden kann, wenn es nicht benötigt wird. </p>
com.top_logic.model.search.providers.ListModelByExpression.Config.supportsElement = Unterstützt Element
com.top_logic.model.search.providers.ListModelByExpression.Config.supportsElement.tooltip = Funktion, die entscheidet, ob ein (neues/geändertes) Objekt (jetzt) Teil der Sammlung der angezeigten Objekte sein soll. <p> Dies ist der Fall, wenn das betreffende Objekt bei einer erneuten Auswertung der Funktion <i>Elemente</i> (jetzt) in das Ergebnis der Auswertung einbezogen werden würde. </p> <p> Die Funktion hat zwei Argumente, das potentielle Listenelement als erstes Argument und das aktuelle Komponentenmodell als zweites Argument. </p>
com.top_logic.model.search.providers.ListModelByExpression.Config.supportsModel = Unterstützt Modell
com.top_logic.model.search.providers.ListModelByExpression.Config.supportsModel.tooltip = Funktion, die entscheidet, ob ein Objekt als Komponentenmodell verwendet werden kann. <p> Es wird erwartet, dass der Ausdruck eine Funktion ist, die den Kandidaten für das Modell der Komponente als einziges Argument nimmt. </p> Beispiel: Um nur Komponentenmodelle des Typs <code>DemoTypes:DemoTypes.A</code> zu akzeptieren, müssen Sie das Prädikat verwenden: <pre> <code>model -> $model.instanceOf(`DemoTypes:DemoTypes.A`)</code> </pre>
com.top_logic.model.search.providers.ListModelByExpression.tooltip = <i>Listenmodell-Builder</i>, der vollständig über Modellabfragen konfiguriert werden kann.
com.top_logic.model.search.providers.ListSelectionProviderByExpression = TLScript-Funktion
com.top_logic.model.search.providers.ListSelectionProviderByExpression.Config.function = Funktion
com.top_logic.model.search.providers.ListSelectionProviderByExpression.Config.function.tooltip = Funktion zur Berechnung einer Standardauswahl. <h3>Parameter</h3> <table> <tr> <th>Name</th> <th>Beschreibung</th> </tr> <tr> <td><code>options</code></td> <td>Die Liste aller verfügbaren Optionen</td> </tr> <tr> <td><code>model</code></td> <td>Das Modell der aktuellen Komponente</td> </tr> <tr> <td><code>lastSelection</code></td> <td>Die letzte aktive Auswahl oder <code>null</code>, wenn dies die erste Auswahl ist oder das zuletzt ausgewählte Objekt gelöscht wurde</td> </tr> </table> <h3>Ergebnis</h3> <p> Das Element aus den angegebenen Optionen, das standardmäßig ausgewählt werden soll. </p>
com.top_logic.model.search.providers.ListSelectionProviderByExpression.tooltip = <i>Berechnung einer Listenauswahl</i>, die mit einem <i>TLScript-Ausdruck</i> parametrisiert werden kann.
com.top_logic.model.search.providers.MarkerFactoryByExpression = Markerfabrik nach Ausdruck
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.disabled = Deaktiviert
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.disabled.tooltip = Die Getter-Funktion, die den Wert des booleschen "disabled" abfragt <p> Wenn disabled wahr ist, werden alle <i>Kalendersteuerungsfelder</i> außerhalb des Bereichs deaktiviert und können nicht ausgewählt werden</p>
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.in-range-css = Im Bereich css
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.in-range-css.tooltip = Die Getter-Funktion, die den Wert der CSS-Klasse für <i>Kalendersteuerungsfelder</i> im Zeitbereich abruft.
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.lower-bound = Untere Schranke
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.lower-bound.tooltip = Die Getter-Funktion, die den unteren Datumswert abruft. <p> Der Ausdruck wird als Ein-Argument-Funktion erwartet, die das Objekt mit dem Datumsattribut empfängt. </p>
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.out-of-range-css = Außerhalb des Bereichs css
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.out-of-range-css.tooltip = Die Getter-Funktion, die den Wert der CSS-Klasse für <i>Kalendersteuerungsfelder</i> außerhalb des Zeitbereichs abruft.
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.overlap = Überlappung
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.overlap.tooltip = Die Getter-Funktion, die den Wert des Boolean "overlap" abruft. <p> Wenn Überlappung wahr ist, müssen gegebene <i>Kalendersteuerungsfelder</i> nicht vollständig im Bereich von upperBound und lowerBound liegen, um "im Bereich" zu sein.</p>
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.upper-bound = Obere Schranke
com.top_logic.model.search.providers.MarkerFactoryByExpression.Config.upper-bound.tooltip = Die Getter-Funktion, die den oberen Grenzwert des Datums abruft. <p> Der Ausdruck wird als Ein-Argument-Funktion erwartet, die das Objekt mit dem Datumsattribut empfängt. </p>
com.top_logic.model.search.providers.MarkerFactoryByExpression.tooltip = Konfigurierbare <i>Marker-Fabrik</i> mit TL-Script-Ausdrücken.
com.top_logic.model.search.providers.ModelProviderByExpression = Modellanbieter nach Ausdruck
com.top_logic.model.search.providers.ModelProviderByExpression.Config.expr = Ausdruck
com.top_logic.model.search.providers.ModelProviderByExpression.Config.expr.tooltip = Der zu bewertende Ausdruck. <p> Der resultierende Wert wird als (anfängliches) Komponentenmodell der Komponente verwendet, die diesen Provider verwendet. </p>
com.top_logic.model.search.providers.ModelProviderByExpression.tooltip = <i>Modellanbieter</i>, der mit einem TL-Skript-Ausdruck parametrisiert werden kann.
com.top_logic.model.search.providers.MonomorphicCreateFormBuilderByExpression = Monomorphe Forumarerstellung über TL-Script
com.top_logic.model.search.providers.MonomorphicCreateFormBuilderByExpression$UIOptions = UI-Optionen
com.top_logic.model.search.providers.MonomorphicCreateFormBuilderByExpression$UIOptions.tooltip = Konfigurationsoptionen für den <i>monomorphen Formularersteller</i>, die direkt vom Benutzer konfigurierbar sind.
com.top_logic.model.search.providers.MonomorphicCreateFormBuilderByExpression.WithInitialization.initialization = Initialisierung
com.top_logic.model.search.providers.MonomorphicCreateFormBuilderByExpression.WithInitialization.initialization.tooltip = Die Funktion füllt das Formular mit Anfangswerten. <p>Erwartet ist eine Funktion mit zwei Argumenten. Das erste Argument ist das Formularobjekt, das zweite Argument ist das Kontextmodell der Komponente.</p>
com.top_logic.model.search.providers.MonomorphicCreateFormBuilderByExpression.tooltip = <i>Monomorphe Formularerstellung</i>, die es erlaubt, das angezeigte Formular mit einem TL-Script-Ausdruck zu initialisieren.
com.top_logic.model.search.providers.OntoTreeDropByExpression = Benutzerdefiniertes Ablegen auf Baumknoten
com.top_logic.model.search.providers.OntoTreeDropByExpression.Config.canDrop.tooltip = Die Funktion prüft, ob ein Drop auf den referenzierten Knoten durchgeführt werden kann. <p> Die Funktion erhält die gezogenen Elemente als erstes Argument und den referenzierten Knoten als zweites Argument. </p>
com.top_logic.model.search.providers.OntoTreeDropByExpression.Config.handleDrop.tooltip = Funktion, die einen Drop auf den referenzierten Knoten ausführt. <p> Die Funktion erhält die gezogenen Elemente als erstes Argument und den referenzierten Knoten als zweites Argument. </p> <p> Der von der Funktion zurückgegebene Wert wird an mögliche Post-Drop-Aktionen übergeben. </p>
com.top_logic.model.search.providers.OntoTreeDropByExpression.tooltip = <i>Tree Drop Target</i> erfolgt auf den referenzierten Zielknoten selbst.
com.top_logic.model.search.providers.OptionsByExpression = Optionen nach Ausdruck
com.top_logic.model.search.providers.OptionsByExpression.Config.function = Funktion
com.top_logic.model.search.providers.OptionsByExpression.Config.function.tooltip = Die Funktion, die mit dem Objekt ausgeführt wird, das die Eigenschaft enthält, für die Optionen als einzelnes Argument berechnet werden sollen.
com.top_logic.model.search.providers.OptionsByExpression.tooltip = <i>Generator</i>, der mit Hilfe von Suchausdrücken zum Auffinden der Optionen dynamisch konfiguriert werden kann.
com.top_logic.model.search.providers.OrderedTreeDropActionOp = Benutzerdefiniertes Ablegen auf Baumknoten
com.top_logic.model.search.providers.OrderedTreeDropActionOp.OrderedTreeDropAction.drop-position-parent = Abwurfposition Elternteil
com.top_logic.model.search.providers.OrderedTreeDropActionOp.OrderedTreeDropAction.drop-position-parent.tooltip = Das übergeordnete Objekt des Geschäftsobjekts, das die Abwurfposition markiert.
com.top_logic.model.search.providers.OrderedTreeDropActionOp.tooltip = Eine Spezialisierung der <i>Baumabwurfaktion</i> für den <i>benutzerdefinierten Abwurf neben oder im Baumknoten</i>.
com.top_logic.model.search.providers.OrderedTreeDropByExpression = Benutzerdefiniertes Ablegen neben oder in Baumknoten
com.top_logic.model.search.providers.OrderedTreeDropByExpression.Config.canDrop.tooltip = Funktion, die prüft, ob ein Drop vor einem Referenzknoten durchgeführt werden kann. <p> Die Funktion erhält die gezogenen Elemente als erstes Argument, den übergeordneten Knoten des referenzierten Knotens als zweites Argument und den referenzierten Knoten selbst als drittes Argument. </p> <p> Der referenzierte Knoten ist der Knoten, bevor welchen die gezogenen Elemente abgelegt werden. Wenn der referenzierte Knoten <code>null</code> ist, werden die gezogenen Elemente am Ende der Kindknoten des referenzierten Elternteils abgelegt. </p>
com.top_logic.model.search.providers.OrderedTreeDropByExpression.Config.handleDrop.tooltip = Funktion, die das Ablegen von gezogenen Elementen kurz vor einem Referenzknoten ausführt. <p> Die Funktion erhält die gezogenen Elemente als erstes Argument, den übergeordneten Knoten des referenzierten Knotens als zweites Argument und den referenzierten Knoten selbst als drittes Argument. </p> <p> Der referenzierte Knoten ist der Knoten, bevor welchen die gezogenen Elemente abgelegt werden. Wenn der referenzierte Knoten <code>null</code> ist, werden die gezogenen Elemente am Ende der Kindknoten des referenzierten Elternteils abgelegt. </p> <p> Der von der Funktion zurückgegebene Wert wird an eine mögliche Post-Drop-Aktion übergeben. </p>
com.top_logic.model.search.providers.OrderedTreeDropByExpression.tooltip = <i>Tree-Drop-Target</i> erfolgt vor, nach oder innerhalb des referenzierten Zielknotens selbst.
com.top_logic.model.search.providers.PolymorphicCreateFormBuilderByExpression = Polymorphe Formularerstellung durch Ausdruck
com.top_logic.model.search.providers.PolymorphicCreateFormBuilderByExpression.tooltip = <i>Erstellen Sie einen Form Builder</i>, der mit einer <em>TLScript</em> Initialisierungsfunktion parametrisiert werden kann.
com.top_logic.model.search.providers.ScriptTask = Skript-Aufgabe
com.top_logic.model.search.providers.ScriptTask.Config.script = Skript
com.top_logic.model.search.providers.ScriptTask.Config.script.tooltip = Skript zur Ausführung mit den konfigurierten <i>Zeitplänen</i>.
com.top_logic.model.search.providers.ScriptTask.tooltip = Task, der es ermöglicht, benutzerdefinierte Skripte periodisch auszuführen.
com.top_logic.model.search.providers.ScriptValueNaming$Name = Name
com.top_logic.model.search.providers.ScriptValueNaming$Name.tooltip = Konfigurationsoptionen für die <i>Benennung von Skriptwerten</i>.
com.top_logic.model.search.providers.ScriptValueNaming.Name.expr = Ausdruck
com.top_logic.model.search.providers.ScriptValueNaming.Name.expr.tooltip = Der Ausdruck, der ausgewertet werden soll, um den Wert abzurufen.
com.top_logic.model.search.providers.SecurityObjectByExpression = Sicherheitsobjekt nach Ausdruck
com.top_logic.model.search.providers.SecurityObjectByExpression.Config.function = Funktion
com.top_logic.model.search.providers.SecurityObjectByExpression.Config.function.tooltip = Funktion, die das Sicherheitsobjekt aus dem angegebenen Modell berechnet. <p> Es wird erwartet, dass die Funktion einen Parameter akzeptiert, nämlich das Modell, für das ein Sicherheitsobjekt benötigt wird. Sie muss das Sicherheitsobjekt für das angegebene Modell zurückgeben. </p>
com.top_logic.model.search.providers.SecurityObjectByExpression.tooltip = <i>Sicherheitsobjektanbieter</i>, der das Sicherheitsobjekt durch Auswertung eines <i>Ausdrucks</i> auf dem Basismodell berechnet.
com.top_logic.model.search.providers.SequenceNameByExpression = Funktionsaufruf
com.top_logic.model.search.providers.SequenceNameByExpression.Config.sequence-name = Name der Sequenz
com.top_logic.model.search.providers.SequenceNameByExpression.Config.sequence-name.tooltip = Funktion, die den Sequenznamen für einen gegebenen Kontext berechnet. <p> Die Funktion erwartet den Erstellungskontext eines Objekts als einziges Argument. Das Ergebnis der Funktion ist ein Bezeichner für die Sequenz. Für jeden eindeutigen Wert, der von dieser Funktion zurückgegeben wird, wird eine neue Sequenz von Zahlen gestartet. </p>
com.top_logic.model.search.providers.SequenceNameByExpression.tooltip = <i>Dynamischer Sequenzname</i>, der mit einem <i>TL-Script-Ausdruck</i> implementiert werden kann.
com.top_logic.model.search.providers.TableCommandProviderByExpression = Tabellenbefehlsanbieter nach Ausdruck
com.top_logic.model.search.providers.TableCommandProviderByExpression$Config$ExecutabilityExpression = Ausdruck der Ausführbarkeit
com.top_logic.model.search.providers.TableCommandProviderByExpression$Config$ExecutabilityExpression.tooltip = Konfigurationsoptionen für eine TL-Skript-Ausführbarkeitsfunktion.
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.ExecutabilityExpression.decision = Entscheidung
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.ExecutabilityExpression.decision.tooltip = Funktion, die entscheidet, ob ein Befehl gegenwärtig ausgeführt werden kann. <p> Die Funktion benötigt zwei Argumente: Eine Liste aller Tabellenzeilen als erstes Argument und die aktuelle Auswahl als zweites Argument. </p> <p> Um die Ausführung zu ermöglichen, muss <code>true</code> zurückgegeben werden. Jeder andere Wert verweigert die Ausführung. Wenn <i>Show disabled</i> auf <code>true</code> konfiguriert ist, wird ein Nicht-2-Funktionsergebnis als Grund für den deaktivierten Zustand show to the user verwendet. Es ist am besten, einen <i>Ressourcenschlüssel</i> mit einem internationalisierten Grund zurückzugeben. Ein String-Ergebnis wird als nicht internationalisierter Text verwendet. Jeder andere Wert ergibt keinen Grund.</p>
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.ExecutabilityExpression.show-disabled = Deaktiviert anzeigen
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.ExecutabilityExpression.show-disabled.tooltip = Ob ein nicht ausführbarer Befehl im deaktivierten Zustand angezeigt wird. <p> Ein Wert von <code>false</code> bedeutet, dass ein nicht ausführbarer Befehl ausgeblendet wird. Wenn ein deaktivierter Befehl angezeigt wird, sollte <i>Decision</i> einen Grund für die Nichtausführbarkeit angeben. </p>
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.executability = Ausführbarkeit
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.executability.tooltip = Ob der Befehl ausgeführt werden kann. <p> Alle <i>Ausdrücke der Ausführbarkeit</i> werden vor der <i>Implementierung</i> ausgeführt. Wenn einer von ihnen ein Ergebnis ungleich 0 liefert, darf der Befehl nicht ausgeführt werden. </p>
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.implementation = Umsetzung
com.top_logic.model.search.providers.TableCommandProviderByExpression.Config.implementation.tooltip = Das Befehlsskript. <p> Das Skript wird in einem Transaktionskontext ausgewertet. Das Skript erwartet zwei Argumente. Das erste Argument ist die Liste aller in der Tabelle angezeigten Zeilen. Das zweite Argument ist die Menge der ausgewählten Zeilen. </p>
com.top_logic.model.search.providers.TableCommandProviderByExpression.tooltip = <i>Tabellenbefehlsanbieter</i>, der mit TL-Script-Ausdrücken parametrisiert werden kann.
com.top_logic.model.search.providers.TableDragSourceByExpression = Tabelle Drag-Quelle nach Ausdruck
com.top_logic.model.search.providers.TableDragSourceByExpression.Config.canDrag = Prädikat einer Drag Möglichkeit
com.top_logic.model.search.providers.TableDragSourceByExpression.Config.canDrag.tooltip = Funktion, die prüft, ob eine  Tabellenzeile gezogen werden kann. <p> Die Funktion erhält eine Tabellenzeile. </p>
com.top_logic.model.search.providers.TableDragSourceByExpression.Config.dragEnabled = Tabellen Drag Funktionalität
com.top_logic.model.search.providers.TableDragSourceByExpression.Config.dragEnabled.tooltip = Ob das Ziehen aus der angegebenen Tabelle aktiviert ist.
com.top_logic.model.search.providers.TableDragSourceByExpression.tooltip = <i>Tabellen-Drag-Quelle</i>, die vollständig über Modellabfragen konfiguriert werden kann.
com.top_logic.model.search.providers.TableDropTargetByExpression = Tabelle Drop-Target nach Ausdruck
com.top_logic.model.search.providers.TableDropTargetByExpression.Config.canDrop.tooltip = Funktion, die prüft, ob ein Drop im Kontext einer referenzierten Zeile durchgeführt werden kann. <p> Die Funktion erhält die gezogenen Elemente als erstes Argument und eine referenzierte Zeile als zweites Argument. </p> <p> Abhängig von der Einstellung des <i>Drop-Typs</i> erfolgt der Drop-Vorgang bei einem geordneten Drop entweder kurz vor der referenzierten Zeile (oder am Ende aller Zeilen im Falle einer <code>null</code> Zeile) oder andernfalls in der referenzierten Zeile. </p> <p> Die Funktion soll einen booleschen Wert zurückgeben, nämlich <code>true</code>, wenn die Ablage durchgeführt werden kann, und <code>false</code> andernfalls. </p>
com.top_logic.model.search.providers.TableDropTargetByExpression.Config.dropType = Drop Typ
com.top_logic.model.search.providers.TableDropTargetByExpression.Config.dropType.tooltip = Gibt an, ob der Drop geordnet, d. h. vor oder nach, oder auf der referenzierten Zeile selbst erfolgt.
com.top_logic.model.search.providers.TableDropTargetByExpression.Config.handleDrop.tooltip = Funktion, die einen Drop im Kontext einer referenzierten Zeile ausführt. <p> Die Funktion erhält die gezogenen Elemente als erstes Argument und eine referenzierte Zeile als zweites Argument. </p> <p> Abhängig von der Einstellung des <i>Drop-Typs</i> erfolgt der Drop-Vorgang bei einem geordneten Drop entweder kurz vor der referenzierten Zeile (oder am Ende aller Zeilen im Falle einer <code>null</code> Zeile) oder andernfalls in der referenzierten Zeile. </p> <p> Der von der Funktion zurückgegebene Wert wird an mögliche Post-Drop-Aktionen weitergegeben. </p>
com.top_logic.model.search.providers.TableDropTargetByExpression.tooltip = <i>Tabellenzeilen-Drop</i>, das vollständig über Modellabfragen konfiguriert werden kann.
com.top_logic.model.search.providers.TitleByExpression = Titel nach Ausdruck
com.top_logic.model.search.providers.TitleByExpression.Config.expr = Ausdruck
com.top_logic.model.search.providers.TitleByExpression.Config.expr.tooltip = Funktion, die das Label für das <i>Model-Objekt</i> berechnet. <p> Die Funktion soll das <i>Model-Objekt</i> als Argument nehmen und ein Label für das angegebene Objekt zurückgeben. Das berechnete Label kann entweder ein literaler <i>String-Wert</i> oder ein <i>Ressourcenschlüssel</i> für die Internationalisierung sein. </p> <p> Wenn <i>Key</i> ebenfalls angegeben wird, wird das berechnete Label als einzelner Argumentwert an den konfigurierten <i>Ressourcenschlüssel</i> für die dynamische Einbettung übergeben. In diesem Fall wird erwartet, dass der Text in <i>Key</i> einen Platzhalter <code>{0}</code> enthält, in den die berechnete Beschriftung eingefügt werden soll. </p>
com.top_logic.model.search.providers.TitleByExpression.tooltip = <i>Modelltitel</i> Berechnung des Titels für die Komponente durch Anwendung eines <i>Ausdrucks</i> auf den Kanal der Komponente.
com.top_logic.model.search.providers.TransactionHandlerByExpression = Benutzerdefinierte Transaktion
com.top_logic.model.search.providers.TransactionHandlerByExpression$UIOptions = UI-Optionen
com.top_logic.model.search.providers.TransactionHandlerByExpression$UIOptions.tooltip = Konfigurationsoptionen für <i>Transaktionshandler per Ausdruck</i>, die direkt konfigurierbar sind.
com.top_logic.model.search.providers.TransactionHandlerByExpression.UIOptions.operation = Operation
com.top_logic.model.search.providers.TransactionHandlerByExpression.UIOptions.operation.tooltip = Die Operation, die in einem Transaktionskontext ausgeführt werden soll. <p> Erwartet wird eine Funktion mit zwei Argumenten. Das erste Argument ist das Formularobjekt, das die Benutzereingabe in seinen Attributen bereitstellt. Das zweite Argument ist das Kontextmodell des Befehls. </p> <p> Wenn die Funktion ein Ergebnis liefert, wird dieses Ergebnis an die konfigurierten Post-Create-Aktionen übergeben. Damit kann z. B. ein Objekt ausgewählt werden, das innerhalb der Transaktion erstellt wurde. </p>
com.top_logic.model.search.providers.TransactionHandlerByExpression.tooltip = <i>Befehlshandler</i>, der eine benutzerdefinierte Transaktion mit Formulareingabe ausführt.
com.top_logic.model.search.providers.TransformLinkingByExpression = Transformation
com.top_logic.model.search.providers.TransformLinkingByExpression.Config.function = Funktion
com.top_logic.model.search.providers.TransformLinkingByExpression.Config.function.tooltip = Die Transformation, die auf den Wert des Eingangskanals angewendet werden soll. <p> Die Funktion erhält den Wert des Eingangskanals als erstes Argument und den alten Kanalwert als zweites Argument. </p>
com.top_logic.model.search.providers.TransformLinkingByExpression.tooltip = <i>Kanalverknüpfung</i>, die einen <i>Transformationskanal</i> unter Anwendung einer in TL-Script implementierten Funktion erzeugt.
com.top_logic.model.search.providers.TreeDragSourceByExpression = Baum ziehen Quelle nach Ausdruck
com.top_logic.model.search.providers.TreeDragSourceByExpression.Config.canDrag = Prädikat einer Drag Möglichkeit
com.top_logic.model.search.providers.TreeDragSourceByExpression.Config.canDrag.tooltip = Funktion, die prüft, ob ein Baumknoten gezogen werden kann. <p> Die Funktion erhält einen Baumknoten. </p>
com.top_logic.model.search.providers.TreeDragSourceByExpression.Config.dragEnabled = Baum Drag Funktionalität
com.top_logic.model.search.providers.TreeDragSourceByExpression.Config.dragEnabled.tooltip = Ob das Ziehen aus dem angegebenen Baum aktiviert ist.
com.top_logic.model.search.providers.TreeDragSourceByExpression.tooltip = <i>Baumzugquelle</i>, die vollständig über Modellabfragen konfiguriert werden kann.
com.top_logic.model.search.providers.TreeDropActionOp = Baumfall-Aktion
com.top_logic.model.search.providers.TreeDropActionOp.TreeDropAction.drop-position.tooltip = Das Geschäftsobjekt, das die Abwurfposition markiert.
com.top_logic.model.search.providers.TreeDropActionOp.tooltip = <i>Drop-Aktion</i> zum Ablegen eines Objekts in einem Baum mit einem TL-Script-basierten Drop-Handler. <p> Der Drop-Handler muss ein <i>"Tree Drop Target by Expression</i> Handler" sein. </p>
com.top_logic.model.search.providers.TreeDropTargetByExpression = Baumabwurfziel nach Ausdruck
com.top_logic.model.search.providers.TreeDropTargetByExpression.tooltip = <i>Baumablageziel</i>, das vollständig über Modellabfragen konfiguriert werden kann.
com.top_logic.model.search.providers.TreeModelByExpression = Baummodell nach Ausdruck
com.top_logic.model.search.providers.TreeModelByExpression.Config.children = Kinder
com.top_logic.model.search.providers.TreeModelByExpression.Config.children.tooltip = Funktion, die die Kinder eines bestimmten Objekts in diesem Baum auflöst. <p> Die Funktion erhält einen Baumknoten als erstes Argument und das Komponentenmodell als zweites Argument. Als Ergebnis wird eine Liste der Kinderknoten des gegebenen Baumknotens erwartet. Ein Ergebnis von <code>null</code> oder die leere Liste bedeutet, dass der gegebene Knoten ein Blattknoten ist. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.finite = Endlich
com.top_logic.model.search.providers.TreeModelByExpression.Config.finite.tooltip = Ob es möglich ist, alle Knoten zu expandieren. <p> Diese Option darf nur aktiviert werden, wenn der Baum garantiert endlich ist. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.leafPredicate = Blatt-Prädikat
com.top_logic.model.search.providers.TreeModelByExpression.Config.leafPredicate.tooltip = Funktion, die prüft, ob ein bestimmter Knoten ein Blattknoten ist. <p> Ein Blattknoten wird für <i>Kinder</i> nicht weiter abgefragt. Visuell gibt es keinen Unterschied zwischen einem Blattknoten und einem Nicht-Blattknoten, der keine <i>Kinder</i> hat. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.modelPredicate = Modell-Prädikat
com.top_logic.model.search.providers.TreeModelByExpression.Config.modelPredicate.tooltip = Prädikat, das entscheidet, ob ein bestimmtes Objekt eine gültige Eingabe für den <i>Wurzelknoten</i> ist.
com.top_logic.model.search.providers.TreeModelByExpression.Config.modelQuery = Modell-Abfrage
com.top_logic.model.search.providers.TreeModelByExpression.Config.modelQuery.tooltip = Funktion zum Abrufen eines gültigen Komponentenmodells aus einem Objekt, für das das <i>Knotenprädikat</i> <code>true</code> zurückgibt. <p> Ein gültiges Komponentenmodell ist ein Objekt, für das <i>das Modellprädikat</i> <code>true</code> zurückgibt. </p> <p> Die Funktion erhält den potentiellen Baumknoten als erstes Argument und das aktuelle Komponentenmodell als zweites Argument. Es wird erwartet, dass die Funktion ein Objekt zurückgibt, für das <i>das Modellprädikat</i> <code>true</code> zurückgibt. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.nodePredicate = Knoten-Prädikat
com.top_logic.model.search.providers.TreeModelByExpression.Config.nodePredicate.tooltip = Funktion, die prüft, ob ein bestimmtes Objekt Teil dieses Baumes ist. <p> Wenn z.B. eine Objekterzeugung beobachtet wird, wird das neue Objekt in diesen Baum eingefügt, wenn folgendes gilt: Das <i>Knotenprädikat</i> gibt für das neue Objekt <code>true</code> zurück. Der Wurzelknoten dieses Baums kann durch rekursiven Aufruf von <i>Parents</i> auf dem neu erzeugten Objekt erreicht werden. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.nodesToUpdate = Zu aktualisierende Knoten
com.top_logic.model.search.providers.TreeModelByExpression.Config.nodesToUpdate.tooltip = Funktion zur Berechnung der zusätzlichen Knoten, die aktualisiert werden sollen, wenn sich ein bestimmtes Objekt ändert. <p> In einem Baum werden standardmäßig die direkten Eltern und Kinder der entsprechenden Knoten aktualisiert. </p> <p> Die Funktion erhält das geänderte Fachobjekt als erstes Argument und das aktuelle Komponentenmodell als zweites Argument. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.parents = Eltern
com.top_logic.model.search.providers.TreeModelByExpression.Config.parents.tooltip = Funktion, die den/die übergeordneten Knoten in diesem Baum auflöst. <p> Als erstes Argument nimmt die Funktion ein Objekt, für das <i>das Knotenprädikat</i> <code>true</code> ergibt. Als zweites Argument wird das Komponentenmodell übergeben. Die Funktion muss eine Liste derjenigen Knoten in diesem Baum zurückgeben, für die das angegebene Objekt in der von <i>Children</i> berechneten Sammlung enthalten ist. Es ist nicht erforderlich, ein einzelnes Ergebnis in eine Liste einzufügen. Ein Ergebnis von <code>null</code> wird als leere Liste interpretiert. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.rootNode = Wurzelknoten
com.top_logic.model.search.providers.TreeModelByExpression.Config.rootNode.tooltip = Die Mapping-Funktion, die das Komponentenmodell empfängt, gibt den Wurzelknoten dieses Baums zurück. <p> Das Eingabekomponentenmodell wurde zuvor vom <i>Modellprädikat</i> akzeptiert. </p>
com.top_logic.model.search.providers.TreeModelByExpression.Config.typesToObserve = Zu überwachende Typen
com.top_logic.model.search.providers.TreeModelByExpression.Config.typesToObserve.tooltip = Die Typen, deren Instanzen auf Änderungen überwacht werden müssen, damit <i>Zu aktualisierende Knoten</i> ausgeführt wird.
com.top_logic.model.search.providers.TreeModelByExpression.tooltip = <i>Baummodell-Builder</i>, der vollständig über Modellabfragen konfiguriert werden kann.
com.top_logic.model.search.providers.TreeOptionsByExpression = Baumoptionen über Ausdruck
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.children = Kinder
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.children.tooltip = Funktion, die die Kinder eines bestimmten Objekts in diesem Baum auflöst. <p> Die Funktion erhält als erstes Argument einen Baumknoten und als zweites Argument das aktuelle Objekt, das bearbeitet oder erstellt wird. Als Ergebnis wird eine Liste der Kindknoten des gegebenen Baumknotens erwartet. Ein Ergebnis von <code>null</code> oder eine leere Liste bedeutet, dass der angegebene Knoten ein Blattknoten ist. </p>
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.parents = Eltern
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.parents.tooltip = Funktion, die den/die übergeordneten Knoten in diesem Baum auflöst. <p> Die Funktion erhält einen Baumknoten als erstes Argument und das aktuelle Objekt, das bearbeitet oder erstellt wird, als zweites Argument. Die Funktion muss eine Liste derjenigen Knoten in diesem Baum zurückgeben, für die das angegebene Objekt in der von <i>Children</i> berechneten Sammlung enthalten ist. </p>
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.rootNode = Wurzelknoten
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.rootNode.tooltip = Funktion, die den Wurzelknoten dieses Baums auflöst. <p> Die Funktion erhält als erstes Argument das aktuelle Objekt, das bearbeitet oder erstellt wird. </p>
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.selection-filter = Auswahlfilter
com.top_logic.model.search.providers.TreeOptionsByExpression.Config.selection-filter.tooltip = Filter, der bestimmt, welche Knoten auswählbar sind. <p> Die Funktion erhält als erstes Argument einen Baumknoten und als zweites Argument das aktuelle Objekt, das bearbeitet oder erstellt wird. Die Funktion gibt true zurück, wenn der angegebene Knoten ausgewählt werden kann, andernfalls false. </p>
com.top_logic.model.search.providers.TreeOptionsByExpression.tooltip = <i>Generator</i>, der mit Hilfe von Suchausdrücken dynamisch konfiguriert werden kann, um baumartige Optionen bereitzustellen.
com.top_logic.model.search.providers.TreeTableDragSourceByExpression = Baumtabelle ziehen Quelle nach Ausdruck
com.top_logic.model.search.providers.TreeTableDragSourceByExpression.tooltip = <i>Tabelle ziehen Quelle durch Ausdruck</i> für Baumtabellen.
com.top_logic.model.search.providers.TreeTableDropTargetByExpression = Baumtabelle drop target by expression
com.top_logic.model.search.providers.TreeTableDropTargetByExpression.tooltip = <i>Tabellenablageziel</i> für Baumtabellen, die vollständig über Modellabfragen konfiguriert werden können.
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression = Zusätzlicher Header-Steuerungsanbieter über Ausdruck
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.cssClass = Css-Klasse
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.cssClass.tooltip = Zusätzliche CSS-Klasse für das gerenderte Steuerelement.
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.label = Beschriftung
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.label.tooltip = Der TL-Script-Ausdruck für das Label. <p> Dieses Skript wird mit einem einzigen Argument aufgerufen: Die <i>Liste</i> der Spaltenwerte. </p> <p> Das Ergebnis des Skripts wird in eine <i>Zeichenfolge</i> mit dem <i>Meta-Label-Anbieter</i> konvertiert. </p> <p> Wenn nicht gesetzt, wird nur das Label <i>Ressource-Schlüssel</i> geschrieben. </p>
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.resKey = Ressourcen-Schlüssel
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.resKey.tooltip = Der <i>Ressourcenschlüssel</i> für das Etikett. <p> Der <i>Tooltip-Ressourcenschlüssel</i> wird aus dieser Einstellung mit dem Suffix <code>.tooltip</code> abgeleitet. Wenn ein Wert angegeben wird, müssen beide Übersetzungen (mit und ohne das Suffix <code>.tooltip</code>) angegeben werden. </p> <p> Wenn dies nicht gesetzt ist, wird nur das <i>Tooltip-Skript</i> geschrieben </p>
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.tooltip = Tooltip
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.tooltip.tooltip = Der TL-Script-Ausdruck für den Tooltip. <p> Dieses Skript wird mit einem einzigen Parameter aufgerufen: Die <i>Liste</i> der Spaltenwerte. </p> <p> Das Ergebnis des Skripts wird in eine <i>Zeichenfolge</i> mit dem <i>Meta-Label-Anbieter</i> umgewandelt. </p> <p> Wenn der Wert nicht gesetzt ist, wird nur der statische Tooltip <i>des Ressourcenschlüssels</i> geschrieben. </p>
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.useRowObjects = Zeilenobjekte verwenden
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.Config.useRowObjects.tooltip = Ob die <i>Label-</i> und <i>Tooltip-Skripte</i> die Zeilenobjekte anstelle der Spaltenwerte als Eingabe erhalten sollen.
com.top_logic.model.search.table.AdditionalHeaderControlProviderByExpression.tooltip = Der <i>Steuerungsanbieter</i> für <i>zusätzliche Kopfsteuerung über Ausdruck</i>.
com.top_logic.model.search.tiles.AbstractPreviewContent = Vorschau des Inhalts
com.top_logic.model.search.tiles.AbstractPreviewContent.tooltip = Oberklasse für <i>Inhalte</i>, die den Rahmen des Vorschauinhalts bilden.
com.top_logic.model.search.tiles.DynamicTilePreviewText = Dynamischer Kachelvorschau-Text
com.top_logic.model.search.tiles.DynamicTilePreviewText.Config.text = Text
com.top_logic.model.search.tiles.DynamicTilePreviewText.Config.text.tooltip = Der Ausdruck berechnet den textuellen Inhalt aus dem Modell der Vorschau. <p> Es wird erwartet, dass der Ausdruck ein Eingabeelement akzeptiert, nämlich das Modell der Vorschau. Es wird erwartet, dass der <i>Ausdruck</i> ein Objekt zurückgibt, das als textueller Wert angezeigt werden kann, z. B. ein <i>Ressourcenschlüssel</i> oder eine einfache Zeichenkette. </p>
com.top_logic.model.search.tiles.DynamicTilePreviewText.tooltip = <i>Text</i> Berechnung des Textes anhand eines <i>Ausdrucks</i> aus dem Modell.
com.top_logic.model.search.tiles.FormPreviewContent = Inhalt der Formularvorschau
com.top_logic.model.search.tiles.FormPreviewContent.Config.attributes = Attribute
com.top_logic.model.search.tiles.FormPreviewContent.Config.attributes.tooltip = Die Attribute des <i>Typs</i>, die im Formular angezeigt werden.
com.top_logic.model.search.tiles.FormPreviewContent.Config.icon = Icon
com.top_logic.model.search.tiles.FormPreviewContent.Config.icon.tooltip = Symbol, das angezeigt wird, wenn das angegebene Modell nicht dem erwarteten <i>Typ</i> entspricht.
com.top_logic.model.search.tiles.FormPreviewContent.tooltip = <i>Vorschauinhalt</i>, der ein Formular als Vorschau anzeigt. <p> Ein <i>Formularvorschau-Inhalt</i> zeigt einige Attribute des gegebenen Modells in einem einfachen Formular als Vorschau an. </p>
com.top_logic.model.search.tiles.ImageContentProvider = Anbieter von Bildinhalten
com.top_logic.model.search.tiles.ImageContentProvider.Config.image = Bild
com.top_logic.model.search.tiles.ImageContentProvider.Config.image.tooltip = <i>Ausdruck</i>, der das Symbol der Vorschau berechnet. <p> Es wird erwartet, dass der Ausdruck ein Eingabeelement akzeptiert, das Modell für die Vorschau. Es wird erwartet, dass der <i>Ausdruck</i> entweder ein <i>Themenbild</i> oder die Quelle für ein Bild zurückgibt, z. B. "css:fas fa-bug". </p>
com.top_logic.model.search.tiles.ImageContentProvider.tooltip = <i>Inhalt</i> unter Verwendung eines konfigurierten Bildes als Inhalt der Vorschau.
com.top_logic.model.search.tiles.ModelBasedTilePreview = Modellbasierte Kachelvorschau
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.content-preview = Inhaltliche Vorschau
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.content-preview.tooltip = Konfiguration der Inhaltsvorschau. <p> Die Vorschau wird mit dem von <i>Model</i> zurückgegebenen Modell erstellt. </p>
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.description = Beschreibung
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.description.tooltip = Konfiguration der Beschreibung der Vorschau. <p> Die Beschreibung wird mit dem von <i>Model</i> zurückgegebenen Modell erstellt. </p>
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.icon.tooltip = Eigentlich unbenutzt.
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.label = Etikett
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.label.tooltip = Konfiguration der Beschriftung der Vorschau. Wenn nichts konfiguriert ist, wird der Name der Komponente als Beschriftung verwendet. <p> Das Etikett wird mit dem von <i>Model</i> zurückgegebenen Modell erstellt. </p>
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.model = Modell
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.model.tooltip = <i>Modellspezifikation</i>, die für die Berechnung von <i>Label</i>, <i>Beschreibung</i> und <i>Inhaltsvorschau</i> verwendet wird. <p> Wenn kein Modell angegeben ist, wird das Modell der Kachel verwendet. Wenn die Kachel zum Beispiel ein Geschäftsobjekt darstellt, wird dieses Objekt als Modell verwendet. </p>
com.top_logic.model.search.tiles.ModelBasedTilePreview.tooltip = <i>Etikettenbasierte Vorschau</i>, deren Teile (Etikett, Beschreibung und eigentliche Vorschau) separat konfiguriert werden.
com.top_logic.model.search.tiles.SimpleStaticTilePreviewText = Einfacher statischer Kachelvorschau-Text
com.top_logic.model.search.tiles.SimpleStaticTilePreviewText.Config.text = Text
com.top_logic.model.search.tiles.SimpleStaticTilePreviewText.Config.text.tooltip = <i>Ressourcenschlüssel</i> für den internationalisierten Text. <p> Der <i>Ressourcenschlüssel</i> kann eine freie Variable{0}) enthalten, die mit der Standardübersetzung des Vorschaumodells gefüllt wird. </p>
com.top_logic.model.search.tiles.SimpleStaticTilePreviewText.tooltip = <i>Text</i> Berechnung des Textes unter Verwendung eines konfigurierten <i>Ressourcenschlüssels</i>.
com.top_logic.model.search.tiles.StaticImageContentProvider = Anbieter statischer Bildinhalte
com.top_logic.model.search.tiles.StaticImageContentProvider.Config.image = Bild
com.top_logic.model.search.tiles.StaticImageContentProvider.Config.image.tooltip = Bild, das im Inhaltsbereich der Kachelvorschau angezeigt werden soll.
com.top_logic.model.search.tiles.StaticImageContentProvider.tooltip = <i>Inhaltsvorschau</i>, die ein statisches konfiguriertes Bild liefert.
com.top_logic.model.search.tiles.TableContentProvider = Anbieter von Tabelleninhalten
com.top_logic.model.search.tiles.TableContentProvider$TableConfig = Konfiguration der Tabelle
com.top_logic.model.search.tiles.TableContentProvider$TableConfig.tooltip = Konfiguration der Tabelle, die im Vorschaubereich angezeigt werden soll.
com.top_logic.model.search.tiles.TableContentProvider.TableConfig.attributes = Attribute
com.top_logic.model.search.tiles.TableContentProvider.TableConfig.attributes.tooltip = Die Attribute des <i>Typs</i>, die als Spalten in der Tabelle angezeigt werden.
com.top_logic.model.search.tiles.TableContentProvider.TableConfig.rows = Zeilen
com.top_logic.model.search.tiles.TableContentProvider.TableConfig.rows.tooltip = <i>Ausdruck</i>, der die in der Tabelle anzuzeigenden Zeilen auf der Grundlage des Modells der Vorschau berechnet.
com.top_logic.model.search.tiles.TableContentProvider.TableConfig.title = Titel
com.top_logic.model.search.tiles.TableContentProvider.TableConfig.title.tooltip = <i>Ausdruck</i>, der auf der Grundlage des Vorschaumodells einen optionalen Titel berechnet, der in der Tabelle angezeigt werden soll. <p> Es wird erwartet, dass das Ergebnis in einen <i>Ressourcenschlüssel</i> konvertierbar ist. </p>
com.top_logic.model.search.tiles.TableContentProvider.tooltip = <i>Inhalt</i>, der eine konfigurierte Tabelle im Vorschaubereich wiedergibt.
com.top_logic.model.search.ui.ExpertSearchExpressionEditor = Editor für Expertensuchausdrücke
com.top_logic.model.search.ui.ExpertSearchExpressionEditor$SearchConfig = Konfiguration suchen
com.top_logic.model.search.ui.ExpertSearchExpressionEditor$SearchConfig.tooltip = GUI-Modell, das im <i>Editor für Expertensuchausdrücke</i> angezeigt wird.
com.top_logic.model.search.ui.ExpertSearchExpressionEditor.SearchConfig.search-expression = Ausdruck suchen
com.top_logic.model.search.ui.ExpertSearchExpressionEditor.SearchConfig.search-expression.tooltip = Der Suchausdruck, der ausgeführt werden soll.
com.top_logic.model.search.ui.ExpertSearchExpressionEditor.tooltip = Code-Editor zum Erstellen von TLScript-basierten <i>Suchausdrücken</i>.
com.top_logic.model.search.ui.GUISearchExpressionEditor = GUI-Suchausdruck-Editor
com.top_logic.model.search.ui.GUISearchExpressionEditor.Config.searchName = Name suchen
com.top_logic.model.search.ui.GUISearchExpressionEditor.Config.searchName.tooltip = Der Name der zu verwendenden Suchkonfiguration.
com.top_logic.model.search.ui.GUISearchExpressionEditor.tooltip = GUI-basierter Editor zum Erstellen von SearchExpressions.
com.top_logic.model.search.ui.RefreshSearchHandler = Such-Handler auffrischen
com.top_logic.model.search.ui.RefreshSearchHandler.tooltip = Aktualisieren Sie die Suchergebnisse.
com.top_logic.model.search.ui.SearchComponent = Komponente Suchen
com.top_logic.model.search.ui.SearchComponent.Config.searchExpressionEditorsTabbarName = Suchausdruck-Editoren Registerkartenname
com.top_logic.model.search.ui.SearchComponent.Config.searchExpressionEditorsTabbarName.tooltip = Name der GUI-Suchkomponente.
com.top_logic.model.search.ui.SearchComponent.Config.searchExpressionSelectorName = Name des Selektors für Suchausdrücke
com.top_logic.model.search.ui.SearchComponent.Config.searchExpressionSelectorName.tooltip = Name der SearchSelector-Komponente.
com.top_logic.model.search.ui.SearchComponent.tooltip = <i>Layoutkomponente</i> für die <i>modellbasierte</i> Suche.
com.top_logic.model.search.ui.SearchResultTable = Tabelle der Suchergebnisse
com.top_logic.model.search.ui.SearchResultTable.tooltip = Komponente, die ein Suchergebnis anzeigt.
com.top_logic.model.search.ui.TLScriptCodeEditorControl$PopupCP = Popup CP
com.top_logic.model.search.ui.TLScriptCodeEditorControl$PopupCP.tooltip = <i>Control-Provider</i>, der ein <i>Script-Code-Editor-Steuerelement</i> in einem Popup anzeigt.
com.top_logic.model.search.ui.help.HelpPageIndex = Index der Hilfeseite
com.top_logic.model.search.ui.help.HelpPageIndex.tooltip = Index der Hilfeseiten zur Anzeige im TL-Script-Editor als kontextsensitive Hilfe.
com.top_logic.model.search.ui.model.AbstractStep.expected-multiplicity = Erwartete Multiplizität
com.top_logic.model.search.ui.model.AbstractStep.expected-multiplicity.tooltip = Die erwartete Multiplizität des vollständigen <i>Navigationswertausdrucks</i>, zu der dieser <i>Schritt</i> gehört.
com.top_logic.model.search.ui.model.AbstractStep.expected-type = Erwarteter Typ
com.top_logic.model.search.ui.model.AbstractStep.expected-type.tooltip = Der erwartete Typ des vollständigen <i>Navigationswertausdrucks</i>, zu dem dieser <i>Schritt</i> gehört.
com.top_logic.model.search.ui.model.AbstractStep.next = Nächste
com.top_logic.model.search.ui.model.AbstractStep.next.tooltip = Der nächste (optionale) Navigationsschritt.
com.top_logic.model.search.ui.model.AbstractTypeSearch.type = Typ
com.top_logic.model.search.ui.model.AbstractTypeSearch.type.tooltip = Die Art der zu durchsuchenden Objekte.
com.top_logic.model.search.ui.model.AssociationBased = Vereinsbasiert
com.top_logic.model.search.ui.model.AssociationBased.incoming-part = Eingehender Teil
com.top_logic.model.search.ui.model.AssociationBased.incoming-part.tooltip = Die eingehende <i>Vereinigung endet</i>. <p> Das Ergebnis ist der <i>ausgehende Teil</i>, während der <i>eingehende Teil</i> auf das Kontextobjekt zeigt. </p>
com.top_logic.model.search.ui.model.AssociationBased.outgoing-part = Ausgehender Teil
com.top_logic.model.search.ui.model.AssociationBased.outgoing-part.tooltip = Die scheidende <i>Vereinigung endet</i>.
com.top_logic.model.search.ui.model.AssociationBased.tooltip = Ein <i>Suchteil</i>, der auf der Verwendung einer <i>Assoziation</i> basiert.
com.top_logic.model.search.ui.model.AssociationFilter = Assoziationsfilter
com.top_logic.model.search.ui.model.AssociationFilter.tooltip = Ein <i>assoziationsbasierter</i> <i>Navigationsfilter</i>.
com.top_logic.model.search.ui.model.AssociationStep = Schritt zur Assoziierung
com.top_logic.model.search.ui.model.AssociationStep.tooltip = Ein <i>assoziationsbasierter</i> <i>Navigationsschrittausdruck</i>.
com.top_logic.model.search.ui.model.AttributeBased.attribute = Attribut
com.top_logic.model.search.ui.model.AttributeBased.attribute.tooltip = Es geht um den <i>strukturierten Typteil, der</i> <i>auf</i> diesem <i>Attribut basiert</i>.
com.top_logic.model.search.ui.model.AttributeFilter = Attribut-Filter
com.top_logic.model.search.ui.model.AttributeFilter.tooltip = Ein <i>attributbasierter</i> <i>Navigationsfilter</i>.
com.top_logic.model.search.ui.model.AttributeStep = Attribut-Schritt
com.top_logic.model.search.ui.model.AttributeStep.tooltip = Ein <i>attributbasierter</i> <i>Navigationsschrittausdruck</i>.
com.top_logic.model.search.ui.model.CombinationExpression.combinator = Kombinator
com.top_logic.model.search.ui.model.CombinationExpression.combinator.tooltip = Der <i>Suchausdruck-Kombinator</i> definiert, wie die Ausdrücke zu einem einzigen Ausdruck kombiniert werden sollen.
com.top_logic.model.search.ui.model.CombinedFilter = Kombinierter Filter
com.top_logic.model.search.ui.model.CombinedFilter.tooltip = <i>Suchfilter, der</i> aus einer Kombination von inneren Filtern besteht.
com.top_logic.model.search.ui.model.CombinedOperator$Impl = Umsetzung
com.top_logic.model.search.ui.model.CombinedOperator$Impl.tooltip = <i>Implementierung</i> für <i>kombinierten Betreiber</i>.
com.top_logic.model.search.ui.model.ContextFilter = Kontext-Filter
com.top_logic.model.search.ui.model.ContextFilter.context-expression = Kontext-Ausdruck
com.top_logic.model.search.ui.model.ContextFilter.context-expression.tooltip = Referenzierter Ausdruck mit passendem Typ aus einem <i>Context-Vorläufer</i>.
com.top_logic.model.search.ui.model.ContextFilter.tooltip = <i>Suchfilter</i>, der genau ein bestimmtes Objekt aus einem Suchausdruck in seinem Kontext findet. <p> Dabei handelt es sich nicht um eine Prüfung eines der Attribute eines Objekts, sondern um eine Prüfung des Objekts (Identität) selbst. </p> <p> <i>Referenzwert</i> stellt den Ausgangspunkt einer Navigation dar. </p>
com.top_logic.model.search.ui.model.ContextFilter.type = Typ
com.top_logic.model.search.ui.model.ContextFilter.type.tooltip = Die Art des Kontextausdrucks.
com.top_logic.model.search.ui.model.FilterContainer.filters = Filter
com.top_logic.model.search.ui.model.FilterContainer.filters.tooltip = Liste der <i>Suchfilter</i>, die auf die Kontextobjekte anzuwenden sind.
com.top_logic.model.search.ui.model.FilterContainer.name.tooltip = Der Name für die Untersuchen wird automatisch ausgefüllt.
com.top_logic.model.search.ui.model.IncomingReferenceBased = Eingehende Referenz basierend
com.top_logic.model.search.ui.model.IncomingReferenceBased.reference = Referenz
com.top_logic.model.search.ui.model.IncomingReferenceBased.reference.tooltip = Die <i>Referenz</i>, die rückwärts navigiert wird.
com.top_logic.model.search.ui.model.IncomingReferenceBased.tooltip = Ein <i>Suchteil</i>, der auf der Verwendung einer eingehenden <i>Referenz</i> basiert.
com.top_logic.model.search.ui.model.IncomingReferenceFilter = Eingehender Referenzfilter
com.top_logic.model.search.ui.model.IncomingReferenceFilter.tooltip = <i>Suchfilter</i>, der Objekte findet, die von anderen Objekten in einem bestimmten Attribut mit Referenzwert referenziert werden.
com.top_logic.model.search.ui.model.IncomingReferenceStep = Eingehender Referenzschritt
com.top_logic.model.search.ui.model.IncomingReferenceStep.tooltip = Ein <i>auf einer eingehenden Referenz basierender</i> <i>Navigationsschrittausdruck</i>.
com.top_logic.model.search.ui.model.NamedDefinition.name = Name
com.top_logic.model.search.ui.model.NamedDefinition.name.tooltip = Name für den Verweis auf das Kontextobjekt aus inneren Ausdrücken.
com.top_logic.model.search.ui.model.NavigationValue = Navigationswert
com.top_logic.model.search.ui.model.NavigationValue.base = Basis
com.top_logic.model.search.ui.model.NavigationValue.base.tooltip = Verweis auf ein Kontextobjekt, mit dem die Navigation gestartet werden kann.
com.top_logic.model.search.ui.model.NavigationValue.tooltip = <i>Rechte Seite</i>, die einen Vergleichswert erzeugt, indem sie durch die Eigenschaften eines benannten Kontextobjekts navigiert.
com.top_logic.model.search.ui.model.OperatorContainer.comparisons = Vergleiche
com.top_logic.model.search.ui.model.OperatorContainer.comparisons.tooltip = Die <i>Operatoren</i>, die auf den Eigentumswert ausgeführt werden sollen.
com.top_logic.model.search.ui.model.PredefinedReferenceValue = Vordefinierter Referenzwert
com.top_logic.model.search.ui.model.PredefinedReferenceValue.tooltip = Ein <i>Referenzwert</i> zu einem vordefinierten Wert mit einem internationalisierten Namen.
com.top_logic.model.search.ui.model.QueryValue = Wert abfragen
com.top_logic.model.search.ui.model.QueryValue.part = Teil
com.top_logic.model.search.ui.model.QueryValue.part.tooltip = Die Eigenschaft, die in der Ergebnismenge ausgewertet werden soll. <p> Es befinden sich alle Objekte in der Ergebnismenge, die vom eigenen Typ des <i>Teils</i> sind und den <i>Filtern</i> entsprechen. </p>
com.top_logic.model.search.ui.model.QueryValue.tooltip = Wertemenge, die aus der Auswertung einer Eigenschaft aller Ergebnisobjekte einer Unterabfrage abgerufen wird.
com.top_logic.model.search.ui.model.ReferenceValue = Referenzwert
com.top_logic.model.search.ui.model.ReferenceValue.name = Name
com.top_logic.model.search.ui.model.ReferenceValue.name.tooltip = Der <i>Name</i><i> (benannte Definition</i>) des Ausdrucks, auf den verwiesen wird.
com.top_logic.model.search.ui.model.ReferenceValue.tooltip = Verweis auf einen Definitionsausdruck. <p> Dies ist der Startpunkt einer Navigation. </p> <p> Der <i>Kontextfilter</i> hat eine ähnliche Funktion: "Das getestete Objekt ist einer der Kontextwerte." Es handelt sich also nicht um einen Test eines der Attribute, sondern um einen Test über das Objekt (Identität) selbst. </p>
com.top_logic.model.search.ui.model.Search = Suche
com.top_logic.model.search.ui.model.Search.config-name.tooltip = Siehe: <i>Name der Konfiguration</i> <p> Alle anderen <i>Suchteile</i> navigieren zu ihrem Container, um den Wert dieser Eigenschaft zu erhalten. Aber dies ist der oberste <i>Suchteil</i>, er hat keinen Container. Daher muss der Wert explizit gesetzt werden. </p>
com.top_logic.model.search.ui.model.Search.predefined-parameters = Vordefinierte Parameter
com.top_logic.model.search.ui.model.Search.predefined-parameters.tooltip = Eine <i>Liste</i> von vordefinierten Parametern. <p> Diese Parameter sind für jede Abfrage gleich. </p>
com.top_logic.model.search.ui.model.Search.tooltip = UI-Modell für die Top-Level-Suche.
com.top_logic.model.search.ui.model.SubQuery = Unterabfrage
com.top_logic.model.search.ui.model.SubQuery.tooltip = <i>Rechte Seite</i>, die das Vergleichsobjekt dynamisch mit einer verschachtelten Abfrage auswählt.
com.top_logic.model.search.ui.model.SubSearch = Unter-Suche
com.top_logic.model.search.ui.model.SubSearch.tooltip = <i>Suchteile</i>, die einen vollständigen Suchausdruck darstellen.
com.top_logic.model.search.ui.model.TranslatedSearchPart = Übersetzter Suchteil
com.top_logic.model.search.ui.model.TranslatedSearchPart.tooltip = Ein <i>Suchteil</i>, der einen internationalisierten Namen hat.
com.top_logic.model.search.ui.model.TranslatedSearchPart.translation = Übersetzung
com.top_logic.model.search.ui.model.TranslatedSearchPart.translation.tooltip = Der internationalisierte Name.
com.top_logic.model.search.ui.model.TupleSearch = Tupel-Suche
com.top_logic.model.search.ui.model.TupleSearch$CoordDef = Koord. def
com.top_logic.model.search.ui.model.TupleSearch$CoordDef$InlineTypeSearch = Inline-Typ-Suche
com.top_logic.model.search.ui.model.TupleSearch$CoordDef$InlineTypeSearch.tooltip = UI-Teil, der einen Koordinatenausdruck darstellt.
com.top_logic.model.search.ui.model.TupleSearch$CoordDef.tooltip = Definition von Tupel-Koordinatenwerten.
com.top_logic.model.search.ui.model.TupleSearch$NullableSpec = Annullierbare Spezifikation
com.top_logic.model.search.ui.model.TupleSearch$NullableSpec.tooltip = Option, ob die Koordinate eines Tupels mit <code>null</code> gefüllt wird, wenn für diese Koordinate keine Übereinstimmung gefunden wird.
com.top_logic.model.search.ui.model.TupleSearch.CoordDef.expr = Ausdruck
com.top_logic.model.search.ui.model.TupleSearch.CoordDef.expr.tooltip = UI zur Eingabe des Ausdrucks für die Erstellung von Werten für diese Koordinate.
com.top_logic.model.search.ui.model.TupleSearch.CoordDef.nullable = Anfechtbar
com.top_logic.model.search.ui.model.TupleSearch.CoordDef.nullable.tooltip = Ob diese Koordinate optional oder obligatorisch ist.
com.top_logic.model.search.ui.model.TupleSearch.NullableSpec.MANDATORY = Obligatorisch
com.top_logic.model.search.ui.model.TupleSearch.NullableSpec.MANDATORY.tooltip = Die Koordinate ist obligatorisch. Wenn keine Übereinstimmung gefunden wird, wird kein Tupelergebnis erzeugt.
com.top_logic.model.search.ui.model.TupleSearch.NullableSpec.NULLABLE = Anfechtbar
com.top_logic.model.search.ui.model.TupleSearch.NullableSpec.NULLABLE.tooltip = Die Koordinate ist optional. Wenn für diese Koordinate keine Übereinstimmung gefunden wird, wird sie mit <code>null</code> gefüllt.
com.top_logic.model.search.ui.model.TupleSearch.coords = Koordinaten
com.top_logic.model.search.ui.model.TupleSearch.coords.tooltip = Definition der Koordinaten des Tupels.
com.top_logic.model.search.ui.model.TupleSearch.tooltip = UI zum Erstellen eines Tupel-Suchausdrucks.
com.top_logic.model.search.ui.model.TypeCheckStep = Schritt der Typprüfung
com.top_logic.model.search.ui.model.TypeCheckStep.tooltip = Ein <i>auf einer Typprüfung basierender</i> <i>Navigationsschrittausdruck</i>.
com.top_logic.model.search.ui.model.TypeSearch = Suche nach Typ
com.top_logic.model.search.ui.model.TypeSearch.tooltip = Suche auf oberster Ebene nach Objekten eines bestimmten Typs.
com.top_logic.model.search.ui.model.UnionSearch.unions = Gewerkschaften
com.top_logic.model.search.ui.model.UnionSearch.unions.tooltip = Das Ergebnis dieser <i>Suche</i> ist die Vereinigung der Ergebnisse der <i>Sucharten</i>.
com.top_logic.model.search.ui.model.ValueContext.value-multiplicity = Werte-Multiplizität
com.top_logic.model.search.ui.model.ValueContext.value-multiplicity.tooltip = Die Multiplizität des Werttyps. <p>false: Nur ein einziger Wert. true: Mehrere Werte. </p>
com.top_logic.model.search.ui.model.ValueContext.value-type = Werttyp
com.top_logic.model.search.ui.model.ValueContext.value-type.tooltip = Die <i>Art</i>, um die es in diesem Ausdruck geht.
com.top_logic.model.search.ui.model.literal.LiteralBooleanValue = Literaler boolescher Wert
com.top_logic.model.search.ui.model.literal.LiteralBooleanValue.tooltip = <i>Literaler primitiver Wert</i>, der einen literalen booleschen Wert beschreibt.
com.top_logic.model.search.ui.model.literal.LiteralDateTimeValue = Wörtlicher Datum-Zeit-Wert
com.top_logic.model.search.ui.model.literal.LiteralDateTimeValue.tooltip = <i>Literaler primitiver Wert</i>, der ein literales Datum mit Zeitwert beschreibt.
com.top_logic.model.search.ui.model.literal.LiteralDateValue = Wörtlicher Datumswert
com.top_logic.model.search.ui.model.literal.LiteralDateValue.tooltip = <i>Literaler primitiver Wert</i>, der einen literalen Datumswert beschreibt.
com.top_logic.model.search.ui.model.literal.LiteralFloatValue = Literaler Float-Wert
com.top_logic.model.search.ui.model.literal.LiteralFloatValue.tooltip = <i>Literaler primitiver Wert</i>, der einen literalen Gleitkommawert beschreibt.
com.top_logic.model.search.ui.model.literal.LiteralIntegerValue = Literaler ganzzahliger Wert
com.top_logic.model.search.ui.model.literal.LiteralIntegerValue.tooltip = <i>Literaler primitiver Wert</i>, der einen literal ganzzahligen Wert beschreibt. <p> Er verwendet <i>Long</i> anstelle von <i>Integer</i>, um so viele Integer-Zahlentypen wie möglich abzudecken. </p>
com.top_logic.model.search.ui.model.literal.LiteralObjectSet = Literaler Objektsatz
com.top_logic.model.search.ui.model.literal.LiteralObjectSet.objects = Objekte
com.top_logic.model.search.ui.model.literal.LiteralObjectSet.objects.tooltip = Der wörtliche Beispielsatz.
com.top_logic.model.search.ui.model.literal.LiteralObjectSet.tooltip = <i>Auf der rechten Seite</i> wird ein wörtlicher Satz von Vergleichsobjekten beschrieben.
com.top_logic.model.search.ui.model.literal.LiteralObjectValue = Wörtlicher Objektwert
com.top_logic.model.search.ui.model.literal.LiteralObjectValue.object = Objekt
com.top_logic.model.search.ui.model.literal.LiteralObjectValue.object.tooltip = Der wörtliche Beispielsatz.
com.top_logic.model.search.ui.model.literal.LiteralObjectValue.tooltip = Auf<i> der rechten Seite</i> wird ein wörtliches Vergleichsobjekt beschrieben.
com.top_logic.model.search.ui.model.literal.LiteralPrimitiveValue.compare-value = Wert vergleichen
com.top_logic.model.search.ui.model.literal.LiteralPrimitiveValue.compare-value.tooltip = Der tatsächliche Wert, mit dem zu vergleichen ist. <p> Hinweis: Die Eigenschaft kann nicht statisch als <i>obligatorisch</i> deklariert werden, da dies die Konfiguration von Vorlagenwerten z.B. in y <i>Suchoptionen</i> mit nicht gesetzten Werten verhindern würde. </p>
com.top_logic.model.search.ui.model.literal.LiteralStringValue = Literaler String-Wert
com.top_logic.model.search.ui.model.literal.LiteralStringValue.tooltip = <i>Literaler primitiver Wert</i>, der einen literalen Zeichenkettenwert beschreibt.
com.top_logic.model.search.ui.model.operator.AbstractFloatCompare.precision = Präzision
com.top_logic.model.search.ui.model.operator.AbstractFloatCompare.precision.tooltip = Die Anzahl der Dezimalstellen nach dem Punkt, die für den Vergleich relevant sind.
com.top_logic.model.search.ui.model.operator.AbstractStringCompare.case-sensitive = Groß-/Kleinschreibung beachten
com.top_logic.model.search.ui.model.operator.AbstractStringCompare.case-sensitive.tooltip = Ob beim Vergleich Groß- und Kleinbuchstaben unterschiedlich berücksichtigt werden sollen.
com.top_logic.model.search.ui.model.operator.BooleanCompare$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.BooleanCompare$Impl.tooltip = <i>Implementierung</i> für <i>booleschen Vergleich</i>.
com.top_logic.model.search.ui.model.operator.BooleanCompare$Kind = Art
com.top_logic.model.search.ui.model.operator.BooleanCompare$Kind.tooltip = Eine Art <i>boolescher Vergleichsvergleich</i>.
com.top_logic.model.search.ui.model.operator.BooleanCompare.Kind.EQUALS = Entspricht
com.top_logic.model.search.ui.model.operator.BooleanCompare.Kind.EQUALS.tooltip = Für eine Übereinstimmung müssen die verglichenen Werte gleich sein.
com.top_logic.model.search.ui.model.operator.BooleanCompare.Kind.NOT_EQUALS = Nicht gleich
com.top_logic.model.search.ui.model.operator.BooleanCompare.Kind.NOT_EQUALS.tooltip = Bei einer Übereinstimmung dürfen die verglichenen Werte nicht gleich sein.
com.top_logic.model.search.ui.model.operator.BooleanCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.BooleanCompare.kind.tooltip = Eine Art von Vergleich.
com.top_logic.model.search.ui.model.operator.ComparableCompare$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.ComparableCompare$Impl.tooltip = <i>Implementierung</i> für einen <i>vergleichbaren Vergleich</i>.
com.top_logic.model.search.ui.model.operator.ComparableCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.ComparableCompare.kind.tooltip = Eine Art von Vergleich.
com.top_logic.model.search.ui.model.operator.ComparableRangeCompare$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.ComparableRangeCompare$Impl.tooltip = <i>Implementierung</i> für <i>vergleichbaren Bereich vergleichen</i>.
com.top_logic.model.search.ui.model.operator.ComparableRangeCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.ComparableRangeCompare.kind.tooltip = Eine Art von Vergleich.
com.top_logic.model.search.ui.model.operator.DateCompare$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.DateCompare$Impl.tooltip = <i>Implementierung</i> für den <i>Datumsvergleich</i>.
com.top_logic.model.search.ui.model.operator.DateCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.DateCompare.kind.tooltip = Eine Art von Vergleich.
com.top_logic.model.search.ui.model.operator.DateRangeCompare$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.DateRangeCompare$Impl.tooltip = <i>Implementierung</i> für den <i>Vergleich von Datumsbereichen</i>.
com.top_logic.model.search.ui.model.operator.DateRangeCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.DateRangeCompare.kind.tooltip = Eine Art von Vergleich.
com.top_logic.model.search.ui.model.operator.Empty$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.Empty$Impl.tooltip = <i>Implementierung</i> für <i>leer</i>.
com.top_logic.model.search.ui.model.operator.FilterCompare$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.FilterCompare$Impl.tooltip = <i>Implementierung</i> für den <i>Filtervergleich</i>.
com.top_logic.model.search.ui.model.operator.FilterCompare$Kind = Art
com.top_logic.model.search.ui.model.operator.FilterCompare$Kind.tooltip = Filter-Strategie.
com.top_logic.model.search.ui.model.operator.FilterCompare.Kind.ALL = Alle
com.top_logic.model.search.ui.model.operator.FilterCompare.Kind.ALL.tooltip = Filter stimmt nur überein, wenn alle Elemente mit allen <i>Filtern</i> übereinstimmen<i> (Filtercontainer</i>).
com.top_logic.model.search.ui.model.operator.FilterCompare.Kind.ONE = Eine
com.top_logic.model.search.ui.model.operator.FilterCompare.Kind.ONE.tooltip = Filter stimmt überein, wenn mindestens ein Element mit allen <i>Filtern</i> übereinstimmt<i> (Filtercontainer</i>).
com.top_logic.model.search.ui.model.operator.FilterCompare.kind = Art
com.top_logic.model.search.ui.model.operator.FilterCompare.kind.tooltip = <i>Eine Art</i> Filterstrategie.
com.top_logic.model.search.ui.model.operator.FilterCompareSingleton$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.FilterCompareSingleton$Impl.tooltip = <i>Implementierung</i> für <i>Filtervergleich Singleton</i>.
com.top_logic.model.search.ui.model.operator.FloatCompare$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.FloatCompare$Impl.tooltip = <i>Implementierung</i> für den <i>Float-Vergleich</i>.
com.top_logic.model.search.ui.model.operator.FloatCompare$Kind = Art
com.top_logic.model.search.ui.model.operator.FloatCompare$Kind.tooltip = Eine Art <i>Float-Vergleich</i>.
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.EQUALS = Entspricht
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.EQUALS.tooltip = Für ein Spiel müssen beide Werte gleich sein.
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.GE = Ge
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.GE.tooltip = Bei einer Übereinstimmung muss der linke Wert größer oder gleich dem rechten Wert sein.
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.GT = Gt
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.GT.tooltip = Bei einer Übereinstimmung muss der linke Wert größer als der rechte Wert sein.
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.LE = Le
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.LE.tooltip = Bei einer Übereinstimmung muss der linke Wert niedriger oder gleich dem rechten Wert sein.
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.LT = Leutnant
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.LT.tooltip = Bei einer Übereinstimmung muss der linke Wert niedriger als der rechte Wert sein.
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.NOT_EQUALS = Nicht gleich
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.NOT_EQUALS.tooltip = Bei einer Übereinstimmung dürfen die verglichenen Werte nicht gleich sein.
com.top_logic.model.search.ui.model.operator.FloatCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.FloatCompare.kind.tooltip = Eine Art von Vergleich.
com.top_logic.model.search.ui.model.operator.FloatRangeCompare$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.FloatRangeCompare$Impl.tooltip = <i>Implementierung</i> für <i>Schwimmerbereichsvergleich</i>.
com.top_logic.model.search.ui.model.operator.FloatRangeCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.FloatRangeCompare.kind.tooltip = Eine Art von Vergleich.
com.top_logic.model.search.ui.model.operator.IntegerCompare$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.IntegerCompare$Impl.tooltip = <i>Implementierung</i> für <i>ganzzahligen Vergleich</i>.
com.top_logic.model.search.ui.model.operator.IntegerCompare$Kind = Art
com.top_logic.model.search.ui.model.operator.IntegerCompare$Kind.tooltip = Eine Art Integer-Vergleich.
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.EQUALS = Entspricht
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.EQUALS.tooltip = Für ein Spiel müssen beide Werte gleich sein.
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.GE = Ge
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.GE.tooltip = Bei einer Übereinstimmung muss der linke Wert größer oder gleich dem rechten Wert sein.
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.GT = Gt
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.GT.tooltip = Bei einer Übereinstimmung muss der linke Wert größer als der rechte Wert sein.
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.LE = Le
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.LE.tooltip = Bei einer Übereinstimmung muss der linke Wert niedriger oder gleich dem rechten Wert sein.
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.LT = Leutnant
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.LT.tooltip = Bei einer Übereinstimmung muss der linke Wert niedriger als der rechte Wert sein.
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.NOT_EQUALS = Nicht gleich
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.NOT_EQUALS.tooltip = Für ein Spiel müssen beide Werte unterschiedlich sein.
com.top_logic.model.search.ui.model.operator.IntegerCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.IntegerCompare.kind.tooltip = Eine Art von Vergleich.
com.top_logic.model.search.ui.model.operator.IntegerRangeCompare$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.IntegerRangeCompare$Impl.tooltip = <i>Implementierung</i> für <i>ganzzahligen Bereichsvergleich</i>.
com.top_logic.model.search.ui.model.operator.IntegerRangeCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.IntegerRangeCompare.kind.tooltip = Eine Art von Vergleich.
com.top_logic.model.search.ui.model.operator.NotEmpty$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.NotEmpty$Impl.tooltip = <i>Implementierung</i> für <i>nicht leer</i>.
com.top_logic.model.search.ui.model.operator.ObjectCompare.compare-objects = Objekte vergleichen
com.top_logic.model.search.ui.model.operator.ObjectCompare.compare-objects.tooltip = Beschreibung des rechten Objektsatzes, mit dem verglichen werden soll.
com.top_logic.model.search.ui.model.operator.Operator$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.Operator$Impl.tooltip = Algorithmus zur Konstruktion von <i>Suchausdrücken</i> für seine Operatorkonfiguration.
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind = Primitive Vergleichsart
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.EQUALS = Entspricht
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.EQUALS.tooltip = Die Werte entsprechen einander.
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.GE = Ge
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.GE.tooltip = Die linke Seite ist größer oder gleich der rechten Seite.
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.GT = Gt
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.GT.tooltip = Die linke Seite ist auf der rechten Seite größer.
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.LE = Le
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.LE.tooltip = Die linke Seite ist kleiner oder gleich der rechten Seite.
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.LT = Leutnant
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.LT.tooltip = Die linke Seite ist kleiner als die rechte Seite.
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.NOT_EQUALS = Nicht gleich
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.NOT_EQUALS.tooltip = Die linke Seite ist nicht gleich der rechten Seite.
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.tooltip = Art des Vergleichs.
com.top_logic.model.search.ui.model.operator.PrimitiveRangeCompare.lower-bound = Untere Grenze
com.top_logic.model.search.ui.model.operator.PrimitiveRangeCompare.lower-bound.tooltip = Die untere Grenze des Bereichs.
com.top_logic.model.search.ui.model.operator.PrimitiveRangeCompare.upper-bound = Obere Grenze
com.top_logic.model.search.ui.model.operator.PrimitiveRangeCompare.upper-bound.tooltip = Die obere Grenze des Bereichs.
com.top_logic.model.search.ui.model.operator.PrimitiveValueCompare.comparison-value = Vergleichswert
com.top_logic.model.search.ui.model.operator.PrimitiveValueCompare.comparison-value.tooltip = Angabe des für den Vergleich verwendeten Wertes auf der rechten Seite.
com.top_logic.model.search.ui.model.operator.RangeCompareKind = Bereich vergleichen Art
com.top_logic.model.search.ui.model.operator.RangeCompareKind.IN_RANGE = In Reichweite
com.top_logic.model.search.ui.model.operator.RangeCompareKind.IN_RANGE.tooltip = Prüfen Sie, ob der Wert innerhalb des Bereichs liegt.
com.top_logic.model.search.ui.model.operator.RangeCompareKind.NOT_IN_RANGE = Nicht in Reichweite
com.top_logic.model.search.ui.model.operator.RangeCompareKind.NOT_IN_RANGE.tooltip = Prüfen Sie, ob der Wert nicht innerhalb des Bereichs liegt.
com.top_logic.model.search.ui.model.operator.RangeCompareKind.tooltip = Eine Art <i>ganzzahliger Bereichsvergleich</i>.
com.top_logic.model.search.ui.model.operator.SetCompare$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.SetCompare$Impl.tooltip = <i>Implementierung</i> für den <i>Setvergleich</i>.
com.top_logic.model.search.ui.model.operator.SetCompare$Operation = Operation
com.top_logic.model.search.ui.model.operator.SetCompare$Operation.tooltip = Vergleichen Sie Operationen auf Objektreferenzen.
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.ALL_CONTAINED_IN = Alle enthalten in
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.ALL_CONTAINED_IN.tooltip = Alle Attributwerte sind in der Literalmenge enthalten. <p> Die Attributmenge ist eine Teilmenge der Literalen Menge: für alle x im Attribut: x in der Literalen Menge. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.CONTAINS_ALL = Enthält alle
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.CONTAINS_ALL.tooltip = Die Attributwertmenge enthält alle in der Literalmenge angegebenen Objekte. <p> Die Literale Menge ist eine Teilmenge der Attributmenge: für alle x in der Literalen Menge: x im Attribut. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.CONTAINS_NONE = Enthält keine
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.CONTAINS_NONE.tooltip = Die Attributwertmenge enthält keines der in der Literalmenge angegebenen Objekte. <p> Die Attributmenge und die Literale Menge haben eine leere Schnittmenge: für alle x in der Literalen Menge: nicht x im Attribut. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.CONTAINS_SOME = Enthält einige
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.CONTAINS_SOME.tooltip = Die Attributwertmenge enthält mindestens ein Objekt, das in der Literalmenge angegeben ist. <p> Die Attributmenge und die Literale Menge haben eine nicht leere Schnittmenge: existiert x im Attribut: x in der Literalen Menge. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.EQUALS = Entspricht
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.EQUALS.tooltip = Der Wert des Attributs ist gleich der angegebenen Buchstabenmenge. <p> <i>Alle enthalten in</i> und <i>enthält alle</i>. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.NOT_ALL_CONTAINED_IN = Nicht alle enthalten in
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.NOT_ALL_CONTAINED_IN.tooltip = Der/die Attributwert(e) ist/sind nicht alle in der Literalmenge enthalten. <p> Die Attributmenge ist keine Teilmenge der Literalen Menge: existiert x im Attribut: x nicht in der Literalen Menge. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.NOT_CONTAINS_ALL = Enthält nicht alle
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.NOT_CONTAINS_ALL.tooltip = Die Attributwertmenge enthält alle in der Literalmenge angegebenen Objekte. <p> Die Literale Menge ist keine Teilmenge der Attributmenge: existiert x in der Literalen Menge: x im Attribut. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.NOT_EQUALS = Nicht gleich
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.NOT_EQUALS.tooltip = Der Attributwert ist nicht gleich der angegebenen Buchstabenmenge. <p> <i>Nicht alle enthalten in</i> oder <i>nicht enthält alle</i>. </p>
com.top_logic.model.search.ui.model.operator.SetCompare.operation = Operation
com.top_logic.model.search.ui.model.operator.SetCompare.operation.tooltip = Die Vergleichsoperation.
com.top_logic.model.search.ui.model.operator.SingletonCompare$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.SingletonCompare$Impl.tooltip = <i>Implementierung</i> für <i>Singleton-Vergleich</i>.
com.top_logic.model.search.ui.model.operator.SingletonCompare.operation = Operation
com.top_logic.model.search.ui.model.operator.SingletonCompare.operation.tooltip = Die Vergleichsoperation.
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation = Singleton-Vergleichsoperation
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.CONTAINED_IN = Enthalten in
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.CONTAINED_IN.tooltip = Der Attributwert ist in der Literalmenge enthalten.
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.EQUALS = Entspricht
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.EQUALS.tooltip = Der Attributwert ist gleich dem Objekt auf der rechten Seite.
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.NOT_CONTAINED_IN = Nicht enthalten in
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.NOT_CONTAINED_IN.tooltip = Der Attributwert ist nicht in der Literalmenge enthalten.
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.NOT_EQUALS = Nicht gleich
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.NOT_EQUALS.tooltip = Der Attributwert ist nicht gleich der rechten Seite.
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.tooltip = Vergleichen Sie Operationen auf Objektreferenzen.
com.top_logic.model.search.ui.model.operator.StringCompare$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.StringCompare$Impl.tooltip = <i>Implementierung</i> für <i>String-Vergleich</i>.
com.top_logic.model.search.ui.model.operator.StringCompare$Kind = Art
com.top_logic.model.search.ui.model.operator.StringCompare$Kind.tooltip = Eine Art <i>String-Vergleichsvergleich</i>.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.CONTAINS = Enthält
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.CONTAINS.tooltip = Für eine Übereinstimmung muss die linke Zeichenfolge die rechte als Teilzeichenfolge enthalten.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.ENDS_WITH = Endet mit
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.ENDS_WITH.tooltip = Bei einer Übereinstimmung muss die linke Zeichenfolge die rechte als Suffix haben.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.EQUALS = Entspricht
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.EQUALS.tooltip = Für eine Übereinstimmung müssen beide Zeichenfolgen gleich sein.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.GE = Ge
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.GE.tooltip = Für eine Übereinstimmung muss die linke Zeichenfolge in alphabetischer Reihenfolge größer oder gleich der rechten Zeichenfolge sein.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.GT = Gt
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.GT.tooltip = Für eine Übereinstimmung muss die linke Zeichenfolge in alphabetischer Reihenfolge größer als die rechte sein.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.LE = Le
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.LE.tooltip = Für eine Übereinstimmung muss die linke Zeichenfolge in alphabetischer Reihenfolge niedriger oder gleich der rechten Zeichenfolge sein.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.LT = Leutnant
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.LT.tooltip = Für eine Übereinstimmung muss die linke Zeichenfolge in alphabetischer Reihenfolge niedriger sein als die rechte.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_CONTAINS = Enthält nicht
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_CONTAINS.tooltip = Bei einer Übereinstimmung darf die linke Zeichenfolge nicht die rechte als Unterfolge enthalten.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_ENDS_WITH = Nicht endet mit
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_ENDS_WITH.tooltip = Bei einer Übereinstimmung darf die linke Zeichenfolge <b>nicht</b> die rechte als Suffix haben.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_EQUALS = Nicht gleich
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_EQUALS.tooltip = Für eine Übereinstimmung müssen beide Zeichenfolgen unterschiedlich sein.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_STARTS_WITH = Beginnt nicht mit
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_STARTS_WITH.tooltip = Bei einer Übereinstimmung darf die linke Zeichenfolge <b>nicht</b> die rechte als Präfix haben.
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.STARTS_WITH = Beginnt mit
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.STARTS_WITH.tooltip = Für eine Übereinstimmung muss die linke Zeichenfolge die rechte als Präfix haben.
com.top_logic.model.search.ui.model.operator.StringCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.StringCompare.kind.tooltip = Eine Art von Vergleich.
com.top_logic.model.search.ui.model.operator.StringRangeCompare$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.StringRangeCompare$Impl.tooltip = <i>Implementierung</i> für den <i>Vergleich von Zeichenkettenbereichen</i>.
com.top_logic.model.search.ui.model.operator.StringRangeCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.StringRangeCompare.kind.tooltip = Eine Art von Vergleich.
com.top_logic.model.search.ui.model.operator.TypeCheck$Impl = Umsetzung
com.top_logic.model.search.ui.model.operator.TypeCheck$Impl.tooltip = <i>Implementierung</i> für die <i>Typprüfung</i>.
com.top_logic.model.search.ui.model.operator.TypeCheckBased.type-cast = Typ gegossen
com.top_logic.model.search.ui.model.operator.TypeCheckBased.type-cast.tooltip = Der Typ, in den der <i>Context</i> gegossen wird.
com.top_logic.model.search.ui.model.parameters.PredefinedSearchParameter = Vordefinierte Suchparameter
com.top_logic.model.search.ui.model.parameters.PredefinedSearchParameter.tooltip = Ein <i>Suchparameter</i>, der nicht vom Benutzer definiert, sondern eingebaut ist.
com.top_logic.model.search.ui.model.parameters.PredefinedSearchParameter.value = Wert
com.top_logic.model.search.ui.model.parameters.PredefinedSearchParameter.value.tooltip = Der Wert des Parameters.
com.top_logic.model.search.ui.model.structure.InheritedContextType = Vererbter Kontexttyp
com.top_logic.model.search.ui.model.structure.InheritedContextType.tooltip = <i>Wertkontextmodelle</i>, die den <i>Werttyp</i> des <i>Contextes</i> verwenden.
com.top_logic.model.search.ui.model.structure.SearchPart.config-name = Name der Konfiguration
com.top_logic.model.search.ui.model.structure.SearchPart.config-name.tooltip = Der Name der Konfiguration dieses <i>Suchteilbaums</i>.
com.top_logic.model.search.ui.model.structure.SearchPart.context = Kontext
com.top_logic.model.search.ui.model.structure.SearchPart.context.tooltip = Der übergeordnete <i>Suchteil</i>, in dem dieser <i>Suchteil</i> lebt.
com.top_logic.model.search.ui.model.structure.WithValueContext.context-multiplicity = Kontext-Vielfalt
com.top_logic.model.search.ui.model.structure.WithValueContext.context-multiplicity.tooltip = <i>Wertemultiplizität</i><i> (Wertekontext</i>) des <i>Kontexts</i>.
com.top_logic.model.search.ui.model.structure.WithValueContext.context-type = Kontext-Typ
com.top_logic.model.search.ui.model.structure.WithValueContext.context-type.tooltip = <i>Werttyp</i><i> (Wertkontext</i>) von <i>Context</i>.
com.top_logic.model.search.ui.model.structure.WithValueContext.context.tooltip = Der <i>Wertekontext</i>, in dem dieser <i>Suchteil</i> lebt.
com.top_logic.model.search.ui.selector.DeleteSearchCommand = Suchbefehl löschen
com.top_logic.model.search.ui.selector.DeleteSearchCommand.tooltip = Der <i>Befehl</i>, der den ausgewählten <i>Suchausdruck</i> löscht.
com.top_logic.model.search.ui.selector.ResetSearchCommand = Suchbefehl zurücksetzen
com.top_logic.model.search.ui.selector.ResetSearchCommand.tooltip = Der <i>Befehl</i>, der die Suche auf die ausgewählte <i>Suchausdruck-Implementierung</i> zurücksetzt.
com.top_logic.model.search.ui.selector.SaveSearchCommand = Suchbefehl speichern
com.top_logic.model.search.ui.selector.SaveSearchCommand.tooltip = Der <i>Befehl</i>, der die im gegebenen <i>GUI-Suchausdruck-Editor</i> konfigurierte Suche speichert.
com.top_logic.model.search.ui.selector.SearchAndReportConfig = Suche und Berichtskonfiguration
com.top_logic.model.search.ui.selector.SearchAndReportConfig.chart = Schaubild
com.top_logic.model.search.ui.selector.SearchAndReportConfig.chart.tooltip = Niemals null.
com.top_logic.model.search.ui.selector.SearchAndReportConfig.expert-search = Expertensuche
com.top_logic.model.search.ui.selector.SearchAndReportConfig.expert-search.tooltip = TLScript-Suchausdruck.
com.top_logic.model.search.ui.selector.SearchAndReportConfig.search = Suche
com.top_logic.model.search.ui.selector.SearchAndReportConfig.search.tooltip = Niemals null.
com.top_logic.model.search.ui.selector.SearchAndReportConfig.tooltip = Die Kombination aus einem <i>Suchausdruck</i> und einer <i>Diagrammkonfiguration</i>. <p> Dieser Typ muss ein Untertyp des <i>Suchteils</i> sein, da er eine <i>Suche</i> enthält, und das ist selbst ein <i>Suchteil</i>, der eine Containereigenschaft vom Typ <i>Suchteil</i> deklariert. Es ist daher nicht erlaubt, ihn in einen Container zu setzen, der kein <i>Suchteil</i> ist, da dies den Containereigenschaftstyp verletzen würde. </p>
com.top_logic.model.search.ui.selector.SearchAndReportConfig.type = Typ
com.top_logic.model.search.ui.selector.SearchAndReportConfig.type.tooltip = Wo der Suchausdruck erstellt wird.
com.top_logic.model.search.ui.selector.SearchSelectorComponent = Komponente des Suchselektors
com.top_logic.model.search.ui.selector.SearchSelectorComponent.Config.reportComponent = Berichtskomponente
com.top_logic.model.search.ui.selector.SearchSelectorComponent.Config.search-expression-provider = Anbieter von Suchausdrücken
com.top_logic.model.search.ui.selector.SearchSelectorComponent.Config.search-expression-provider.tooltip = Stellt die <i>Suchausdrücke</i> zur Verfügung, aus denen der Benutzer wählen kann.
com.top_logic.model.search.ui.selector.SearchSelectorComponent.tooltip = Eine <i>Formular-Komponente</i> zur Verwaltung von <i>Implementierungen von Suchausdrücken</i>.
com.top_logic.model.search.ui.selector.SearchType = Art der Suche
com.top_logic.model.search.ui.selector.SearchType.EXPERT = Experte
com.top_logic.model.search.ui.selector.SearchType.EXPERT.tooltip = Erstellt im Experten-TLScript-ACE-Editor.
com.top_logic.model.search.ui.selector.SearchType.NORMAL = Normal
com.top_logic.model.search.ui.selector.SearchType.NORMAL.tooltip = Erstellt in der Standard-Suchausdruck-GUI.
com.top_logic.model.search.ui.selector.SearchType.tooltip = Beschreibt, wo der Suchausdruck erstellt wird.
com.top_logic.model.search.ui.selector.saveas.SaveSearchAsCommand = Suche als Befehl speichern
com.top_logic.model.search.ui.selector.saveas.SaveSearchAsCommand.tooltip = Der <i>Befehl Ausdruck speichern</i>, der die im gegebenen <i>GUI-Suchausdruckseditor</i> konfigurierte Suche unter einem neuen Namen speichert.
com.top_logic.model.search.ui.selector.saveas.SaveSearchAsComponent = Suche als Komponente speichern
com.top_logic.model.search.ui.selector.saveas.SaveSearchAsComponent.tooltip = <i>Komponente</i> zum Speichern eines Suchausdrucks unter einem neuen Namen<i> erstellen</i>.
com.top_logic.model.search.ui.selector.saveas.SaveSearchAsOpenDialogCommand = Suche als Befehl zum Öffnen des Dialogs speichern
com.top_logic.model.search.ui.selector.saveas.SaveSearchAsOpenDialogCommand.tooltip = <i>Befehlhandler</i> zum Öffnen des "Suche speichern unter"-Dialogs.
