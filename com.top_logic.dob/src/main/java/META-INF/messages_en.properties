com.top_logic.dob.MetaObject$Kind = Kind
com.top_logic.dob.MetaObject$Kind.tooltip = A classification of <i>meta object</i> types.
com.top_logic.dob.MetaObject.Kind.ANY = Any
com.top_logic.dob.MetaObject.Kind.ANY.tooltip = Every type is is assignment compatible to this kind of type. <p> Reserved for internal use. </p>
com.top_logic.dob.MetaObject.Kind.INVALID = Invalid
com.top_logic.dob.MetaObject.Kind.INVALID.tooltip = The error type during a compilation. <p> Reserved for internal use. </p>
com.top_logic.dob.MetaObject.Kind.NULL = Null
com.top_logic.dob.MetaObject.Kind.NULL.tooltip = The type of the <code>null</code> value. <p> Reserved for internal use. </p>
com.top_logic.dob.MetaObject.Kind.alternative = Alternative
com.top_logic.dob.MetaObject.Kind.alternative.tooltip = A pure summary type that provides alternative types. <p> The type must implement <i>MO alternative</i>. </p>
com.top_logic.dob.MetaObject.Kind.collection = Collection
com.top_logic.dob.MetaObject.Kind.collection.tooltip = A collection type. <p> The type must implement <i>MO collection</i>. </p>
com.top_logic.dob.MetaObject.Kind.function = Function
com.top_logic.dob.MetaObject.Kind.function.tooltip = A function type. <p> The type must implement <i>MO function</i>. </p>
com.top_logic.dob.MetaObject.Kind.item = Item
com.top_logic.dob.MetaObject.Kind.item.tooltip = An object type. <p> The type must implement <i>MO class</i>. </p>
com.top_logic.dob.MetaObject.Kind.primitive = Primitive
com.top_logic.dob.MetaObject.Kind.primitive.tooltip = A primitive type. <p> Only instances of <i>MO primitive</i> must have this kind. </p>
com.top_logic.dob.MetaObject.Kind.struct = Struct
com.top_logic.dob.MetaObject.Kind.struct.tooltip = A structure type (object without identity). <p> The type must implement <i>MO structure</i>. </p>
com.top_logic.dob.MetaObject.Kind.tuple = Tuple
com.top_logic.dob.MetaObject.Kind.tuple.tooltip = A tuple type. <p> The type must implement <i>MO tuple</i>. </p>
com.top_logic.dob.attr.AbstractDBAttribute = Database attribute
com.top_logic.dob.attr.AbstractDBAttribute.tooltip = Base class for <i>MO attribute</i> and <i>database attribute</i> implementations.
com.top_logic.dob.attr.AbstractMOAttribute = MO attribute
com.top_logic.dob.attr.AbstractMOAttribute.tooltip = Base class for <i>MO attribute</i> implementations.
com.top_logic.dob.attr.AbstractMOReference = MO reference
com.top_logic.dob.attr.AbstractMOReference.tooltip = Abstract implementation of <i>MO reference</i>.
com.top_logic.dob.attr.ComputedMOAttribute = Computed MO attribute
com.top_logic.dob.attr.ComputedMOAttribute.tooltip = <i>MO attribute</i> which has no database mapping.
com.top_logic.dob.attr.ExtIDAttribute = Ext ID attribute
com.top_logic.dob.attr.ExtIDAttribute.tooltip = Attribute storing external ids.
com.top_logic.dob.attr.MOAttributeImpl = MO attribute implementation
com.top_logic.dob.attr.MOAttributeImpl.tooltip = Straightforward implementation of MOAttribute.
com.top_logic.dob.attr.storage.CachedComputedAttributeStorage = Cached computed attribute storage
com.top_logic.dob.attr.storage.CachedComputedAttributeStorage.tooltip = <i>Computed attribute storage</i> that create the cache value lazy and stores it in the object.
com.top_logic.dob.attr.storage.ComputedAttributeStorage = Computed attribute storage
com.top_logic.dob.attr.storage.ComputedAttributeStorage.Config.value-factory = Value factory
com.top_logic.dob.attr.storage.ComputedAttributeStorage.Config.value-factory.tooltip = The factory that actually creates the value for the <i>attribute storage</i>.
com.top_logic.dob.attr.storage.ComputedAttributeStorage.tooltip = <i>Computed attribute storage</i> that has no storage slot for the value, but directly dispatched to a <i>cache value factory</i>.
com.top_logic.dob.attr.storage.ConfigurationAttributeStorage = Configuration attribute storage
com.top_logic.dob.attr.storage.ConfigurationAttributeStorage.Config.config-interface = Configuration interface
com.top_logic.dob.attr.storage.ConfigurationAttributeStorage.Config.config-interface.tooltip = The class the application value must have.
com.top_logic.dob.attr.storage.ConfigurationAttributeStorage.tooltip = <i>Database attribute storage implementation</i> that stores a <i>configuration item</i>.
com.top_logic.dob.attr.storage.ConfiguredInstanceStorage = Configured instance storage
com.top_logic.dob.attr.storage.ConfiguredInstanceStorage.Config.instance-class = Instance class
com.top_logic.dob.attr.storage.ConfiguredInstanceStorage.Config.instance-class.tooltip = The class the application value must have.
com.top_logic.dob.attr.storage.ConfiguredInstanceStorage.tooltip = <i>Database attribute storage implementation</i> that expects that the application value (and the cache value) are configured objects. <p> Actually the configuration of the application value is stored within the database. </p>
com.top_logic.dob.attr.storage.EnumAttributeStorage = Enum attribute storage
com.top_logic.dob.attr.storage.EnumAttributeStorage.Config.enum = Enum
com.top_logic.dob.attr.storage.EnumAttributeStorage.Config.enum.tooltip = The expected enumeration type. <p> Must be an enum type and <i>externally named</i>. </p>
com.top_logic.dob.attr.storage.EnumAttributeStorage.tooltip = <i>Database attribute storage implementation</i> that stores enum's.
com.top_logic.dob.meta.MOReference$DeletionPolicy = Deletion policy
com.top_logic.dob.meta.MOReference$DeletionPolicy.tooltip = Specification of how to react on the deletion of an object stored in a reference.
com.top_logic.dob.meta.MOReference$HistoryType = History type
com.top_logic.dob.meta.MOReference$HistoryType.tooltip = Classification of allowed values of a reference regarding to their history context.
com.top_logic.dob.meta.MOReference$ReferencePart = Reference part
com.top_logic.dob.meta.MOReference$ReferencePart.tooltip = Constants to access certain aspects of the referenced object.
com.top_logic.dob.meta.MOReference.DeletionPolicy.CLEAR_REFERENCE = Clear reference
com.top_logic.dob.meta.MOReference.DeletionPolicy.CLEAR_REFERENCE.tooltip = The deleted object is removed from the reference. <p> A reference that can store only a single object is reset to <code>null</code>, if the referenced object is deleted. </p>
com.top_logic.dob.meta.MOReference.DeletionPolicy.DELETE_REFERER = Delete referer
com.top_logic.dob.meta.MOReference.DeletionPolicy.DELETE_REFERER.tooltip = The object that refers to the deleted object is also deleted. <p> Note: When using this setting on a reference that can contain multiple values, deleting one of the referenced objects deletes the referring object, but not the other objects also referenced. To also delete those sibling objects, also mark the reference as composition. </p>
com.top_logic.dob.meta.MOReference.DeletionPolicy.STABILISE_REFERENCE = Stabilise reference
com.top_logic.dob.meta.MOReference.DeletionPolicy.STABILISE_REFERENCE.tooltip = The reference to a deleted object is stabilized. This means that the reference is modified to point to the the historic version of the referenced object directly before the deletion. <p> This setting is only possible for a reference of "mixed" history type (meaning that the reference may contain current and historic objects). </p>
com.top_logic.dob.meta.MOReference.DeletionPolicy.VETO = Veto
com.top_logic.dob.meta.MOReference.DeletionPolicy.VETO.tooltip = The deletion of a referenced object fails, if the reference is not explicitly cleared in the same transaction or the referring object is deleted altogether with the referenced object.
com.top_logic.dob.meta.MOReference.HistoryType.CURRENT = Current
com.top_logic.dob.meta.MOReference.HistoryType.CURRENT.tooltip = The reference is a current value. It can not be filled with historic objects. <p> This is the most common type of reference. It is most efficient one in terms of space and time. </p>
com.top_logic.dob.meta.MOReference.HistoryType.HISTORIC = Historic
com.top_logic.dob.meta.MOReference.HistoryType.HISTORIC.tooltip = The reference is a historic value. If it is filled with a current object, the object is stabilized to the revision currently created.
com.top_logic.dob.meta.MOReference.HistoryType.MIXED = Mixed
com.top_logic.dob.meta.MOReference.HistoryType.MIXED.tooltip = The reference is an attribute which contains any a current value. It can not be filled with historic objects and current objects. Current objects remain current.
com.top_logic.dob.meta.MOReference.ReferencePart.branch = Branch
com.top_logic.dob.meta.MOReference.ReferencePart.branch.tooltip = Constant to access the branch context of the reference
com.top_logic.dob.meta.MOReference.ReferencePart.name = Name
com.top_logic.dob.meta.MOReference.ReferencePart.name.tooltip = Constant to access the name of the reference
com.top_logic.dob.meta.MOReference.ReferencePart.revision = Revision
com.top_logic.dob.meta.MOReference.ReferencePart.revision.tooltip = Constant to access the history context of the reference
com.top_logic.dob.meta.MOReference.ReferencePart.type = Type
com.top_logic.dob.meta.MOReference.ReferencePart.type.tooltip = Constant to access the type of the reference
com.top_logic.dob.schema.config.AlternativeConfig = Alternative configuration
com.top_logic.dob.schema.config.AlternativeConfig$TypeChoice = Type choice
com.top_logic.dob.schema.config.AlternativeConfig$TypeChoice.tooltip = Reference to a potential alternative type of an <i>alternative configuration</i>.
com.top_logic.dob.schema.config.AlternativeConfig.specialisations = Specialisations
com.top_logic.dob.schema.config.AlternativeConfig.specialisations.tooltip = Configurations of the types which are a specialization of the <i>MO alternative</i>.
com.top_logic.dob.schema.config.AlternativeConfig.tooltip = Configuration of an <i>MO alternative</i>.
com.top_logic.dob.schema.config.AssociationConfig = Association configuration
com.top_logic.dob.schema.config.AssociationConfig.tooltip = Configuration of an association type.
com.top_logic.dob.schema.config.AttributeConfig.att_name = Att name
com.top_logic.dob.schema.config.AttributeConfig.att_name.tooltip = Returns the name of the <i>MO attribute</i>.
com.top_logic.dob.schema.config.AttributeConfig.default-provider = Default provider
com.top_logic.dob.schema.config.AttributeConfig.default-provider.tooltip = The provider creating the default value for the configured <i>MO attribute</i>.
com.top_logic.dob.schema.config.AttributeConfig.hidden = Hidden
com.top_logic.dob.schema.config.AttributeConfig.immutable = Immutable
com.top_logic.dob.schema.config.AttributeConfig.initial = Initial
com.top_logic.dob.schema.config.AttributeConfig.initial.tooltip = Whether the value of this <i>MO attribute</i> is necessary for construction of an object.
com.top_logic.dob.schema.config.AttributeConfig.mandatory = Mandatory
com.top_logic.dob.schema.config.AttributeConfig.override = Override
com.top_logic.dob.schema.config.AttributeConfig.override.tooltip = Whether this attributes overrides an attribute with the same name of a super class. <p> Note: This is only allowed by <i>attribute configuration</i> whose <i>meta object configuration</i> is an <i>association configuration</i>. </p>
com.top_logic.dob.schema.config.AttributeConfig.storage = Storage
com.top_logic.dob.schema.config.AttributeConfig.storage.tooltip = The storage strategy of the configured <i>MO attribute</i>.
com.top_logic.dob.schema.config.AttributeConfig.system = System
com.top_logic.dob.schema.config.AttributeConfig.system.tooltip = Whether this attribute is an internal attribute that should not be exposed to the application.
com.top_logic.dob.schema.config.DBConfiguration.db-name-effective = Database name effective
com.top_logic.dob.schema.config.DBConfiguration.db-name-effective.tooltip = The effective name to use for in the DB. <p> The information is derived from an optional explicit setting in <i>Database name</i> an a logical application name of the element. </p>
com.top_logic.dob.schema.config.DBConfiguration.db_compress = Database compress
com.top_logic.dob.schema.config.DBConfiguration.db_compress.tooltip = Compression of the represented database part.
com.top_logic.dob.schema.config.DBConfiguration.db_name = Database name
com.top_logic.dob.schema.config.DBConfiguration.db_name.tooltip = Name of the represented part in the database, e.g. name of the table or the column.
com.top_logic.dob.schema.config.IndexConfig = Index configuration
com.top_logic.dob.schema.config.IndexConfig.custom = Custom
com.top_logic.dob.schema.config.IndexConfig.custom.tooltip = Whether technical columns should not automatically be added to the index.
com.top_logic.dob.schema.config.IndexConfig.db-name-effective.tooltip = The effective name to use for the index in the DB.
com.top_logic.dob.schema.config.IndexConfig.inMemory = In memory
com.top_logic.dob.schema.config.IndexConfig.inMemory.tooltip = Whether the represented <i>MO index</i> is an "in memory" index.
com.top_logic.dob.schema.config.IndexConfig.index-parts = Index parts
com.top_logic.dob.schema.config.IndexConfig.index-parts.tooltip = Definition of content of the index.
com.top_logic.dob.schema.config.IndexConfig.name.tooltip = Configuration of the name of the represented <i>MO index</i>.
com.top_logic.dob.schema.config.IndexConfig.tooltip = Configuration of an <i>MO index</i> in an <i>MO structure</i>.
com.top_logic.dob.schema.config.IndexConfig.unique = Unique
com.top_logic.dob.schema.config.IndexConfig.unique.tooltip = Whether the represented <i>MO index</i> is unique.
com.top_logic.dob.schema.config.IndexPartConfig = Index part configuration
com.top_logic.dob.schema.config.IndexPartConfig.name.tooltip = Name of the <i>MO attribute</i> to include in the <i>MO index</i>.
com.top_logic.dob.schema.config.IndexPartConfig.part = Part
com.top_logic.dob.schema.config.IndexPartConfig.part.tooltip = Part of the <i>MO reference</i> to include in the index. <p> If represented attribute (<i>Name</i>) is an <i>MO reference</i> this part describes which part of the reference is included in the index. </p>
com.top_logic.dob.schema.config.IndexPartConfig.tooltip = Configuration of a column in the enclosing <i>index configuration</i>.
com.top_logic.dob.schema.config.MetaObjectConfig = Meta object configuration
com.top_logic.dob.schema.config.MetaObjectConfig.abstract = Abstract
com.top_logic.dob.schema.config.MetaObjectConfig.abstract.tooltip = Whether this <i>meta object</i> is abstract, i.e. whether not instances of this <i>meta object</i> can exists.
com.top_logic.dob.schema.config.MetaObjectConfig.annotations = Annotations
com.top_logic.dob.schema.config.MetaObjectConfig.annotations.tooltip = Generic annotation facility for <i>meta objects configuration</i>.
com.top_logic.dob.schema.config.MetaObjectConfig.attributes = Attributes
com.top_logic.dob.schema.config.MetaObjectConfig.attributes.tooltip = Configuration of the attributes in the <i>MO structure</i>.
com.top_logic.dob.schema.config.MetaObjectConfig.db-name-effective.tooltip = The effective name of the table in the DB.
com.top_logic.dob.schema.config.MetaObjectConfig.db_PKeyStorage = Database P key storage
com.top_logic.dob.schema.config.MetaObjectConfig.index = Index
com.top_logic.dob.schema.config.MetaObjectConfig.index.tooltip = Indexes defined in the represented <i>MO structure</i>.
com.top_logic.dob.schema.config.MetaObjectConfig.object_type = Object type
com.top_logic.dob.schema.config.MetaObjectConfig.object_type.tooltip = Type of the MetaObject to create.
com.top_logic.dob.schema.config.MetaObjectConfig.primary-key = Primary key
com.top_logic.dob.schema.config.MetaObjectConfig.primary-key.tooltip = The configuration of the primary key.
com.top_logic.dob.schema.config.MetaObjectConfig.super_class = Super class
com.top_logic.dob.schema.config.MetaObjectConfig.super_class.tooltip = Returns the name of the class this <i>meta object</i> extends.
com.top_logic.dob.schema.config.MetaObjectConfig.tooltip = Configuration of an <i>meta object</i>.
com.top_logic.dob.schema.config.MetaObjectConfig.versioned = Versioned
com.top_logic.dob.schema.config.MetaObjectConfig.versioned.tooltip = Whether the type is a versioned type. If <i>default</i> then a default from the global application configuration is used.
com.top_logic.dob.schema.config.MetaObjectName = Meta object name
com.top_logic.dob.schema.config.MetaObjectName.object_name = Object name
com.top_logic.dob.schema.config.MetaObjectName.object_name.tooltip = The name of the represented <i>meta object</i>.
com.top_logic.dob.schema.config.MetaObjectName.tooltip = Configuration item to configure the name of an <i>meta object</i>.
com.top_logic.dob.schema.config.MetaObjectsConfig = Meta objects configuration
com.top_logic.dob.schema.config.MetaObjectsConfig.metaobjects = Metaobjects
com.top_logic.dob.schema.config.MetaObjectsConfig.metaobjects.tooltip = Mapping of the name of an <i>meta object</i> or <i>MO alternative</i> to its definition.
com.top_logic.dob.schema.config.MetaObjectsConfig.tooltip = Definitions of <i>meta objects</i> and <i>MO alternatives</i>.
com.top_logic.dob.schema.config.PrimaryKeyConfig = Primary key configuration
com.top_logic.dob.schema.config.PrimaryKeyConfig.index-parts = Index parts
com.top_logic.dob.schema.config.PrimaryKeyConfig.index-parts.tooltip = Definition of content of the key.
com.top_logic.dob.schema.config.PrimaryKeyConfig.tooltip = Configuration of the primary key.
com.top_logic.dob.schema.config.PrimitiveAttributeConfig.att_type = Att type
com.top_logic.dob.schema.config.PrimitiveAttributeConfig.att_type.tooltip = The name of the <i>meta object</i> which the attribute stores.
com.top_logic.dob.schema.config.PrimitiveAttributeConfig.db-name-effective.tooltip = The effective name of the DB column.
com.top_logic.dob.schema.config.ReferenceAttributeConfig.branch-global = Branch global
com.top_logic.dob.schema.config.ReferenceAttributeConfig.branch-global.tooltip = Whether this reference can point to objects in other branches. <p> A branch local reference can only point to objects of the branch the referring object lives in. Branch local references are more efficient in terms of time and space. </p>
com.top_logic.dob.schema.config.ReferenceAttributeConfig.by-value = By value
com.top_logic.dob.schema.config.ReferenceAttributeConfig.by-value.tooltip = Cache strategy for this reference. <p> A by-value reference stores the actual referenced object directly in the cache. A by-identifier reference only stores the identifier of the referenced object. By default, the system decides about the cache strategy. </p> <p> Note: A by-value reference must only be used in rare cases, where maximum lookup-performance is required. A by value reference prevents the referenced object from being garbage collected, if the referring object is pinned. A cycle of by-value references effectively creates a memory leak because those object can never be garbage collected. </p>
com.top_logic.dob.schema.config.ReferenceAttributeConfig.deletion-policy = Deletion policy
com.top_logic.dob.schema.config.ReferenceAttributeConfig.deletion-policy.tooltip = The policy that defines how to react on the deletion of the referenced object.
com.top_logic.dob.schema.config.ReferenceAttributeConfig.history-type = History type
com.top_logic.dob.schema.config.ReferenceAttributeConfig.history-type.tooltip = Whether this reference can point to historic objects. <p> The most common references are of <i>history type</i> <i>current</i>. Those references point always to object in the same time slice as the referring object lives in. References of type <i>current</i> are most efficient in therms of time and space. </p>
com.top_logic.dob.schema.config.ReferenceAttributeConfig.is-container = Is container
com.top_logic.dob.schema.config.ReferenceAttributeConfig.is-container.tooltip = Whether the referenced object is the contents of the referring object. The contents of a container is deleted, if the referring object is deleted. A container propagates deletion to its contents.
com.top_logic.dob.schema.config.ReferenceAttributeConfig.monomorphic = Monomorphic
com.top_logic.dob.schema.config.ReferenceAttributeConfig.monomorphic.tooltip = Whether this reference is monomorphic. <p> A monomorphic reference can only point to objects of the exact type given in <i>Target type</i>, not to subtypes thereof. Monomporphic references are more efficient in terms of time and space. </p>
com.top_logic.dob.schema.config.ReferenceAttributeConfig.target-type = Target type
com.top_logic.dob.schema.config.ReferenceAttributeConfig.target-type.tooltip = The type of values that can be stored in this reference. <p> If this reference is <i>Monomorphic</i>, only objects of exactly that type can be stored in this reference. A polymorphic reference in contrast can also store objects of subtypes of this type. </p>
com.top_logic.dob.schema.config.ReferenceAttributeConfig.use-default-index = Use default index
com.top_logic.dob.schema.config.ReferenceAttributeConfig.use-default-index.tooltip = Whether a default index is created for this reference. <p> For efficient deletion checks, an index is required for each reference. If no default index is created, a custom index must be defined that also allows efficient backwards navigation. </p>
com.top_logic.dob.schema.config.annotation.IndexColumnsStrategyAnnotation = Index columns strategy annotation
com.top_logic.dob.schema.config.annotation.IndexColumnsStrategyAnnotation.strategy = Strategy
com.top_logic.dob.schema.config.annotation.IndexColumnsStrategyAnnotation.strategy.tooltip = The <i>index columns strategy</i> for the annotated type and its subclasses that doe not define their own strategy.
com.top_logic.dob.schema.config.annotation.IndexColumnsStrategyAnnotation.tooltip = <i>MO annotation</i> adding an <i>index columns strategy</i> to a type.
