/*
 * SPDX-FileCopyrightText: 2024 (c) Business Operation Systems GmbH <info@top-logic.com>
 * 
 * SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-BOS-TopLogic-1.0
 */
package com.top_logic.bpe.bpml.model;

/**
 * Factory for <code>tl.bpe.bpml</code> objects.
 * 
 * <p>
 * Note: this is generated code. Do not modify. Instead, create a subclass and register this in the module system.
 * </p>
 * 
 * @author Automatically generated by {@link com.top_logic.element.model.generate.FactoryGenerator}
 */
public class TlBpeBpmlFactory extends com.top_logic.element.meta.kbbased.AbstractElementFactory {

	/**
	 * Name of the structure <code>tl.bpe.bpml</code> defined by {@link TlBpeBpmlFactory}.
	 */
	public static final String TL_BPE_BPML_STRUCTURE = "tl.bpe.bpml";

	/**
	 * Name of the enumeration <code>ApprovalState</code> in module {@value #TL_BPE_BPML_STRUCTURE}.
	 */
	public static final String APPROVAL_STATE_ENUM = "ApprovalState";

	/**
	 * Name of the classifier <code>Development</code> in enumeration {@value #APPROVAL_STATE_ENUM}.
	 */
	public static final String DEVELOPMENT_APPROVAL_STATE_CLASSIFIER = "Development";

	/**
	 * Name of the classifier <code>Released</code> in enumeration {@value #APPROVAL_STATE_ENUM}.
	 */
	public static final String RELEASED_APPROVAL_STATE_CLASSIFIER = "Released";

	/**
	 * Name of the classifier <code>Retired</code> in enumeration {@value #APPROVAL_STATE_ENUM}.
	 */
	public static final String RETIRED_APPROVAL_STATE_CLASSIFIER = "Retired";

	/**
	 * Name of the data type <code>BPTimeGranularity</code> in module {@value #TL_BPE_BPML_STRUCTURE}.
	 */
	public static final String BP_TIME_GRANULARITY_TYPE = "BPTimeGranularity";

	/**
	 * Name of the data type <code>DisplayDescription</code> in module {@value #TL_BPE_BPML_STRUCTURE}.
	 */
	public static final String DISPLAY_DESCRIPTION_TYPE = "DisplayDescription";

	/**
	 * Name of the data type <code>ProcessFormDefinition</code> in module {@value #TL_BPE_BPML_STRUCTURE}.
	 */
	public static final String PROCESS_FORM_DEFINITION_TYPE = "ProcessFormDefinition";

	/**
	 * Lookup {@link AnnotationContainer} type.
	 */
	public static com.top_logic.model.TLClass getAnnotationContainerType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(AnnotationContainer.ANNOTATION_CONTAINER_TYPE);
	}

	/**
	 * Lookup {@link AnnotationContainer#ANNOTATION_DEFINITIONS_ATTR} of {@link AnnotationContainer}.
	 */
	public static com.top_logic.model.TLReference getAnnotationDefinitionsAnnotationContainerAttr() {
		return (com.top_logic.model.TLReference) getAnnotationContainerType().getPart(AnnotationContainer.ANNOTATION_DEFINITIONS_ATTR);
	}

	/**
	 * Lookup {@link Described} type.
	 */
	public static com.top_logic.model.TLClass getDescribedType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(Described.DESCRIBED_TYPE);
	}

	/**
	 * Lookup {@link Described#DESCRIPTION_ATTR} of {@link Described}.
	 */
	public static com.top_logic.model.TLProperty getDescriptionDescribedAttr() {
		return (com.top_logic.model.TLProperty) getDescribedType().getPart(Described.DESCRIPTION_ATTR);
	}

	/**
	 * Lookup {@link EventDefinition} type.
	 */
	public static com.top_logic.model.TLClass getEventDefinitionType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(EventDefinition.EVENT_DEFINITION_TYPE);
	}

	/**
	 * Lookup {@link EventDefinition#EVENT_ATTR} of {@link EventDefinition}.
	 */
	public static com.top_logic.model.TLReference getEventEventDefinitionAttr() {
		return (com.top_logic.model.TLReference) getEventDefinitionType().getPart(EventDefinition.EVENT_ATTR);
	}

	/**
	 * Lookup {@link CancelEventDefinition} type.
	 */
	public static com.top_logic.model.TLClass getCancelEventDefinitionType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(CancelEventDefinition.CANCEL_EVENT_DEFINITION_TYPE);
	}

	/**
	 * Lookup {@link CompensateEventDefinition} type.
	 */
	public static com.top_logic.model.TLClass getCompensateEventDefinitionType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(CompensateEventDefinition.COMPENSATE_EVENT_DEFINITION_TYPE);
	}

	/**
	 * Lookup {@link ConditionalEventDefinition} type.
	 */
	public static com.top_logic.model.TLClass getConditionalEventDefinitionType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(ConditionalEventDefinition.CONDITIONAL_EVENT_DEFINITION_TYPE);
	}

	/**
	 * Lookup {@link ErrorEventDefinition} type.
	 */
	public static com.top_logic.model.TLClass getErrorEventDefinitionType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(ErrorEventDefinition.ERROR_EVENT_DEFINITION_TYPE);
	}

	/**
	 * Lookup {@link EscalationEventDefinition} type.
	 */
	public static com.top_logic.model.TLClass getEscalationEventDefinitionType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(EscalationEventDefinition.ESCALATION_EVENT_DEFINITION_TYPE);
	}

	/**
	 * Lookup {@link MessageEventDefinition} type.
	 */
	public static com.top_logic.model.TLClass getMessageEventDefinitionType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(MessageEventDefinition.MESSAGE_EVENT_DEFINITION_TYPE);
	}

	/**
	 * Lookup {@link SignalEventDefinition} type.
	 */
	public static com.top_logic.model.TLClass getSignalEventDefinitionType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(SignalEventDefinition.SIGNAL_EVENT_DEFINITION_TYPE);
	}

	/**
	 * Lookup {@link TerminateEventDefinition} type.
	 */
	public static com.top_logic.model.TLClass getTerminateEventDefinitionType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(TerminateEventDefinition.TERMINATE_EVENT_DEFINITION_TYPE);
	}

	/**
	 * Lookup {@link TimerEventDefinition} type.
	 */
	public static com.top_logic.model.TLClass getTimerEventDefinitionType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(TimerEventDefinition.TIMER_EVENT_DEFINITION_TYPE);
	}

	/**
	 * Lookup {@link TimerEventDefinition#DELAY_IN_MILLIS_ATTR} of {@link TimerEventDefinition}.
	 */
	public static com.top_logic.model.TLProperty getDelayInMillisTimerEventDefinitionAttr() {
		return (com.top_logic.model.TLProperty) getTimerEventDefinitionType().getPart(TimerEventDefinition.DELAY_IN_MILLIS_ATTR);
	}

	/**
	 * Lookup {@link Externalized} type.
	 */
	public static com.top_logic.model.TLClass getExternalizedType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(Externalized.EXTERNALIZED_TYPE);
	}

	/**
	 * Lookup {@link Externalized#EXT_ID_ATTR} of {@link Externalized}.
	 */
	public static com.top_logic.model.TLProperty getExtIdExternalizedAttr() {
		return (com.top_logic.model.TLProperty) getExternalizedType().getPart(Externalized.EXT_ID_ATTR);
	}

	/**
	 * Lookup {@link Annotated} type.
	 */
	public static com.top_logic.model.TLClass getAnnotatedType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(Annotated.ANNOTATED_TYPE);
	}

	/**
	 * Lookup {@link Annotated#ANNOTATION_ASSOCIATIONS_ATTR} of {@link Annotated}.
	 */
	public static com.top_logic.model.TLReference getAnnotationAssociationsAnnotatedAttr() {
		return (com.top_logic.model.TLReference) getAnnotatedType().getPart(Annotated.ANNOTATION_ASSOCIATIONS_ATTR);
	}

	/**
	 * Lookup {@link AnnotationAssociation} type.
	 */
	public static com.top_logic.model.TLClass getAnnotationAssociationType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(AnnotationAssociation.ANNOTATION_ASSOCIATION_TYPE);
	}

	/**
	 * Lookup {@link AnnotationAssociation#SOURCE_ATTR} of {@link AnnotationAssociation}.
	 */
	public static com.top_logic.model.TLReference getSourceAnnotationAssociationAttr() {
		return (com.top_logic.model.TLReference) getAnnotationAssociationType().getPart(AnnotationAssociation.SOURCE_ATTR);
	}

	/**
	 * Lookup {@link AnnotationAssociation#TARGET_ATTR} of {@link AnnotationAssociation}.
	 */
	public static com.top_logic.model.TLReference getTargetAnnotationAssociationAttr() {
		return (com.top_logic.model.TLReference) getAnnotationAssociationType().getPart(AnnotationAssociation.TARGET_ATTR);
	}

	/**
	 * Lookup {@link FlowSource} type.
	 */
	public static com.top_logic.model.TLClass getFlowSourceType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(FlowSource.FLOW_SOURCE_TYPE);
	}

	/**
	 * Lookup {@link FlowTarget} type.
	 */
	public static com.top_logic.model.TLClass getFlowTargetType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(FlowTarget.FLOW_TARGET_TYPE);
	}

	/**
	 * Lookup {@link Named} type.
	 */
	public static com.top_logic.model.TLClass getNamedType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(Named.NAMED_TYPE);
	}

	/**
	 * Lookup {@link Named#NAME_ATTR} of {@link Named}.
	 */
	public static com.top_logic.model.TLProperty getNameNamedAttr() {
		return (com.top_logic.model.TLProperty) getNamedType().getPart(Named.NAME_ATTR);
	}

	/**
	 * Lookup {@link Collaboration} type.
	 */
	public static com.top_logic.model.TLClass getCollaborationType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(Collaboration.COLLABORATION_TYPE);
	}

	/**
	 * Lookup {@link Collaboration#DIAGRAM_ATTR} of {@link Collaboration}.
	 */
	public static com.top_logic.model.TLProperty getDiagramCollaborationAttr() {
		return (com.top_logic.model.TLProperty) getCollaborationType().getPart(Collaboration.DIAGRAM_ATTR);
	}

	/**
	 * Lookup {@link Collaboration#MESSAGE_FLOWS_ATTR} of {@link Collaboration}.
	 */
	public static com.top_logic.model.TLReference getMessageFlowsCollaborationAttr() {
		return (com.top_logic.model.TLReference) getCollaborationType().getPart(Collaboration.MESSAGE_FLOWS_ATTR);
	}

	/**
	 * Lookup {@link Collaboration#MY_PROCESSES_DESCRIPTION_ATTR} of {@link Collaboration}.
	 */
	public static com.top_logic.model.TLProperty getMyProcessesDescriptionCollaborationAttr() {
		return (com.top_logic.model.TLProperty) getCollaborationType().getPart(Collaboration.MY_PROCESSES_DESCRIPTION_ATTR);
	}

	/**
	 * Lookup {@link Collaboration#MY_PROCESSES_ICON_ATTR} of {@link Collaboration}.
	 */
	public static com.top_logic.model.TLProperty getMyProcessesIconCollaborationAttr() {
		return (com.top_logic.model.TLProperty) getCollaborationType().getPart(Collaboration.MY_PROCESSES_ICON_ATTR);
	}

	/**
	 * Lookup {@link Collaboration#MY_PROCESSES_TITLE_ATTR} of {@link Collaboration}.
	 */
	public static com.top_logic.model.TLProperty getMyProcessesTitleCollaborationAttr() {
		return (com.top_logic.model.TLProperty) getCollaborationType().getPart(Collaboration.MY_PROCESSES_TITLE_ATTR);
	}

	/**
	 * Lookup {@link Collaboration#MY_TASKS_DESCRIPTION_ATTR} of {@link Collaboration}.
	 */
	public static com.top_logic.model.TLProperty getMyTasksDescriptionCollaborationAttr() {
		return (com.top_logic.model.TLProperty) getCollaborationType().getPart(Collaboration.MY_TASKS_DESCRIPTION_ATTR);
	}

	/**
	 * Lookup {@link Collaboration#MY_TASKS_ICON_ATTR} of {@link Collaboration}.
	 */
	public static com.top_logic.model.TLProperty getMyTasksIconCollaborationAttr() {
		return (com.top_logic.model.TLProperty) getCollaborationType().getPart(Collaboration.MY_TASKS_ICON_ATTR);
	}

	/**
	 * Lookup {@link Collaboration#MY_TASKS_TITLE_ATTR} of {@link Collaboration}.
	 */
	public static com.top_logic.model.TLProperty getMyTasksTitleCollaborationAttr() {
		return (com.top_logic.model.TLProperty) getCollaborationType().getPart(Collaboration.MY_TASKS_TITLE_ATTR);
	}

	/**
	 * Lookup {@link Collaboration#NAME_ATTR} of {@link Collaboration}.
	 */
	public static com.top_logic.model.TLProperty getNameCollaborationAttr() {
		return (com.top_logic.model.TLProperty) getCollaborationType().getPart(Collaboration.NAME_ATTR);
	}

	/**
	 * Lookup {@link Collaboration#PARTICIPANTS_ATTR} of {@link Collaboration}.
	 */
	public static com.top_logic.model.TLReference getParticipantsCollaborationAttr() {
		return (com.top_logic.model.TLReference) getCollaborationType().getPart(Collaboration.PARTICIPANTS_ATTR);
	}

	/**
	 * Lookup {@link Collaboration#PROCESSES_ATTR} of {@link Collaboration}.
	 */
	public static com.top_logic.model.TLReference getProcessesCollaborationAttr() {
		return (com.top_logic.model.TLReference) getCollaborationType().getPart(Collaboration.PROCESSES_ATTR);
	}

	/**
	 * Lookup {@link Collaboration#STATE_ATTR} of {@link Collaboration}.
	 */
	public static com.top_logic.model.TLReference getStateCollaborationAttr() {
		return (com.top_logic.model.TLReference) getCollaborationType().getPart(Collaboration.STATE_ATTR);
	}

	/**
	 * Lookup {@link Edge} type.
	 */
	public static com.top_logic.model.TLClass getEdgeType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(Edge.EDGE_TYPE);
	}

	/**
	 * Lookup {@link Edge#PROCESS_ATTR} of {@link Edge}.
	 */
	public static com.top_logic.model.TLReference getProcessEdgeAttr() {
		return (com.top_logic.model.TLReference) getEdgeType().getPart(Edge.PROCESS_ATTR);
	}

	/**
	 * Lookup {@link Edge#SOURCE_ATTR} of {@link Edge}.
	 */
	public static com.top_logic.model.TLReference getSourceEdgeAttr() {
		return (com.top_logic.model.TLReference) getEdgeType().getPart(Edge.SOURCE_ATTR);
	}

	/**
	 * Lookup {@link Edge#TARGET_ATTR} of {@link Edge}.
	 */
	public static com.top_logic.model.TLReference getTargetEdgeAttr() {
		return (com.top_logic.model.TLReference) getEdgeType().getPart(Edge.TARGET_ATTR);
	}

	/**
	 * Lookup {@link Edge#TITLE_ATTR} of {@link Edge}.
	 */
	public static com.top_logic.model.TLProperty getTitleEdgeAttr() {
		return (com.top_logic.model.TLProperty) getEdgeType().getPart(Edge.TITLE_ATTR);
	}

	/**
	 * Lookup {@link Edge#TOOLTIP_ATTR} of {@link Edge}.
	 */
	public static com.top_logic.model.TLProperty getTooltipEdgeAttr() {
		return (com.top_logic.model.TLProperty) getEdgeType().getPart(Edge.TOOLTIP_ATTR);
	}

	/**
	 * Lookup {@link Edge#WEIGHT_ATTR} of {@link Edge}.
	 */
	public static com.top_logic.model.TLProperty getWeightEdgeAttr() {
		return (com.top_logic.model.TLProperty) getEdgeType().getPart(Edge.WEIGHT_ATTR);
	}

	/**
	 * Lookup {@link SequenceFlow} type.
	 */
	public static com.top_logic.model.TLClass getSequenceFlowType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(SequenceFlow.SEQUENCE_FLOW_TYPE);
	}

	/**
	 * Lookup {@link SequenceFlow#FORM_TYPE_ATTR} of {@link SequenceFlow}.
	 */
	public static com.top_logic.model.TLReference getFormTypeSequenceFlowAttr() {
		return (com.top_logic.model.TLReference) getSequenceFlowType().getPart(SequenceFlow.FORM_TYPE_ATTR);
	}

	/**
	 * Lookup {@link SequenceFlow#OPERATION_ATTR} of {@link SequenceFlow}.
	 */
	public static com.top_logic.model.TLProperty getOperationSequenceFlowAttr() {
		return (com.top_logic.model.TLProperty) getSequenceFlowType().getPart(SequenceFlow.OPERATION_ATTR);
	}

	/**
	 * Lookup {@link SequenceFlow#RULE_ATTR} of {@link SequenceFlow}.
	 */
	public static com.top_logic.model.TLProperty getRuleSequenceFlowAttr() {
		return (com.top_logic.model.TLProperty) getSequenceFlowType().getPart(SequenceFlow.RULE_ATTR);
	}

	/**
	 * Lookup {@link Lane} type.
	 */
	public static com.top_logic.model.TLClass getLaneType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(Lane.LANE_TYPE);
	}

	/**
	 * Lookup {@link Lane#NODES_ATTR} of {@link Lane}.
	 */
	public static com.top_logic.model.TLReference getNodesLaneAttr() {
		return (com.top_logic.model.TLReference) getLaneType().getPart(Lane.NODES_ATTR);
	}

	/**
	 * Lookup {@link Lane#OWNER_ATTR} of {@link Lane}.
	 */
	public static com.top_logic.model.TLReference getOwnerLaneAttr() {
		return (com.top_logic.model.TLReference) getLaneType().getPart(Lane.OWNER_ATTR);
	}

	/**
	 * Lookup {@link MessageFlow} type.
	 */
	public static com.top_logic.model.TLClass getMessageFlowType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(MessageFlow.MESSAGE_FLOW_TYPE);
	}

	/**
	 * Lookup {@link MessageFlow#COLLABORATION_ATTR} of {@link MessageFlow}.
	 */
	public static com.top_logic.model.TLReference getCollaborationMessageFlowAttr() {
		return (com.top_logic.model.TLReference) getMessageFlowType().getPart(MessageFlow.COLLABORATION_ATTR);
	}

	/**
	 * Lookup {@link MessageFlow#CONNECT_EXPESSION_ATTR} of {@link MessageFlow}.
	 */
	public static com.top_logic.model.TLProperty getConnectExpessionMessageFlowAttr() {
		return (com.top_logic.model.TLProperty) getMessageFlowType().getPart(MessageFlow.CONNECT_EXPESSION_ATTR);
	}

	/**
	 * Lookup {@link MessageFlow#SOURCE_ATTR} of {@link MessageFlow}.
	 */
	public static com.top_logic.model.TLReference getSourceMessageFlowAttr() {
		return (com.top_logic.model.TLReference) getMessageFlowType().getPart(MessageFlow.SOURCE_ATTR);
	}

	/**
	 * Lookup {@link MessageFlow#TARGET_ATTR} of {@link MessageFlow}.
	 */
	public static com.top_logic.model.TLReference getTargetMessageFlowAttr() {
		return (com.top_logic.model.TLReference) getMessageFlowType().getPart(MessageFlow.TARGET_ATTR);
	}

	/**
	 * Lookup {@link Node} type.
	 */
	public static com.top_logic.model.TLClass getNodeType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(Node.NODE_TYPE);
	}

	/**
	 * Lookup {@link Node#INCOMMING_ATTR} of {@link Node}.
	 */
	public static com.top_logic.model.TLReference getIncommingNodeAttr() {
		return (com.top_logic.model.TLReference) getNodeType().getPart(Node.INCOMMING_ATTR);
	}

	/**
	 * Lookup {@link Node#LANE_ATTR} of {@link Node}.
	 */
	public static com.top_logic.model.TLReference getLaneNodeAttr() {
		return (com.top_logic.model.TLReference) getNodeType().getPart(Node.LANE_ATTR);
	}

	/**
	 * Lookup {@link Node#OUTGOING_ATTR} of {@link Node}.
	 */
	public static com.top_logic.model.TLReference getOutgoingNodeAttr() {
		return (com.top_logic.model.TLReference) getNodeType().getPart(Node.OUTGOING_ATTR);
	}

	/**
	 * Lookup {@link Node#PROCESS_ATTR} of {@link Node}.
	 */
	public static com.top_logic.model.TLReference getProcessNodeAttr() {
		return (com.top_logic.model.TLReference) getNodeType().getPart(Node.PROCESS_ATTR);
	}

	/**
	 * Lookup {@link Event} type.
	 */
	public static com.top_logic.model.TLClass getEventType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(Event.EVENT_TYPE);
	}

	/**
	 * Lookup {@link Event#DEFINITION_ATTR} of {@link Event}.
	 */
	public static com.top_logic.model.TLReference getDefinitionEventAttr() {
		return (com.top_logic.model.TLReference) getEventType().getPart(Event.DEFINITION_ATTR);
	}

	/**
	 * Lookup {@link EndEvent} type.
	 */
	public static com.top_logic.model.TLClass getEndEventType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(EndEvent.END_EVENT_TYPE);
	}

	/**
	 * Lookup {@link IntermediateEvent} type.
	 */
	public static com.top_logic.model.TLClass getIntermediateEventType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(IntermediateEvent.INTERMEDIATE_EVENT_TYPE);
	}

	/**
	 * Lookup {@link BoundaryEvent} type.
	 */
	public static com.top_logic.model.TLClass getBoundaryEventType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(BoundaryEvent.BOUNDARY_EVENT_TYPE);
	}

	/**
	 * Lookup {@link BoundaryEvent#ATTACHED_TO_ATTR} of {@link BoundaryEvent}.
	 */
	public static com.top_logic.model.TLReference getAttachedToBoundaryEventAttr() {
		return (com.top_logic.model.TLReference) getBoundaryEventType().getPart(BoundaryEvent.ATTACHED_TO_ATTR);
	}

	/**
	 * Lookup {@link BoundaryEvent#CANCEL_ACTIVITY_ATTR} of {@link BoundaryEvent}.
	 */
	public static com.top_logic.model.TLProperty getCancelActivityBoundaryEventAttr() {
		return (com.top_logic.model.TLProperty) getBoundaryEventType().getPart(BoundaryEvent.CANCEL_ACTIVITY_ATTR);
	}

	/**
	 * Lookup {@link IntermediateCatchEvent} type.
	 */
	public static com.top_logic.model.TLClass getIntermediateCatchEventType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(IntermediateCatchEvent.INTERMEDIATE_CATCH_EVENT_TYPE);
	}

	/**
	 * Lookup {@link IntermediateThrowEvent} type.
	 */
	public static com.top_logic.model.TLClass getIntermediateThrowEventType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(IntermediateThrowEvent.INTERMEDIATE_THROW_EVENT_TYPE);
	}

	/**
	 * Lookup {@link IntermediateMessageThrowEvent} type.
	 */
	public static com.top_logic.model.TLClass getIntermediateMessageThrowEventType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(IntermediateMessageThrowEvent.INTERMEDIATE_MESSAGE_THROW_EVENT_TYPE);
	}

	/**
	 * Lookup {@link StartEvent} type.
	 */
	public static com.top_logic.model.TLClass getStartEventType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(StartEvent.START_EVENT_TYPE);
	}

	/**
	 * Lookup {@link Gateway} type.
	 */
	public static com.top_logic.model.TLClass getGatewayType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(Gateway.GATEWAY_TYPE);
	}

	/**
	 * Lookup {@link DefaultGateway} type.
	 */
	public static com.top_logic.model.TLClass getDefaultGatewayType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(DefaultGateway.DEFAULT_GATEWAY_TYPE);
	}

	/**
	 * Lookup {@link DefaultGateway#DEFAULT_FLOW_ATTR} of {@link DefaultGateway}.
	 */
	public static com.top_logic.model.TLReference getDefaultFlowDefaultGatewayAttr() {
		return (com.top_logic.model.TLReference) getDefaultGatewayType().getPart(DefaultGateway.DEFAULT_FLOW_ATTR);
	}

	/**
	 * Lookup {@link ComplexGateway} type.
	 */
	public static com.top_logic.model.TLClass getComplexGatewayType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(ComplexGateway.COMPLEX_GATEWAY_TYPE);
	}

	/**
	 * Lookup {@link ExclusiveGateway} type.
	 */
	public static com.top_logic.model.TLClass getExclusiveGatewayType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(ExclusiveGateway.EXCLUSIVE_GATEWAY_TYPE);
	}

	/**
	 * Lookup {@link ExclusiveGateway#AUTOMATIC_ATTR} of {@link ExclusiveGateway}.
	 */
	public static com.top_logic.model.TLProperty getAutomaticExclusiveGatewayAttr() {
		return (com.top_logic.model.TLProperty) getExclusiveGatewayType().getPart(ExclusiveGateway.AUTOMATIC_ATTR);
	}

	/**
	 * Lookup {@link InclusiveGateway} type.
	 */
	public static com.top_logic.model.TLClass getInclusiveGatewayType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(InclusiveGateway.INCLUSIVE_GATEWAY_TYPE);
	}

	/**
	 * Lookup {@link EventBasedGateway} type.
	 */
	public static com.top_logic.model.TLClass getEventBasedGatewayType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(EventBasedGateway.EVENT_BASED_GATEWAY_TYPE);
	}

	/**
	 * Lookup {@link ParallelGateway} type.
	 */
	public static com.top_logic.model.TLClass getParallelGatewayType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(ParallelGateway.PARALLEL_GATEWAY_TYPE);
	}

	/**
	 * Lookup {@link Task} type.
	 */
	public static com.top_logic.model.TLClass getTaskType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(Task.TASK_TYPE);
	}

	/**
	 * Lookup {@link Task#BOUNDARY_EVENTS_ATTR} of {@link Task}.
	 */
	public static com.top_logic.model.TLReference getBoundaryEventsTaskAttr() {
		return (com.top_logic.model.TLReference) getTaskType().getPart(Task.BOUNDARY_EVENTS_ATTR);
	}

	/**
	 * Lookup {@link Task#TITLE_ATTR} of {@link Task}.
	 */
	public static com.top_logic.model.TLProperty getTitleTaskAttr() {
		return (com.top_logic.model.TLProperty) getTaskType().getPart(Task.TITLE_ATTR);
	}

	/**
	 * Lookup {@link Task#TITLE_FUNCTION_ATTR} of {@link Task}.
	 */
	public static com.top_logic.model.TLProperty getTitleFunctionTaskAttr() {
		return (com.top_logic.model.TLProperty) getTaskType().getPart(Task.TITLE_FUNCTION_ATTR);
	}

	/**
	 * Lookup {@link Task#TOKEN_TYPE_ATTR} of {@link Task}.
	 */
	public static com.top_logic.model.TLReference getTokenTypeTaskAttr() {
		return (com.top_logic.model.TLReference) getTaskType().getPart(Task.TOKEN_TYPE_ATTR);
	}

	/**
	 * Lookup {@link BusinessRuleTask} type.
	 */
	public static com.top_logic.model.TLClass getBusinessRuleTaskType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(BusinessRuleTask.BUSINESS_RULE_TASK_TYPE);
	}

	/**
	 * Lookup {@link CallActivity} type.
	 */
	public static com.top_logic.model.TLClass getCallActivityType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(CallActivity.CALL_ACTIVITY_TYPE);
	}

	/**
	 * Lookup {@link ManualTask} type.
	 */
	public static com.top_logic.model.TLClass getManualTaskType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(ManualTask.MANUAL_TASK_TYPE);
	}

	/**
	 * Lookup {@link ManualTask#CAN_EDIT_ATTR} of {@link ManualTask}.
	 */
	public static com.top_logic.model.TLProperty getCanEditManualTaskAttr() {
		return (com.top_logic.model.TLProperty) getManualTaskType().getPart(ManualTask.CAN_EDIT_ATTR);
	}

	/**
	 * Lookup {@link ManualTask#FORM_DEFINITION_ATTR} of {@link ManualTask}.
	 */
	public static com.top_logic.model.TLProperty getFormDefinitionManualTaskAttr() {
		return (com.top_logic.model.TLProperty) getManualTaskType().getPart(ManualTask.FORM_DEFINITION_ATTR);
	}

	/**
	 * Lookup {@link ReceiveTask} type.
	 */
	public static com.top_logic.model.TLClass getReceiveTaskType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(ReceiveTask.RECEIVE_TASK_TYPE);
	}

	/**
	 * Lookup {@link ScriptTask} type.
	 */
	public static com.top_logic.model.TLClass getScriptTaskType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(ScriptTask.SCRIPT_TASK_TYPE);
	}

	/**
	 * Lookup {@link SendTask} type.
	 */
	public static com.top_logic.model.TLClass getSendTaskType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(SendTask.SEND_TASK_TYPE);
	}

	/**
	 * Lookup {@link SendTask#CONTENT_TEMPLATE_ATTR} of {@link SendTask}.
	 */
	public static com.top_logic.model.TLProperty getContentTemplateSendTaskAttr() {
		return (com.top_logic.model.TLProperty) getSendTaskType().getPart(SendTask.CONTENT_TEMPLATE_ATTR);
	}

	/**
	 * Lookup {@link SendTask#RECEIVER_GROUPS_ATTR} of {@link SendTask}.
	 */
	public static com.top_logic.model.TLReference getReceiverGroupsSendTaskAttr() {
		return (com.top_logic.model.TLReference) getSendTaskType().getPart(SendTask.RECEIVER_GROUPS_ATTR);
	}

	/**
	 * Lookup {@link SendTask#RECEIVER_RULE_ATTR} of {@link SendTask}.
	 */
	public static com.top_logic.model.TLProperty getReceiverRuleSendTaskAttr() {
		return (com.top_logic.model.TLProperty) getSendTaskType().getPart(SendTask.RECEIVER_RULE_ATTR);
	}

	/**
	 * Lookup {@link SendTask#SUBJECT_TEMPLATE_ATTR} of {@link SendTask}.
	 */
	public static com.top_logic.model.TLProperty getSubjectTemplateSendTaskAttr() {
		return (com.top_logic.model.TLProperty) getSendTaskType().getPart(SendTask.SUBJECT_TEMPLATE_ATTR);
	}

	/**
	 * Lookup {@link ServiceTask} type.
	 */
	public static com.top_logic.model.TLClass getServiceTaskType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(ServiceTask.SERVICE_TASK_TYPE);
	}

	/**
	 * Lookup {@link ServiceTask#ACTION_ATTR} of {@link ServiceTask}.
	 */
	public static com.top_logic.model.TLProperty getActionServiceTaskAttr() {
		return (com.top_logic.model.TLProperty) getServiceTaskType().getPart(ServiceTask.ACTION_ATTR);
	}

	/**
	 * Lookup {@link SubProcess} type.
	 */
	public static com.top_logic.model.TLClass getSubProcessType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(SubProcess.SUB_PROCESS_TYPE);
	}

	/**
	 * Lookup {@link UserTask} type.
	 */
	public static com.top_logic.model.TLClass getUserTaskType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(UserTask.USER_TASK_TYPE);
	}

	/**
	 * Lookup {@link Participant} type.
	 */
	public static com.top_logic.model.TLClass getParticipantType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(Participant.PARTICIPANT_TYPE);
	}

	/**
	 * Lookup {@link Participant#COLLABORATION_ATTR} of {@link Participant}.
	 */
	public static com.top_logic.model.TLReference getCollaborationParticipantAttr() {
		return (com.top_logic.model.TLReference) getParticipantType().getPart(Participant.COLLABORATION_ATTR);
	}

	/**
	 * Lookup {@link Participant#DEFAULT_OPERATION_ATTR} of {@link Participant}.
	 */
	public static com.top_logic.model.TLProperty getDefaultOperationParticipantAttr() {
		return (com.top_logic.model.TLProperty) getParticipantType().getPart(Participant.DEFAULT_OPERATION_ATTR);
	}

	/**
	 * Lookup {@link Participant#DISPLAY_DESCRIPTION_ATTR} of {@link Participant}.
	 */
	public static com.top_logic.model.TLProperty getDisplayDescriptionParticipantAttr() {
		return (com.top_logic.model.TLProperty) getParticipantType().getPart(Participant.DISPLAY_DESCRIPTION_ATTR);
	}

	/**
	 * Lookup {@link Participant#DYNAMIC_NAME_ATTR} of {@link Participant}.
	 */
	public static com.top_logic.model.TLProperty getDynamicNameParticipantAttr() {
		return (com.top_logic.model.TLProperty) getParticipantType().getPart(Participant.DYNAMIC_NAME_ATTR);
	}

	/**
	 * Lookup {@link Participant#EDGE_FORM_TYPE_ATTR} of {@link Participant}.
	 */
	public static com.top_logic.model.TLReference getEdgeFormTypeParticipantAttr() {
		return (com.top_logic.model.TLReference) getParticipantType().getPart(Participant.EDGE_FORM_TYPE_ATTR);
	}

	/**
	 * Lookup {@link Participant#EXPORT_DESCRIPTION_ATTR} of {@link Participant}.
	 */
	public static com.top_logic.model.TLProperty getExportDescriptionParticipantAttr() {
		return (com.top_logic.model.TLProperty) getParticipantType().getPart(Participant.EXPORT_DESCRIPTION_ATTR);
	}

	/**
	 * Lookup {@link Participant#MODEL_TYPE_ATTR} of {@link Participant}.
	 */
	public static com.top_logic.model.TLReference getModelTypeParticipantAttr() {
		return (com.top_logic.model.TLReference) getParticipantType().getPart(Participant.MODEL_TYPE_ATTR);
	}

	/**
	 * Lookup {@link Participant#PROCESS_ATTR} of {@link Participant}.
	 */
	public static com.top_logic.model.TLReference getProcessParticipantAttr() {
		return (com.top_logic.model.TLReference) getParticipantType().getPart(Participant.PROCESS_ATTR);
	}

	/**
	 * Lookup {@link Participant#TASK_TITLE_ATTR} of {@link Participant}.
	 */
	public static com.top_logic.model.TLProperty getTaskTitleParticipantAttr() {
		return (com.top_logic.model.TLProperty) getParticipantType().getPart(Participant.TASK_TITLE_ATTR);
	}

	/**
	 * Lookup {@link Participant#TOKEN_TYPE_ATTR} of {@link Participant}.
	 */
	public static com.top_logic.model.TLReference getTokenTypeParticipantAttr() {
		return (com.top_logic.model.TLReference) getParticipantType().getPart(Participant.TOKEN_TYPE_ATTR);
	}

	/**
	 * Lookup {@link Process} type.
	 */
	public static com.top_logic.model.TLClass getProcessType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(Process.PROCESS_TYPE);
	}

	/**
	 * Lookup {@link Process#COLLABORATION_ATTR} of {@link Process}.
	 */
	public static com.top_logic.model.TLReference getCollaborationProcessAttr() {
		return (com.top_logic.model.TLReference) getProcessType().getPart(Process.COLLABORATION_ATTR);
	}

	/**
	 * Lookup {@link Process#EDGES_ATTR} of {@link Process}.
	 */
	public static com.top_logic.model.TLReference getEdgesProcessAttr() {
		return (com.top_logic.model.TLReference) getProcessType().getPart(Process.EDGES_ATTR);
	}

	/**
	 * Lookup {@link Process#IS_EXECUTABLE_ATTR} of {@link Process}.
	 */
	public static com.top_logic.model.TLProperty getIsExecutableProcessAttr() {
		return (com.top_logic.model.TLProperty) getProcessType().getPart(Process.IS_EXECUTABLE_ATTR);
	}

	/**
	 * Lookup {@link Process#NODES_ATTR} of {@link Process}.
	 */
	public static com.top_logic.model.TLReference getNodesProcessAttr() {
		return (com.top_logic.model.TLReference) getProcessType().getPart(Process.NODES_ATTR);
	}

	/**
	 * Lookup {@link Process#PARTICIPANT_ATTR} of {@link Process}.
	 */
	public static com.top_logic.model.TLReference getParticipantProcessAttr() {
		return (com.top_logic.model.TLReference) getProcessType().getPart(Process.PARTICIPANT_ATTR);
	}

	/**
	 * Lookup {@link TextAnnotation} type.
	 */
	public static com.top_logic.model.TLClass getTextAnnotationType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(TextAnnotation.TEXT_ANNOTATION_TYPE);
	}

	/**
	 * Lookup {@link TextAnnotation#ANNOTATION_ASSOCIATIONS_ATTR} of {@link TextAnnotation}.
	 */
	public static com.top_logic.model.TLReference getAnnotationAssociationsTextAnnotationAttr() {
		return (com.top_logic.model.TLReference) getTextAnnotationType().getPart(TextAnnotation.ANNOTATION_ASSOCIATIONS_ATTR);
	}

	/**
	 * Lookup {@link TextAnnotation#TEXT_ATTR} of {@link TextAnnotation}.
	 */
	public static com.top_logic.model.TLProperty getTextTextAnnotationAttr() {
		return (com.top_logic.model.TLProperty) getTextAnnotationType().getPart(TextAnnotation.TEXT_ATTR);
	}

	/**
	 * Lookup {@link Iconified} type.
	 */
	public static com.top_logic.model.TLClass getIconifiedType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(Iconified.ICONIFIED_TYPE);
	}

	/**
	 * Lookup {@link Iconified#ICON_ATTR} of {@link Iconified}.
	 */
	public static com.top_logic.model.TLProperty getIconIconifiedAttr() {
		return (com.top_logic.model.TLProperty) getIconifiedType().getPart(Iconified.ICON_ATTR);
	}

	/**
	 * Lookup {@link LaneSet} type.
	 */
	public static com.top_logic.model.TLClass getLaneSetType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(LaneSet.LANE_SET_TYPE);
	}

	/**
	 * Lookup {@link LaneSet#ACTOR_GROUPS_ATTR} of {@link LaneSet}.
	 */
	public static com.top_logic.model.TLReference getActorGroupsLaneSetAttr() {
		return (com.top_logic.model.TLReference) getLaneSetType().getPart(LaneSet.ACTOR_GROUPS_ATTR);
	}

	/**
	 * Lookup {@link LaneSet#ACTOR_RULE_ATTR} of {@link LaneSet}.
	 */
	public static com.top_logic.model.TLProperty getActorRuleLaneSetAttr() {
		return (com.top_logic.model.TLProperty) getLaneSetType().getPart(LaneSet.ACTOR_RULE_ATTR);
	}

	/**
	 * Lookup {@link LaneSet#LANES_ATTR} of {@link LaneSet}.
	 */
	public static com.top_logic.model.TLReference getLanesLaneSetAttr() {
		return (com.top_logic.model.TLReference) getLaneSetType().getPart(LaneSet.LANES_ATTR);
	}

	/**
	 * Lookup {@value #APPROVAL_STATE_ENUM} enumeration.
	 */
	public static com.top_logic.model.TLEnumeration getApprovalStateEnum() {
		return (com.top_logic.model.TLEnumeration) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(APPROVAL_STATE_ENUM);
	}

	/**
	 * Lookup classifier {@value #DEVELOPMENT_APPROVAL_STATE_CLASSIFIER} of enumeration {@value #APPROVAL_STATE_ENUM}.
	 */
	public static com.top_logic.model.TLClassifier getDevelopmentApprovalStateClassifier() {
		return getApprovalStateEnum().getClassifier(DEVELOPMENT_APPROVAL_STATE_CLASSIFIER);
	}

	/**
	 * Lookup classifier {@value #RELEASED_APPROVAL_STATE_CLASSIFIER} of enumeration {@value #APPROVAL_STATE_ENUM}.
	 */
	public static com.top_logic.model.TLClassifier getReleasedApprovalStateClassifier() {
		return getApprovalStateEnum().getClassifier(RELEASED_APPROVAL_STATE_CLASSIFIER);
	}

	/**
	 * Lookup classifier {@value #RETIRED_APPROVAL_STATE_CLASSIFIER} of enumeration {@value #APPROVAL_STATE_ENUM}.
	 */
	public static com.top_logic.model.TLClassifier getRetiredApprovalStateClassifier() {
		return getApprovalStateEnum().getClassifier(RETIRED_APPROVAL_STATE_CLASSIFIER);
	}

	/**
	 * Lookup {@value #BP_TIME_GRANULARITY_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getBPTimeGranularityType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(BP_TIME_GRANULARITY_TYPE);
	}

	/**
	 * Lookup {@value #DISPLAY_DESCRIPTION_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getDisplayDescriptionType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(DISPLAY_DESCRIPTION_TYPE);
	}

	/**
	 * Lookup {@value #PROCESS_FORM_DEFINITION_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getProcessFormDefinitionType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_BPE_BPML_STRUCTURE).getType(PROCESS_FORM_DEFINITION_TYPE);
	}

	/**
	 * Name of type <code>AnnotationContainer</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link AnnotationContainer#ANNOTATION_CONTAINER_TYPE}.
	 */
	@Deprecated
	public static final String ANNOTATION_CONTAINER_NODE = AnnotationContainer.ANNOTATION_CONTAINER_TYPE;

	/**
	 * Name of type <code>Described</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Described#DESCRIBED_TYPE}.
	 */
	@Deprecated
	public static final String DESCRIBED_NODE = Described.DESCRIBED_TYPE;

	/**
	 * Name of type <code>EventDefinition</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link EventDefinition#EVENT_DEFINITION_TYPE}.
	 */
	@Deprecated
	public static final String EVENT_DEFINITION_NODE = EventDefinition.EVENT_DEFINITION_TYPE;

	/**
	 * Name of type <code>CancelEventDefinition</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link CancelEventDefinition#CANCEL_EVENT_DEFINITION_TYPE}.
	 */
	@Deprecated
	public static final String CANCEL_EVENT_DEFINITION_NODE = CancelEventDefinition.CANCEL_EVENT_DEFINITION_TYPE;

	/**
	 * Storage table name of {@link #CANCEL_EVENT_DEFINITION_NODE} objects.
	 */
	public static final String KO_NAME_CANCEL_EVENT_DEFINITION = "BPElement";

	/**
	 * Name of type <code>CompensateEventDefinition</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link CompensateEventDefinition#COMPENSATE_EVENT_DEFINITION_TYPE}.
	 */
	@Deprecated
	public static final String COMPENSATE_EVENT_DEFINITION_NODE = CompensateEventDefinition.COMPENSATE_EVENT_DEFINITION_TYPE;

	/**
	 * Storage table name of {@link #COMPENSATE_EVENT_DEFINITION_NODE} objects.
	 */
	public static final String KO_NAME_COMPENSATE_EVENT_DEFINITION = "BPElement";

	/**
	 * Name of type <code>ConditionalEventDefinition</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link ConditionalEventDefinition#CONDITIONAL_EVENT_DEFINITION_TYPE}.
	 */
	@Deprecated
	public static final String CONDITIONAL_EVENT_DEFINITION_NODE = ConditionalEventDefinition.CONDITIONAL_EVENT_DEFINITION_TYPE;

	/**
	 * Storage table name of {@link #CONDITIONAL_EVENT_DEFINITION_NODE} objects.
	 */
	public static final String KO_NAME_CONDITIONAL_EVENT_DEFINITION = "BPElement";

	/**
	 * Name of type <code>ErrorEventDefinition</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link ErrorEventDefinition#ERROR_EVENT_DEFINITION_TYPE}.
	 */
	@Deprecated
	public static final String ERROR_EVENT_DEFINITION_NODE = ErrorEventDefinition.ERROR_EVENT_DEFINITION_TYPE;

	/**
	 * Storage table name of {@link #ERROR_EVENT_DEFINITION_NODE} objects.
	 */
	public static final String KO_NAME_ERROR_EVENT_DEFINITION = "BPElement";

	/**
	 * Name of type <code>EscalationEventDefinition</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link EscalationEventDefinition#ESCALATION_EVENT_DEFINITION_TYPE}.
	 */
	@Deprecated
	public static final String ESCALATION_EVENT_DEFINITION_NODE = EscalationEventDefinition.ESCALATION_EVENT_DEFINITION_TYPE;

	/**
	 * Storage table name of {@link #ESCALATION_EVENT_DEFINITION_NODE} objects.
	 */
	public static final String KO_NAME_ESCALATION_EVENT_DEFINITION = "BPElement";

	/**
	 * Name of type <code>MessageEventDefinition</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link MessageEventDefinition#MESSAGE_EVENT_DEFINITION_TYPE}.
	 */
	@Deprecated
	public static final String MESSAGE_EVENT_DEFINITION_NODE = MessageEventDefinition.MESSAGE_EVENT_DEFINITION_TYPE;

	/**
	 * Storage table name of {@link #MESSAGE_EVENT_DEFINITION_NODE} objects.
	 */
	public static final String KO_NAME_MESSAGE_EVENT_DEFINITION = "BPElement";

	/**
	 * Name of type <code>SignalEventDefinition</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link SignalEventDefinition#SIGNAL_EVENT_DEFINITION_TYPE}.
	 */
	@Deprecated
	public static final String SIGNAL_EVENT_DEFINITION_NODE = SignalEventDefinition.SIGNAL_EVENT_DEFINITION_TYPE;

	/**
	 * Storage table name of {@link #SIGNAL_EVENT_DEFINITION_NODE} objects.
	 */
	public static final String KO_NAME_SIGNAL_EVENT_DEFINITION = "BPElement";

	/**
	 * Name of type <code>TerminateEventDefinition</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link TerminateEventDefinition#TERMINATE_EVENT_DEFINITION_TYPE}.
	 */
	@Deprecated
	public static final String TERMINATE_EVENT_DEFINITION_NODE = TerminateEventDefinition.TERMINATE_EVENT_DEFINITION_TYPE;

	/**
	 * Storage table name of {@link #TERMINATE_EVENT_DEFINITION_NODE} objects.
	 */
	public static final String KO_NAME_TERMINATE_EVENT_DEFINITION = "BPElement";

	/**
	 * Name of type <code>TimerEventDefinition</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link TimerEventDefinition#TIMER_EVENT_DEFINITION_TYPE}.
	 */
	@Deprecated
	public static final String TIMER_EVENT_DEFINITION_NODE = TimerEventDefinition.TIMER_EVENT_DEFINITION_TYPE;

	/**
	 * Storage table name of {@link #TIMER_EVENT_DEFINITION_NODE} objects.
	 */
	public static final String KO_NAME_TIMER_EVENT_DEFINITION = "BPElement";

	/**
	 * Name of type <code>Externalized</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Externalized#EXTERNALIZED_TYPE}.
	 */
	@Deprecated
	public static final String EXTERNALIZED_NODE = Externalized.EXTERNALIZED_TYPE;

	/**
	 * Name of type <code>Annotated</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Annotated#ANNOTATED_TYPE}.
	 */
	@Deprecated
	public static final String ANNOTATED_NODE = Annotated.ANNOTATED_TYPE;

	/**
	 * Name of type <code>AnnotationAssociation</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link AnnotationAssociation#ANNOTATION_ASSOCIATION_TYPE}.
	 */
	@Deprecated
	public static final String ANNOTATION_ASSOCIATION_NODE = AnnotationAssociation.ANNOTATION_ASSOCIATION_TYPE;

	/**
	 * Storage table name of {@link #ANNOTATION_ASSOCIATION_NODE} objects.
	 */
	public static final String KO_NAME_ANNOTATION_ASSOCIATION = "BPAssociation";

	/**
	 * Name of type <code>FlowSource</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link FlowSource#FLOW_SOURCE_TYPE}.
	 */
	@Deprecated
	public static final String FLOW_SOURCE_NODE = FlowSource.FLOW_SOURCE_TYPE;

	/**
	 * Name of type <code>FlowTarget</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link FlowTarget#FLOW_TARGET_TYPE}.
	 */
	@Deprecated
	public static final String FLOW_TARGET_NODE = FlowTarget.FLOW_TARGET_TYPE;

	/**
	 * Name of type <code>Named</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Named#NAMED_TYPE}.
	 */
	@Deprecated
	public static final String NAMED_NODE = Named.NAMED_TYPE;

	/**
	 * Name of type <code>Collaboration</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Collaboration#COLLABORATION_TYPE}.
	 */
	@Deprecated
	public static final String COLLABORATION_NODE = Collaboration.COLLABORATION_TYPE;

	/**
	 * Storage table name of {@link #COLLABORATION_NODE} objects.
	 */
	public static final String KO_NAME_COLLABORATION = "BPCollaboration";

	/**
	 * Name of type <code>Edge</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Edge#EDGE_TYPE}.
	 */
	@Deprecated
	public static final String EDGE_NODE = Edge.EDGE_TYPE;

	/**
	 * Name of type <code>SequenceFlow</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link SequenceFlow#SEQUENCE_FLOW_TYPE}.
	 */
	@Deprecated
	public static final String SEQUENCE_FLOW_NODE = SequenceFlow.SEQUENCE_FLOW_TYPE;

	/**
	 * Storage table name of {@link #SEQUENCE_FLOW_NODE} objects.
	 */
	public static final String KO_NAME_SEQUENCE_FLOW = "BPEdge";

	/**
	 * Name of type <code>Lane</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Lane#LANE_TYPE}.
	 */
	@Deprecated
	public static final String LANE_NODE = Lane.LANE_TYPE;

	/**
	 * Storage table name of {@link #LANE_NODE} objects.
	 */
	public static final String KO_NAME_LANE = "BPElement";

	/**
	 * Name of type <code>MessageFlow</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link MessageFlow#MESSAGE_FLOW_TYPE}.
	 */
	@Deprecated
	public static final String MESSAGE_FLOW_NODE = MessageFlow.MESSAGE_FLOW_TYPE;

	/**
	 * Storage table name of {@link #MESSAGE_FLOW_NODE} objects.
	 */
	public static final String KO_NAME_MESSAGE_FLOW = "BPFlow";

	/**
	 * Name of type <code>Node</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Node#NODE_TYPE}.
	 */
	@Deprecated
	public static final String NODE_NODE = Node.NODE_TYPE;

	/**
	 * Name of type <code>Event</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Event#EVENT_TYPE}.
	 */
	@Deprecated
	public static final String EVENT_NODE = Event.EVENT_TYPE;

	/**
	 * Name of type <code>EndEvent</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link EndEvent#END_EVENT_TYPE}.
	 */
	@Deprecated
	public static final String END_EVENT_NODE = EndEvent.END_EVENT_TYPE;

	/**
	 * Storage table name of {@link #END_EVENT_NODE} objects.
	 */
	public static final String KO_NAME_END_EVENT = "BPNode";

	/**
	 * Name of type <code>IntermediateEvent</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link IntermediateEvent#INTERMEDIATE_EVENT_TYPE}.
	 */
	@Deprecated
	public static final String INTERMEDIATE_EVENT_NODE = IntermediateEvent.INTERMEDIATE_EVENT_TYPE;

	/**
	 * Name of type <code>BoundaryEvent</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link BoundaryEvent#BOUNDARY_EVENT_TYPE}.
	 */
	@Deprecated
	public static final String BOUNDARY_EVENT_NODE = BoundaryEvent.BOUNDARY_EVENT_TYPE;

	/**
	 * Storage table name of {@link #BOUNDARY_EVENT_NODE} objects.
	 */
	public static final String KO_NAME_BOUNDARY_EVENT = "BPNode";

	/**
	 * Name of type <code>IntermediateCatchEvent</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link IntermediateCatchEvent#INTERMEDIATE_CATCH_EVENT_TYPE}.
	 */
	@Deprecated
	public static final String INTERMEDIATE_CATCH_EVENT_NODE = IntermediateCatchEvent.INTERMEDIATE_CATCH_EVENT_TYPE;

	/**
	 * Storage table name of {@link #INTERMEDIATE_CATCH_EVENT_NODE} objects.
	 */
	public static final String KO_NAME_INTERMEDIATE_CATCH_EVENT = "BPNode";

	/**
	 * Name of type <code>IntermediateThrowEvent</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link IntermediateThrowEvent#INTERMEDIATE_THROW_EVENT_TYPE}.
	 */
	@Deprecated
	public static final String INTERMEDIATE_THROW_EVENT_NODE = IntermediateThrowEvent.INTERMEDIATE_THROW_EVENT_TYPE;

	/**
	 * Storage table name of {@link #INTERMEDIATE_THROW_EVENT_NODE} objects.
	 */
	public static final String KO_NAME_INTERMEDIATE_THROW_EVENT = "BPNode";

	/**
	 * Name of type <code>IntermediateMessageThrowEvent</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link IntermediateMessageThrowEvent#INTERMEDIATE_MESSAGE_THROW_EVENT_TYPE}.
	 */
	@Deprecated
	public static final String INTERMEDIATE_MESSAGE_THROW_EVENT_NODE = IntermediateMessageThrowEvent.INTERMEDIATE_MESSAGE_THROW_EVENT_TYPE;

	/**
	 * Storage table name of {@link #INTERMEDIATE_MESSAGE_THROW_EVENT_NODE} objects.
	 */
	public static final String KO_NAME_INTERMEDIATE_MESSAGE_THROW_EVENT = "BPNode";

	/**
	 * Name of type <code>StartEvent</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link StartEvent#START_EVENT_TYPE}.
	 */
	@Deprecated
	public static final String START_EVENT_NODE = StartEvent.START_EVENT_TYPE;

	/**
	 * Storage table name of {@link #START_EVENT_NODE} objects.
	 */
	public static final String KO_NAME_START_EVENT = "BPNode";

	/**
	 * Name of type <code>Gateway</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Gateway#GATEWAY_TYPE}.
	 */
	@Deprecated
	public static final String GATEWAY_NODE = Gateway.GATEWAY_TYPE;

	/**
	 * Name of type <code>DefaultGateway</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link DefaultGateway#DEFAULT_GATEWAY_TYPE}.
	 */
	@Deprecated
	public static final String DEFAULT_GATEWAY_NODE = DefaultGateway.DEFAULT_GATEWAY_TYPE;

	/**
	 * Name of type <code>ComplexGateway</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link ComplexGateway#COMPLEX_GATEWAY_TYPE}.
	 */
	@Deprecated
	public static final String COMPLEX_GATEWAY_NODE = ComplexGateway.COMPLEX_GATEWAY_TYPE;

	/**
	 * Storage table name of {@link #COMPLEX_GATEWAY_NODE} objects.
	 */
	public static final String KO_NAME_COMPLEX_GATEWAY = "BPNode";

	/**
	 * Name of type <code>ExclusiveGateway</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link ExclusiveGateway#EXCLUSIVE_GATEWAY_TYPE}.
	 */
	@Deprecated
	public static final String EXCLUSIVE_GATEWAY_NODE = ExclusiveGateway.EXCLUSIVE_GATEWAY_TYPE;

	/**
	 * Storage table name of {@link #EXCLUSIVE_GATEWAY_NODE} objects.
	 */
	public static final String KO_NAME_EXCLUSIVE_GATEWAY = "BPNode";

	/**
	 * Name of type <code>InclusiveGateway</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link InclusiveGateway#INCLUSIVE_GATEWAY_TYPE}.
	 */
	@Deprecated
	public static final String INCLUSIVE_GATEWAY_NODE = InclusiveGateway.INCLUSIVE_GATEWAY_TYPE;

	/**
	 * Storage table name of {@link #INCLUSIVE_GATEWAY_NODE} objects.
	 */
	public static final String KO_NAME_INCLUSIVE_GATEWAY = "BPNode";

	/**
	 * Name of type <code>EventBasedGateway</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link EventBasedGateway#EVENT_BASED_GATEWAY_TYPE}.
	 */
	@Deprecated
	public static final String EVENT_BASED_GATEWAY_NODE = EventBasedGateway.EVENT_BASED_GATEWAY_TYPE;

	/**
	 * Storage table name of {@link #EVENT_BASED_GATEWAY_NODE} objects.
	 */
	public static final String KO_NAME_EVENT_BASED_GATEWAY = "BPNode";

	/**
	 * Name of type <code>ParallelGateway</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link ParallelGateway#PARALLEL_GATEWAY_TYPE}.
	 */
	@Deprecated
	public static final String PARALLEL_GATEWAY_NODE = ParallelGateway.PARALLEL_GATEWAY_TYPE;

	/**
	 * Storage table name of {@link #PARALLEL_GATEWAY_NODE} objects.
	 */
	public static final String KO_NAME_PARALLEL_GATEWAY = "BPNode";

	/**
	 * Name of type <code>Task</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Task#TASK_TYPE}.
	 */
	@Deprecated
	public static final String TASK_NODE = Task.TASK_TYPE;

	/**
	 * Storage table name of {@link #TASK_NODE} objects.
	 */
	public static final String KO_NAME_TASK = "BPNode";

	/**
	 * Name of type <code>BusinessRuleTask</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link BusinessRuleTask#BUSINESS_RULE_TASK_TYPE}.
	 */
	@Deprecated
	public static final String BUSINESS_RULE_TASK_NODE = BusinessRuleTask.BUSINESS_RULE_TASK_TYPE;

	/**
	 * Storage table name of {@link #BUSINESS_RULE_TASK_NODE} objects.
	 */
	public static final String KO_NAME_BUSINESS_RULE_TASK = "BPNode";

	/**
	 * Name of type <code>CallActivity</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link CallActivity#CALL_ACTIVITY_TYPE}.
	 */
	@Deprecated
	public static final String CALL_ACTIVITY_NODE = CallActivity.CALL_ACTIVITY_TYPE;

	/**
	 * Storage table name of {@link #CALL_ACTIVITY_NODE} objects.
	 */
	public static final String KO_NAME_CALL_ACTIVITY = "BPNode";

	/**
	 * Name of type <code>ManualTask</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link ManualTask#MANUAL_TASK_TYPE}.
	 */
	@Deprecated
	public static final String MANUAL_TASK_NODE = ManualTask.MANUAL_TASK_TYPE;

	/**
	 * Storage table name of {@link #MANUAL_TASK_NODE} objects.
	 */
	public static final String KO_NAME_MANUAL_TASK = "BPNode";

	/**
	 * Name of type <code>ReceiveTask</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link ReceiveTask#RECEIVE_TASK_TYPE}.
	 */
	@Deprecated
	public static final String RECEIVE_TASK_NODE = ReceiveTask.RECEIVE_TASK_TYPE;

	/**
	 * Storage table name of {@link #RECEIVE_TASK_NODE} objects.
	 */
	public static final String KO_NAME_RECEIVE_TASK = "BPNode";

	/**
	 * Name of type <code>ScriptTask</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link ScriptTask#SCRIPT_TASK_TYPE}.
	 */
	@Deprecated
	public static final String SCRIPT_TASK_NODE = ScriptTask.SCRIPT_TASK_TYPE;

	/**
	 * Storage table name of {@link #SCRIPT_TASK_NODE} objects.
	 */
	public static final String KO_NAME_SCRIPT_TASK = "BPNode";

	/**
	 * Name of type <code>SendTask</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link SendTask#SEND_TASK_TYPE}.
	 */
	@Deprecated
	public static final String SEND_TASK_NODE = SendTask.SEND_TASK_TYPE;

	/**
	 * Storage table name of {@link #SEND_TASK_NODE} objects.
	 */
	public static final String KO_NAME_SEND_TASK = "BPNode";

	/**
	 * Name of type <code>ServiceTask</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link ServiceTask#SERVICE_TASK_TYPE}.
	 */
	@Deprecated
	public static final String SERVICE_TASK_NODE = ServiceTask.SERVICE_TASK_TYPE;

	/**
	 * Storage table name of {@link #SERVICE_TASK_NODE} objects.
	 */
	public static final String KO_NAME_SERVICE_TASK = "BPNode";

	/**
	 * Name of type <code>SubProcess</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link SubProcess#SUB_PROCESS_TYPE}.
	 */
	@Deprecated
	public static final String SUB_PROCESS_NODE = SubProcess.SUB_PROCESS_TYPE;

	/**
	 * Storage table name of {@link #SUB_PROCESS_NODE} objects.
	 */
	public static final String KO_NAME_SUB_PROCESS = "BPNode";

	/**
	 * Name of type <code>UserTask</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link UserTask#USER_TASK_TYPE}.
	 */
	@Deprecated
	public static final String USER_TASK_NODE = UserTask.USER_TASK_TYPE;

	/**
	 * Storage table name of {@link #USER_TASK_NODE} objects.
	 */
	public static final String KO_NAME_USER_TASK = "BPNode";

	/**
	 * Name of type <code>Participant</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Participant#PARTICIPANT_TYPE}.
	 */
	@Deprecated
	public static final String PARTICIPANT_NODE = Participant.PARTICIPANT_TYPE;

	/**
	 * Storage table name of {@link #PARTICIPANT_NODE} objects.
	 */
	public static final String KO_NAME_PARTICIPANT = "BPNode";

	/**
	 * Name of type <code>Process</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Process#PROCESS_TYPE}.
	 */
	@Deprecated
	public static final String PROCESS_NODE = Process.PROCESS_TYPE;

	/**
	 * Storage table name of {@link #PROCESS_NODE} objects.
	 */
	public static final String KO_NAME_PROCESS = "BPElement";

	/**
	 * Name of type <code>TextAnnotation</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link TextAnnotation#TEXT_ANNOTATION_TYPE}.
	 */
	@Deprecated
	public static final String TEXT_ANNOTATION_NODE = TextAnnotation.TEXT_ANNOTATION_TYPE;

	/**
	 * Storage table name of {@link #TEXT_ANNOTATION_NODE} objects.
	 */
	public static final String KO_NAME_TEXT_ANNOTATION = "BPAnnotation";

	/**
	 * Name of type <code>Iconified</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Iconified#ICONIFIED_TYPE}.
	 */
	@Deprecated
	public static final String ICONIFIED_NODE = Iconified.ICONIFIED_TYPE;

	/**
	 * Name of type <code>LaneSet</code> in structure {@link #TL_BPE_BPML_STRUCTURE}.
	 * 
	 * @deprecated Use {@link LaneSet#LANE_SET_TYPE}.
	 */
	@Deprecated
	public static final String LANE_SET_NODE = LaneSet.LANE_SET_TYPE;


	/**
	 * Create an instance of {@link CancelEventDefinition} type.
	 */
	public final CancelEventDefinition createCancelEventDefinition(com.top_logic.model.TLObject context) {
		return (CancelEventDefinition) createObject(getCancelEventDefinitionType(), context);
	}

	/**
	 * Create an instance of {@link CancelEventDefinition} type.
	 */
	public final CancelEventDefinition createCancelEventDefinition() {
		return createCancelEventDefinition(null);
	}

	/**
	 * Create an instance of {@link CompensateEventDefinition} type.
	 */
	public final CompensateEventDefinition createCompensateEventDefinition(com.top_logic.model.TLObject context) {
		return (CompensateEventDefinition) createObject(getCompensateEventDefinitionType(), context);
	}

	/**
	 * Create an instance of {@link CompensateEventDefinition} type.
	 */
	public final CompensateEventDefinition createCompensateEventDefinition() {
		return createCompensateEventDefinition(null);
	}

	/**
	 * Create an instance of {@link ConditionalEventDefinition} type.
	 */
	public final ConditionalEventDefinition createConditionalEventDefinition(com.top_logic.model.TLObject context) {
		return (ConditionalEventDefinition) createObject(getConditionalEventDefinitionType(), context);
	}

	/**
	 * Create an instance of {@link ConditionalEventDefinition} type.
	 */
	public final ConditionalEventDefinition createConditionalEventDefinition() {
		return createConditionalEventDefinition(null);
	}

	/**
	 * Create an instance of {@link ErrorEventDefinition} type.
	 */
	public final ErrorEventDefinition createErrorEventDefinition(com.top_logic.model.TLObject context) {
		return (ErrorEventDefinition) createObject(getErrorEventDefinitionType(), context);
	}

	/**
	 * Create an instance of {@link ErrorEventDefinition} type.
	 */
	public final ErrorEventDefinition createErrorEventDefinition() {
		return createErrorEventDefinition(null);
	}

	/**
	 * Create an instance of {@link EscalationEventDefinition} type.
	 */
	public final EscalationEventDefinition createEscalationEventDefinition(com.top_logic.model.TLObject context) {
		return (EscalationEventDefinition) createObject(getEscalationEventDefinitionType(), context);
	}

	/**
	 * Create an instance of {@link EscalationEventDefinition} type.
	 */
	public final EscalationEventDefinition createEscalationEventDefinition() {
		return createEscalationEventDefinition(null);
	}

	/**
	 * Create an instance of {@link MessageEventDefinition} type.
	 */
	public final MessageEventDefinition createMessageEventDefinition(com.top_logic.model.TLObject context) {
		return (MessageEventDefinition) createObject(getMessageEventDefinitionType(), context);
	}

	/**
	 * Create an instance of {@link MessageEventDefinition} type.
	 */
	public final MessageEventDefinition createMessageEventDefinition() {
		return createMessageEventDefinition(null);
	}

	/**
	 * Create an instance of {@link SignalEventDefinition} type.
	 */
	public final SignalEventDefinition createSignalEventDefinition(com.top_logic.model.TLObject context) {
		return (SignalEventDefinition) createObject(getSignalEventDefinitionType(), context);
	}

	/**
	 * Create an instance of {@link SignalEventDefinition} type.
	 */
	public final SignalEventDefinition createSignalEventDefinition() {
		return createSignalEventDefinition(null);
	}

	/**
	 * Create an instance of {@link TerminateEventDefinition} type.
	 */
	public final TerminateEventDefinition createTerminateEventDefinition(com.top_logic.model.TLObject context) {
		return (TerminateEventDefinition) createObject(getTerminateEventDefinitionType(), context);
	}

	/**
	 * Create an instance of {@link TerminateEventDefinition} type.
	 */
	public final TerminateEventDefinition createTerminateEventDefinition() {
		return createTerminateEventDefinition(null);
	}

	/**
	 * Create an instance of {@link TimerEventDefinition} type.
	 */
	public final TimerEventDefinition createTimerEventDefinition(com.top_logic.model.TLObject context) {
		return (TimerEventDefinition) createObject(getTimerEventDefinitionType(), context);
	}

	/**
	 * Create an instance of {@link TimerEventDefinition} type.
	 */
	public final TimerEventDefinition createTimerEventDefinition() {
		return createTimerEventDefinition(null);
	}

	/**
	 * Create an instance of {@link AnnotationAssociation} type.
	 */
	public final AnnotationAssociation createAnnotationAssociation(com.top_logic.model.TLObject context) {
		return (AnnotationAssociation) createObject(getAnnotationAssociationType(), context);
	}

	/**
	 * Create an instance of {@link AnnotationAssociation} type.
	 */
	public final AnnotationAssociation createAnnotationAssociation() {
		return createAnnotationAssociation(null);
	}

	/**
	 * Create an instance of {@link Collaboration} type.
	 */
	public final Collaboration createCollaboration(com.top_logic.model.TLObject context) {
		return (Collaboration) createObject(getCollaborationType(), context);
	}

	/**
	 * Create an instance of {@link Collaboration} type.
	 */
	public final Collaboration createCollaboration() {
		return createCollaboration(null);
	}

	/**
	 * Create an instance of {@link SequenceFlow} type.
	 */
	public final SequenceFlow createSequenceFlow(com.top_logic.model.TLObject context) {
		return (SequenceFlow) createObject(getSequenceFlowType(), context);
	}

	/**
	 * Create an instance of {@link SequenceFlow} type.
	 */
	public final SequenceFlow createSequenceFlow() {
		return createSequenceFlow(null);
	}

	/**
	 * Create an instance of {@link Lane} type.
	 */
	public final Lane createLane(com.top_logic.model.TLObject context) {
		return (Lane) createObject(getLaneType(), context);
	}

	/**
	 * Create an instance of {@link Lane} type.
	 */
	public final Lane createLane() {
		return createLane(null);
	}

	/**
	 * Create an instance of {@link MessageFlow} type.
	 */
	public final MessageFlow createMessageFlow(com.top_logic.model.TLObject context) {
		return (MessageFlow) createObject(getMessageFlowType(), context);
	}

	/**
	 * Create an instance of {@link MessageFlow} type.
	 */
	public final MessageFlow createMessageFlow() {
		return createMessageFlow(null);
	}

	/**
	 * Create an instance of {@link EndEvent} type.
	 */
	public final EndEvent createEndEvent(com.top_logic.model.TLObject context) {
		return (EndEvent) createObject(getEndEventType(), context);
	}

	/**
	 * Create an instance of {@link EndEvent} type.
	 */
	public final EndEvent createEndEvent() {
		return createEndEvent(null);
	}

	/**
	 * Create an instance of {@link BoundaryEvent} type.
	 */
	public final BoundaryEvent createBoundaryEvent(com.top_logic.model.TLObject context) {
		return (BoundaryEvent) createObject(getBoundaryEventType(), context);
	}

	/**
	 * Create an instance of {@link BoundaryEvent} type.
	 */
	public final BoundaryEvent createBoundaryEvent() {
		return createBoundaryEvent(null);
	}

	/**
	 * Create an instance of {@link IntermediateCatchEvent} type.
	 */
	public final IntermediateCatchEvent createIntermediateCatchEvent(com.top_logic.model.TLObject context) {
		return (IntermediateCatchEvent) createObject(getIntermediateCatchEventType(), context);
	}

	/**
	 * Create an instance of {@link IntermediateCatchEvent} type.
	 */
	public final IntermediateCatchEvent createIntermediateCatchEvent() {
		return createIntermediateCatchEvent(null);
	}

	/**
	 * Create an instance of {@link IntermediateThrowEvent} type.
	 */
	public final IntermediateThrowEvent createIntermediateThrowEvent(com.top_logic.model.TLObject context) {
		return (IntermediateThrowEvent) createObject(getIntermediateThrowEventType(), context);
	}

	/**
	 * Create an instance of {@link IntermediateThrowEvent} type.
	 */
	public final IntermediateThrowEvent createIntermediateThrowEvent() {
		return createIntermediateThrowEvent(null);
	}

	/**
	 * Create an instance of {@link IntermediateMessageThrowEvent} type.
	 */
	public final IntermediateMessageThrowEvent createIntermediateMessageThrowEvent(com.top_logic.model.TLObject context) {
		return (IntermediateMessageThrowEvent) createObject(getIntermediateMessageThrowEventType(), context);
	}

	/**
	 * Create an instance of {@link IntermediateMessageThrowEvent} type.
	 */
	public final IntermediateMessageThrowEvent createIntermediateMessageThrowEvent() {
		return createIntermediateMessageThrowEvent(null);
	}

	/**
	 * Create an instance of {@link StartEvent} type.
	 */
	public final StartEvent createStartEvent(com.top_logic.model.TLObject context) {
		return (StartEvent) createObject(getStartEventType(), context);
	}

	/**
	 * Create an instance of {@link StartEvent} type.
	 */
	public final StartEvent createStartEvent() {
		return createStartEvent(null);
	}

	/**
	 * Create an instance of {@link ComplexGateway} type.
	 */
	public final ComplexGateway createComplexGateway(com.top_logic.model.TLObject context) {
		return (ComplexGateway) createObject(getComplexGatewayType(), context);
	}

	/**
	 * Create an instance of {@link ComplexGateway} type.
	 */
	public final ComplexGateway createComplexGateway() {
		return createComplexGateway(null);
	}

	/**
	 * Create an instance of {@link ExclusiveGateway} type.
	 */
	public final ExclusiveGateway createExclusiveGateway(com.top_logic.model.TLObject context) {
		return (ExclusiveGateway) createObject(getExclusiveGatewayType(), context);
	}

	/**
	 * Create an instance of {@link ExclusiveGateway} type.
	 */
	public final ExclusiveGateway createExclusiveGateway() {
		return createExclusiveGateway(null);
	}

	/**
	 * Create an instance of {@link InclusiveGateway} type.
	 */
	public final InclusiveGateway createInclusiveGateway(com.top_logic.model.TLObject context) {
		return (InclusiveGateway) createObject(getInclusiveGatewayType(), context);
	}

	/**
	 * Create an instance of {@link InclusiveGateway} type.
	 */
	public final InclusiveGateway createInclusiveGateway() {
		return createInclusiveGateway(null);
	}

	/**
	 * Create an instance of {@link EventBasedGateway} type.
	 */
	public final EventBasedGateway createEventBasedGateway(com.top_logic.model.TLObject context) {
		return (EventBasedGateway) createObject(getEventBasedGatewayType(), context);
	}

	/**
	 * Create an instance of {@link EventBasedGateway} type.
	 */
	public final EventBasedGateway createEventBasedGateway() {
		return createEventBasedGateway(null);
	}

	/**
	 * Create an instance of {@link ParallelGateway} type.
	 */
	public final ParallelGateway createParallelGateway(com.top_logic.model.TLObject context) {
		return (ParallelGateway) createObject(getParallelGatewayType(), context);
	}

	/**
	 * Create an instance of {@link ParallelGateway} type.
	 */
	public final ParallelGateway createParallelGateway() {
		return createParallelGateway(null);
	}

	/**
	 * Create an instance of {@link Task} type.
	 */
	public final Task createTask(com.top_logic.model.TLObject context) {
		return (Task) createObject(getTaskType(), context);
	}

	/**
	 * Create an instance of {@link Task} type.
	 */
	public final Task createTask() {
		return createTask(null);
	}

	/**
	 * Create an instance of {@link BusinessRuleTask} type.
	 */
	public final BusinessRuleTask createBusinessRuleTask(com.top_logic.model.TLObject context) {
		return (BusinessRuleTask) createObject(getBusinessRuleTaskType(), context);
	}

	/**
	 * Create an instance of {@link BusinessRuleTask} type.
	 */
	public final BusinessRuleTask createBusinessRuleTask() {
		return createBusinessRuleTask(null);
	}

	/**
	 * Create an instance of {@link CallActivity} type.
	 */
	public final CallActivity createCallActivity(com.top_logic.model.TLObject context) {
		return (CallActivity) createObject(getCallActivityType(), context);
	}

	/**
	 * Create an instance of {@link CallActivity} type.
	 */
	public final CallActivity createCallActivity() {
		return createCallActivity(null);
	}

	/**
	 * Create an instance of {@link ManualTask} type.
	 */
	public final ManualTask createManualTask(com.top_logic.model.TLObject context) {
		return (ManualTask) createObject(getManualTaskType(), context);
	}

	/**
	 * Create an instance of {@link ManualTask} type.
	 */
	public final ManualTask createManualTask() {
		return createManualTask(null);
	}

	/**
	 * Create an instance of {@link ReceiveTask} type.
	 */
	public final ReceiveTask createReceiveTask(com.top_logic.model.TLObject context) {
		return (ReceiveTask) createObject(getReceiveTaskType(), context);
	}

	/**
	 * Create an instance of {@link ReceiveTask} type.
	 */
	public final ReceiveTask createReceiveTask() {
		return createReceiveTask(null);
	}

	/**
	 * Create an instance of {@link ScriptTask} type.
	 */
	public final ScriptTask createScriptTask(com.top_logic.model.TLObject context) {
		return (ScriptTask) createObject(getScriptTaskType(), context);
	}

	/**
	 * Create an instance of {@link ScriptTask} type.
	 */
	public final ScriptTask createScriptTask() {
		return createScriptTask(null);
	}

	/**
	 * Create an instance of {@link SendTask} type.
	 */
	public final SendTask createSendTask(com.top_logic.model.TLObject context) {
		return (SendTask) createObject(getSendTaskType(), context);
	}

	/**
	 * Create an instance of {@link SendTask} type.
	 */
	public final SendTask createSendTask() {
		return createSendTask(null);
	}

	/**
	 * Create an instance of {@link ServiceTask} type.
	 */
	public final ServiceTask createServiceTask(com.top_logic.model.TLObject context) {
		return (ServiceTask) createObject(getServiceTaskType(), context);
	}

	/**
	 * Create an instance of {@link ServiceTask} type.
	 */
	public final ServiceTask createServiceTask() {
		return createServiceTask(null);
	}

	/**
	 * Create an instance of {@link SubProcess} type.
	 */
	public final SubProcess createSubProcess(com.top_logic.model.TLObject context) {
		return (SubProcess) createObject(getSubProcessType(), context);
	}

	/**
	 * Create an instance of {@link SubProcess} type.
	 */
	public final SubProcess createSubProcess() {
		return createSubProcess(null);
	}

	/**
	 * Create an instance of {@link UserTask} type.
	 */
	public final UserTask createUserTask(com.top_logic.model.TLObject context) {
		return (UserTask) createObject(getUserTaskType(), context);
	}

	/**
	 * Create an instance of {@link UserTask} type.
	 */
	public final UserTask createUserTask() {
		return createUserTask(null);
	}

	/**
	 * Create an instance of {@link Participant} type.
	 */
	public final Participant createParticipant(com.top_logic.model.TLObject context) {
		return (Participant) createObject(getParticipantType(), context);
	}

	/**
	 * Create an instance of {@link Participant} type.
	 */
	public final Participant createParticipant() {
		return createParticipant(null);
	}

	/**
	 * Create an instance of {@link Process} type.
	 */
	public final Process createProcess(com.top_logic.model.TLObject context) {
		return (Process) createObject(getProcessType(), context);
	}

	/**
	 * Create an instance of {@link Process} type.
	 */
	public final Process createProcess() {
		return createProcess(null);
	}

	/**
	 * Create an instance of {@link TextAnnotation} type.
	 */
	public final TextAnnotation createTextAnnotation(com.top_logic.model.TLObject context) {
		return (TextAnnotation) createObject(getTextAnnotationType(), context);
	}

	/**
	 * Create an instance of {@link TextAnnotation} type.
	 */
	public final TextAnnotation createTextAnnotation() {
		return createTextAnnotation(null);
	}

	/**
	 * The singleton instance of {@link TlBpeBpmlFactory}.
	 */
	public static TlBpeBpmlFactory getInstance() {
		return (TlBpeBpmlFactory) com.top_logic.element.model.DynamicModelService.getFactoryFor(TL_BPE_BPML_STRUCTURE);
	}
}
