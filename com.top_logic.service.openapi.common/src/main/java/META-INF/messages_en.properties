class.com.top_logic.service.openapi.common.authentication.I18NConstants.ERROR_NO_AUTHENTICATION_AVAILABLE__DOMAIN = No authentication config available for domain {0}.
class.com.top_logic.service.openapi.common.authentication.I18NConstants.ERROR_NO_SECRET_AVAILABLE__DOMAIN = No secret available for domain {0}.
class.com.top_logic.service.openapi.common.authentication.oauth.I18NConstants.ERROR_INVALID_URI__URL = Invalid URI in URL {0}.
class.com.top_logic.service.openapi.common.document.I18NConstants.ERROR_REQUIRE_MUST_BE_SET_ON_PATH_PARAMETER = The property "Required" must be set to "true" for a path parameter.
class.com.top_logic.service.openapi.common.document.I18NConstants.PARAMETER_IS_NOT_AN_OBJECT__PARAMETER = The parameter is not an JSON object: {0}
class.com.top_logic.service.openapi.common.document.I18NConstants.REFERENCE_PARAMETER_IS_NOT_A_STRING__REFERENCE = The reference is not a string: {0}
class.com.top_logic.service.openapi.common.layout.I18NConstants.ERROR_YAML_TO_JSON_FAILED = The given YAML file could not be transformed to JSON.
class.com.top_logic.service.openapi.common.layout.I18NConstants.IMPORT_OPEN_API_CONFIG_DIALOG_TITLE = OpenAPI configuration import
class.com.top_logic.service.openapi.common.layout.I18NConstants.INVALID_GLOBAL_SCHEMA_DEFINITION__PARAMETER_NAME__PROBLEM__SCHEMA_NAME = Global schema definition ''{2}'' in parameter ''{0}'' is invalid: {1}
class.com.top_logic.service.openapi.common.layout.I18NConstants.INVALID_GLOBAL_SCHEMA_DEFINITION__PARAMETER_SCHEMA = Invalid schema reference ''{1}'' in parameter ''{0}''.
class.com.top_logic.service.openapi.common.layout.I18NConstants.INVALID_SCHEMA_DEFINITION__PARAMETER_PROBLEM = Schema definition of parameter ''{0}'' is invalid: {1}
class.com.top_logic.service.openapi.common.layout.I18NConstants.INVALID_URL__URL__SCHEMA = Invalid URL {0} in scheme {1}.
class.com.top_logic.service.openapi.common.layout.I18NConstants.MISSING_CLIENT_CREDENTIALS_FLOW__SCHEMA = Only authentication via ClientCredentials is supported: {0}
class.com.top_logic.service.openapi.common.layout.I18NConstants.MISSING_GLOBAL_SCHEMA_DEFINITION__PARAMETER_SCHEMA = Missing global schema reference ''{1}'' in parameter ''{0}''.
class.com.top_logic.service.openapi.common.layout.I18NConstants.MISSING_HTTP_SCHEME__SCHEMA = No scheme (e.g. "Basic", "Bearer", or "Digest") given for security schema {0}.
class.com.top_logic.service.openapi.common.layout.I18NConstants.MISSING_UNSUPPORTED_HTTP_SCHEME__SCHEME_SCHEMA = The HTTP scheme {0} is currently not supported.
class.com.top_logic.service.openapi.common.layout.I18NConstants.REFERENCED_PARAMETER_NOT_FOUND__REFERENCE__AVAILABLE = The referenced parameter {0} could not be found. Available global parameters: {1}
class.com.top_logic.service.openapi.common.layout.I18NConstants.REFERENCE_NOT_A_GLOBAL_PARAMETER__REFERENCE = The reference {0} is not a reference to a globally defined parameter.
class.com.top_logic.service.openapi.common.layout.I18NConstants.WARNING_WHEN_PARSING_OPEN_API_DOCUMENT = The following problems occurred while parsing the OpenAPI document:
class.com.top_logic.service.openapi.common.layout.I18NConstants.WARNING_WHEN_PROCESSING_OPEN_API_SPECIFICATION = The following problems occurred while processing the OpenAPI document:
class.com.top_logic.service.openapi.common.schema.I18NConstants.ITEMS_MUST_NOT_BE_AN_ARRAY_SCHEMA__PROPERTY = The value of {0} must not be an array schema.
class.com.top_logic.service.openapi.common.schema.I18NConstants.NO_OBJECT_SCHEMA__SCHEMA = Not an object schema: {0}.
class.com.top_logic.service.openapi.common.schema.I18NConstants.UNEXPECTED_VALUE_TYPE__VALUE__KEY__EXPECTED_TYPE = Value {0} for key {1} is not of expected type {2}.
com.top_logic.service.openapi.common.authentication.AuthenticationConfig.domain = Domain
com.top_logic.service.openapi.common.authentication.AuthenticationConfig.domain.tooltip = Definition of the domain for which this <i>authentication configuration</i> can be used.
com.top_logic.service.openapi.common.authentication.AuthenticationConfig.separate-secret-needed = Separate secret needed
com.top_logic.service.openapi.common.authentication.AuthenticationConfig.separate-secret-needed.tooltip = Whether for this kind of authorization a separate secret is necessary.
com.top_logic.service.openapi.common.authentication.SecretConfiguration.domain = Domain
com.top_logic.service.openapi.common.authentication.SecretConfiguration.domain.tooltip = The domain of the secret.
com.top_logic.service.openapi.common.authentication.apikey.APIKeyConfig.parameter-name = Parameter name
com.top_logic.service.openapi.common.authentication.apikey.APIKeyConfig.parameter-name.tooltip = Name of the parameter holding the API key.
com.top_logic.service.openapi.common.authentication.apikey.APIKeyConfig.position = Position
com.top_logic.service.openapi.common.authentication.apikey.APIKeyConfig.position.tooltip = The position where the API key is found in the request.
com.top_logic.service.openapi.common.authentication.apikey.APIKeyPosition = API key position
com.top_logic.service.openapi.common.authentication.apikey.APIKeyPosition.COOKIE = Cookie
com.top_logic.service.openapi.common.authentication.apikey.APIKeyPosition.COOKIE.tooltip = The API key is contained in a cookie.
com.top_logic.service.openapi.common.authentication.apikey.APIKeyPosition.HEADER = Header
com.top_logic.service.openapi.common.authentication.apikey.APIKeyPosition.HEADER.tooltip = The API key is contained in a request header.
com.top_logic.service.openapi.common.authentication.apikey.APIKeyPosition.QUERY = Query
com.top_logic.service.openapi.common.authentication.apikey.APIKeyPosition.QUERY.tooltip = The API key is stores as parameter in the request.
com.top_logic.service.openapi.common.authentication.apikey.APIKeyPosition.tooltip = Possible position for the API key in the request.
com.top_logic.service.openapi.common.authentication.apikey.APIKeySecret = API key secret
com.top_logic.service.openapi.common.authentication.apikey.APIKeySecret.api-key = Api key
com.top_logic.service.openapi.common.authentication.apikey.APIKeySecret.api-key.tooltip = The API key to authenticate.
com.top_logic.service.openapi.common.authentication.apikey.APIKeySecret.description = Description
com.top_logic.service.openapi.common.authentication.apikey.APIKeySecret.description.tooltip = Optional description about the usage of the API key.
com.top_logic.service.openapi.common.authentication.apikey.APIKeySecret.tooltip = <i>Secret configuration</i> for authentication using an API key.
com.top_logic.service.openapi.common.authentication.http.HTTPSecret = HTTP secret
com.top_logic.service.openapi.common.authentication.http.HTTPSecret.login = Login
com.top_logic.service.openapi.common.authentication.http.HTTPSecret.login.tooltip = User and password that to authenticate.
com.top_logic.service.openapi.common.authentication.http.HTTPSecret.tooltip = <i>Secret configuration</i> for HTTP authentication.
com.top_logic.service.openapi.common.authentication.http.LoginCredentials = Login credentials
com.top_logic.service.openapi.common.authentication.http.LoginCredentials.password = Password
com.top_logic.service.openapi.common.authentication.http.LoginCredentials.password.tooltip = Password to authenticate <i>User</i> .
com.top_logic.service.openapi.common.authentication.http.LoginCredentials.tooltip = Login data for a user by a given password.
com.top_logic.service.openapi.common.authentication.http.LoginCredentials.user = User
com.top_logic.service.openapi.common.authentication.http.LoginCredentials.user.tooltip = Name of the user to authenticate.
com.top_logic.service.openapi.common.authentication.oauth.ClientSecret = Client secret
com.top_logic.service.openapi.common.authentication.oauth.ClientSecret.client-id = Client ID
com.top_logic.service.openapi.common.authentication.oauth.ClientSecret.client-id.tooltip = Id of this client known by the token or authentication server.
com.top_logic.service.openapi.common.authentication.oauth.ClientSecret.password = Password
com.top_logic.service.openapi.common.authentication.oauth.ClientSecret.password.tooltip = Password to authenticate this client at the token or authentication server.
com.top_logic.service.openapi.common.authentication.oauth.ClientSecret.tooltip = Identification of a client in a token or authentication server, e.g. when tokens are requested or checked.
com.top_logic.service.openapi.common.authentication.oauth.CredentialSecret = Authentication data
com.top_logic.service.openapi.common.authentication.oauth.CredentialSecret.client-secret = Access data
com.top_logic.service.openapi.common.authentication.oauth.CredentialSecret.client-secret.tooltip = <i>Client secret</i> to authenticate this client against the token server.
com.top_logic.service.openapi.common.authentication.oauth.CredentialSecret.tooltip = <i>Secret configuration</i> to authenticate using the OAuth2 client credentials mechanism.
com.top_logic.service.openapi.common.authentication.oauth.DefaultURIProvider = Default URI provider
com.top_logic.service.openapi.common.authentication.oauth.DefaultURIProvider.Config.introspection-url = Introspection URL
com.top_logic.service.openapi.common.authentication.oauth.DefaultURIProvider.Config.introspection-url.tooltip = Endpoint <i>URL</i> to check that a given token is valid.
com.top_logic.service.openapi.common.authentication.oauth.DefaultURIProvider.Config.token-url = Token URL
com.top_logic.service.openapi.common.authentication.oauth.DefaultURIProvider.Config.token-url.tooltip = Endpoint <i>URL</i> to receive a valid token from.
com.top_logic.service.openapi.common.authentication.oauth.DefaultURIProvider.tooltip = <i>Token URI provider</i> delivering configured <i>URL</i>.
com.top_logic.service.openapi.common.authentication.oauth.OpenIDURIProvider = OpenID server
com.top_logic.service.openapi.common.authentication.oauth.OpenIDURIProvider.Config.open-id-issuer = OpenID URL
com.top_logic.service.openapi.common.authentication.oauth.OpenIDURIProvider.Config.open-id-issuer.tooltip = The URL of the issuer for the <i>OpenID</i> meta data. <p> The metadata is downloaded by HTTP GET from <i>[issuer-url]/.well-known/openid-configuration</i>. </p>
com.top_logic.service.openapi.common.authentication.oauth.OpenIDURIProvider.tooltip = <i>Token URI provider</i> retrieving informations from an <i>OpenID</i> server.
com.top_logic.service.openapi.common.authentication.oauth.TokenBasedAuthentication = Token based authentication
com.top_logic.service.openapi.common.authentication.oauth.TokenBasedAuthentication.tooltip = <i>OAuth authentication</i> that checks the tokens that are sent in the request.
com.top_logic.service.openapi.common.authentication.oauth.TokenBasedAuthentication.uri-provider = URI provider
com.top_logic.service.openapi.common.authentication.oauth.TokenBasedAuthentication.uri-provider.tooltip = The <i>token URI provider</i> to get token endpoint URI from.
com.top_logic.service.openapi.common.authentication.oauth.TokenURLConfiguration = Token URL configuration
com.top_logic.service.openapi.common.authentication.oauth.TokenURLConfiguration.open-id-issuer = Open ID issuer
com.top_logic.service.openapi.common.authentication.oauth.TokenURLConfiguration.open-id-issuer.tooltip = <i>URL</i> of the Open-ID provider. <p> When <i>Use open ID server</i> is set, this is the <i>URL</i> of the Open-ID provider's configuration information, which is used to get the valid token <i>URL</i>, i.e the issuer <i>URL</i> under which the self-description of the server can be found. </p>
com.top_logic.service.openapi.common.authentication.oauth.TokenURLConfiguration.token-url = Token URL
com.top_logic.service.openapi.common.authentication.oauth.TokenURLConfiguration.token-url.tooltip = URL of the server to get or validate token.
com.top_logic.service.openapi.common.authentication.oauth.TokenURLConfiguration.tooltip = Configuration of an token URL. This is made either by configuring the token URL direct or by giving the Issuer of an Open-ID server.
com.top_logic.service.openapi.common.authentication.oauth.TokenURLConfiguration.use-open-id-server = Use open ID server
com.top_logic.service.openapi.common.authentication.oauth.TokenURLConfiguration.use-open-id-server.tooltip = Whether an Open-ID provider is used to determine the token <i>URL</i>.
com.top_logic.service.openapi.common.conf.HttpMethod = HTTP method
com.top_logic.service.openapi.common.conf.HttpMethod.DELETE = Delete
com.top_logic.service.openapi.common.conf.HttpMethod.DELETE.tooltip = The <code>DELETE</code> method requests that the origin server delete the resource identified by the Request-URI. This method MAY be overridden by human intervention (or other means) on the origin server. The client cannot be guaranteed that the operation has been carried out, even if the status code returned from the origin server indicates that the action has been completed successfully. However, the server SHOULD NOT indicate success unless, at the time the response is given, it intends to delete the resource or move it to an inaccessible location.
com.top_logic.service.openapi.common.conf.HttpMethod.GET = Get
com.top_logic.service.openapi.common.conf.HttpMethod.GET.tooltip = The <code>GET</code> method means retrieve whatever information (in the form of an entity) is identified by the Request-URI. If the Request-URI refers to a data-producing process, it is the produced data which shall be returned as the entity in the response and not the source text of the process, unless that text happens to be the output of the process.
com.top_logic.service.openapi.common.conf.HttpMethod.HEAD = Head
com.top_logic.service.openapi.common.conf.HttpMethod.HEAD.tooltip = The <code>HEAD</code> method is identical to GET except that the server MUST NOT return a message-body in the response. The metainformation contained in the HTTP headers in response to a HEAD request SHOULD be identical to the information sent in response to a GET request. This method can be used for obtaining metainformation about the entity implied by the request without transferring the entity-body itself. This method is often used for testing hypertext links for validity, accessibility, and recent modification.
com.top_logic.service.openapi.common.conf.HttpMethod.OPTIONS = Options
com.top_logic.service.openapi.common.conf.HttpMethod.OPTIONS.tooltip = The <code>OPTIONS</code> method represents a request for information about the communication options available on the request/response chain identified by the Request-URI. This method allows the client to determine the options and/or requirements associated with a resource, or the capabilities of a server, without implying a resource action or initiating a resource retrieval.
com.top_logic.service.openapi.common.conf.HttpMethod.PATCH = Patch
com.top_logic.service.openapi.common.conf.HttpMethod.PATCH.tooltip = The HTTP <code>PATCH</code> request method applies partial modifications to a resource. <p> A <code>PATCH</code> request is considered a set of instructions on how to modify a resource. Contrast this with <i>put</i>; which is a complete representation of a resource. </p> <p> A <code>PATCH</code> is not necessarily idempotent, although it can be. Contrast this with <i>put</i>; which is always idempotent. The word "idempotent" means that any number of repeated, identical requests will leave the resource in the same state. For example if an auto-incrementing counter field is an integral part of the resource, then a <i>put</i> will naturally overwrite it (since it overwrites everything), but not necessarily so for <code>PATCH</code>. </p> <p> <code>PATCH</code> (like <i>post</i>) may have side-effects on other resources. </p>
com.top_logic.service.openapi.common.conf.HttpMethod.POST = Post
com.top_logic.service.openapi.common.conf.HttpMethod.POST.tooltip = The <code>POST</code> method is used to request that the origin server accept the entity enclosed in the request as a new subordinate of the resource identified by the Request-URI in the Request-Line. POST is designed to allow a uniform method to cover the following functions: <ul> <li>Annotation of existing resources;</li> <li>Posting a message to a bulletin board, newsgroup, mailing list, or similar group of articles;</li> <li>Providing a block of data, such as the result of submitting a form, to a data-handling process;</li> <li>Extending a database through an append operation.</li> </ul> <p> The actual function performed by the POST method is determined by the server and is usually dependent on the Request-URI. The posted entity is subordinate to that URI in the same way that a file is subordinate to a directory containing it, a news article is subordinate to a newsgroup to which it is posted, or a record is subordinate to a database. </p> <p> The action performed by the POST method might not result in a resource that can be identified by a URI. In this case, either 200 (OK) or 204 (No Content) is the appropriate response status, depending on whether or not the response includes an entity that describes the result. </p>
com.top_logic.service.openapi.common.conf.HttpMethod.PUT = Put
com.top_logic.service.openapi.common.conf.HttpMethod.PUT.tooltip = The <code>PUT</code> method requests that the enclosed entity be stored under the supplied Request-URI. If the Request-URI refers to an already existing resource, the enclosed entity SHOULD be considered as a modified version of the one residing on the origin server. If the Request-URI does not point to an existing resource, and that URI is capable of being defined as a new resource by the requesting user agent, the origin server can create the resource with that URI. If a new resource is created, the origin server MUST inform the user agent via the 201 (Created) response. If an existing resource is modified, either the 200 (OK) or 204 (No Content) response codes SHOULD be sent to indicate successful completion of the request. If the resource could not be created or modified with the Request-URI, an appropriate error response SHOULD be given that reflects the nature of the problem. The recipient of the entity MUST NOT ignore any Content-* (e.g. Content-Range) headers that it does not understand or implement and MUST return a 501 (Not Implemented) response in such cases.
com.top_logic.service.openapi.common.conf.HttpMethod.TRACE = Trace
com.top_logic.service.openapi.common.conf.HttpMethod.TRACE.tooltip = The <code>TRACE</code> method is used to invoke a remote, application-layer loop- back of the request message. The final recipient of the request SHOULD reflect the message received back to the client as the entity-body of a 200 (OK) response. The final recipient is either the origin server or the first proxy or gateway to receive a Max-Forwards value of zero (0) in the request (see section 14.31). A TRACE request MUST NOT include an entity.
com.top_logic.service.openapi.common.conf.HttpMethod.tooltip = A HTTP method.
com.top_logic.service.openapi.common.document.ComponentsObject = Components object
com.top_logic.service.openapi.common.document.ComponentsObject.parameters = Parameters
com.top_logic.service.openapi.common.document.ComponentsObject.parameters.tooltip = Reusable <i>parameter objects</i>.
com.top_logic.service.openapi.common.document.ComponentsObject.schemas = Schemas
com.top_logic.service.openapi.common.document.ComponentsObject.schemas.tooltip = Reusable <i>schema objects</i>.
com.top_logic.service.openapi.common.document.ComponentsObject.securitySchemes = Security schemes
com.top_logic.service.openapi.common.document.ComponentsObject.securitySchemes.tooltip = Reusable <i>security scheme object</i>
com.top_logic.service.openapi.common.document.ComponentsObject.tooltip = Holds a set of reusable objects for different aspects of the OAS. All objects defined within the components object will have no effect on the API unless they are explicitly referenced from properties outside the components object.
com.top_logic.service.openapi.common.document.ContactObject = Contact
com.top_logic.service.openapi.common.document.ContactObject.email = Email
com.top_logic.service.openapi.common.document.ContactObject.email.tooltip = The email address of the contact person/organization. MUST be in the format of an email address.
com.top_logic.service.openapi.common.document.ContactObject.name.tooltip = The identifying name of the contact person/organization.
com.top_logic.service.openapi.common.document.ContactObject.tooltip = Contact information for the exposed API.
com.top_logic.service.openapi.common.document.ContactObject.url = URL
com.top_logic.service.openapi.common.document.ContactObject.url.tooltip = The URL pointing to the contact information. MUST be in the format of a URL.
com.top_logic.service.openapi.common.document.Described = Described
com.top_logic.service.openapi.common.document.Described.description = Description
com.top_logic.service.openapi.common.document.Described.description.tooltip = A verbose explanation of the operation behavior. <p> <i>CommonMark</i> syntax may be used for rich text representation. </p>
com.top_logic.service.openapi.common.document.Described.tooltip = Object that has a verbose description.
com.top_logic.service.openapi.common.document.IParameterObject = Parameter object
com.top_logic.service.openapi.common.document.IParameterObject.tooltip = Common super interface for parameters in an <i>openapi document</i>.
com.top_logic.service.openapi.common.document.InfoObject = Info object
com.top_logic.service.openapi.common.document.InfoObject.contact = Contact
com.top_logic.service.openapi.common.document.InfoObject.contact.tooltip = The contact information for the exposed API.
com.top_logic.service.openapi.common.document.InfoObject.license = License
com.top_logic.service.openapi.common.document.InfoObject.license.tooltip = The license information for the exposed API.
com.top_logic.service.openapi.common.document.InfoObject.termsOfService = Terms of service
com.top_logic.service.openapi.common.document.InfoObject.termsOfService.tooltip = A URL to the Terms of Service for the API. MUST be in the format of a URL.
com.top_logic.service.openapi.common.document.InfoObject.title = Title
com.top_logic.service.openapi.common.document.InfoObject.title.tooltip = The title of the API.
com.top_logic.service.openapi.common.document.InfoObject.tooltip = The object provides metadata about the API. The metadata MAY be used by the clients if needed, and MAY be presented in editing or documentation generation tools for convenience.
com.top_logic.service.openapi.common.document.InfoObject.version = Version
com.top_logic.service.openapi.common.document.InfoObject.version.tooltip = The version of the <i>OpenAPI</i> document.
com.top_logic.service.openapi.common.document.LicenseObject = License
com.top_logic.service.openapi.common.document.LicenseObject.name.tooltip = The license name used for the API.
com.top_logic.service.openapi.common.document.LicenseObject.tooltip = License information for the exposed API.
com.top_logic.service.openapi.common.document.LicenseObject.url = URL
com.top_logic.service.openapi.common.document.LicenseObject.url.tooltip = A URL to the license used for the API. MUST be in the format of a URL.
com.top_logic.service.openapi.common.document.MediaTypeObject = Media type object
com.top_logic.service.openapi.common.document.MediaTypeObject.example = Example
com.top_logic.service.openapi.common.document.MediaTypeObject.example.tooltip = Example of the media type. The example object SHOULD be in the correct format as specified by the media type.
com.top_logic.service.openapi.common.document.MediaTypeObject.mediaType = Media type
com.top_logic.service.openapi.common.document.MediaTypeObject.mediaType.tooltip = Name of the represented media type.
com.top_logic.service.openapi.common.document.MediaTypeObject.schema = Schema
com.top_logic.service.openapi.common.document.MediaTypeObject.schema.tooltip = The schema defining the content of the request, response, or parameter.
com.top_logic.service.openapi.common.document.MediaTypeObject.tooltip = Each Media Type Object provides schema and examples for the media type identified by its key.
com.top_logic.service.openapi.common.document.OAuthFlow = O auth flow
com.top_logic.service.openapi.common.document.OAuthFlow.AUTHORIZATION_CODE = Authorization code
com.top_logic.service.openapi.common.document.OAuthFlow.AUTHORIZATION_CODE.tooltip = Configuration for the OAuth Authorization Code flow.
com.top_logic.service.openapi.common.document.OAuthFlow.CLIENT_CREDENTIALS = Client credentials
com.top_logic.service.openapi.common.document.OAuthFlow.CLIENT_CREDENTIALS.tooltip = Configuration for the OAuth Client Credentials flow.
com.top_logic.service.openapi.common.document.OAuthFlow.IMPLICIT = Implicit
com.top_logic.service.openapi.common.document.OAuthFlow.IMPLICIT.tooltip = Configuration for the OAuth Implicit flow.
com.top_logic.service.openapi.common.document.OAuthFlow.PASSWORD = Password
com.top_logic.service.openapi.common.document.OAuthFlow.PASSWORD.tooltip = Configuration for the OAuth Resource Owner Password flow
com.top_logic.service.openapi.common.document.OAuthFlow.tooltip = Supported OAuth flows.
com.top_logic.service.openapi.common.document.OAuthFlowObject = O auth flow object
com.top_logic.service.openapi.common.document.OAuthFlowObject.flow = Flow
com.top_logic.service.openapi.common.document.OAuthFlowObject.flow.tooltip = The supported <i>O auth flow</i>.
com.top_logic.service.openapi.common.document.OAuthFlowObject.scopes = Scopes
com.top_logic.service.openapi.common.document.OAuthFlowObject.scopes.tooltip = The available scopes for the OAuth2 security scheme. A map between the scope name and a short description for it. The map MAY be empty.
com.top_logic.service.openapi.common.document.OAuthFlowObject.tokenUrl = Token URL
com.top_logic.service.openapi.common.document.OAuthFlowObject.tokenUrl.tooltip = The token URL to be used for this flow. This MUST be in the form of a URL. <p> The token URL must be set when <i>Flow</i> is <i>password</i>, <i>client credentials</i>, or <i>authorization code</i> </p>
com.top_logic.service.openapi.common.document.OAuthFlowObject.tooltip = Configuration details for a supported <i>O auth flow</i>.
com.top_logic.service.openapi.common.document.OpenapiDocument = Openapi document
com.top_logic.service.openapi.common.document.OpenapiDocument.components = Components
com.top_logic.service.openapi.common.document.OpenapiDocument.components.tooltip = An element to hold various schemas for the specification.
com.top_logic.service.openapi.common.document.OpenapiDocument.info = Info
com.top_logic.service.openapi.common.document.OpenapiDocument.info.tooltip = Provides metadata about the API.
com.top_logic.service.openapi.common.document.OpenapiDocument.openapi = Openapi
com.top_logic.service.openapi.common.document.OpenapiDocument.openapi.tooltip = Version number of the <i>OpenAPI</i> Specification that the <i>OpenAPI</i> document uses.
com.top_logic.service.openapi.common.document.OpenapiDocument.paths = Paths
com.top_logic.service.openapi.common.document.OpenapiDocument.paths.tooltip = The available paths and operations for the API.
com.top_logic.service.openapi.common.document.OpenapiDocument.security.tooltip = A declaration of which security mechanisms can be used across the API. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a request. Individual operations can override this definition. To make security optional, an empty security requirement ({}) can be included in the array.
com.top_logic.service.openapi.common.document.OpenapiDocument.servers.tooltip = An array of Server Objects, which provide connectivity information to a target server. If the servers property is not provided, or is an empty array, the default value would be a Server Object with a url value of /.
com.top_logic.service.openapi.common.document.OpenapiDocument.tags = Tags
com.top_logic.service.openapi.common.document.OpenapiDocument.tags.tooltip = A list of tags used by the specification with additional metadata. The order of the tags can be used to reflect on their order by the parsing tools. Not all tags that are used by the <i>operation object</i> must be declared. The tags that are not declared MAY be organized randomly or based on the tools logic. Each tag name in the list MUST be unique.
com.top_logic.service.openapi.common.document.OpenapiDocument.tooltip = Configuration specifying an <i>OpenAPI</i> document. <p> The configuration currently specifies version <code>"3.0.3"</code>. </p>
com.top_logic.service.openapi.common.document.OperationObject = Operation object
com.top_logic.service.openapi.common.document.OperationObject.impl = Implementation
com.top_logic.service.openapi.common.document.OperationObject.impl.tooltip = Reads the stored implementation from this <i>operation object</i>.
com.top_logic.service.openapi.common.document.OperationObject.operationId = Operation ID
com.top_logic.service.openapi.common.document.OperationObject.operationId.tooltip = Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The <i>operationId</i> value is case-sensitive. Tools and libraries MAY use the The <i>operationId</i> to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.
com.top_logic.service.openapi.common.document.OperationObject.parameters.tooltip = A list of parameters that are applicable for this operation. <p> If a parameter is already defined at the Path Item, the new definition will override it but can never remove it. The list MUST NOT include duplicated parameters. A unique parameter is defined by a combination of a name and location. The list can use the Reference Object to link to parameters that are defined at the <i>OpenAPI</i> Object`s components/parameters. </p>
com.top_logic.service.openapi.common.document.OperationObject.requestBody = Request body
com.top_logic.service.openapi.common.document.OperationObject.requestBody.tooltip = The request body applicable for this operation. The <i>requestBody</i> is only supported in HTTP methods where the HTTP 1.1 specification [RFC7231] has explicitly defined semantics for request bodies. In other cases where the HTTP spec is vague, <i>requestBody</i> SHALL be ignored by consumers.
com.top_logic.service.openapi.common.document.OperationObject.responses = Responses
com.top_logic.service.openapi.common.document.OperationObject.responses.tooltip = The list of possible responses as they are returned from executing this operation.
com.top_logic.service.openapi.common.document.OperationObject.security.tooltip = A declaration of which security mechanisms can be used for this operation. <p> The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a request. To make security optional, an empty security requirement ({}) can be included in the array. This definition overrides any declared top-level security. To remove a top-level security declaration, an empty array can be used. </p>
com.top_logic.service.openapi.common.document.OperationObject.summary = Summary
com.top_logic.service.openapi.common.document.OperationObject.summary.tooltip = A short summary of what the operation does.
com.top_logic.service.openapi.common.document.OperationObject.tags = Tags
com.top_logic.service.openapi.common.document.OperationObject.tags.tooltip = A list of tags for API documentation control. Tags can be used for logical grouping of operations by resources or any other qualifier.
com.top_logic.service.openapi.common.document.OperationObject.tooltip = Describes a single API operation on a path.
com.top_logic.service.openapi.common.document.OperationObject.x-tl-implementation = Implementation
com.top_logic.service.openapi.common.document.OperationObject.x-tl-implementation.tooltip = Implementation for this operation. <p> It is expected that the value is the serialized configuration of this operation. </p>
com.top_logic.service.openapi.common.document.ParameterLocation = Parameter location
com.top_logic.service.openapi.common.document.ParameterLocation.COOKIE = Cookie
com.top_logic.service.openapi.common.document.ParameterLocation.COOKIE.tooltip = Used to pass a specific cookie value to the API.
com.top_logic.service.openapi.common.document.ParameterLocation.HEADER = Header
com.top_logic.service.openapi.common.document.ParameterLocation.HEADER.tooltip = Custom headers that are expected as part of the request. Note that [RFC7230] states header names are case insensitive.
com.top_logic.service.openapi.common.document.ParameterLocation.PATH = Path
com.top_logic.service.openapi.common.document.ParameterLocation.PATH.tooltip = Used together with Path Templating, where the parameter value is actually part of the operation's URL. This does not include the host or base path of the API. For example, in <i>/items/{itemId}</i>, the path parameter is <i>itemId</i>.
com.top_logic.service.openapi.common.document.ParameterLocation.QUERY = Query
com.top_logic.service.openapi.common.document.ParameterLocation.QUERY.tooltip = Parameters that are appended to the URL. For example, in <i>/items?id=###</i>, the query parameter is <i>id</i>.
com.top_logic.service.openapi.common.document.ParameterLocation.tooltip = Definition of the location where the parameter is delivered to the API.
com.top_logic.service.openapi.common.document.ParameterObject = Parameter object
com.top_logic.service.openapi.common.document.ParameterObject.description.tooltip = A brief description of the parameter. This could contain examples of use.
com.top_logic.service.openapi.common.document.ParameterObject.example = Example
com.top_logic.service.openapi.common.document.ParameterObject.example.tooltip = Example of the parameter's potential value. The example SHOULD match the specified schema and encoding properties if present. The example field is mutually exclusive of the examples field. Furthermore, if referencing a schema that contains an example, the example value SHALL override the example provided by the schema. To represent examples of media types that cannot naturally be represented in JSON or YAML, a string value can contain the example with escaping where necessary.
com.top_logic.service.openapi.common.document.ParameterObject.in = In
com.top_logic.service.openapi.common.document.ParameterObject.in.tooltip = The location of the parameter.
com.top_logic.service.openapi.common.document.ParameterObject.required = Required
com.top_logic.service.openapi.common.document.ParameterObject.required.tooltip = Determines whether this parameter is mandatory. If the parameter location is "path", this property is REQUIRED and its value MUST be true. Otherwise, the property MAY be included and its default value is false.
com.top_logic.service.openapi.common.document.ParameterObject.schema = Schema
com.top_logic.service.openapi.common.document.ParameterObject.schema.tooltip = The schema defining the type used for the parameter.
com.top_logic.service.openapi.common.document.ParameterObject.tooltip = Describes a single operation parameter. A unique parameter is defined by a combination of a name and location.
com.top_logic.service.openapi.common.document.PathItemObject = Path item object
com.top_logic.service.openapi.common.document.PathItemObject.delete = Delete
com.top_logic.service.openapi.common.document.PathItemObject.delete.tooltip = A definition of a DELETE operation on this path.
com.top_logic.service.openapi.common.document.PathItemObject.get = Get
com.top_logic.service.openapi.common.document.PathItemObject.get.tooltip = A definition of a GET operation on this path.
com.top_logic.service.openapi.common.document.PathItemObject.head = Head
com.top_logic.service.openapi.common.document.PathItemObject.head.tooltip = A definition of a HEAD operation on this path.
com.top_logic.service.openapi.common.document.PathItemObject.options = Options
com.top_logic.service.openapi.common.document.PathItemObject.options.tooltip = A definition of a OPTIONS operation on this path.
com.top_logic.service.openapi.common.document.PathItemObject.parameters.tooltip = A list of parameters that are applicable for all the operations described under this path. These parameters can be overridden at the operation level, but cannot be removed there. The list MUST NOT include duplicated parameters. A unique parameter is defined by a combination of a name and location.
com.top_logic.service.openapi.common.document.PathItemObject.patch = Patch
com.top_logic.service.openapi.common.document.PathItemObject.patch.tooltip = A definition of a PATCH operation on this path.
com.top_logic.service.openapi.common.document.PathItemObject.path = Path
com.top_logic.service.openapi.common.document.PathItemObject.path.tooltip = The actual path.
com.top_logic.service.openapi.common.document.PathItemObject.post = Post
com.top_logic.service.openapi.common.document.PathItemObject.post.tooltip = A definition of a POST operation on this path.
com.top_logic.service.openapi.common.document.PathItemObject.put = Put
com.top_logic.service.openapi.common.document.PathItemObject.put.tooltip = A definition of a PUT operation on this path.
com.top_logic.service.openapi.common.document.PathItemObject.tooltip = Describes the operations available on a single path. A Path Item MAY be empty, due to ACL constraints. The path itself is still exposed to the documentation viewer but they will not know which operations and parameters are available.
com.top_logic.service.openapi.common.document.PathItemObject.trace = Trace
com.top_logic.service.openapi.common.document.PathItemObject.trace.tooltip = A definition of a TRACE operation on this path.
com.top_logic.service.openapi.common.document.ReferencableParameterObject = Referencable parameter object
com.top_logic.service.openapi.common.document.ReferencableParameterObject.tooltip = <i>Parameter object</i> that can be referenced by a reference name.
com.top_logic.service.openapi.common.document.ReferencingObject = Referencing object
com.top_logic.service.openapi.common.document.ReferencingObject.$ref = $ref
com.top_logic.service.openapi.common.document.ReferencingObject.$ref.tooltip = The reference name of referenced object.
com.top_logic.service.openapi.common.document.ReferencingObject.tooltip = Item that references a <i>referencable object</i> by a reference name.
com.top_logic.service.openapi.common.document.ReferencingParameterObject = Referencing parameter object
com.top_logic.service.openapi.common.document.ReferencingParameterObject.tooltip = <i>Parameter object</i> that references a <i>referencable parameter object</i>.
com.top_logic.service.openapi.common.document.RequestBodyObject = Request body object
com.top_logic.service.openapi.common.document.RequestBodyObject.content = Content
com.top_logic.service.openapi.common.document.RequestBodyObject.content.tooltip = A map containing descriptions of potential response payloads. The key is a media type or media type range and the value describes it. For responses that match multiple keys, only the most specific key is applicable. e.g. text/plain overrides text/*.
com.top_logic.service.openapi.common.document.RequestBodyObject.description.tooltip = A brief description of the request body. This could contain examples of use. <p> <i>CommonMark</i> syntax may be used for rich text representation. </p>
com.top_logic.service.openapi.common.document.RequestBodyObject.required = Required
com.top_logic.service.openapi.common.document.RequestBodyObject.required.tooltip = Determines if the request body is required in the request. Defaults to false.
com.top_logic.service.openapi.common.document.RequestBodyObject.tooltip = Describes a single request body.
com.top_logic.service.openapi.common.document.ResponsesObject = Responses object
com.top_logic.service.openapi.common.document.ResponsesObject.content = Content
com.top_logic.service.openapi.common.document.ResponsesObject.content.tooltip = A map containing descriptions of potential response payloads. The key is a media type or media type range and the value describes it. For responses that match multiple keys, only the most specific key is applicable. e.g. text/plain overrides text/*.
com.top_logic.service.openapi.common.document.ResponsesObject.description.tooltip = A short description of the response.
com.top_logic.service.openapi.common.document.ResponsesObject.statusCode = Status code
com.top_logic.service.openapi.common.document.ResponsesObject.statusCode.tooltip = Any HTTP status code can be used as the property name, but only one property per code, to describe the expected response for that HTTP status code. A Reference Object can link to a response that is defined in the <i>OpenAPI</i> Object's components/responses section. This field MUST be enclosed in quotation marks (for example, "200") for compatibility between JSON and YAML. To define a range of response codes, this field MAY contain the uppercase wildcard character X. For example, 2XX represents all response codes between [200-299]. Only the following range definitions are allowed: 1XX, 2XX, 3XX, 4XX, and 5XX. If a response is defined using an explicit code, the explicit code definition takes precedence over the range definition for that code.
com.top_logic.service.openapi.common.document.ResponsesObject.tooltip = A container for the expected responses of an operation. The container maps a HTTP response code to the expected response. The documentation is not necessarily expected to cover all possible HTTP response codes because they may not be known in advance. However, documentation is expected to cover a successful operation response and any known errors. The default MAY be used as a default response object for all HTTP codes that are not covered individually by the specification. The Responses Object MUST contain at least one response code, and it SHOULD be the response for a successful operation call.
com.top_logic.service.openapi.common.document.SchemaObject = Schema object
com.top_logic.service.openapi.common.document.SchemaObject.schema = Schema
com.top_logic.service.openapi.common.document.SchemaObject.schema.tooltip = The schema in JSON form.
com.top_logic.service.openapi.common.document.SchemaObject.tooltip = A named <i>OpenAPI</i> schema.
com.top_logic.service.openapi.common.document.SecuritySchemeObject = Security scheme object
com.top_logic.service.openapi.common.document.SecuritySchemeObject.description.tooltip = A short description for security scheme.
com.top_logic.service.openapi.common.document.SecuritySchemeObject.flows = Flows
com.top_logic.service.openapi.common.document.SecuritySchemeObject.flows.tooltip = An object containing configuration information for the flow types supported. <p> Mandatory when <i>Type</i> is <i>oauth2</i>. </p>
com.top_logic.service.openapi.common.document.SecuritySchemeObject.in = In
com.top_logic.service.openapi.common.document.SecuritySchemeObject.in.tooltip = The location of the API key. <p> Mandatory when <i>Type</i> is <i>api key</i>. </p>
com.top_logic.service.openapi.common.document.SecuritySchemeObject.name = Name
com.top_logic.service.openapi.common.document.SecuritySchemeObject.name.tooltip = The name of the header, query or cookie parameter to be used. <p> Mandatory when <i>Type</i> is <i>api key</i>. </p>
com.top_logic.service.openapi.common.document.SecuritySchemeObject.openIdConnectUrl = Open ID connect URL
com.top_logic.service.openapi.common.document.SecuritySchemeObject.openIdConnectUrl.tooltip = <i>OpenId</i> connect URL to discover <i>OAuth2</i> configuration values. <p> Mandatory when <i>Type</i> is <i>open ID connect</i>. </p>
com.top_logic.service.openapi.common.document.SecuritySchemeObject.schemaName = Schema name
com.top_logic.service.openapi.common.document.SecuritySchemeObject.schemaName.tooltip = Name of the security schema.
com.top_logic.service.openapi.common.document.SecuritySchemeObject.scheme = Scheme
com.top_logic.service.openapi.common.document.SecuritySchemeObject.scheme.tooltip = The name of the HTTP Authorization scheme to be used in the Authorization header as defined in [RFC7235]. The values used SHOULD be registered in the IANA Authentication Scheme registry. <p> Mandatory when <i>Type</i> is <i>HTTP</i>. </p>
com.top_logic.service.openapi.common.document.SecuritySchemeObject.tooltip = Defines a security scheme that can be used by the operations. Supported schemes are HTTP authentication, an API key (either as a header, a cookie parameter or as a query parameter), OAuth2's common flows (implicit, password, client credentials and authorization code) as defined in [RFC6749], and <i>OpenID Connect Discovery</i>.
com.top_logic.service.openapi.common.document.SecuritySchemeObject.type = Type
com.top_logic.service.openapi.common.document.SecuritySchemeObject.type.tooltip = The type of the security scheme.
com.top_logic.service.openapi.common.document.SecuritySchemeObject.x-tl-in-user-context = In user context
com.top_logic.service.openapi.common.document.SecuritySchemeObject.x-tl-in-user-context.tooltip = Whether operations protected by this <i>security scheme object</i> must be executed in user context.
com.top_logic.service.openapi.common.document.SecuritySchemeObject.x-tl-username-field = Username field
com.top_logic.service.openapi.common.document.SecuritySchemeObject.x-tl-username-field.tooltip = Name of the field in a token introspection response, that holds the user name. <p> Only relevant when operations are executed in user context. </p>
com.top_logic.service.openapi.common.document.SecuritySchemeType = Security scheme type
com.top_logic.service.openapi.common.document.SecuritySchemeType.API_KEY = Api key
com.top_logic.service.openapi.common.document.SecuritySchemeType.API_KEY.tooltip = Security using an API key (either as a header, a cookie parameter or as a query parameter).
com.top_logic.service.openapi.common.document.SecuritySchemeType.HTTP = HTTP
com.top_logic.service.openapi.common.document.SecuritySchemeType.HTTP.tooltip = HTTP authentication.
com.top_logic.service.openapi.common.document.SecuritySchemeType.OAUTH2 = Oauth2
com.top_logic.service.openapi.common.document.SecuritySchemeType.OAUTH2.tooltip = OAuth2's common flows (implicit, password, client credentials and authorization code) as defined in [RFC6749].
com.top_logic.service.openapi.common.document.SecuritySchemeType.OPEN_ID_CONNECT = Open ID connect
com.top_logic.service.openapi.common.document.SecuritySchemeType.OPEN_ID_CONNECT.tooltip = <i>OpenID Connect Discovery</i>.
com.top_logic.service.openapi.common.document.SecuritySchemeType.tooltip = Supported security scheme types.
com.top_logic.service.openapi.common.document.ServerObject = Server object
com.top_logic.service.openapi.common.document.ServerObject.description.tooltip = An optional string describing the host designated by the URL.
com.top_logic.service.openapi.common.document.ServerObject.tooltip = An object representing a Server.
com.top_logic.service.openapi.common.document.ServerObject.url = URL
com.top_logic.service.openapi.common.document.ServerObject.url.tooltip = A URL to the target host. This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the <i>OpenAPI</i> document is being served. Variable substitutions will be made when a variable is named in {brackets}.
com.top_logic.service.openapi.common.document.ServerObject.variables = Variables
com.top_logic.service.openapi.common.document.ServerObject.variables.tooltip = A map between a variable name and its value. The value is used for substitution in the server's URL template.
com.top_logic.service.openapi.common.document.ServerVariableObject = Server variable object
com.top_logic.service.openapi.common.document.ServerVariableObject.default = Default
com.top_logic.service.openapi.common.document.ServerVariableObject.default.tooltip = The default value to use for substitution, which SHALL be sent if an alternate value is not supplied. Note this behavior is different than the Schema Object's treatment of default values, because in those cases parameter values are optional. If the enum is defined, the value MUST exist in the enum's values.
com.top_logic.service.openapi.common.document.ServerVariableObject.enum = Enum
com.top_logic.service.openapi.common.document.ServerVariableObject.enum.tooltip = An enumeration of string values to be used if the substitution options are from a limited set. The array MUST NOT be empty.
com.top_logic.service.openapi.common.document.ServerVariableObject.name.tooltip = Name of the variable.
com.top_logic.service.openapi.common.document.ServerVariableObject.tooltip = An object representing a Server Variable for server URL template substitution.
com.top_logic.service.openapi.common.document.TagObject = Tag
com.top_logic.service.openapi.common.document.TagObject.description.tooltip = A short description for the tag. <p> <i>CommonMark</i> syntax may be used for rich text representation. </p>
com.top_logic.service.openapi.common.document.TagObject.name.tooltip = The name of the tag.
com.top_logic.service.openapi.common.document.TagObject.tooltip = Adds metadata to a single tag that is used by the Operation Object. It is not mandatory to have a <i>tag</i> per tag defined in the <i>operation object</i> instances.
com.top_logic.service.openapi.common.document.WithParameters.parameters = Parameters
com.top_logic.service.openapi.common.document.WithParameters.parameters.tooltip = A list of parameters.
com.top_logic.service.openapi.common.document.WithSecurity.security = Security
com.top_logic.service.openapi.common.document.WithSecurity.security.tooltip = A declaration of which security mechanisms can be used across the API. The list of values includes alternative security requirement objects that can be used. Only one of the security requirement objects need to be satisfied to authorize a request.
com.top_logic.service.openapi.common.document.WithServers.servers = Servers
com.top_logic.service.openapi.common.document.WithServers.servers.tooltip = An array of <i>server object</i>, which provide connectivity information to a target server.
com.top_logic.service.openapi.common.layout.ImportOpenAPIConfiguration = Import open API configuration
com.top_logic.service.openapi.common.layout.ImportOpenAPIConfiguration$ImportConfiguration = Import configuration
com.top_logic.service.openapi.common.layout.ImportOpenAPIConfiguration$ImportConfiguration.tooltip = Configuration of the <i>OpenAPI</i> document containing the server configuration to create access methods for.
com.top_logic.service.openapi.common.layout.ImportOpenAPIConfiguration.ImportConfiguration.open-api-configuration = Open api configuration
com.top_logic.service.openapi.common.layout.ImportOpenAPIConfiguration.ImportConfiguration.open-api-configuration.tooltip = <i>Binary data</i> containing the JSON configuration of the <i>OpenAPI</i> server to create access methods for.
com.top_logic.service.openapi.common.layout.ImportOpenAPIConfiguration.tooltip = <i>Command handler</i> importing an <i>OpenAPI</i> specification document.
com.top_logic.service.openapi.common.layout.MultiPartBodyTransferType = Transfer type for multi part body
com.top_logic.service.openapi.common.layout.MultiPartBodyTransferType.FORM_DATA = multipart/form-data
com.top_logic.service.openapi.common.layout.MultiPartBodyTransferType.FORM_DATA.tooltip = The values for the body are transfered as separate parts in the request body.
com.top_logic.service.openapi.common.layout.MultiPartBodyTransferType.URL_ENCODED = application/x-www-form-urlencoded
com.top_logic.service.openapi.common.layout.MultiPartBodyTransferType.URL_ENCODED.tooltip = The values for the body are transfered as key/value pairs in the request body.
com.top_logic.service.openapi.common.layout.MultiPartBodyTransferType.tooltip = Transfer type of a multipart body.
com.top_logic.service.openapi.common.layout.WithMultiPartBodyTransferType = With transfer type for multiple body
com.top_logic.service.openapi.common.layout.WithMultiPartBodyTransferType.tooltip = Configuration of the way how the the data will be transferred.
com.top_logic.service.openapi.common.layout.WithMultiPartBodyTransferType.transfer-type = Transfer type
com.top_logic.service.openapi.common.layout.WithMultiPartBodyTransferType.transfer-type.tooltip = The way how the data of the body are transfered.
com.top_logic.service.openapi.common.schema.ArraySchema = Array schema
com.top_logic.service.openapi.common.schema.ArraySchema.items = Items
com.top_logic.service.openapi.common.schema.ArraySchema.items.tooltip = The <i>schema</i> that all entries must satisfy.
com.top_logic.service.openapi.common.schema.ArraySchema.tooltip = <i>Schema</i> defining an array as value.
com.top_logic.service.openapi.common.schema.ObjectSchema = Object schema
com.top_logic.service.openapi.common.schema.ObjectSchema.properties = Properties
com.top_logic.service.openapi.common.schema.ObjectSchema.properties.tooltip = Allowed properties for the value.
com.top_logic.service.openapi.common.schema.ObjectSchema.tooltip = <i>Schema</i> defining an structured object as value.
com.top_logic.service.openapi.common.schema.ObjectSchemaProperty = Object schema property
com.top_logic.service.openapi.common.schema.ObjectSchemaProperty.required = Required
com.top_logic.service.openapi.common.schema.ObjectSchemaProperty.required.tooltip = Whether this property must be set.
com.top_logic.service.openapi.common.schema.ObjectSchemaProperty.schema = Schema
com.top_logic.service.openapi.common.schema.ObjectSchemaProperty.schema.tooltip = The <i>schema</i> that a value for this property must satisfy.
com.top_logic.service.openapi.common.schema.ObjectSchemaProperty.tooltip = Definition of a property in an <i>object schema</i>.
com.top_logic.service.openapi.common.schema.PrimitiveSchema = Primitive schema
com.top_logic.service.openapi.common.schema.PrimitiveSchema.format = Format
com.top_logic.service.openapi.common.schema.PrimitiveSchema.format.tooltip = The format that the primitive value must satisfy.
com.top_logic.service.openapi.common.schema.PrimitiveSchema.tooltip = <i>Schema</i> representing a primitive value.
com.top_logic.service.openapi.common.schema.Schema.as-string = As string
com.top_logic.service.openapi.common.schema.Schema.as-string.tooltip = This schema in serialised form.
com.top_logic.service.openapi.common.schema.Schema.default = Default
com.top_logic.service.openapi.common.schema.Schema.default.tooltip = String representation of the default value, that is used when an element of this <i>schema</i> is expected but nothing is given.
com.top_logic.service.openapi.common.schema.Schema.description = Description
com.top_logic.service.openapi.common.schema.Schema.description.tooltip = Description of the possible value.
com.top_logic.service.openapi.common.schema.Schema.example = Example
com.top_logic.service.openapi.common.schema.Schema.example.tooltip = String representation of an potential value that satisfy this schema.
com.top_logic.service.openapi.common.schema.Schema.type = Type
com.top_logic.service.openapi.common.schema.Schema.type.tooltip = The type of the schema. <p> The type is a classification of the value. </p>
