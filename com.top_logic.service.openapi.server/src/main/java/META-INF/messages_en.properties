class.com.top_logic.service.openapi.server.I18NConstants.CLASHING_PATH_PARAMETERS__PATH1__PATH2__UNIFIED_COMPLETE_PATH = The pathes ''{0}'' and ''{1}'' lead to the same result considering the path parameters: {2}
class.com.top_logic.service.openapi.server.I18NConstants.CREATING_AUTHENTICATOR_FAILED__PATH__METHOD = No authentication algorithm for {1}:{0} could be created.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_ILLEGAL_TOKEN_VALIDATION_RESPONSE__MSG = Invalid server response when validating token: {0}
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_INVALID_API_KEY__PARAMETER = Invalid API key found in parameter ''{0}''.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_NO_COOKIE__PARAMETER = No cookie with name ''{0}'' found.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_NO_HEADER__PARAMETER = No header with name ''{0}'' found.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_NO_QUERY_PARAM__PARAMETER = No query parameter with name ''{0}'' found.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_NO_TOKEN = Unable to get token.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_TOKEN_DECLINED__STATUS_CODE__CODE__DESCRIPTION = Token declined: {0} {1}: {2}.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_TOKEN_EXPIRED__DATE = Authentication token is expired at {0}.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.AUTH_FAILED_TOKEN_INACTIVE = Token inactive.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.ERROR_MISSING_AUTHENTICATION_SECRET = Missing authentication secret.
class.com.top_logic.service.openapi.server.authentication.I18NConstants.ERROR_MULTIPLE_CLIENT_CREDENTIAL_SECRETS__DOMAIN = Multiple Client Credential configurations for domain {0}.
class.com.top_logic.service.openapi.server.authentication.http.basic.I18NConstants.AUTH_FAILED_MISSING_AUTHENTICATION_DATA = Missing authentication data.
class.com.top_logic.service.openapi.server.authentication.http.basic.I18NConstants.AUTH_FAILED_NO_BASIC_AUTH = Not a BasicAuth authentication.
class.com.top_logic.service.openapi.server.authentication.http.basic.I18NConstants.AUTH_FAILED_WRONG_AUTHENTICATION_DATA__USER = Wrong credentials for user "{0}".
class.com.top_logic.service.openapi.server.conf.I18NConstants.ERROR_BODY_PARAM_UNSUPPORTED_FOR_METHOD__PARAM__METHOD = The request parameter {0} is not allowed for the selected method {1}.
class.com.top_logic.service.openapi.server.conf.I18NConstants.ERROR_LOCAL_GLOBAL_PARAMETER_CLASH__CLASHES = It is not allowed to define parameter with same name and location both in the API and in the operation: {0}
class.com.top_logic.service.openapi.server.conf.I18NConstants.ERROR_MULTIPLE_REQUEST_BODY_PARAMETERS__PARAMETERS = There can only be one request body parameter in the API and the operation: {0}
class.com.top_logic.service.openapi.server.conf.I18NConstants.ERROR_PATH_PARAMETER_NOT_ALLOWED_AT_OPERATION__PARAMS = Path parameters are not allowed at operation definitions: {0}
class.com.top_logic.service.openapi.server.conf.I18NConstants.ERROR_PATH_PARAMETER_NOT_DECLARED__PARAMS = Path parameters not defined: {0}
class.com.top_logic.service.openapi.server.conf.I18NConstants.WARN_PATH_PARAMETER_NOT_USED__PARAMS = The path parameters ''{0}'' not used. The path must either contain all or no path parameters.
class.com.top_logic.service.openapi.server.impl.I18NConstants.ERROR_COMPILING_EXPRESSION__PATH_PARAMETERS = Error when compiling operation for path "{0}" with parameters "{1}".
class.com.top_logic.service.openapi.server.impl.I18NConstants.ERROR_INVALID_CONTENT_TYPE__VALUE_MSG = Invalid content type "{0}": {1}
class.com.top_logic.service.openapi.server.layout.I18NConstants.ACCESSING_SERVER_CONFIGURATION_FAILED = The access to the <i>OpenAPI</i> server configuration failed.
class.com.top_logic.service.openapi.server.layout.I18NConstants.INVALID_IMPLEMENTATION_FOR_OPERATION___PATH__METHOD__MSG = Implementation for {1}:{0} is invalid: {2}
class.com.top_logic.service.openapi.server.layout.I18NConstants.INVALID_IMPLEMENTATION_TYPE = Invalid implementation type
class.com.top_logic.service.openapi.server.layout.I18NConstants.MISSING_BODY_TYPE__PATH = Missing body type in path ''{0}''.
class.com.top_logic.service.openapi.server.layout.I18NConstants.MISSING_PARAMETER_TYPE__PARAMETER = No type found in schema for parameter {0}.
class.com.top_logic.service.openapi.server.layout.I18NConstants.UNSUPPORTED_BODY_TYPES__PATH_UNSUPPORTED_SUPPORTED = Unsupported body types ''{1}'' in path ''{0}''. Supported: {2}
class.com.top_logic.service.openapi.server.layout.I18NConstants.UNSUPPORTED_PARAMETER_FORMAT__FORMAT__PARAMETER = Format ''{0}'' in parameter ''{1}'' is not supported.
class.com.top_logic.service.openapi.server.layout.I18NConstants.UNSUPPORTED_PARAMETER_TYPE__TYPE__PARAMETER = Type ''{0}'' in parameter ''{1}'' is not supported.
class.com.top_logic.service.openapi.server.parameter.I18NConstants.UNDEFINED_PARAMETER_REFERENCE__REFERENCE = The referenced parameter "{0}" does not exist.
com.top_logic.service.openapi.server.OpenApiServer = OpenAPI server
com.top_logic.service.openapi.server.OpenApiServer$Information = Information
com.top_logic.service.openapi.server.OpenApiServer$Information.tooltip = <i>Info object</i> holding additional globally used schemas.
com.top_logic.service.openapi.server.OpenApiServer.Config.authentications.tooltip = <i>Authentication configurations</i> that can be used to authenticate requests in <i>Paths</i>.
com.top_logic.service.openapi.server.OpenApiServer.Config.base-url = Base URL
com.top_logic.service.openapi.server.OpenApiServer.Config.base-url.tooltip = The base URL under which the <i>OpenAPI</i> server can be accessed by clients.
com.top_logic.service.openapi.server.OpenApiServer.Config.display-api-spec-jsp = Display api spec jsp
com.top_logic.service.openapi.server.OpenApiServer.Config.display-api-spec-jsp.tooltip = Path to the JSP displaying the <i>OpenAPI</i> specification file.
com.top_logic.service.openapi.server.OpenApiServer.Config.global-parameters = Global parameters
com.top_logic.service.openapi.server.OpenApiServer.Config.global-parameters.tooltip = Definition of <i>request parameter</i> that can be used in each <i>operation</i> and in each <i>path item</i>. In the concrete <i>operation</i> or <i>path item</i> a <i>parameter reference</i> with the same name must be configured.
com.top_logic.service.openapi.server.OpenApiServer.Config.global-schemas = Global schemas
com.top_logic.service.openapi.server.OpenApiServer.Config.global-schemas.tooltip = Global schemas that can be used within the <i>OpenAPI</i> server.
com.top_logic.service.openapi.server.OpenApiServer.Config.information = Information
com.top_logic.service.openapi.server.OpenApiServer.Config.information.tooltip = Informations about the <i>OpenAPI</i> server.
com.top_logic.service.openapi.server.OpenApiServer.Config.paths = Paths
com.top_logic.service.openapi.server.OpenApiServer.Config.paths.tooltip = Paths that trigger service methods.
com.top_logic.service.openapi.server.OpenApiServer.Config.secrets = Secrets
com.top_logic.service.openapi.server.OpenApiServer.Config.secrets.tooltip = Configuration of the secrets that a client must use to access this server.
com.top_logic.service.openapi.server.OpenApiServer.Config.tags = Tags
com.top_logic.service.openapi.server.OpenApiServer.Config.tags.tooltip = A list of tags used by the specification with additional metadata. Each tag name in the list MUST be unique.
com.top_logic.service.openapi.server.OpenApiServer.OpenAPIServerPart.server-configuration = Server configuration
com.top_logic.service.openapi.server.OpenApiServer.OpenAPIServerPart.server-configuration.tooltip = The server configuration containing this configuration object.
com.top_logic.service.openapi.server.OpenApiServer.tooltip = Service providing a configurable REST service.
com.top_logic.service.openapi.server.authentication.ServerSecret.owner = Owner
com.top_logic.service.openapi.server.authentication.ServerSecret.owner.tooltip = The <i>OpenAPI</i> server configuration to which this <i>server secret</i> belongs.
com.top_logic.service.openapi.server.authentication.apikey.ServerAPIKeySecret = API key
com.top_logic.service.openapi.server.authentication.apikey.ServerAPIKeySecret.tooltip = <i>API key secret</i> for the Open API server.
com.top_logic.service.openapi.server.authentication.http.basic.ServerBasicAuthSecret = HTTP authentication (BasicAuth)
com.top_logic.service.openapi.server.authentication.http.basic.ServerBasicAuthSecret.tooltip = <i>HTTP secret</i> for the Open API server.
com.top_logic.service.openapi.server.authentication.oauth.ServerCredentialSecret = OpenID authentication
com.top_logic.service.openapi.server.authentication.oauth.ServerCredentialSecret.tooltip = Authentication data for an Open API server towards the <i>OpenID</i> server.
com.top_logic.service.openapi.server.conf.Operation = Operation
com.top_logic.service.openapi.server.conf.Operation.implementation = Implementation
com.top_logic.service.openapi.server.conf.Operation.implementation.tooltip = The operation to execute upon request.
com.top_logic.service.openapi.server.conf.Operation.responses = Responses
com.top_logic.service.openapi.server.conf.Operation.responses.tooltip = Definition of the potential responses of this operation.
com.top_logic.service.openapi.server.conf.Operation.summary = Summary
com.top_logic.service.openapi.server.conf.Operation.summary.tooltip = A short summary of what the operation does.
com.top_logic.service.openapi.server.conf.Operation.tooltip = A single API operation bound to a certain path.
com.top_logic.service.openapi.server.conf.OperationByMethod = Operation
com.top_logic.service.openapi.server.conf.OperationByMethod.authentication = Authentication
com.top_logic.service.openapi.server.conf.OperationByMethod.authentication.tooltip = Name of an <i>authentication configuration</i> in the <i>OpenAPI server</i> that is used to authenticate access to this <i>path item</i>.
com.top_logic.service.openapi.server.conf.OperationByMethod.enclosing-path-item = Enclosing path item
com.top_logic.service.openapi.server.conf.OperationByMethod.enclosing-path-item.tooltip = The <i>path item</i> this <i>operation</i> is a part of.
com.top_logic.service.openapi.server.conf.OperationByMethod.method = Method
com.top_logic.service.openapi.server.conf.OperationByMethod.method.tooltip = The HTTP method that triggers this operation.
com.top_logic.service.openapi.server.conf.OperationByMethod.tags = Tags
com.top_logic.service.openapi.server.conf.OperationByMethod.tags.tooltip = Tags for this operation.
com.top_logic.service.openapi.server.conf.OperationByMethod.tooltip = <i>Operation</i> bound to a HTTP <i>Method</i>.
com.top_logic.service.openapi.server.conf.OperationResponse = Operation response
com.top_logic.service.openapi.server.conf.OperationResponse.example = Example
com.top_logic.service.openapi.server.conf.OperationResponse.example.tooltip = An example for a potential response object.
com.top_logic.service.openapi.server.conf.OperationResponse.format = Format
com.top_logic.service.openapi.server.conf.OperationResponse.format.tooltip = The schema defining the type used for the parameter.
com.top_logic.service.openapi.server.conf.OperationResponse.response-code = Response code
com.top_logic.service.openapi.server.conf.OperationResponse.response-code.tooltip = The code of this response, e.g. 200,400, or 501.
com.top_logic.service.openapi.server.conf.OperationResponse.schema = Schema
com.top_logic.service.openapi.server.conf.OperationResponse.schema.tooltip = The schema of the response object.
com.top_logic.service.openapi.server.conf.OperationResponse.tooltip = Configuration of a potential response of an <i>operation</i>.
com.top_logic.service.openapi.server.conf.ParametersConfig = Parameters configuration
com.top_logic.service.openapi.server.conf.ParametersConfig.parameters = Parameters
com.top_logic.service.openapi.server.conf.ParametersConfig.parameters.tooltip = A list of parameters that are applicable for this operation. <p> The list must not include multiple parameters with the same name. </p>
com.top_logic.service.openapi.server.conf.ParametersConfig.tooltip = Configuration of parameters for an operation.
com.top_logic.service.openapi.server.conf.PathItem = Path item
com.top_logic.service.openapi.server.conf.PathItem.complete-path = Complete path
com.top_logic.service.openapi.server.conf.PathItem.complete-path.tooltip = The complete path considering all path parameters.
com.top_logic.service.openapi.server.conf.PathItem.operations = Operations
com.top_logic.service.openapi.server.conf.PathItem.operations.tooltip = Operations to perform for a certain HTTP method.
com.top_logic.service.openapi.server.conf.PathItem.owner = Owner
com.top_logic.service.openapi.server.conf.PathItem.owner.tooltip = The <i>OpenAPI</i> server configuration to which this <i>path item</i> belongs.
com.top_logic.service.openapi.server.conf.PathItem.path = Path
com.top_logic.service.openapi.server.conf.PathItem.path.tooltip = The servlet path to bind the operation to.
com.top_logic.service.openapi.server.conf.PathItem.tooltip = Describes the operations available on a single path. A Path Item MAY be empty, due to <a href="http://spec.openapis.org/oas/v3.1.0#securityFiltering">ACL constraints</a>. The path itself is still exposed to the documentation viewer but they will not know which operations and parameters are available.
com.top_logic.service.openapi.server.impl.ServiceMethodBuilderByExpression = Service method builder by expression
com.top_logic.service.openapi.server.impl.ServiceMethodBuilderByExpression.Config.operation = Operation
com.top_logic.service.openapi.server.impl.ServiceMethodBuilderByExpression.Config.operation.tooltip = The operation to execute upon request. <p> The expression has access to the implicit parameters defined for this service method. </p> <p> The script is expected to return a JSON-serializable object if the request is successful. </p> <p> Alternatively, a response object can be created and returned. This response object then defines the status code and the content of the response. Such a response object can be created using the <i>response</i> function. </p>
com.top_logic.service.openapi.server.impl.ServiceMethodBuilderByExpression.Config.transaction = Transaction
com.top_logic.service.openapi.server.impl.ServiceMethodBuilderByExpression.Config.transaction.tooltip = Whether <i>Operation</i> should be executed in a transaction context.
com.top_logic.service.openapi.server.impl.ServiceMethodBuilderByExpression.tooltip = <i>Service method builder</i> that can be parameterized with a TL-Script expression to execute upon request.
com.top_logic.service.openapi.server.layout.ExportOpenAPIConfiguration = Export open API configuration
com.top_logic.service.openapi.server.layout.ExportOpenAPIConfiguration.Config.export-format = Export format
com.top_logic.service.openapi.server.layout.ExportOpenAPIConfiguration.Config.export-format.tooltip = The format of the export.
com.top_logic.service.openapi.server.layout.ExportOpenAPIConfiguration.tooltip = <i>Command handler</i> exporting the configured server API in <i>OpenAPI</i> format.
com.top_logic.service.openapi.server.layout.ImportOpenAPIServer = Import open API server
com.top_logic.service.openapi.server.layout.ImportOpenAPIServer.tooltip = <i>Import open API configuration</i> that creates an <i>OpenAPI</i> server from an imported configuration.
com.top_logic.service.openapi.server.layout.OpenAPIExporter$ExportFormat = Export format
com.top_logic.service.openapi.server.layout.OpenAPIExporter$ExportFormat.tooltip = Export format of an <i>open API exporter</i>.
com.top_logic.service.openapi.server.layout.OpenAPIExporter.ExportFormat.JSON = JSON
com.top_logic.service.openapi.server.layout.OpenAPIExporter.ExportFormat.JSON.tooltip = The <i>OpenAPI</i> document must be exported in "json" format.
com.top_logic.service.openapi.server.layout.OpenAPIExporter.ExportFormat.YAML = Yaml
com.top_logic.service.openapi.server.layout.OpenAPIExporter.ExportFormat.YAML.tooltip = The <i>OpenAPI</i> document must be exported in "yaml" format.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter = Concrete request parameter
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter$ParameterConfiguration = Parameter configuration
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter$ParameterConfiguration.tooltip = Configuration of a parameter.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.Config.parameter-location = Parameter location
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.Config.parameter-location.tooltip = Service method to get the <i>parameter location</i> where this configuration is used.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.description.tooltip = A brief description of the parameter. This could contain examples of use. <i>CommonMark</i> syntax <i>may</i> be used for rich text representation.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.example = Example
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.example.tooltip = <i>Example</i> defines an example for the argument. The example must match the <i>Schema</i>.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.format = Format
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.format.tooltip = The schema defining the type used for the parameter.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.multiple = Multiple
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.multiple.tooltip = Whether this parameter is given multiple times.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.required = Required
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.required.tooltip = Determines whether this parameter is mandatory.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.schema = Schema
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.ParameterConfiguration.schema.tooltip = <i>Schema</i> defines the schema (in JSON format) of the expected argument. For the definition of a JSON schema see <code>https://spec.openapis.org/oas/v3.0.3#schema-object</code>.
com.top_logic.service.openapi.server.parameter.ConcreteRequestParameter.tooltip = Concrete request parameter, i.e. a <i>request parameter</i> that holds the own implementation.
com.top_logic.service.openapi.server.parameter.CookieParameter = Cookie parameter
com.top_logic.service.openapi.server.parameter.CookieParameter.tooltip = Parameter that must be given as cookie value.
com.top_logic.service.openapi.server.parameter.HeaderParameter = Header parameter
com.top_logic.service.openapi.server.parameter.HeaderParameter.tooltip = Parameter that is expected to be present as header value.
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter = Multiple part body parameter
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter$BodyPart = Body part
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter$BodyPart.tooltip = Part configuration for <i>multiple part body parameter</i>. <p> A <i>body part</i> defines the name of the field that can be contained in a multipart/form-data request, whether the field is mandatory, and the format which the content must have. </p>
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter.BodyPart.name.tooltip = The name of the body parameter.
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter.Config.multiple.tooltip = There is only one body.
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter.Config.name.tooltip = The name of the <i>multiple part body parameter</i> can be used to access all parts of the body. It is possible to access both the declared parts and the undeclared parts. <p> The value is a mapping from the field name in the body request to the value of the field. </p>
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter.Config.parts = Parts
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter.Config.parts.tooltip = The parts that are allowed for this <i>multiple part body parameter</i>.
com.top_logic.service.openapi.server.parameter.MultiPartBodyParameter.tooltip = Interprets the request multipart body as parameter. <p> This allows to read the resource contents e.g. in a <i>put</i> request from the method body. </p>
com.top_logic.service.openapi.server.parameter.ParameterFormat = Parameter format
com.top_logic.service.openapi.server.parameter.ParameterFormat.BINARY = Byte sequence
com.top_logic.service.openapi.server.parameter.ParameterFormat.BINARY.tooltip = A sequence of bytes.
com.top_logic.service.openapi.server.parameter.ParameterFormat.BOOLEAN = Boolean
com.top_logic.service.openapi.server.parameter.ParameterFormat.BOOLEAN.tooltip = A boolean value.
com.top_logic.service.openapi.server.parameter.ParameterFormat.BYTE = Base64 encoded bytes
com.top_logic.service.openapi.server.parameter.ParameterFormat.BYTE.tooltip = A base64 encoded sequence of bytes.
com.top_logic.service.openapi.server.parameter.ParameterFormat.DATE = Date
com.top_logic.service.openapi.server.parameter.ParameterFormat.DATE.tooltip = A date value.
com.top_logic.service.openapi.server.parameter.ParameterFormat.DATE_TIME = Date with time
com.top_logic.service.openapi.server.parameter.ParameterFormat.DATE_TIME.tooltip = A date value with time.
com.top_logic.service.openapi.server.parameter.ParameterFormat.DOUBLE = Double
com.top_logic.service.openapi.server.parameter.ParameterFormat.DOUBLE.tooltip = An floating point value with 64 bit.
com.top_logic.service.openapi.server.parameter.ParameterFormat.FLOAT = Float
com.top_logic.service.openapi.server.parameter.ParameterFormat.FLOAT.tooltip = An floating point value with 32 bit.
com.top_logic.service.openapi.server.parameter.ParameterFormat.INTEGER = Integer
com.top_logic.service.openapi.server.parameter.ParameterFormat.INTEGER.tooltip = An integer value with 32 bit.
com.top_logic.service.openapi.server.parameter.ParameterFormat.LONG = Long
com.top_logic.service.openapi.server.parameter.ParameterFormat.LONG.tooltip = An integer value with 64 bit.
com.top_logic.service.openapi.server.parameter.ParameterFormat.OBJECT = Object
com.top_logic.service.openapi.server.parameter.ParameterFormat.OBJECT.tooltip = A JSON object.
com.top_logic.service.openapi.server.parameter.ParameterFormat.STRING = String
com.top_logic.service.openapi.server.parameter.ParameterFormat.STRING.tooltip = An arbitrary string.
com.top_logic.service.openapi.server.parameter.ParameterFormat.tooltip = Possible formats of request parameters.
com.top_logic.service.openapi.server.parameter.ParameterReference = Parameter reference
com.top_logic.service.openapi.server.parameter.ParameterReference.Config.name.tooltip = The name of the referenced parameter. The parameter that can be referenced can be found in the global parameters of the <i>OpenAPI server configuration</i>.
com.top_logic.service.openapi.server.parameter.ParameterReference.Config.owner = Owner
com.top_logic.service.openapi.server.parameter.ParameterReference.Config.owner.tooltip = The container of this <i>configuration</i>.
com.top_logic.service.openapi.server.parameter.ParameterReference.tooltip = Reference to globally defined <i>configuration</i>.
com.top_logic.service.openapi.server.parameter.ParameterUsedIn = Parameter used in
com.top_logic.service.openapi.server.parameter.ParameterUsedIn.tooltip = Annotation for <i>request parameter</i> that defines where the parameter is expected.
com.top_logic.service.openapi.server.parameter.ParameterUsedIn.value = Value
com.top_logic.service.openapi.server.parameter.ParameterUsedIn.value.tooltip = The <i>parameter location</i> where the annotated <i>request parameter</i> is expected.
com.top_logic.service.openapi.server.parameter.PathParameter = Path parameter
com.top_logic.service.openapi.server.parameter.PathParameter.Config.multiple.tooltip = Whether multiple path entries are consumed. <p> The value of a parameter with option <i>Multiple</i> is a list of values. A path parameter with option multiple must be the last path parameter in the list of parameters, since it consumes all path entries. </p>
com.top_logic.service.openapi.server.parameter.PathParameter.Config.required.tooltip = A path parameter is always required.
com.top_logic.service.openapi.server.parameter.PathParameter.tooltip = <i>Request parameter</i> taken from the path of the accessed URL.
com.top_logic.service.openapi.server.parameter.QueryParameter = Query parameter
com.top_logic.service.openapi.server.parameter.QueryParameter.Config.multiple.tooltip = Whether multiple query arguments with the same name are allowed. <p> The value of a parameter with option <i>Multiple</i> is a list of values. If no query parameter of the specified name is given, an empty list is used as value. </p>
com.top_logic.service.openapi.server.parameter.QueryParameter.tooltip = <i>Request parameter</i> taken from the query arguments of the request URL.
com.top_logic.service.openapi.server.parameter.ReferencedParameter = Parameter reference
com.top_logic.service.openapi.server.parameter.ReferencedParameter.parameter-definition = Parameter definition
com.top_logic.service.openapi.server.parameter.ReferencedParameter.parameter-definition.tooltip = Definition of the referenced parameter.
com.top_logic.service.openapi.server.parameter.ReferencedParameter.reference-name = Reference name
com.top_logic.service.openapi.server.parameter.ReferencedParameter.reference-name.tooltip = Name of the parameter reference.
com.top_logic.service.openapi.server.parameter.ReferencedParameter.tooltip = Reference to a <i>concrete request parameter</i>.
com.top_logic.service.openapi.server.parameter.RequestBodyParameter = Request body parameter
com.top_logic.service.openapi.server.parameter.RequestBodyParameter.Config.multiple.tooltip = There is only one body.
com.top_logic.service.openapi.server.parameter.RequestBodyParameter.tooltip = Interprets the request body as parameter. <p> This allows to read the resource contents e.g. in a <i>put</i> request from the method body. </p>
com.top_logic.service.openapi.server.parameter.RequestParameter = Request parameter
com.top_logic.service.openapi.server.parameter.RequestParameter.Config.body-parameter = Body parameter
com.top_logic.service.openapi.server.parameter.RequestParameter.Config.body-parameter.tooltip = Whether this parameter is a body parameter. A body parameter must occur at most once in the parameter list.
com.top_logic.service.openapi.server.parameter.RequestParameter.Config.name.tooltip = The name of the parameter. <p> Parameter names are case sensitive. The name of the parameter determines its name in the API (e.g. in case of a query argument parameter) and its name to access it in the service method implementation. </p>
com.top_logic.service.openapi.server.parameter.RequestParameter.tooltip = Base class for request parameter parsers.
com.top_logic.service.openapi.server.script.HTTPResponse$Builder = Builder
com.top_logic.service.openapi.server.script.HTTPResponse$Builder.tooltip = <i>Simple method builder</i> creating <i>HTTP response</i>.
