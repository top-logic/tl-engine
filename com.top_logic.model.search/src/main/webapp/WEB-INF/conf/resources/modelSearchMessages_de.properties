SearchExpressionImpl = Suchausdruck
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.create.genericCreateDialog.template.label = Objektanlage
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.create.genericCreateDialog.template.label.tooltip = Anlage-Dialog für ein neues Objekt.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.create.genericCreateDialog.template.properties.create-handler = Anlegen-Knopf
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.create.genericCreateDialog.template.properties.helpID = Hilfe-Seite ermöglichen
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.create.genericCreateDialog.template.properties.helpID.tooltip = Wenn diese Eigenschaft gesetzt ist, kann für die Sicht eine Hilfe-Seite erzeugt werden.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.create.genericCreateDialog.template.properties.linkOperation = Verbindungsoperation
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.create.genericCreateDialog.template.properties.securityProviderClass = Zugriffssteuerung
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.create.genericCreateDialog.template.properties.securityProviderClass.tooltip = Objekt auf dem die Sicherheit geprüft wird
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.create.genericCreateDialog.template.properties.typeOptions = Typ-Optionen
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.create.simpleCreateDialog.template.label = Objektanlage
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.create.simpleCreateDialog.template.label.tooltip = Anlage-Dialog für ein neues Objekt. In der Detail-Konfiguration des Dialogs bestimmt werden, wie mit dem angelegten Objekt weiter verfahren werden soll.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.create.simpleCreateDialog.template.properties.model = Modell
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.create.simpleCreateDialog.template.properties.name = Name
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.create.simpleCreateDialog.template.properties.openerIcon = Bild
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.create.simpleCreateDialog.template.properties.typeOptions = Typ-Optionen
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.genericForm.template.label = Formular (allgemein)
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.genericForm.template.label.tooltip = Ein allgemein über TL-Script konfigurierbares Formular, das sowohl für die Bearbeitung als auch speziell für die Anlage neuer Objekte verwendet werden kann. Diese Vorlage sollte nur für spezielle Fälle verwendet werden, die nicht über das einfache Bearbeitungsformular behandelt werden können.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.genericForm.template.properties.modelBuilder = Formularerzeugung
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.gridByType.template.label = Grid
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.gridByType.template.label.tooltip = Zeilenbearbeitbare Tabelle, die eine Liste von Objekten anzeigt. Die Spalten der Tabelle leiten sich aus den Eigenschaften des dargestellten Typs ab.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.gridByType.template.properties.name = Name
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.gridByType.template.properties.type = Typ
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.settingsAssistent.template.label = Einstellungskomponente
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.settingsAssistent.template.label.tooltip = Ansicht, um session-lokale Einstellungen zu editieren, die als Parameter für andere Komponenten dienen können. Die Einstellungskomponente hat einen Ausgangskanal, über den sie das editierte transiente Objekt an andere Komponenten weiterleiten kann.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableByType.template.label = Tabelle
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableByType.template.label.tooltip = Eine Tabelle, die eine Menge von Objekten anzeigt. Die Spalten der Tabelle bestimmen sich aus den Eigenschaften des anzuzeigenden Modelltyps. Die Menge der anzuzeigenden Objekte können frei über einen Suchausdruck bestimmt werden.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableByType.template.properties.name = Name
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableWithDialogs.template.defaults.buttonColumn = Befehle
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableWithDialogs.template.defaults.edit = Bearbeiten
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableWithDialogs.template.defaults.editButton = Bearbeiten
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableWithDialogs.template.defaults.editDialogTitle = Eigenschaften
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableWithDialogs.template.defaults.editFormTitle = Eigenschaften (Formular)
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableWithDialogs.template.defaults.firstRow = Am Anfang.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableWithDialogs.template.defaults.lastRow = Am Ende.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableWithDialogs.template.defaults.nextObject = Weiter
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableWithDialogs.template.defaults.previousObject = Zurück
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableWithDialogs.template.label = Tabelle (mit Bearbeitungsdialog)
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableWithDialogs.template.label.tooltip = Eine vorkonfigurierte Sicht für die tabellarische Verwaltung von Objekten eines anzugebenden Typs. In der Sicht können Objekte tabellarisch aufgelistet, angelegt und gelöscht werden. Die einzelnen Teile der Sich können anschließend weiter angepasst werden.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableWithForm.template.i18n.detail = Details
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableWithForm.template.label = Tabelle (mit Formular)
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableWithForm.template.label.tooltip = Eine vorkonfigurierte Sicht für die tabellarische Verwaltung von Objekten eines anzugebenden Typs mit Detail-Formular. In der Sicht können Objekte tabellarisch aufgelistet, angelegt und gelöscht werden. Die einzelnen Teile der Sich können anschließend weiter angepasst werden.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tableWithForm.template.properties.name = Name
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileListByType.template.label = Objekte als Kacheln
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileListByType.template.label.tooltip = Eine Liste von Kacheln, von denen jede ein Objekt aus einer Objekt-Menge repräsentiert. <p>Das Aussehen einer Kacheln berechnet sich aus den Eigenschaften des Objekts, das durch die Kachel repräsentiert wird. Die Objektmenge, die als Kacheln dargestellt wird, kann über einen Suchausdruck frei definiert werden.</p>
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileListByType.template.properties.name = Name
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTableByType.template.label = Tabelle als Kachel-Kontext
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTableByType.template.label.tooltip = Eine Auswahltabelle, die einen Kontext für eine nachgelagerte Sicht definiert. <p>Bei der Selektion eines Objekts in der Auswahltabelle wird die daraufhin angezeigte Sicht im Kontext des ausgewählten Objektes angezeigt und kann über einen Modell-Kanal Bezug auf dieses Objekt nehmen.</p>
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTableByType.template.properties.name = Name
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeByType.template.label = Baum als Kachel-Kontext
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeByType.template.label.tooltip = Ein Baum, der eine Kontext-Auswahl für weitere Kacheln darstellt. Beim Klick auf einen Baumknoten öffnet sich wieder eine Kachelansicht, deren einzelne Kacheln auf das in dem Baum ausgewählte Objekt zugreifen können.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeByType.template.properties.model = Komponenten-Modell
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeByType.template.properties.model.tooltip = Das Komponenten-Modell steht der Funktion zur Verfügung, welche den Wurzelknoten berechnet. Hierüber ist es möglich, eine abhängige Sicht zu erzeugen, welche Informationen in Abhängigkeit beispielsweise der Selektion in einer anderen Sicht darstellt.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeByType.template.properties.name = Name
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeByType.template.properties.reference.tooltip = Die Referenz, welche als Baum dargestellt wird. Für ein Objekt werden die über die in dieser Referenz gespeicherten Objekte als Unterelemente angezeigt.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeByType.template.properties.rootNode = Wurzelknoten
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeByType.template.properties.rootNode.tooltip = Die Mapping-Funktion, die das Komponentenmodell empfängt, gibt den Wurzelknoten dieses Baums zurück. <p> Das Eingabekomponentenmodell wurde zuvor vom <i>Modellprädikat</i> akzeptiert. </p>
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeByType.template.properties.type.tooltip = Gemeinsamer Typ aller Elemente des darzustellenden Baumes.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeTableByType.template.label = Baumtabelle als Kachel-Kontext
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeTableByType.template.label.tooltip = Eine Tabelle mit aufklappbaren Konten, die eine Kontext-Auswahl für weitere Kacheln darstellt. Beim Klick auf eine Tabellenzeile öffnet sich wieder eine Kachelansicht, deren einzelne Kacheln auf das in der Tabelle ausgewählte Objekt zugreifen können.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeTableByType.template.properties.model = Komponenten-Modell
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeTableByType.template.properties.model.tooltip = Das Komponenten-Modell steht der Funktion zur Verfügung, welche den Wurzelknoten berechnet. Hierüber ist es möglich, eine abhängige Sicht zu erzeugen, welche Informationen in Abhängigkeit beispielsweise der Selektion in einer anderen Sicht darstellt.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeTableByType.template.properties.name = Name
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeTableByType.template.properties.reference.tooltip = Die Referenz, welche als Baum dargestellt wird. Für ein Objekt werden die über die in dieser Referenz gespeicherten Objekte als Unterelemente angezeigt.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeTableByType.template.properties.rootNode = Wurzelknoten
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeTableByType.template.properties.rootNode.tooltip = Die Mapping-Funktion, die das Komponentenmodell empfängt, gibt den Wurzelknoten dieses Baums zurück. <p> Das Eingabekomponentenmodell wurde zuvor vom <i>Modellprädikat</i> akzeptiert. </p>
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tileTreeTableByType.template.properties.type.tooltip = Gemeinsamer Typ aller Elemente des darzustellenden Baumes.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.label = Dokumentenkachel
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.label.tooltip = Kachel, die ein PDF-Dokument anzeigt. Optional kann die Kachel in ihrer Vorschau auch eine Dokumentenvorschau des Dokumentes anzeigen.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.properties.document = Dokumentenfunktion
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.properties.document.tooltip = Funktion die das anzuzeigende Dokument berechnet. Die Funktion bekommt das konfigurierte Modell als Eingang und berechnet das anzuzeigende Dokument.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.properties.documentDescription = Dokumentenbeschreibung
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.properties.documentDescription.tooltip = Beschreibung des dargestellten Dokumentes.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.properties.helpID = Hilfe-Seite ermöglichen
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.properties.helpID.tooltip = Wenn diese Eigenschaft gesetzt ist, kann für die Sicht eine Hilfe-Seite erzeugt werden.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.properties.model = Modell
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.properties.model.tooltip = Das anzuzeigende Dokument wird aus diesem Modell berechnet.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.properties.name = Name
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.properties.previewIcon = Vorschau-Bild
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.properties.previewIcon.tooltip = Wenn ein Vorschau-Bild angegeben ist, wird keine Vorschau des Dokumentes sondern das Bild angezeigt.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.properties.securityDomain = Berechtigungsstruktur
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.properties.securityProviderClass = Zugriffssteuerung
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.tiles.documentTile.template.properties.securityProviderClass.tooltip = Objekt auf dem die Sicherheit geprüft wird
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.transaction.template.properties.securityProviderClass = Zugriffssteuerung
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.transaction.template.properties.securityProviderClass.tooltip = Objekt auf dem die Sicherheit geprüft wird
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.transaction.template.properties.transactionHandler = Transaktion
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.transactionAssistent.template.label = Transaktion mit Eingabe
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.transactionAssistent.template.properties.label = Beschriftung
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeByType.template.label = Baum
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeByType.template.label.tooltip = Eine Auswahlkomponente mit aufklappbaren Knoten. Ein Baum stellt eine Struktur von Objekten dar. Dabei kann ein Objekt Unterobjekte haben, die erst durch aufklappen des übergeordneten Objektes sichtbar werden. In der Regel dient ein Baum als Auswahlkomponente, die das ausgewählte Objekt an eine andere Komponente zur Weiterverarbeitung liefert.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeByType.template.properties.model = Komponenten-Modell
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeByType.template.properties.model.tooltip = Das Komponenten-Modell steht der Funktion zur Verfügung, welche den Wurzelknoten berechnet. Hierüber ist es möglich, eine abhängige Sicht zu erzeugen, welche Informationen in Abhängigkeit beispielsweise der Selektion in einer anderen Sicht darstellt.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeByType.template.properties.name = Name
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeByType.template.properties.reference.tooltip = Die Referenz, welche als Baum dargestellt wird. Für ein Objekt werden die über die in dieser Referenz gespeicherten Objekte als Unterelemente angezeigt.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeByType.template.properties.rootNode = Wurzelknoten
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeByType.template.properties.rootNode.tooltip = Die Mapping-Funktion, die das Komponentenmodell empfängt, gibt den Wurzelknoten dieses Baums zurück. <p> Das Eingabekomponentenmodell wurde zuvor vom <i>Modellprädikat</i> akzeptiert. </p>
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeByType.template.properties.type.tooltip = Gemeinsamer Typ aller Elemente des darzustellenden Baumes.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeGridByType.template.label = Baum Grid
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeGridByType.template.label.tooltip = Zeilenbearbeitbare Tabelle, die eine Struktur mit aufklappbaren Knoten darstellt. Die Spalten der Tabelle leiten sich aus den Eigenschaften des dargestellte Typen ab.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeGridByType.template.properties.model = Komponenten-Modell
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeGridByType.template.properties.model.tooltip = Das Komponenten-Modell steht der Funktion zur Verfügung, welche den Wurzelknoten berechnet. Hierüber ist es möglich, eine abhängige Sicht zu erzeugen, welche Informationen in Abhängigkeit beispielsweise der Selektion in einer anderen Sicht darstellt.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeGridByType.template.properties.name = Name
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeGridByType.template.properties.reference.tooltip = Die Referenz, welche als Baum dargestellt wird. Für ein Objekt werden die über die in dieser Referenz gespeicherten Objekte als Unterelemente angezeigt.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeGridByType.template.properties.rootNode = Wurzelknoten
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeGridByType.template.properties.rootNode.tooltip = Die Mapping-Funktion, die das Komponentenmodell empfängt, gibt den Wurzelknoten dieses Baums zurück. <p> Das Eingabekomponentenmodell wurde zuvor vom <i>Modellprädikat</i> akzeptiert. </p>
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeGridByType.template.properties.type.tooltip = Gemeinsamer Typ aller Elemente des darzustellenden Baumes.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeTableByType.template.label = Baumtabelle
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeTableByType.template.label.tooltip = Eine Tabelle mit aufklappbaren Zeilen. Eine solche Tabelle kann entweder direkt zu Visualisierung von Informationen verwendet werden, oder als Kontextauswahl für eine weitere Komponente dienen.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeTableByType.template.properties.model = Komponenten-Modell
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeTableByType.template.properties.model.tooltip = Das Komponenten-Modell steht der Funktion zur Verfügung, welche den Wurzelknoten berechnet. Hierüber ist es möglich, eine abhängige Sicht zu erzeugen, welche Informationen in Abhängigkeit beispielsweise der Selektion in einer anderen Sicht darstellt.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeTableByType.template.properties.name = Name
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeTableByType.template.properties.reference.tooltip = Die Referenz, welche als Baum dargestellt wird. Für ein Objekt werden die über die in dieser Referenz gespeicherten Objekte als Unterelemente angezeigt.
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeTableByType.template.properties.rootNode = Wurzelknoten
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeTableByType.template.properties.rootNode.tooltip = Die Mapping-Funktion, die das Komponentenmodell empfängt, gibt den Wurzelknoten dieses Baums zurück. <p> Das Eingabekomponentenmodell wurde zuvor vom <i>Modellprädikat</i> akzeptiert. </p>
class.com.top_logic.layout.editor.I18NConstants.DYNAMIC_COMPONENT.com.top_logic.model.search.treeTableByType.template.properties.type.tooltip = Gemeinsamer Typ aller Elemente des darzustellenden Baumes.
class.com.top_logic.model.search.constraint.I18NConstants.NO_DELETION_POSSIBLE__OBJECT = Das Objekt "{0}" kann nicht gelöscht werden.
class.com.top_logic.model.search.expr.I18NConstants.ERROR_ACCES_TO_UNDEFINED_VARIABLE__NAME = Zugriff auf undefinierte Variable "{0}".
class.com.top_logic.model.search.expr.I18NConstants.ERROR_EVALUATION_FAILED__EXPR_ARGS_DEFS = Auswertung von ''{0}'' fehlgeschlagen, Argumente: {1}, Variablen: {2}
class.com.top_logic.model.search.expr.I18NConstants.ERROR_INVALID_DATE_FORMAT__VAL_EXPR_MSG = Ungültiger Datumswert ''{0}'' in {1} ({2}).
class.com.top_logic.model.search.expr.I18NConstants.ERROR_INVALID_FORMAT__STR_EXPR_MSG = Formatfehler in Wert ''{0}'' in {1} ({2}).
class.com.top_logic.model.search.expr.I18NConstants.ERROR_INVALID_LIST_INDEX__LIST_INDEX_EXPR = Ungültiger Listenindex {1} für Liste {0} benutzt in {2}.
class.com.top_logic.model.search.expr.I18NConstants.ERROR_LIST_MAP_OR_OBJECT_REQUIRED__VALUE_EXPR = Es wird eine Liste, eine Map oder ein Fachobjekt erwartet, nicht "{0}" in {1}.
class.com.top_logic.model.search.expr.I18NConstants.ERROR_MORE_THAN_A_SINGLE_ELEMENT__VAL_EXPR = Höchstens ein Element als Ergebnis von ''{1}'' erwartet, der tatsächliche Wert ist: {0}
class.com.top_logic.model.search.expr.I18NConstants.ERROR_NEITHER_CLASS_NOR_ENUM__TYPE_EXPR = Der Typ ''{0}'' ist weder eine Klassen noch eine Aufzählung in: {1}
class.com.top_logic.model.search.expr.I18NConstants.ERROR_NOT_A_CALENDAR__VAL_EXPR = Der Wert ''{0}'' ist kein Kalender, verwenden Sie ''toUserCalendar()'' oder ''toSystemCalendar()'', um den Wert von {1} umzuwandeln.
class.com.top_logic.model.search.expr.I18NConstants.ERROR_NOT_A_DATE__VAL_EXPR = Der Wert ''{0}'' ist kein Datum in {1}.
class.com.top_logic.model.search.expr.I18NConstants.ERROR_NOT_A_FUNCTION__VAL_EXPR = Es wird eine Funktion erwartet, aber "{0}" wurde übergeben in {1}.
class.com.top_logic.model.search.expr.I18NConstants.ERROR_NOT_A_REFERENCE__EXPR_VALUE = Auswertung ''{1}'' von ''{0}'' ist keine Referenz.
class.com.top_logic.model.search.expr.I18NConstants.ERROR_NOT_A_RES_KEY__VALUE__EXPR = Der Wert ''{0}'' in ''{1}'' ist kein internationalisierbarer Wert.
class.com.top_logic.model.search.expr.I18NConstants.ERROR_NOT_A_STRUCT_ENTRY__VAL_EXPR = Der Wert ''{0}'' ist keine Struktureintrag in {1}.
class.com.top_logic.model.search.expr.I18NConstants.ERROR_NOT_A_STRUCT__VAL_EXPR = Der Wert ''{0}'' ist keine Struktur in {1}.
class.com.top_logic.model.search.expr.I18NConstants.ERROR_NOT_A_TL_OBJECT__VAL_EXPR = Der Wert ''{0}'' ist kein Fachobjekt in {1}.
class.com.top_logic.model.search.expr.I18NConstants.ERROR_NOT_A_TYPE_PART__EXPR_VALUE = Auswertung ''{1}'' von ''{0}'' ist kein Modell-Attribut.
class.com.top_logic.model.search.expr.I18NConstants.ERROR_NO_SUCH_PROPERTY__OBJ_NAME_EXPR = Das Objekt "{0}" hat keine Eigenschaft "{1}" in {2}.
class.com.top_logic.model.search.expr.I18NConstants.ERROR_NUMBER_REQUIRED__VALUE_EXPR = Es wird eine Zahl erwartet, aber "{0}" wurde übergeben in {1}.
class.com.top_logic.model.search.expr.I18NConstants.ERROR_UNEXPECTED_NULL_VALUE__EXPR = Der Wert darf nicht "null" sein in {0}.
class.com.top_logic.model.search.expr.I18NConstants.ERROR_UNEXPECTED_TYPE__EXPECTED_VAL_EXPR = Der Wert "{1}" ist nicht vom erwarteten Typ "{0}" in {2}.
class.com.top_logic.model.search.expr.config.I18NConstants.ERROR_EXPRESSION_SYNTAX__DETAILS = Syntax-Fehler: {0}
class.com.top_logic.model.search.expr.config.I18NConstants.ERROR_TAILING_GARBAGE = Überflüssige Zeichen.
class.com.top_logic.model.search.expr.config.dom.I18NConstants.ERROR_NO_MATCHING_START_TAG__NAME = Kein passendes Start-Tag für End-Tag ''{0}''.
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_AT_LEAST_ARGUMENTS_EXPECTED__CNT_EXPR = Mindestens {0} Argument(e) erwartet in: {1}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_AT_LEAST_ONE_ARGUMENT_EXPECTED__EXPR = Mindestens ein Argument erwartet in: {0}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_AT_MOST_ARGUMENTS_EXPECTED__CNT_EXPR = Höchsens {0} Argument(e) erwartet in: {1}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_EXPECTED_ASSOCIATION_END_LITERAL__EXPR = Ein Assoziationsende-Literal ist erwartet in: {0}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_EXPECTED_REFERENCE_LITERAL__EXPR = Ein Referenz-Literal ist erwartet in: {0}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_EXPECTED_STRUCTURED_TYPE_LITERAL__EXPR = Ein Klassen- oder Enum-Literal wird erwartet in: {0}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_EXPECTED_TYPE_PART_LITERAL__EXPR = Ein Attribut-Literal ist erwartet in: {0}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_EXPECTING_A_TARGET__EXPR = Der Ausdruck erwartet ein Ziel: {0}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_LITERAL_ARGUMENT__EXPR = Ein Literal ist erwartet in: {0}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_MUST_BE_INVOKED_WITHOUT_TARGET__EXPR = Bei dem Ausdruck dürfen nur Argumente aber kein Ziel angegeben werden: {0}
class.com.top_logic.model.search.expr.config.operations.I18NConstants.ERROR_NO_ARGUMENTS_EXPECTED__EXPR = Keine Argumente erwartet in: {0}
class.com.top_logic.model.search.expr.config.operations.arithmetic.I18NConstants.ERROR_FAILED_TO_GENERATE_ID__EXPR_MSG = Bei der ID-Generierung ({0}) ist ein Fehler aufgetreten: {1}
class.com.top_logic.model.search.expr.config.operations.arithmetic.I18NConstants.ERROR_NO_TRANSACTION__EXPR = Eine ID kann nur innerhalb einer Transaktion generiert werden ({0}).
class.com.top_logic.model.search.expr.config.operations.cache.I18NConstants.ERROR_MULTIPLE_VALUES_WITH_SAME_KEY__KEY_V1_V2_EXPR = Es gibt mehrere Werte mit demselben Schlüssel "{0}" (z.B. {1} und {2}) in {3}.
class.com.top_logic.model.search.expr.config.operations.regex.I18NConstants.ERROR_NO_SUCH_GROUP__ID_CNT = Die Gruppe {0} existiert nicht im regulären Ausdruck. Es gibt nur {1} Gruppe(n).
class.com.top_logic.model.search.expr.config.operations.string.I18NConstants.ERROR_INVALID_STRING_INDEX__STR_START_STOP_EXPR = Ungültiger Bereich von {1} bis {2} im String "{0}" in {3}.
class.com.top_logic.model.search.expr.config.operations.struct.I18NConstants.ERROR_ARGUMENT_COUNT_MISMATCH__EXPECTED_ACTUAL_EXPR = Es muss für jede Eigenschaft des Strukturtyps ({0}) ein Wert angegeben werden. Nur {1} Werte angegeben in {2}.
class.com.top_logic.model.search.expr.config.operations.struct.I18NConstants.ERROR_DUPLICATE_KEYS__KEY_IDX1_IDX2_EXPR = Der Schlüsselwert "{0}" ist doppelt. Er kommt an Position {1} und {2} vor: {3}
class.com.top_logic.model.search.expr.config.operations.struct.I18NConstants.ERROR_STRUCT_TYPE_EXPECTED__VALUE_EXPR = Es wird ein Strukturtyp erwartet, aber "{0}" wurde angegeben in {1}.
class.com.top_logic.model.search.expr.html.I18NConstants.ERROR_UNSAFE_HTML__ATTRIBUTE__VALUE = Unsicheres HTML als Wert für Attribut {0}.
class.com.top_logic.model.search.expr.interpreter.I18NConstants.ERROR_UNRESOLVED_VARIABLE__NAME = Undefinierte Variable ''{0}''.
class.com.top_logic.model.search.form.I18NConstants.ERROR_INVALID_IMAGE_DEFINITION__SOURCE__POSITION = Ungültiges Vorschaubild an Position {1}: {0}
class.com.top_logic.model.search.form.I18NConstants.ERROR_NO_IMAGE__OBJ = {0} ist kein Vorschaubild.
class.com.top_logic.model.search.providers.I18NConstants.AMBIGUOUS_RESULT_FROM_RESOLVER__KEY_RESULT_ATTR = Die Resolver-Funktion lieferte einen mehrdeutigen Wert für den Schlüssel ''{0}'' in Attribut ''{2}'': {1}
class.com.top_logic.model.search.providers.I18NConstants.CANNOT_RESOLVE_OBJECT__KEY__ATTR = Das Objekt mit Schlüssel ''{0}'' im Attribut ''{1}'' kann nicht aufgelöst werden.
class.com.top_logic.model.search.providers.I18NConstants.ERROR_INVALID_VALUE = Die Eingabe ist ungültig.
class.com.top_logic.model.search.providers.I18NConstants.ERROR_NO_BOUND_OBJECT_RESULT__EXPR__SRC__VALUE = Auswertung von ''{0}'' für Modell ''{1}'' liefert kein gültiges Security-Objekt: ''{2}.''
class.com.top_logic.model.search.providers.I18NConstants.ERROR_SCRIPT_RESULT_IS_COLLECTION__ATTR_VALUE = Das Berechnungsergebnis von Attribut "{0}" ist die Menge {1}, aber ein einzelner Wert wird erwartet.
class.com.top_logic.model.search.providers.I18NConstants.ERROR_SCRIPT_RESULT_OF_INCOMPATIBLE_TYPE__ATTR_EXPECTED_ACTUAL = Das Berechnungsergebnis von Attribut "{0}" muss vom Typ "{1}" sein, es wird aber "{2}" geliefert.
class.com.top_logic.model.search.providers.I18NConstants.INVALID_REFERENCE_ELEMET__EXPECTED_FOUND_ATTR = Referenz-Element ''{0}'' in Attribut ''{2}'' erwartet. Stattdessen wurde ''{1}'' gefunden.
class.com.top_logic.model.search.providers.I18NConstants.TASK_MESSAGE__VALUE = {0}
class.com.top_logic.model.search.providers.I18NConstants.UNEXPECTED_TEXT_CONTENT__TEXT__ATTR = Unerwarteter textueller Inhalt ''{0}'' im Referenz-Wert des Attributs ''{1}''.
com.top_logic.model.search.annotate.TLNumberOfEditorRows = Editor Zeilen
com.top_logic.model.search.annotate.TLNumberOfEditorRows.max = Maximum
com.top_logic.model.search.annotate.TLNumberOfEditorRows.min = Minimum
com.top_logic.model.search.expr.config.dom.Expr$Wrapped = {src}
com.top_logic.model.search.expr.supplier.SearchExpressionCurrentPerson = Aktuelle Person
com.top_logic.model.search.expr.supplier.SearchExpressionNow = Jetzt
com.top_logic.model.search.expr.supplier.SearchExpressionToday = Heute
com.top_logic.model.search.form.GalleryPreview.Config.icon = Ersatz-Symbol
com.top_logic.model.search.form.GalleryPreview.Config.icon.tooltip = Symbol, das angezeigt wird, wenn kein Bild aus dem Modell ermittelt werden kann. <p>Das kann passieren, wenn das <i>Modell</i> nicht vom richtigen <i>Typ</i> ist, oder das Galerie-Attribut aktuell nicht gefüllt ist. </p>
com.top_logic.model.search.persistency.attribute.macro.MacroAttribute = HTML-Macro
com.top_logic.model.search.persistency.attribute.macro.MacroAttribute.Config.expr = Macro-Ausdruck
com.top_logic.model.search.persistency.attribute.macro.MacroAttribute.Config.expr.tooltip = Funktion, die als einziges Argument das aktuelle Objekt nimmt und einen HTML-Ausdruck liefert. <p>Eine typische Nutzung wäre <code>model -> {{{Some &lt;b>bold&lt;/b> text containing dynamic value {$model.get(`my.module:MyType#myProp`}!}}}</code>.</p>
com.top_logic.model.search.providers.AttributeByExpression = Suche
com.top_logic.model.search.providers.AttributeByExpression.Config.expr = Funktion
com.top_logic.model.search.providers.AttributeByExpression.Config.expr.tooltip = Funktion, die den Attributwert berechnet. Die Funktion nimmt das aktuelle Modell als einziges Argument.
com.top_logic.model.search.providers.AttributeValueBindingByExpression = Referenz über Fachschlüssel
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.key-attributes = Schlüssel-Attribute
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.key-attributes.tooltip = Kommaseparierte List von Attributnamen unter denen die Werte der Schlüssel-Funktion gespeichert werden.
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.key-fun = Schlüssel-Funktion
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.key-fun.tooltip = Funktion, die für ein gegebenes Objekt einen fachlichen Schlüssel berechnet, mit dem dieses Objekt beim Import wiedergefunden werden kann. Die Funktion muss soviele Ergebnisse liefern, wie Schlüssel-Attribut-Namen angegeben sind. Mehrere Werte müsse in eine Liste eingepackt werden.
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.reference-tag = Referenz-Tag
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.reference-tag.tooltip = XML-Tag-Name, der für eine Referenz verwendet wird, wenn das exportierte Attribut mehr als einen Wert speichern kann.
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.resolver-fun = Resolver-Funktion
com.top_logic.model.search.providers.AttributeValueBindingByExpression.Config.resolver-fun.tooltip = Funktion, welche beim Import einen fachlichen Schlüssel zu einem Objekt auflöst. Die Funktion muss soviele Argumente nehmen, wie Schlüssel-Attribut-Namen angegeben sind.
com.top_logic.model.search.providers.ComputedColumnProviderByExpression = Berechnete Spalte
com.top_logic.model.search.providers.DropTargetByExpressionConfig.postCreateActions = Aktionen nach Drop
com.top_logic.model.search.providers.DropTargetByExpressionConfig.postCreateActions.tooltip = Aktionen, die auszuführen sind, nachdem ein Element gedroppt wurde.
com.top_logic.model.search.providers.DynamicColumnProviderByExpression = Dynamische Menge an Spalten
com.top_logic.model.search.providers.FilterByExpression = Filterung über Ausdruck
com.top_logic.model.search.providers.FilterByExpression.Config.predicate = Prädikat
com.top_logic.model.search.providers.FilterByExpression.Config.predicate.tooltip = Boolsche Funktion mit zwei Argumenten (aktuelles Modell und potentielle Auswahl).
com.top_logic.model.search.providers.GridApplyHandlerByExpression.Config.can-edit = Bearbeitbarkeitstest
com.top_logic.model.search.providers.GridCreateHandlerByExpression.Config.typeChooser = Typauswahl anzeigen
com.top_logic.model.search.providers.GridDropTargetByExpression = Gridzeilen Drop durch Ausdruck
com.top_logic.model.search.providers.GridDropTargetByExpression.tooltip = <i>Drop-Operation</i> für Grids, die vollständig über Modellabfragen konfiguriert werden kann.
com.top_logic.model.search.providers.LabelByExpression = Label mittels Ausdruck
com.top_logic.model.search.providers.LabelByExpression.Config.css-class = CSS Klasse
com.top_logic.model.search.providers.LabelByExpression.Config.image = Bild
com.top_logic.model.search.providers.LabelByExpression.Config.label = Label-Ausdruck
com.top_logic.model.search.providers.LabelByExpression.Config.tooltip = Tooltip-Ausdruck
com.top_logic.model.search.providers.ListModelByExpression = Per Suchausdruck
com.top_logic.model.search.providers.ListModelByExpression.Config.elements = Elemente der Liste
com.top_logic.model.search.providers.ListModelByExpression.Config.modelForElement = Komponentenmodell für Listenelement
com.top_logic.model.search.providers.ListModelByExpression.Config.supportsElement = Prüfer für Benutzung als Listenelement
com.top_logic.model.search.providers.ListModelByExpression.Config.supportsModel = Prüfer für Benutzung als Komponentenmodell
com.top_logic.model.search.providers.OptionsByExpression = Optionen über Ausdruck
com.top_logic.model.search.providers.OptionsByExpression.Config.function = Funktion
com.top_logic.model.search.providers.OptionsByExpression.Config.function.tooltip = Mengenwertige Funktion mit einem Argument (aktuelles Modell).
com.top_logic.model.search.providers.OrderedTreeDropActionOp = Ziehen von {dropped-object} nach {drop-position-parent}.
com.top_logic.model.search.providers.ScriptValueNaming$Name = Ergebnis von {expr}
com.top_logic.model.search.providers.SecurityObjectByExpression = Security-Objekt mittels Ausdruck
com.top_logic.model.search.providers.SecurityObjectByExpression.Config.function = Funktion
com.top_logic.model.search.providers.SecurityObjectByExpression.Config.function.tooltip = Funktion, die das Security Objekt bestimmt. <p> Der Funktion wird als Parameter das Modell übergeben für das ein Security Objekt benötigt wird.</p>
com.top_logic.model.search.providers.TableDragSourceByExpression = Benutzerdefinierter Tabellenzeilen-Drag
com.top_logic.model.search.providers.TableDragSourceByExpression.tooltip = <i>Drag-Operation</i> für Tabellen, die vollständig über Modellabfragen konfiguriert werden kann.
com.top_logic.model.search.providers.TableDropTargetByExpression = Benutzerdefinierter Tabellenzeilen-Drop
com.top_logic.model.search.providers.TableDropTargetByExpression.Config.canDrop = Prädikat einer Drop Möglichkeit
com.top_logic.model.search.providers.TableDropTargetByExpression.Config.canDrop.tooltip = Funktion, die prüft, ob ein Drop auf die referenzierte Zeile durchgeführt werden kann. <p> Die Funktion erhält das gezogene Element als erstes Argument und die referenzierte Zeile als zweites Argument. </p>
com.top_logic.model.search.providers.TableDropTargetByExpression.Config.handleDrop = Drop Funktionalität
com.top_logic.model.search.providers.TableDropTargetByExpression.Config.handleDrop.tooltip = Funktion, die einen Drop auf die referenzierte Zeile ausführt. <p> Die Funktion erhält das gezogene Element als erstes Argument und die referenzierte Zeile als zweites Argument. </p>
com.top_logic.model.search.providers.TableDropTargetByExpression.tooltip = <i>Drop-Operation</i> für Tabellen, die vollständig über Modellabfragen konfiguriert werden kann.
com.top_logic.model.search.providers.TableGridDragSourceByExpression = Benutzerdefinierter Gridzeilen-Drop
com.top_logic.model.search.providers.TableGridDragSourceByExpression.tooltip = <i>Drop-Operation</i> für Grids, die vollständig über Modellabfragen konfiguriert werden kann.
com.top_logic.model.search.providers.TitleByExpression = Titel mittels Ausdruck
com.top_logic.model.search.providers.TitleByExpression.Config.expr = Ausdruck
com.top_logic.model.search.providers.TreeDragSourceByExpression = Benutzerdefinierter Baumknoten-Drag
com.top_logic.model.search.providers.TreeDragSourceByExpression.tooltip = <i>Drag-Operation</i> für Bäume, die vollständig über Modellabfragen konfiguriert werden kann.
com.top_logic.model.search.providers.TreeDropActionOp = Ziehen von {dropped-object} nach {drop-position}.
com.top_logic.model.search.providers.TreeDropTargetByExpression = Benutzerdefinierter Baumknoten-Drop
com.top_logic.model.search.providers.TreeDropTargetByExpression.Config.canDrop = Prädikat einer Drop Möglichkeit
com.top_logic.model.search.providers.TreeDropTargetByExpression.Config.canDrop.tooltip = Funktion, die prüft, ob ein Drop auf den referenzierten Knoten durchgeführt werden kann. <p> Die Funktion erhält das gezogene Element als erstes Argument und den referenzierten Knoten als zweites Argument. </p>
com.top_logic.model.search.providers.TreeDropTargetByExpression.Config.handleDrop = Drop Funktionalität
com.top_logic.model.search.providers.TreeDropTargetByExpression.Config.handleDrop.tooltip = Funktion, die einen Drop auf den referenzierten Knoten ausführt. <p> Die Funktion erhält das gezogene Element als erstes Argument und den referenzierten Knoten als zweites Argument. </p>
com.top_logic.model.search.providers.TreeDropTargetByExpression.tooltip = <i>Drop-Operation</i> für Bäume, die vollständig über Modellabfragen konfiguriert werden kann.
com.top_logic.model.search.providers.TreeGridDragSourceByExpression = Benutzerdefinierter Baumgrid-Drag
com.top_logic.model.search.providers.TreeGridDragSourceByExpression.tooltip = <i>Drag-Operation</i> für Baumgrids, die vollständig über Modellabfragen konfiguriert werden kann.
com.top_logic.model.search.providers.TreeModelByExpression = Per Suchausdruck
com.top_logic.model.search.providers.TreeTableDragSourceByExpression = Benutzerdefinierter Baumtabellen-Drag
com.top_logic.model.search.providers.TreeTableDragSourceByExpression.tooltip = <i>Drag-Operation</i> für Baumtabellen, die vollständig über Modellabfragen konfiguriert werden kann.
com.top_logic.model.search.providers.TreeTableDropTargetByExpression = Benutzerdefinierter Baumtabellen-Drop
com.top_logic.model.search.providers.TreeTableDropTargetByExpression.tooltip = <i>Drop-Operation</i> für Baumtabellen, die vollständig über Modellabfragen konfiguriert werden kann.
com.top_logic.model.search.tiles.DynamicTilePreviewText = Ausdrucksbasierter Text
com.top_logic.model.search.tiles.FormPreviewContent = Formularvorschau
com.top_logic.model.search.tiles.FormPreviewContent.Config.icon = Ersatz-Symbol
com.top_logic.model.search.tiles.FormPreviewContent.Config.icon.tooltip = Bild das angezeigt wird, wenn das konfigurierte <i>Modell</i> nicht dem erwarteten <i>Typ</i> entspricht.
com.top_logic.model.search.tiles.ImageContentProvider = Ausdruckbasiertes Bild
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.content-preview = Inhaltsbereich
com.top_logic.model.search.tiles.ModelBasedTilePreview.Config.label = Bezeichnung
com.top_logic.model.search.tiles.SimpleStaticTilePreviewText = Statischer Text
com.top_logic.model.search.tiles.StaticImageContentProvider = Statisches Bild
com.top_logic.model.search.tiles.TableContentProvider = Tabellenvorschau
com.top_logic.model.search.ui.ExpertSearchExpressionEditor.SearchConfig.search-expression = Suchausdruck
com.top_logic.model.search.ui.model.AbstractStep.next = Nächster Schritt
com.top_logic.model.search.ui.model.AbstractStep.next@empty = Kein weiterer Schritt
com.top_logic.model.search.ui.model.AbstractTypeSearch.type = Ergebnistyp
com.top_logic.model.search.ui.model.AssociationFilter = wird verwendet in {incoming-part} und für {outgoing-part} ({value-type}): {comparisons}
com.top_logic.model.search.ui.model.AssociationFilter.incoming-part = Verwendung
com.top_logic.model.search.ui.model.AssociationFilter.outgoing-part = assoziierter Wert zum Vergleichen
com.top_logic.model.search.ui.model.AssociationFilter@option = {outgoing-part | {assoziierter Wert...}}
com.top_logic.model.search.ui.model.AssociationStep = \u2190 wird verwendet in {incoming-part} {outgoing-part} ({value-type}) {next}
com.top_logic.model.search.ui.model.AssociationStep.incoming-part = Verwendung
com.top_logic.model.search.ui.model.AssociationStep.outgoing-part = assoziierter Wert
com.top_logic.model.search.ui.model.AssociationStep@option = {outgoing-part | {assoziierter Wert...}}
com.top_logic.model.search.ui.model.AttributeFilter = für {attribute} ({value-type}) gilt: {comparisons}
com.top_logic.model.search.ui.model.AttributeFilter.attribute = Vergleichsattribut
com.top_logic.model.search.ui.model.AttributeFilter@option = {attribute | {anderes Attribut...}}
com.top_logic.model.search.ui.model.AttributeStep = \u2192 {attribute} ({value-type}) {next}
com.top_logic.model.search.ui.model.AttributeStep.attribute = Attribut
com.top_logic.model.search.ui.model.AttributeStep@option = {attribute | {anderes Attribut...}}
com.top_logic.model.search.ui.model.CombinationExpression.combinator = Kombinator
com.top_logic.model.search.ui.model.CombinedFilter = {combinator}: {filters}
com.top_logic.model.search.ui.model.CombinedFilter@option = Logische Verknüpfung...
com.top_logic.model.search.ui.model.CombinedOperator$Impl = {combinator}: {comparisons}
com.top_logic.model.search.ui.model.CombinedOperator$Impl@option = Logische Verknüpfung...
com.top_logic.model.search.ui.model.ContextFilter = ist {name} ({type})
com.top_logic.model.search.ui.model.ContextFilter.context-expression = Kontextobjekt
com.top_logic.model.search.ui.model.ContextFilter@option = ist {context-expression.name} ({context-expression.value-type})
com.top_logic.model.search.ui.model.FilterContainer.filters = Filter
com.top_logic.model.search.ui.model.FilterContainer.name = Name
com.top_logic.model.search.ui.model.IncomingReferenceFilter = Objekt zugewiesen in Referenz {reference} von Objekt für das gilt: {comparisons}
com.top_logic.model.search.ui.model.IncomingReferenceFilter.reference = Referenz
com.top_logic.model.search.ui.model.IncomingReferenceFilter@option = {reference | {referenziert in...}}
com.top_logic.model.search.ui.model.IncomingReferenceStep = \u2190 wird verwendet in {reference} ({value-type}) {next}
com.top_logic.model.search.ui.model.IncomingReferenceStep.reference = Referenz
com.top_logic.model.search.ui.model.IncomingReferenceStep@option = {reference | {referenziert in...}}
com.top_logic.model.search.ui.model.NavigatingFilter.comparisons = Vergleich
com.top_logic.model.search.ui.model.NavigationValue = {base} {next}
com.top_logic.model.search.ui.model.NavigationValue.base = Startobjekt
com.top_logic.model.search.ui.model.NavigationValue@option = Parameter / Variable ...
com.top_logic.model.search.ui.model.OperatorContainer.comparisons = Vergleich
com.top_logic.model.search.ui.model.PredefinedReferenceValue = {translation} ({value-type})
com.top_logic.model.search.ui.model.QueryValue = {part} ({context-type}) von {name} ({value-type}) so dass aus der Teilsuche: {filters}
com.top_logic.model.search.ui.model.QueryValue.part = Eigenschaft
com.top_logic.model.search.ui.model.QueryValue@option = Attributvergleich
com.top_logic.model.search.ui.model.ReferenceValue = {name} ({value-type})
com.top_logic.model.search.ui.model.Search.unions = Vereinigungen
com.top_logic.model.search.ui.model.Search.unions@empty = Teilsuche...
com.top_logic.model.search.ui.model.Search.unions@first = Suche nach\ 
com.top_logic.model.search.ui.model.Search.unions@next = vereinigt mit\ 
com.top_logic.model.search.ui.model.SubQuery = Teilsuche nach {name} ({context-type}) so dass: {filters}
com.top_logic.model.search.ui.model.SubQuery@option = Suche
com.top_logic.model.search.ui.model.TupleSearch = Korrelation von: {coords}
com.top_logic.model.search.ui.model.TupleSearch$CoordDef = Koordinate {name} ({nullable}): {expr}
com.top_logic.model.search.ui.model.TupleSearch$CoordDef$InlineTypeSearch = {type} {name}: {filters}
com.top_logic.model.search.ui.model.TupleSearch.CoordDef.name = Koordinatenname
com.top_logic.model.search.ui.model.TupleSearch.CoordDef.nullable = Pflichtstatus
com.top_logic.model.search.ui.model.TupleSearch.NullableSpec.MANDATORY = verpflichtend
com.top_logic.model.search.ui.model.TupleSearch.NullableSpec.NULLABLE = optional
com.top_logic.model.search.ui.model.TupleSearch.coords = Koordinaten
com.top_logic.model.search.ui.model.TupleSearch@option = Korrelation...
com.top_logic.model.search.ui.model.TypeCheckStep = ist ein/eine {type-cast} {next}
com.top_logic.model.search.ui.model.TypeCheckStep.type-cast = Typ
com.top_logic.model.search.ui.model.TypeCheckStep@option = ist ein/eine...
com.top_logic.model.search.ui.model.TypeSearch = {type} {name} so dass: {filters}
com.top_logic.model.search.ui.model.TypeSearch@option = Typ...
com.top_logic.model.search.ui.model.combinator.AllSearchExpressionCombinator = alles gilt
com.top_logic.model.search.ui.model.combinator.NoneSearchExpressionCombinator = keines gilt
com.top_logic.model.search.ui.model.combinator.NotAllSearchExpressionCombinator = eines gilt nicht
com.top_logic.model.search.ui.model.combinator.NotNoneSearchExpressionCombinator = eines gilt
com.top_logic.model.search.ui.model.literal.LiteralBooleanValue@option = Wert-Eingabe
com.top_logic.model.search.ui.model.literal.LiteralDateTimeValue@option = Wert-Eingabe
com.top_logic.model.search.ui.model.literal.LiteralDateValue@option = Wert-Eingabe
com.top_logic.model.search.ui.model.literal.LiteralFloatValue@option = Wert-Eingabe
com.top_logic.model.search.ui.model.literal.LiteralIntegerValue@option = Wert-Eingabe
com.top_logic.model.search.ui.model.literal.LiteralObjectSet = {objects} ({context-type})
com.top_logic.model.search.ui.model.literal.LiteralObjectSet.objects = Vergleichsmenge
com.top_logic.model.search.ui.model.literal.LiteralObjectSet@option = Wert-Eingabe
com.top_logic.model.search.ui.model.literal.LiteralObjectValue = {object} ({context-type})
com.top_logic.model.search.ui.model.literal.LiteralObjectValue.object = Vergleichsobjekt
com.top_logic.model.search.ui.model.literal.LiteralObjectValue@option = Wert-Eingabe
com.top_logic.model.search.ui.model.literal.LiteralPrimitiveValue.compare-value = Vergleichswert
com.top_logic.model.search.ui.model.literal.LiteralStringValue@option = Wert-Eingabe
com.top_logic.model.search.ui.model.operator.AbstractStringCompare.case-sensitive = Groß- /Kleinschreibung beachten
com.top_logic.model.search.ui.model.operator.BooleanCompare$Impl = {kind} {comparison-value}
com.top_logic.model.search.ui.model.operator.BooleanCompare$Impl@option = {kind | {anderer Operator...}}
com.top_logic.model.search.ui.model.operator.BooleanCompare.Kind = Vergleich
com.top_logic.model.search.ui.model.operator.BooleanCompare.Kind.EQUALS = ist gleich
com.top_logic.model.search.ui.model.operator.BooleanCompare.Kind.NOT_EQUALS = ist ungleich
com.top_logic.model.search.ui.model.operator.BooleanCompare.kind = Operator
com.top_logic.model.search.ui.model.operator.ComparableCompare$Impl = {kind} {comparison-value}
com.top_logic.model.search.ui.model.operator.ComparableCompare$Impl@option = {kind | {anderer Operator...}}
com.top_logic.model.search.ui.model.operator.ComparableRangeCompare$Impl = {kind} {lower-bound} und {upper-bound}
com.top_logic.model.search.ui.model.operator.ComparableRangeCompare$Impl@option = {kind}...
com.top_logic.model.search.ui.model.operator.ComparableRangeCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.DateCompare$Impl = {kind} {comparison-value}
com.top_logic.model.search.ui.model.operator.DateCompare$Impl@option = {kind | {anderer Operator...}}
com.top_logic.model.search.ui.model.operator.DateRangeCompare$Impl = {kind} {lower-bound} und {upper-bound}
com.top_logic.model.search.ui.model.operator.DateRangeCompare$Impl@option = {kind}...
com.top_logic.model.search.ui.model.operator.DateRangeCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.Empty$Impl = ist leer
com.top_logic.model.search.ui.model.operator.Empty$Impl@option = ist leer
com.top_logic.model.search.ui.model.operator.FilterCompare$Impl = für {kind}: {name} ({context-type}) hat die Eigenschaft {filters}
com.top_logic.model.search.ui.model.operator.FilterCompare$Impl@option = Strukturvergleich...
com.top_logic.model.search.ui.model.operator.FilterCompare.Kind.ALL = alle
com.top_logic.model.search.ui.model.operator.FilterCompare.Kind.ONE = mindestens eines
com.top_logic.model.search.ui.model.operator.FilterCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.FilterCompareSingleton$Impl = ist {name} ({context-type}), so dass: {filters}
com.top_logic.model.search.ui.model.operator.FilterCompareSingleton$Impl@option = Strukturvergleich...
com.top_logic.model.search.ui.model.operator.FloatCompare$Impl = ist (auf {precision} Nachkommastellen genau) {kind} {comparison-value}
com.top_logic.model.search.ui.model.operator.FloatCompare$Impl@option = {kind | {anderer Operator...}}
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind = Vergleich
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.EQUALS = gleich
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.GE = größer als
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.GT = größer als (exklusiv)
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.LE = kleiner als
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.LT = kleiner als (exklusiv)
com.top_logic.model.search.ui.model.operator.FloatCompare.Kind.NOT_EQUALS = ungleich
com.top_logic.model.search.ui.model.operator.FloatCompare.kind = Operator
com.top_logic.model.search.ui.model.operator.FloatRangeCompare$Impl = {kind} {lower-bound} und {upper-bound} (auf {precision} Nachkommastellen genau)
com.top_logic.model.search.ui.model.operator.FloatRangeCompare$Impl@option = {kind}...
com.top_logic.model.search.ui.model.operator.FloatRangeCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.IntegerCompare$Impl = {kind} {comparison-value}
com.top_logic.model.search.ui.model.operator.IntegerCompare$Impl@option = {kind | {anderer Operator...}}
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind = Vergleich
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.EQUALS = ist gleich
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.GE = größer als
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.GT = größer als (exklusiv)
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.LE = kleiner als
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.LT = kleiner als (exklusiv)
com.top_logic.model.search.ui.model.operator.IntegerCompare.Kind.NOT_EQUALS = ist ungleich
com.top_logic.model.search.ui.model.operator.IntegerCompare.kind = Operator
com.top_logic.model.search.ui.model.operator.IntegerRangeCompare$Impl = {kind} {lower-bound} und {upper-bound}
com.top_logic.model.search.ui.model.operator.IntegerRangeCompare$Impl@option = {kind}...
com.top_logic.model.search.ui.model.operator.IntegerRangeCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.NotEmpty$Impl = ist nicht leer
com.top_logic.model.search.ui.model.operator.NotEmpty$Impl@option = ist nicht leer
com.top_logic.model.search.ui.model.operator.PrimitiveCompare.kind = Vergleichsart
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind = Vergleich
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.EQUALS = ist gleich
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.GE = liegt nach
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.GT = liegt nach (exklusiv)
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.LE = liegt vor
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.LT = liegt vor (exklusiv)
com.top_logic.model.search.ui.model.operator.PrimitiveCompareKind.NOT_EQUALS = ist ungleich
com.top_logic.model.search.ui.model.operator.RangeCompareKind.IN_RANGE = im Bereich von
com.top_logic.model.search.ui.model.operator.RangeCompareKind.NOT_IN_RANGE = nicht im Bereich von
com.top_logic.model.search.ui.model.operator.SetCompare$Impl = {operation} {compare-objects}
com.top_logic.model.search.ui.model.operator.SetCompare$Impl@option = {operation | {Mengenvergleich...}}
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.ALL_CONTAINED_IN = enthält nur
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.CONTAINS_ALL = enthält alle aus
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.CONTAINS_NONE = enthält keines aus
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.CONTAINS_SOME = enthält mindestens eines aus
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.EQUALS = ist gleich
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.NOT_ALL_CONTAINED_IN = enthält nicht nur
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.NOT_CONTAINS_ALL = enthält nicht alle aus
com.top_logic.model.search.ui.model.operator.SetCompare.Operation.NOT_EQUALS = ist nicht gleich
com.top_logic.model.search.ui.model.operator.SetCompare.compare-objects = Vergleichsmenge
com.top_logic.model.search.ui.model.operator.SetCompare.operation = Mengenvergleich
com.top_logic.model.search.ui.model.operator.SingletonCompare$Impl = {operation} {compare-objects}
com.top_logic.model.search.ui.model.operator.SingletonCompare$Impl@option = {operation | {Referenzvergleich...}}
com.top_logic.model.search.ui.model.operator.SingletonCompare.compare-objects = Vergleichsmenge
com.top_logic.model.search.ui.model.operator.SingletonCompare.operation = Referenzvergleich
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.CONTAINED_IN = ist enthalten in
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.EQUALS = ist gleich
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.NOT_CONTAINED_IN = ist nicht enthalten in
com.top_logic.model.search.ui.model.operator.SingletonCompareOperation.NOT_EQUALS = ist nicht gleich
com.top_logic.model.search.ui.model.operator.StringCompare$Impl = {kind} {comparison-value} ({case-sensitive} {case-sensitive:label})
com.top_logic.model.search.ui.model.operator.StringCompare$Impl@option = {kind | {anderer Operator...}}
com.top_logic.model.search.ui.model.operator.StringCompare.Kind = Vergleich
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.CONTAINS = enthält den Text
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.ENDS_WITH = endet mit dem Text
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.EQUALS = ist gleich
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.GE = lexikographisch nach
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.GT = lexikographisch nach (exklusiv)
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.LE = lexikographisch vor
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.LT = lexikographisch vor (exklusiv)
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_CONTAINS = enthält den Text nicht
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_ENDS_WITH = endet nicht mit dem Text
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_EQUALS = ist ungleich
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.NOT_STARTS_WITH = fängt nicht mit dem Text an
com.top_logic.model.search.ui.model.operator.StringCompare.Kind.STARTS_WITH = fängt mit dem Text an
com.top_logic.model.search.ui.model.operator.StringCompare.kind = Operator
com.top_logic.model.search.ui.model.operator.StringCompare.reg-exp = als Muster vergleichen
com.top_logic.model.search.ui.model.operator.StringRangeCompare$Impl = {kind} {lower-bound} und {upper-bound} ({case-sensitive} {case-sensitive:label})
com.top_logic.model.search.ui.model.operator.StringRangeCompare$Impl@option = {kind}...
com.top_logic.model.search.ui.model.operator.StringRangeCompare.kind = Vergleich
com.top_logic.model.search.ui.model.operator.TypeCheck$Impl = ist ein/eine {type-cast} ({name}) so dass: {filters}
com.top_logic.model.search.ui.model.operator.TypeCheck$Impl@option = ist ein/eine...
com.top_logic.model.search.ui.model.operator.TypeCheck.type-cast = Typ
element.typename.SearchExpressionStructure.SearchExpressionImpl = Suchausdruck
expert.search.tab = Expert
gui.search.tab = Normal
layout.com.top_logic.element.transaction.template.Form = Eingabeformular
layouts.com.top_logic.model.search.admin.scriptConsole.tab = Script Konsole
layouts.com.top_logic.model.search.admin.scriptConsole.title = Script
layouts.model.search.modelSearch.SaveSearchAsForm.name = Name
layouts.model.search.modelSearch.SaveSearchAsForm.publishGroup = Informationen für die Veröffentlichung
layouts.model.search.modelSearch.SaveSearchAsForm.publishGroup.publishQuery = Veröffentlichen
layouts.model.search.modelSearch.SaveSearchAsForm.publishGroup.visibleGroups = Gruppen
layouts.model.search.modelSearch.SearchComponent.options = Option auswählen
layouts.model.search.modelSearch.SearchComponent.refreshSearch = Suchergebnisse aktualisieren
layouts.model.search.modelSearch.SearchComponent.remove = Entfernen
layouts.model.search.modelSearch.SearchComponent.title = Suchanfrage
layouts.model.search.modelSearch.SearchResultTable.title = Ergebnis
layouts.model.search.modelSearch.SearchSelectorComponent.displayDialog_SaveSearchAs = Speichern unter...
layouts.model.search.modelSearch.SearchSelectorComponent.displayDialog_SaveSearchAs.title = Speichern unter...
layouts.model.search.modelSearch.SearchSelectorComponent.displayDialog_SaveSearchAs.tooltip = Öffnet einen Dialog um den Suchausdruck unter einem neuen Namen zu speichern und optional zu veröffentlichen.
layouts.model.search.modelSearch.SearchSelectorComponent.expressionSelector = Suchausdruck
layouts.model.search.modelSearch.SearchSelectorComponent.publishQuery = Veröffentlicht
layouts.model.search.modelSearch.SearchSelectorComponent.title = Suchausdruck
layouts.model.search.modelSearch.SearchSelectorComponent.visibleGroups = Gruppen
model.search.expert.title = Editor
tl.command.deleteModelSearch = Löschen
tl.command.executeSearchConsole = Script ausführen
tl.command.executeSearchConsole.tooltip = Führt das eingegebene Script aus und zeigt das Ergebnis in der Ergebnistabelle an. Datenmodifizierende Operationen sind nicht erlaubt.
tl.command.refreshSearch = Suchergebnisse aktualisieren
tl.command.resetModelSearch = Zurücksetzen
tl.command.saveModelSearch = Speichern
tl.command.saveModelSearchAs = Speichern
tl.command.updateSearchConsole = Script ausführen und Änderungen speichern
tl.command.updateSearchConsole.tooltip = Führt das eingegebene Script aus und zeigt das Ergebnis in der Ergebnistabelle an. Werden durch die Auswertung Daten geändert, werden diese persistiert.
