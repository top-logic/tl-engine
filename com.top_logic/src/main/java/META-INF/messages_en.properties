class.com.top_logic.base.accesscontrol.I18NConstants.APP_BUZZY_CLOSE = Close
class.com.top_logic.base.accesscontrol.I18NConstants.APP_BUZZY_RELOAD = Reload
class.com.top_logic.base.accesscontrol.I18NConstants.APP_BUZZY__NAME = The application {0} is buzzy. Please wait a moment and then try reloading the page.
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_CONFIRM = Confirm password
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_CRITERIA_LOWER = Lower case characters (a-b)
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_CRITERIA_NUMBER = Numbers (0-9)
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_CRITERIA_SPECIAL = Special characters (!"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~)
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_CRITERIA_UPPER = Upper case characters (A-B)
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_CURRENT = Current password
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_CYCLE__CNT = You may not reuse previously used passwords until after {0} change cycles.
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_EXPIRY__DAYS = The password will expire after {0} days and has to be changed then.
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_MIN_CRITERIA__CNT = Should contain at least {0} of the following:
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_MIN_LENGTH__LENGTH = At least {0} characters in length
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_MSG_OLD_PASSWORD_WRONG = Wrong old password.
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_MSG_PASSWORDS_DONT_MATCH = Passwords do not match.
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_NEED_UPDATE = You need to change it.
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_NEW = New password
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_PASSWORD_EXPIRED = Your password has expired.
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_POLICY = Password policy:
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_SUBMIT = Save and login
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_TITLE = Password change required
class.com.top_logic.base.accesscontrol.I18NConstants.PWD_CHANGE_WELCOME__USER = Welcome {0}!
class.com.top_logic.base.search.I18NConstants.SEARCH_STRING_SYNTAX_ERROR_UNCLOSED_PHRASE__PHRASE_INPUT = Illegal search string. The phrase ''{0}'' in input ''{1}'' is not closed.
class.com.top_logic.common.folder.ui.I18NConstants.NO_FOLDER_AVAILABLE = No folder available.
class.com.top_logic.html.template.I18NConstants.ERROR_DUPLICATE_ATTRIBUTE__NAME_LINE_COL = Duplicate attribute "{0}" at line {1}, column {2}.
class.com.top_logic.html.template.I18NConstants.ERROR_INVALID_NESTING__EXPECTED_FOUND_LINE_COL = Invalid nesting of tags, expected {0}, found {1} at line {2}, column {3}.
class.com.top_logic.html.template.I18NConstants.ERROR_MISSING_END_TAG__NAME_LINE_COL = Missing end tag "{0}" for start tag at line {1}, column {2}.
class.com.top_logic.html.template.I18NConstants.ERROR_NOT_A_NUMBER__VALUE = Not a number: {0}
class.com.top_logic.html.template.I18NConstants.ERROR_NOT_COMPARABLE__VALUE = Value cannot be compared: {0}
class.com.top_logic.html.template.I18NConstants.ERROR_NO_MATCHING_OPENING_TAG__NAME_LINE_COL = There is no matching opening tag for tag with name "{0}" at line {1}, column {2}.
class.com.top_logic.html.template.I18NConstants.ERROR_NO_TAGS_INSIDE_ATTRIBUTE_VALUE__NAME_LINE_COL = No tag structure inside attribute "{0}" allowed at line {1}, column {2}.
class.com.top_logic.html.template.I18NConstants.ERROR_TEMPLATE_SYNTAX_ERROR__DESC = Failed to parse template: {0}
class.com.top_logic.html.template.I18NConstants.NO_VALID_VOID_ELEMENT__NAME_LINE_COL = Tag "{0}" at line {1}, column {2} is no valid HTML 5 void element.
class.com.top_logic.knowledge.gui.layout.form.I18NConstants.ERROR_NOT_A_BUSINESS_OBJECT__ELEMENT = The object {0} is not a business object.
class.com.top_logic.knowledge.gui.layout.person.I18NConstants.CHANGED_THEME_RELOGIN_NECESSARY__THEME = You have changed the theme ({0}). Please log in again to view the new theme.
class.com.top_logic.layout.admin.component.I18NConstants.ERROR_NOT_A_GROUP__ELEMENT = The object {0} is not a group.
class.com.top_logic.layout.component.I18NConstants.NEW_LAYOUT = The view was newly created. To remove the view use "delete view".
class.com.top_logic.layout.component.I18NConstants.NO_PERSONAL_LAYOUT = The view has not been locally modified.
class.com.top_logic.layout.editor.commands.I18NConstants.EXPORT_LAYOUTS = Export layout
class.com.top_logic.layout.editor.commands.I18NConstants.EXPORT_LAYOUTS.tooltip = Exports the in-app configured application layout currently stored in the database to XML files in the development environment.
class.com.top_logic.layout.editor.commands.I18NConstants.RELEASE_LAYOUT = Release layout
class.com.top_logic.layout.editor.commands.I18NConstants.RELEASE_LAYOUT.tooltip = Publishes all changes to the application layout done by the current user to all users of the application.
class.com.top_logic.layout.form.boxes.reactive_tag.I18NConstants.GROUP_NOT_COLLAPSIBLE = The group can not be collapsed.
class.com.top_logic.layout.form.component.I18NConstants.INVALIDATE = Reload
class.com.top_logic.layout.form.component.I18NConstants.INVALIDATE.tooltip = Resets the view and reloads it from underlying data.
class.com.top_logic.layout.form.control.I18NConstants.CHECKLIST_ALL = Select all
class.com.top_logic.layout.form.control.I18NConstants.CHECKLIST_DISPLAY__CNT_TOTAL = {0} / {1}
class.com.top_logic.layout.form.control.I18NConstants.CHECKLIST_NONE = Clear selection
class.com.top_logic.layout.form.control.I18NConstants.DD_ITEM_SELECTED = Element from dropdown list is selected.
class.com.top_logic.layout.form.control.I18NConstants.DD_ITEM_SELECTED.help = Command to save selected item from a dropdown.
class.com.top_logic.layout.form.control.I18NConstants.ERROR_UPLOAD_DUPLICATE_NAME__NAME = A file with name "{0}" has already been selected.
class.com.top_logic.layout.form.control.I18NConstants.ERROR_UPLOAD_EMPTY_FILE__NAME = File must not be empty ("{0}").
class.com.top_logic.layout.form.control.I18NConstants.ERROR_UPLOAD_SIZE_EXCEEDED__NAME_LIMIT = The file "{0}" exceeds the maximum upload size of {1} bytes.
class.com.top_logic.layout.form.control.I18NConstants.ICON_CHOOSER_COMMAND = Opens an icon chooser.
class.com.top_logic.layout.form.control.I18NConstants.OPEN_CLOCK_COMMAND = Opens a clock.
class.com.top_logic.layout.form.control.I18NConstants.UPLOAD_COMPLETED_COMMAND = Upload completed callback
class.com.top_logic.layout.form.control.I18NConstants.UPLOAD_LABEL = Choose file
class.com.top_logic.layout.form.control.I18NConstants.UPLOAD_LABEL.tooltip = Opens the file chooser for uploading a file.
class.com.top_logic.layout.form.model.I18NConstants.DATE_TIME_FIELD_NO_DATE_VALUE__VALUE = The day value can not be parsed: {0}
class.com.top_logic.layout.form.model.I18NConstants.DATE_TIME_FIELD_NO_TIME_VALUE__VALUE = The time value can not be parsed: {0}
class.com.top_logic.layout.form.values.edit.editor.I18NConstants.COLLAPSE_ALL_ENTRIES_IN_LIST = Collapse all
class.com.top_logic.layout.form.values.edit.editor.I18NConstants.ERROR_NO_TITLE_PROPERTY_IN_DESCRIPTOR__DESCRIPTOR_PROPERTY = In the descriptor {0} there is no title property with name {1}.
class.com.top_logic.layout.form.values.edit.editor.I18NConstants.EXPAND_ALL_ENTRIES_IN_LIST = Expand all
class.com.top_logic.layout.form.values.edit.editor.I18NConstants.ILLEGAL_FILE_TYPE__FILENAME__ALLOWED_TYPES = Illegal file type {0}. Allowed types: {1}
class.com.top_logic.layout.messagebox.I18NConstants.ERROR_PROGRESS_NOT_FINISHED_WITHIN_TIMEOUT = The background task has not finished within the specified wait timeout.
class.com.top_logic.layout.table.export.I18NConstants.DEFAULT_EXPORT_SHEET_NAME = Data
class.com.top_logic.layout.table.export.I18NConstants.DOWNLOAD = Download
class.com.top_logic.layout.table.export.I18NConstants.DOWNLOAD.tooltip = Download the generated export data.
class.com.top_logic.layout.table.export.I18NConstants.ERROR_CREATING_EXPORT = Problem creating Excel report.
class.com.top_logic.layout.table.export.I18NConstants.EXPORTING_DATA = Exporting to Excel format.
class.com.top_logic.layout.table.export.I18NConstants.EXPORTING_HEADER = Exporting table header.
class.com.top_logic.layout.table.export.I18NConstants.EXPORTING_ROW__NUM_TOTAL = Exporting row {0} of {1}.
class.com.top_logic.layout.table.export.I18NConstants.EXTRACTING_TABLE_DATA = Extracting table data.
class.com.top_logic.layout.table.export.I18NConstants.PERFORMING_EXPORT = Exporting to Excel
class.com.top_logic.layout.table.export.I18NConstants.PREPARING_DOWNLOAD = Preparing download.
class.com.top_logic.layout.table.export.I18NConstants.STARTING_EXPORT = Starting export.
class.com.top_logic.layout.table.model.I18NConstants.DOWNLOAD_FILE_KEY = Table data
class.com.top_logic.layout.table.model.I18NConstants.DOWNLOAD_FILE_KEY.help = <i>Resource key</i> for the default name of the download file.
class.com.top_logic.layout.template.I18NConstants.ERROR_NO_SUCH_PROPERTY__SELF_NAME = The property {1} is not defined on {0}.
class.com.top_logic.layout.template.I18NConstants.ERROR_NO_SUCH_PROPERTY__SELF_NAME_AVAILABLE = The property {1} is not defined on {0}. Available properties are: {2}
class.com.top_logic.model.form.implementation.I18NConstants.FORM_DEFINITION_LABEL = Form definition
class.com.top_logic.model.format.I18NConstants.ERROR_CAN_NOT_PARSE_REFERENCE__REFERENCE = Cannot parse object reference ''{0}''.
class.com.top_logic.model.format.I18NConstants.ERROR_CAN_NOT_RESOLVE_REFERENCE__REFERENCE = Cannot resolve reference ''{0}'' to object.
class.com.top_logic.model.format.I18NConstants.ERROR_CAN_NOT_RESOLVE_STATIC_TYPE__REFERENCE = Cannot resolve type in object reference ''{0}''.
class.com.top_logic.model.util.I18NConstants.ERROR_INVALID_LEGACY_TYPE_FORMAT__EXPECTED_ACTUAL = Invalid legacy type format "{1}", expected: {0}
class.com.top_logic.model.util.I18NConstants.ERROR_INVALID_SCOPE_REFERENCE__VALUE = Invalid scope reference: "{0}"
class.com.top_logic.model.util.I18NConstants.ERROR_NOT_A_QUALIFIED_NAME__NAME = Not a qualified part name: "{0}"
class.com.top_logic.model.util.I18NConstants.ERROR_NOT_A_SCOPE__SCOPE_OBJ = Object "{1}" is not a type scope (referenced by "{0}").
class.com.top_logic.model.util.I18NConstants.ERROR_NOT_A_STRUCTURED_TYPE__TYPE = Not a structured type "{0}".
class.com.top_logic.model.util.I18NConstants.ERROR_NOT_A_TYPE_SCOPE__MODULE_SINGLETON = Singleton "{1}" in module "{0}" is not a type scope.
class.com.top_logic.model.util.I18NConstants.ERROR_NO_SUCH_GLOBAL_TYPE__NAME = No type "{0}" found in any module.
class.com.top_logic.model.util.I18NConstants.ERROR_NO_SUCH_MODULE__NAME = No module with name "{0}" found.
class.com.top_logic.model.util.I18NConstants.ERROR_NO_SUCH_PART_IN_TYPE__TYPE_NAME = No such part "{1}" in type "{0}".
class.com.top_logic.model.util.I18NConstants.ERROR_NO_SUCH_SCOPE_OBJECT__SCOPE_ID = Scope object with ID "{1}" does not exist, cannot resolve type scope "{0}".
class.com.top_logic.model.util.I18NConstants.ERROR_NO_SUCH_SINGLETON__MODULE_NAME = No singleton with name "{1}" found in module "{0}".
class.com.top_logic.model.util.I18NConstants.ERROR_NO_SUCH_TABLE__SCOPE_TABLE = Table "{1}" referenced in scope "{0}" not found.
class.com.top_logic.model.util.I18NConstants.ERROR_NO_SUCH_TYPE__MODULE_NAME = No such type "{1}" defined in module "{0}".
class.com.top_logic.model.util.I18NConstants.ERROR_NO_SUCH_TYPE__SCOPE_MODULE_NAME = No such type "{2}" (from module "{1}") found in scope "{0}".
class.com.top_logic.model.util.I18NConstants.ERROR_TYPE_NAME_MUST_NOT_BE_EMPTY = Type name must not be empty.
class.com.top_logic.model.util.I18NConstants.ERROR_UNQUALIFIED_TYPE_NAME_WITHOUT_SCOPE__NAME = Type without module: "{0}"
class.com.top_logic.tool.boundsec.I18NConstants.CONFIRM_DELETE_MORE_ELEMENTS__ELEMENTS = Do you really want to delete the objects "{0}"?
class.com.top_logic.tool.boundsec.I18NConstants.CONFIRM_DELETE_ONE_ELEMENT__ELEMENT = Do you really want to delete the object "{0}"?
class.com.top_logic.tool.boundsec.gui.I18NConstants.ERROR_NOT_A_ROLE__ELEMENT = The object {0} is not a role.
class.com.top_logic.util.license.I18NConstants.LICENCE_VALID = Valid
class.com.top_logic.util.monitor.I18NConstants.DELETE_LICENSE_INFO = Do you want to remove the current license?
class.com.top_logic.util.monitor.I18NConstants.JAVA_INFO = Java
class.com.top_logic.util.monitor.I18NConstants.JAVA_RUNTIME = Runtime
class.com.top_logic.util.monitor.I18NConstants.JAVA_VENDOR = Vendor
class.com.top_logic.util.monitor.I18NConstants.JAVA_VERSION = Version
class.com.top_logic.util.monitor.I18NConstants.LICENCE_STATE = License state
class.com.top_logic.util.monitor.I18NConstants.LICENSE_CLUSTER_SIZE = Number of cluster nodes
class.com.top_logic.util.monitor.I18NConstants.LICENSE_EXPIRE_DATE = Expiry date of license
class.com.top_logic.util.monitor.I18NConstants.LICENSE_KEY = License key
class.com.top_logic.util.monitor.I18NConstants.LICENSE_USERS_FULL = User account usage
class.com.top_logic.util.monitor.I18NConstants.LICENSE_USERS_RESTRICTED = Restricted user account usage
class.com.top_logic.util.monitor.I18NConstants.LICENSE_USERS_VALUE = {0} of max {1}
class.com.top_logic.util.monitor.I18NConstants.LICENSE_VALIDITY = Next license verification
class.com.top_logic.util.monitor.I18NConstants.NO_EXPIRY = Does not expire.
class.com.top_logic.util.monitor.I18NConstants.PRODUCT_TYPE = Product type
class.com.top_logic.util.monitor.I18NConstants.SYSTEM_ENVIRONMENT_APPLICATION_PROPERTIES = Application properties
class.com.top_logic.util.monitor.I18NConstants.SYSTEM_ENVIRONMENT_CLASS_LOADER = Classloader URLs
class.com.top_logic.util.monitor.I18NConstants.SYSTEM_ENVIRONMENT_CLASS_PATH = Classpath
class.com.top_logic.util.monitor.I18NConstants.SYSTEM_ENVIRONMENT_ERROR_ACCESSING_PROPERTY__PROPERTY_MESSAGE = Error accessing property ''{0}'': {1}
class.com.top_logic.util.monitor.I18NConstants.SYSTEM_ENVIRONMENT_JNDI_PROPERTIES = JNDI Properties
class.com.top_logic.util.monitor.I18NConstants.SYSTEM_ENVIRONMENT_SYSTEM_PROPERTIES = System properties
class.com.top_logic.util.monitor.I18NConstants.SYSTEM_ENVIRONMENT_VM_ARGUMENTS = VM arguments
class.com.top_logic.util.monitor.I18NConstants.UNLIMITED = Unlimited
com.top_logic.base.accesscontrol.ApplicationPages$Config = Configuration
com.top_logic.base.accesscontrol.ApplicationPages$Config.tooltip = Global pages configuration options.
com.top_logic.base.accesscontrol.ApplicationPages.Config.buzzyPage = Buzzy page
com.top_logic.base.accesscontrol.ApplicationPages.Config.buzzyPage.tooltip = Configuration option that determines the page to deliver, if the server is buzzy.
com.top_logic.base.accesscontrol.ApplicationPages.Config.changePassword = Change password
com.top_logic.base.accesscontrol.ApplicationPages.Config.changePassword.tooltip = The page that is displayed, if a user is required to change his password.
com.top_logic.base.accesscontrol.ApplicationPages.Config.layout = Layout
com.top_logic.base.accesscontrol.ApplicationPages.Config.layout.tooltip = The key under which the application local path to the layout servlet is configured.
com.top_logic.base.accesscontrol.ApplicationPages.Config.login = Login
com.top_logic.base.accesscontrol.ApplicationPages.Config.login.tooltip = The key under which the application local path to the layout servlet is configured.
com.top_logic.base.accesscontrol.ApplicationPages.Config.loginErrorPage = Login error page
com.top_logic.base.accesscontrol.ApplicationPages.Config.loginErrorPage.tooltip = Configuration option that determines the suffix to the applications context path to which should be redirected in response to an final authentication failure.
com.top_logic.base.accesscontrol.ApplicationPages.Config.loginPage = Login page
com.top_logic.base.accesscontrol.ApplicationPages.Config.loginPage.tooltip = Configuration option that determines the suffix to the applications context path to which should be redirected for requesting authentication.
com.top_logic.base.accesscontrol.ApplicationPages.Config.loginRetryPage = Login retry page
com.top_logic.base.accesscontrol.ApplicationPages.Config.loginRetryPage.tooltip = Configuration option that determines the suffix to the applications context path to which should be redirected in response to an authentication failure.
com.top_logic.base.accesscontrol.ApplicationPages.Config.loginRetrySSO = Login retry SSO
com.top_logic.base.accesscontrol.ApplicationPages.Config.loginRetrySSO.tooltip = Configuration option that determines the suffix to the applications context path to which should be redirected in response to an single-sign-on authentication failure.
com.top_logic.base.accesscontrol.ApplicationPages.Config.logoutPage = Logout page
com.top_logic.base.accesscontrol.ApplicationPages.Config.logoutPage.tooltip = Configuration option that determines the suffix to the applications context path to which should be redirected to trigger a logout.
com.top_logic.base.accesscontrol.ApplicationPages.Config.noCookiePage = No cookie page
com.top_logic.base.accesscontrol.ApplicationPages.Config.noCookiePage.tooltip = Configuration option that determines the suffix to the applications context path to which should be redirected if missing cookie support is detected in the browser.
com.top_logic.base.accesscontrol.ApplicationPages.Config.startPage = Start page
com.top_logic.base.accesscontrol.ApplicationPages.Config.startPage.tooltip = Configuration option that determines the suffix to the applications context path to which should be redirected after a successful login.
com.top_logic.base.accesscontrol.ExternalAuthentication = External authentication
com.top_logic.base.accesscontrol.ExternalAuthentication.HeaderKey = Header key
com.top_logic.base.accesscontrol.ExternalAuthentication.allowNoDomain = Allow no domain
com.top_logic.base.accesscontrol.ExternalAuthentication.isEnabled = Is enabled
com.top_logic.base.accesscontrol.ExternalAuthentication.reuseSession = Reuse session
com.top_logic.base.accesscontrol.ExternalAuthentication.tooltip = Configuration for the external authentication.
com.top_logic.base.accesscontrol.Login = Login
com.top_logic.base.accesscontrol.Login.Config.command-group-leaving-maintenance-mode = Command group leaving maintenance mode
com.top_logic.base.accesscontrol.Login.Config.command-group-leaving-maintenance-mode.tooltip = Name of command group that is used to switch off maintenance mode.
com.top_logic.base.accesscontrol.Login.Config.component-leaving-maintenance-mode = Component leaving maintenance mode
com.top_logic.base.accesscontrol.Login.Config.component-leaving-maintenance-mode.tooltip = Component name that allows switching off maintenance mode. <p> Users that are privileged on this component can login even if maintenance mode is enabled. </p>
com.top_logic.base.accesscontrol.Login.Config.log-failed-logins = Log failed logins
com.top_logic.base.accesscontrol.Login.Config.log-failed-logins.tooltip = Whether to log failed attempts to log in.
com.top_logic.base.accesscontrol.Login.Config.login-hook = Login hook
com.top_logic.base.accesscontrol.Login.Config.login-hook.tooltip = Configuration of a <i>login hook</i> which is instantiated to perform additional checks during the login process. May be <code>null</code>.
com.top_logic.base.accesscontrol.Login.Config.password-hashing = Password hashing
com.top_logic.base.accesscontrol.Login.Config.password-hashing.tooltip = The <i>password hashing service</i> to use.
com.top_logic.base.accesscontrol.Login.Config.password-manager = Password manager
com.top_logic.base.accesscontrol.Login.Config.password-manager.tooltip = The <i>password manager</i> to use.
com.top_logic.base.accesscontrol.Login.tooltip = Central point of login for all top-logic activities..
com.top_logic.base.accesscontrol.SessionService = Session service
com.top_logic.base.accesscontrol.SessionService.Config.excludeUIDs = Exclude user IDs
com.top_logic.base.accesscontrol.SessionService.Config.excludeUIDs.tooltip = Comma separated list without spaces of login IDs, that are excluded from <i>Only one session</i>.
com.top_logic.base.accesscontrol.SessionService.Config.onlyOneSession = Only one session
com.top_logic.base.accesscontrol.SessionService.Config.onlyOneSession.tooltip = Flag whether to allow only one session per user. If <code>true</code>, a user gets logged out if he is logging in a second time.
com.top_logic.base.accesscontrol.SessionService.Config.secureSessionCookie = Secure session cookie
com.top_logic.base.accesscontrol.SessionService.Config.secureSessionCookie.tooltip = Whether the session cookie is secured with the <code>HttpOnly</code> option and the <code>Secure</code> option, if HTTPS is used.
com.top_logic.base.accesscontrol.SessionService.tooltip = <i>Managed class</i> holding active user sessions.
com.top_logic.base.administration.EnterMaintenanceWindowTask = Enter maintenance window task
com.top_logic.base.administration.EnterMaintenanceWindowTask.Config.delay = Delay
com.top_logic.base.administration.EnterMaintenanceWindowTask.Config.delay.tooltip = The time (in milliseconds) to wait before entering the maintenance window.
com.top_logic.base.administration.EnterMaintenanceWindowTask.tooltip = The EnterMaintenanceWindowTask waits a specified time and enters the maintenance window mode afterwards.
com.top_logic.base.administration.LoggerAdminBean = Logger admin bean
com.top_logic.base.administration.LoggerAdminBean.Config.config-dir = Configuration directory
com.top_logic.base.administration.LoggerAdminBean.Config.config-dir.tooltip = The file system directory, where logging configurations are searched. <p> If nothing is specified, the logging configuration is expected to be in the <code><code>"/WEB-INF/conf/logging/"</code></code> path within the web application. </p>
com.top_logic.base.administration.LoggerAdminBean.Config.log-dir = Log directory
com.top_logic.base.administration.LoggerAdminBean.Config.log-dir.tooltip = The directory to create log files in.
com.top_logic.base.administration.LoggerAdminBean.Config.logging-config = Logging configuration
com.top_logic.base.administration.LoggerAdminBean.Config.logging-config.tooltip = The logging configuration file in <i>Configuration directory</i> to load by default.
com.top_logic.base.administration.LoggerAdminBean.tooltip = Utility functions around the Logging framework.
com.top_logic.base.administration.MaintenanceWindowManager = Maintenance window manager
com.top_logic.base.administration.MaintenanceWindowManager.Config.allowed-groups = Allowed groups
com.top_logic.base.administration.MaintenanceWindowManager.Config.allowed-groups.tooltip = The groups which are allowed to login while system is in maintenance window mode. Empty set means no one is allowed to login except root users.
com.top_logic.base.administration.MaintenanceWindowManager.Config.min-intervall-in-cluster = Minimum intervall in cluster
com.top_logic.base.administration.MaintenanceWindowManager.Config.min-intervall-in-cluster.tooltip = Minimum delay in milliseconds for entering maintenance mode in cluster.
com.top_logic.base.administration.MaintenanceWindowManager.tooltip = The MaintenanceWindowManager manages the maintenance window mode of the system, including entering and leaving of this mode.
com.top_logic.base.administration.TLPerformanceTests$Config = Configuration
com.top_logic.base.administration.TLPerformanceTests$Config.tooltip = Configuration for <i>performance tests</i>.
com.top_logic.base.administration.TLPerformanceTests.Config.tempDir = Temporary directory
com.top_logic.base.administration.TLPerformanceTests.Config.tempDir.tooltip = Path of the temporary directory. Uses <i>file manager</i> syntax.
com.top_logic.base.chart.component.AbstractImageComponent = Image component
com.top_logic.base.chart.component.AbstractImageComponent.Config.write-image-to-temp-file = Write image to temporary file
com.top_logic.base.chart.component.AbstractImageComponent.Config.write-image-to-temp-file.tooltip = Whether the image created by this <i>image component</i> should be written to a temporary file.
com.top_logic.base.chart.component.AbstractImageComponent.tooltip = Abstract implementation of <i>image component</i> based on a <i>form component</i>.
com.top_logic.base.chart.component.ChoiceJFreeChartComponent = Choice chart component
com.top_logic.base.chart.component.ChoiceJFreeChartComponent$ChoiceChartCommand = Choice chart command
com.top_logic.base.chart.component.ChoiceJFreeChartComponent$ChoiceChartCommand.tooltip = The ChoiceChartCommand sets the selected chart type to a <i>chart choice</i> class.
com.top_logic.base.chart.component.ChoiceJFreeChartComponent.tooltip = The ChoiceJFreeChartComponent implements the <i>chart choice</i> interface. Subclasses have to implement only the abstract method of the <i>chart component</i>. Do not forget to set the init chart type and supported chart types. It is not allowed that no chart type is selected or no chart type is supported.
com.top_logic.base.chart.component.JFreeChartComponent = Chart component
com.top_logic.base.chart.component.JFreeChartComponent.tooltip = A (Form)Component to generate Charts. A JFreeChartComponent can handle more than one image.
com.top_logic.base.chart.flex.control.FilterRefreshCommandHandler = Filter refresh command handler
com.top_logic.base.chart.flex.control.FilterRefreshCommandHandler.tooltip = The FilterRefreshCommandHandler refreshs filter components.
com.top_logic.base.chart.util.ChartType = Chart type
com.top_logic.base.chart.util.ChartType.ACHIEVEMENT_CHART = Achievement chart
com.top_logic.base.chart.util.ChartType.ACHIEVEMENT_CHART.tooltip = The bar chart type.
com.top_logic.base.chart.util.ChartType.BAR_CHART = Bar chart
com.top_logic.base.chart.util.ChartType.BAR_CHART.tooltip = The bar chart type.
com.top_logic.base.chart.util.ChartType.DEFAULT_CHART = Default chart
com.top_logic.base.chart.util.ChartType.DEFAULT_CHART.tooltip = The default chart type.
com.top_logic.base.chart.util.ChartType.KPITRACING_CHART = Kpitracing chart
com.top_logic.base.chart.util.ChartType.KPITRACING_CHART.tooltip = The kpitracing chart type.
com.top_logic.base.chart.util.ChartType.MATRIX_CHART = Matrix chart
com.top_logic.base.chart.util.ChartType.MATRIX_CHART.tooltip = The matrix chart type.
com.top_logic.base.chart.util.ChartType.PIE_CHART = Pie chart
com.top_logic.base.chart.util.ChartType.PIE_CHART.tooltip = The pie chart type.
com.top_logic.base.chart.util.ChartType.SPIDER_CHART = Spider chart
com.top_logic.base.chart.util.ChartType.SPIDER_CHART.tooltip = The spider chart type.
com.top_logic.base.chart.util.ChartType.SWING_CHART = Swing chart
com.top_logic.base.chart.util.ChartType.SWING_CHART.tooltip = The swing chart type.
com.top_logic.base.chart.util.ChartType.TREND_CHART = Trend chart
com.top_logic.base.chart.util.ChartType.TREND_CHART.tooltip = The default chart type.
com.top_logic.base.chart.util.ChartType.tooltip = A type for charts with its icons.
com.top_logic.base.cluster.ClusterManager = Cluster manager
com.top_logic.base.cluster.ClusterManager$NodeState = Node state
com.top_logic.base.cluster.ClusterManager$NodeState.tooltip = The possible states of cluster nodes.
com.top_logic.base.cluster.ClusterManager$PropertyType = Property type
com.top_logic.base.cluster.ClusterManager$PropertyType.tooltip = Predefined types for cluster wide properties.
com.top_logic.base.cluster.ClusterManager.Config.cluster = Cluster
com.top_logic.base.cluster.ClusterManager.Config.cluster.tooltip = Defines whether the application runs in cluster mode.
com.top_logic.base.cluster.ClusterManager.Config.connection-pool = Connection pool
com.top_logic.base.cluster.ClusterManager.Config.connection-pool.tooltip = The name of the <i>connection pool</i> registered in the <i>connection pool registry</i> used by this <i>cluster manager</i>.
com.top_logic.base.cluster.ClusterManager.Config.refetch-interval = Refetch interval
com.top_logic.base.cluster.ClusterManager.Config.refetch-interval.tooltip = The refetch interval in milliseconds. Has to be >0.
com.top_logic.base.cluster.ClusterManager.Config.refetch-wait-on-stop-timeout = Refetch wait on stop timeout
com.top_logic.base.cluster.ClusterManager.Config.refetch-wait-on-stop-timeout.tooltip = Milliseconds how long the <i>cluster manager</i> should wait on shutdown for a running refetch to complete. <p> If the time is up, the shutdown proceeds and the refetch might fail because the <i>cluster manager</i> is already shut down. <br/> 0 and negative values mean: Don't wait. <br/> To wait "forever", use for example <code>9223372036854775807</code>. </p>
com.top_logic.base.cluster.ClusterManager.Config.timeout-other-node = Timeout other node
com.top_logic.base.cluster.ClusterManager.Config.timeout-other-node.tooltip = In milliseconds.
com.top_logic.base.cluster.ClusterManager.Config.timeout-running-node = Timeout running node
com.top_logic.base.cluster.ClusterManager.Config.timeout-running-node.tooltip = In milliseconds.
com.top_logic.base.cluster.ClusterManager.NodeState.RUNNING = Running
com.top_logic.base.cluster.ClusterManager.NodeState.SHUTDOWN = Shutdown
com.top_logic.base.cluster.ClusterManager.NodeState.SHUTDOWN.tooltip = Application is Shutting Down
com.top_logic.base.cluster.ClusterManager.NodeState.STARTUP = Startup
com.top_logic.base.cluster.ClusterManager.NodeState.WAIT_FOR_STARTUP = Wait for startup
com.top_logic.base.cluster.ClusterManager.PropertyType.BOOLEAN = Boolean
com.top_logic.base.cluster.ClusterManager.PropertyType.CHAR = Char
com.top_logic.base.cluster.ClusterManager.PropertyType.DOUBLE = Double
com.top_logic.base.cluster.ClusterManager.PropertyType.FLOAT = Float
com.top_logic.base.cluster.ClusterManager.PropertyType.INT = Int
com.top_logic.base.cluster.ClusterManager.PropertyType.LONG = Long
com.top_logic.base.cluster.ClusterManager.PropertyType.NULL = Null
com.top_logic.base.cluster.ClusterManager.PropertyType.STRING = String
com.top_logic.base.cluster.ClusterManager.tooltip = Manages communications between nodes in a multi cluster system and provides cluster wide global properties.
com.top_logic.base.config.i18n.Internationalized = Internationalized
com.top_logic.base.config.i18n.Internationalized.description = Description
com.top_logic.base.config.i18n.Internationalized.description.tooltip = The internationalized description of the attribute.
com.top_logic.base.config.i18n.Internationalized.label = Label
com.top_logic.base.config.i18n.Internationalized.label.tooltip = The internationalized name of the attribute.
com.top_logic.base.config.i18n.Internationalized.tooltip = Base edit model for an internationalized thing consisting of a name and a description.
com.top_logic.base.dsa.ldap.PersonLDAPAccessService$Config = Configuration
com.top_logic.base.dsa.ldap.PersonLDAPAccessService$Config.tooltip = Configuration of a <i>person LDAP access service</i>.
com.top_logic.base.dsa.ldap.PersonLDAPAccessService.Config.access-groups = Access groups
com.top_logic.base.dsa.ldap.PersonLDAPAccessService.Config.attrib-filter = Attrib filter
com.top_logic.base.dsa.ldap.PersonLDAPAccessService.Config.attrib-filter.tooltip = Additional Filter taken from config. Typically used to filter out other objects (group members) except users. i.e.: Accept only entries for type "Person" with their login Name not being empty, clould be like: attrib-filter = "(&amp;(objectClass=Person)(samAccountName=*))" When no Access groups are given (empty group-dn), this query alone is used to determine user entries. i.e: Accept all members of group "top-logic" that are of type "Person" with their login name not being empty. could look like: attrib-filter = "(&amp;(&amp;(objectClass=Person)(samAccountName=*))(memberof=CN=top-logic,OU=BOS-Frankfurt,OU=BOS,DC=BOS,DC=local))" That way the user entries would be looked up without explicit access to the group object.
com.top_logic.base.dsa.ldap.PersonLDAPAccessService.Config.available-attributes = Available attributes
com.top_logic.base.dsa.ldap.PersonLDAPAccessService.Config.available-attributes.tooltip = Configure the attributes that will be queried for LDAP objects Attn: Comma separated, without spaces. The given names must match the foreign System. If empty, all attributes will be queried. If given, this list must be complete (also take technical requirements into account, i.e. objectClass), other than those will not be available to the system! It is not possible to configure objectClass specific attribute lists. All objects will be queried for the same attributes.
com.top_logic.base.dsa.ldap.PersonLDAPAccessService.Config.parse-nested-groups = Parse nested groups
com.top_logic.base.dsa.ldap.PersonLDAPAccessService.Config.parse-nested-groups.tooltip = Flag to indicated whether nested groups (groups who appear to members of another group) should be parsed for userdata or not.
com.top_logic.base.dsa.ldap.ServiceProviderInfo$Config = Configuration
com.top_logic.base.dsa.ldap.ServiceProviderInfo$Config.tooltip = Configuration for a <i>service provider info</i>.
com.top_logic.base.dsa.ldap.ServiceProviderInfo.Config.authentication-type = Authentication type
com.top_logic.base.dsa.ldap.ServiceProviderInfo.Config.base-dn = Base dn
com.top_logic.base.dsa.ldap.ServiceProviderInfo.Config.context-factory = Context factory
com.top_logic.base.dsa.ldap.ServiceProviderInfo.Config.master-credential = Master credential
com.top_logic.base.dsa.ldap.ServiceProviderInfo.Config.master-principal = Master principal
com.top_logic.base.dsa.ldap.ServiceProviderInfo.Config.provider-url = Provider URL
com.top_logic.base.dsa.ldap.ServiceProviderInfo.Config.referral = Referral
com.top_logic.base.dsa.ldap.ServiceProviderInfo.Config.security-protocol-type = Security protocol type
com.top_logic.base.locking.LockService = Lock service
com.top_logic.base.locking.LockService.tooltip = Service for creating <i>locks</i> based on strategies.
com.top_logic.base.locking.handler.AbstractConfiguredLockHandler = Configured lock handler
com.top_logic.base.locking.handler.AbstractConfiguredLockHandler.tooltip = Base class for configurable <i>lock handlers</i>.
com.top_logic.base.locking.handler.ConfiguredLockHandler = Configured lock handler
com.top_logic.base.locking.handler.ConfiguredLockHandler.Config.lock-timeout = Lock timeout
com.top_logic.base.locking.handler.ConfiguredLockHandler.Config.lock-timeout.tooltip = Duration in milliseconds an acquired <i>lock</i> keeps valid.
com.top_logic.base.locking.handler.ConfiguredLockHandler.tooltip = <i>Lock handler</i> that uses locally configured strategies.
com.top_logic.base.locking.handler.DefaultLockHandler = Default lock handler
com.top_logic.base.locking.handler.DefaultLockHandler.Config.lockOperation = Lock operation
com.top_logic.base.locking.handler.DefaultLockHandler.Config.lockOperation.tooltip = Abstract operation performed by this component with regard to locking.
com.top_logic.base.locking.handler.DefaultLockHandler.tooltip = <i>Lock handler</i> dispatching to the global <i>lock service</i>.
com.top_logic.base.locking.handler.SharedLockHandler = Shared lock handler
com.top_logic.base.locking.handler.SharedLockHandler.Config.defaultHandler = Default handler
com.top_logic.base.locking.handler.SharedLockHandler.Config.defaultHandler.tooltip = The <i>lock handler</i> to use, if no lock was acquired in <i>Lock component</i>. <p> If not given, the <i>Lock component's</i> handler is used even for acquiring locks. </p>
com.top_logic.base.locking.handler.SharedLockHandler.Config.lockComponent = Lock component
com.top_logic.base.locking.handler.SharedLockHandler.Config.lockComponent.tooltip = Name of the component whose <i>lock handler</i> should be used. <p> This component is required to be an <i>edit component</i>, since only those have <i>lock handlers</i>. </p>
com.top_logic.base.locking.handler.SharedLockHandler.tooltip = <i>Lock handler</i> that uses the <i>lock handler</i> of another referenced component.
com.top_logic.base.locking.service.ConfiguredLockService = Configured lock service
com.top_logic.base.locking.service.ConfiguredLockService$Config$GlobalTypeConfig = Global type configuration
com.top_logic.base.locking.service.ConfiguredLockService$Config$GlobalTypeConfig.tooltip = <i>Type configuration</i> for global operations (without base object).
com.top_logic.base.locking.service.ConfiguredLockService$Config$JavaTypeConfig = Java type configuration
com.top_logic.base.locking.service.ConfiguredLockService$Config$JavaTypeConfig.tooltip = <i>Type configuration</i> for Java implementation types.
com.top_logic.base.locking.service.ConfiguredLockService$Config$ModelTypeConfig = Model type configuration
com.top_logic.base.locking.service.ConfiguredLockService$Config$ModelTypeConfig.tooltip = <i>Type configuration</i> for model types.
com.top_logic.base.locking.service.ConfiguredLockService$Config$TypeConfig$OperationConfig = Operation configuration
com.top_logic.base.locking.service.ConfiguredLockService$Config$TypeConfig$OperationConfig.tooltip = <i>Lock strategy</i> configuration for a certain abstract operation.
com.top_logic.base.locking.service.ConfiguredLockService.Config.JavaTypeConfig.impl = Implementation
com.top_logic.base.locking.service.ConfiguredLockService.Config.JavaTypeConfig.impl.tooltip = The model type this configuration is for.
com.top_logic.base.locking.service.ConfiguredLockService.Config.ModelTypeConfig.type = Type
com.top_logic.base.locking.service.ConfiguredLockService.Config.ModelTypeConfig.type.tooltip = The model type this configuration is for.
com.top_logic.base.locking.service.ConfiguredLockService.Config.TypeConfig.OperationConfig.lock-timeout = Lock timeout
com.top_logic.base.locking.service.ConfiguredLockService.Config.TypeConfig.OperationConfig.lock-timeout.tooltip = The timeout duration for a lock created for this operation. <p> If not given, the timeout defaults to the global timeout <i>Lock timeout</i> (<i>configured lock service configuration</i>). </p>
com.top_logic.base.locking.service.ConfiguredLockService.Config.TypeConfig.OperationConfig.name.tooltip = The name of the abstract operation.
com.top_logic.base.locking.service.ConfiguredLockService.Config.TypeConfig.StrategyContainerConfig.strategies = Strategies
com.top_logic.base.locking.service.ConfiguredLockService.Config.TypeConfig.StrategyContainerConfig.strategies.tooltip = <i>Lock strategy</i> to use.
com.top_logic.base.locking.service.ConfiguredLockService.Config.TypeConfig.operations = Operations
com.top_logic.base.locking.service.ConfiguredLockService.Config.TypeConfig.operations.tooltip = The locking strategies for various abstract operations.
com.top_logic.base.locking.service.ConfiguredLockService.Config.lock-timeout = Lock timeout
com.top_logic.base.locking.service.ConfiguredLockService.Config.lock-timeout.tooltip = Default duration in milliseconds an acquired <i>lock</i> keeps valid.
com.top_logic.base.locking.service.ConfiguredLockService.Config.types = Types
com.top_logic.base.locking.service.ConfiguredLockService.Config.types.tooltip = The locking strategies for various types.
com.top_logic.base.locking.service.ConfiguredLockService.tooltip = <i>Lock service</i> that can be configured.
com.top_logic.base.locking.strategy.ConfiguredLockStrategy = Configured lock strategy
com.top_logic.base.locking.strategy.ConfiguredLockStrategy.Config.aspect = Aspect
com.top_logic.base.locking.strategy.ConfiguredLockStrategy.Config.aspect.tooltip = The identifier the lock aspect the token represents.
com.top_logic.base.locking.strategy.ConfiguredLockStrategy.Config.kind = Kind
com.top_logic.base.locking.strategy.ConfiguredLockStrategy.Config.kind.tooltip = The token <i>kind</i> to produce.
com.top_logic.base.locking.strategy.ConfiguredLockStrategy.tooltip = Base class for <i>lock strategy</i> implementations.
com.top_logic.base.locking.strategy.GlobalLockStrategy = Global lock strategy
com.top_logic.base.locking.strategy.GlobalLockStrategy.tooltip = <i>Lock strategy</i> creating a token with the same well-known global name for all given <i>objects</i>.
com.top_logic.base.locking.strategy.LocalLockStrategy = Local lock strategy
com.top_logic.base.locking.strategy.LocalLockStrategy.tooltip = <i>Lock strategy</i> creating a single token identifying the given <i>object</i>.
com.top_logic.base.locking.token.ConfiguredTokenService = Configured token service
com.top_logic.base.locking.token.ConfiguredTokenService.Config.report-lock-owner-details = Report lock owner details
com.top_logic.base.locking.token.ConfiguredTokenService.Config.report-lock-owner-details.tooltip = Whether to report details about the lock owner in case of a lock conflict.
com.top_logic.base.locking.token.ConfiguredTokenService.tooltip = Base class for <i>token service</i> implementations.
com.top_logic.base.locking.token.EphemeralTokenService = Ephemeral token service
com.top_logic.base.locking.token.EphemeralTokenService.tooltip = In-memory (single-node) <i>token service</i> implementation.
com.top_logic.base.locking.token.PersistentTokenService = Persistent token service
com.top_logic.base.locking.token.PersistentTokenService.tooltip = <i>Token service</i> using database tables for synchronization.
com.top_logic.base.locking.token.Token$Kind = Kind
com.top_logic.base.locking.token.Token$Kind.tooltip = A kind of <i>token</i>.
com.top_logic.base.locking.token.Token.Kind.EXCLUSIVE = Exclusive
com.top_logic.base.locking.token.Token.Kind.EXCLUSIVE.tooltip = An exclusive <i>token</i> an only be acquired by exactly one process. <p> Holding an exclusive <i>token</i> also prevents other processes from acquiring <i>shared</i> <i>tokens</i> on the same object. </p>
com.top_logic.base.locking.token.Token.Kind.SHARED = Shared
com.top_logic.base.locking.token.Token.Kind.SHARED.tooltip = Multiple shared <i>tokens</i> can be acquired concurrently be different processes. <p> Holding a shared <i>token</i> prevents other processes from acquiring <i>exclusive</i> tokens on the same object but allows other processes to acquire other <i>shared</i> tokens on the same object. </p>
com.top_logic.base.locking.token.TokenService = Token service
com.top_logic.base.locking.token.TokenService.tooltip = Service for handling the actual locking aspect of <i>locks</i>.
com.top_logic.base.locking.ui.ReleaseLockCommand = Release lock command
com.top_logic.base.locking.ui.ReleaseLockCommand.tooltip = <i>Command handler</i> releasing a selected <i>lock info</i>.
com.top_logic.base.mail.MailHelper = Mail helper
com.top_logic.base.mail.MailHelper.tooltip = The MailHelper provides useful methods for sending mails. Instead of building up <i>mail</i> objects yourself, you are encouraged to use this helper.
com.top_logic.base.mail.MailSenderService = Mail sender service
com.top_logic.base.mail.MailSenderService.Config.activated = Activated
com.top_logic.base.mail.MailSenderService.Config.activated.tooltip = Status of the transport.
com.top_logic.base.mail.MailSenderService.Config.from-address = From address
com.top_logic.base.mail.MailSenderService.Config.from-address.tooltip = The address this system sends e-mails from.
com.top_logic.base.mail.MailSenderService.Config.lookup-mx-record = Lookup mx record
com.top_logic.base.mail.MailSenderService.Config.lookup-mx-record.tooltip = Whether <i>Server</i> is a domain name that should be resolved to a MX record through DNS.
com.top_logic.base.mail.MailSenderService.Config.mail-domain = Mail domain
com.top_logic.base.mail.MailSenderService.Config.mail-domain.tooltip = The e-mail domain name of the company. <p> The value is used to turn local accounts into e-mail addresses by prefixing the domain name and a '@' character to an account name. If account names do not correspond to e-mail addresses, this value must be empty. </p>
com.top_logic.base.mail.MailSenderService.Config.options = Options
com.top_logic.base.mail.MailSenderService.Config.options.tooltip = Mail parameters, for instance socket and connection timeout or the transport protocol.
com.top_logic.base.mail.MailSenderService.Config.password = Password
com.top_logic.base.mail.MailSenderService.Config.password.tooltip = The password to authenticate this system to the SMTP server.
com.top_logic.base.mail.MailSenderService.Config.port = Port
com.top_logic.base.mail.MailSenderService.Config.port.tooltip = The port of the SMTP server.
com.top_logic.base.mail.MailSenderService.Config.server = Server
com.top_logic.base.mail.MailSenderService.Config.server.tooltip = The port of the SMTP server.
com.top_logic.base.mail.MailSenderService.Config.startup-notification-body = Startup notification body
com.top_logic.base.mail.MailSenderService.Config.startup-notification-body.tooltip = The body of the startup notification e-mail. <p> The value is only relevant, if <i>Startup notification receivers</i> is set. If no message body is given, a generic message body is generated. </p>
com.top_logic.base.mail.MailSenderService.Config.startup-notification-receivers = Startup notification receivers
com.top_logic.base.mail.MailSenderService.Config.startup-notification-receivers.tooltip = A comma separated list of e-mail address to send a startup notification mail to.
com.top_logic.base.mail.MailSenderService.Config.startup-notification-subject = Startup notification subject
com.top_logic.base.mail.MailSenderService.Config.startup-notification-subject.tooltip = The subject of the startup notification e-mail. <p> The value is only relevant, if <i>Startup notification receivers</i> is set. If no subject is given, a generic message subject is generated. </p>
com.top_logic.base.mail.MailSenderService.Config.user = User
com.top_logic.base.mail.MailSenderService.Config.user.tooltip = The user name used to login to the SMTP server.
com.top_logic.base.mail.MailSenderService.tooltip = <i>Managed class</i> for sending e-mail via SMTP.
com.top_logic.base.merge.layout.MergePerformHandler = Merge perform handler
com.top_logic.base.merge.layout.MergePerformHandler.Config.perform = Perform
com.top_logic.base.merge.layout.MergePerformHandler.tooltip = <i>Command handler</i> to approve <i>merge messages</i>.
com.top_logic.base.merge.layout.MergeTreeComponenet = Merge tree componenet
com.top_logic.base.merge.layout.MergeTreeComponenet.tooltip = A Tree Componenent based on merge TreeNodes.
com.top_logic.base.monitor.bus.DefaultMonitor = Default monitor
com.top_logic.base.monitor.bus.DefaultMonitor.Config.number-events-to-store = Number events to store
com.top_logic.base.monitor.bus.DefaultMonitor.Config.number-events-to-store.tooltip = Number of events to store.
com.top_logic.base.monitor.bus.DefaultMonitor.Config.output-file = Output file
com.top_logic.base.monitor.bus.DefaultMonitor.Config.output-file.tooltip = The file we write from.
com.top_logic.base.monitor.bus.DefaultMonitor.tooltip = A Receiver that logs its Events to a File. Processes MonitorEvents only. Writes to logfile which can be configured in TopLogic.xml. If the Logifile is not available Stdout is used.
com.top_logic.base.monitor.bus.DocumentMonitor = Document monitor
com.top_logic.base.monitor.bus.DocumentMonitor.Config.service-name.tooltip = Name of the service.
com.top_logic.base.monitor.bus.DocumentMonitor.Config.service-namespace.tooltip = Namespace for the service.
com.top_logic.base.monitor.bus.DocumentMonitor.tooltip = Listener of <i>user events</i>. Supportes are backup on file with buffering for fast access. and implements IReceiver and to use EventBuffer, EventWriter, EventReader
com.top_logic.base.monitor.bus.EventMonitor = Event monitor
com.top_logic.base.monitor.bus.EventMonitor.Config.buffer-size = Buffer size
com.top_logic.base.monitor.bus.EventMonitor.Config.buffer-size.tooltip = The buffer for all received events.
com.top_logic.base.monitor.bus.EventMonitor.Config.service-name.tooltip = Name of the service.
com.top_logic.base.monitor.bus.EventMonitor.Config.service-namespace.tooltip = Namespace for the service.
com.top_logic.base.monitor.bus.EventMonitor.tooltip = The EventMonitor listens on the Bus for every event and buffers the last events.
com.top_logic.base.monitor.bus.UserMonitor = User monitor
com.top_logic.base.monitor.bus.UserMonitor.Config.service-name.tooltip = Name of the service.
com.top_logic.base.monitor.bus.UserMonitor.Config.service-namespace.tooltip = Namespace for the service.
com.top_logic.base.monitor.bus.UserMonitor.tooltip = Listener of <i>user events</i>. Supported are backup on file with buffering for fast access. This class is not in use anymore since it writes to a file. Its the Sucessuor the <i>user monitor</i> uses the Knowledgebase as storage. The class is left here as an exmaple how things could be done, too. and implements IReceiver and to use EventBuffer, EventWriter, EventReader
com.top_logic.base.monitor.bus.WebContentMonitor = Web content monitor
com.top_logic.base.monitor.bus.WebContentMonitor.Config.service-name.tooltip = Name of the service.
com.top_logic.base.monitor.bus.WebContentMonitor.Config.service-namespace.tooltip = Namespace for the service.
com.top_logic.base.monitor.bus.WebContentMonitor.tooltip = The Document monitor observes all Changes of Documents within the System. This Monitor is a EventBuffer, so instead of writing all events into a logfile, it caches a certain number of events for later access. The WebContent KO that gave name to this class is actually part of the CMS-module, but is not as such needed by this class.
com.top_logic.base.office.AbstractOffice = Office
com.top_logic.base.office.AbstractOffice.tooltip = Base class for MS-Office classes. This class provides some basic functions to convert data from and to MS- Office. Moreover implementing classes will provide high level methods for reading and writing office files. High level means that values from the office files can be read and written by simple maps.
com.top_logic.base.office.excel.ExcelAccess$GlobalConfig = Global configuration
com.top_logic.base.office.excel.ExcelAccess$GlobalConfig.tooltip = Global <i>Excel access</i> configuration options.
com.top_logic.base.office.excel.ExcelAccess.GlobalConfig.factory = Factory
com.top_logic.base.office.excel.ExcelAccess.GlobalConfig.factory.tooltip = The factory to use for creating <i>Excel access</i> instances.
com.top_logic.base.office.excel.POIExcelTemplate$Config = Configuration
com.top_logic.base.office.excel.POIExcelTemplate$Config.tooltip = Configuration used to parse the Templates.
com.top_logic.base.office.excel.POIExcelTemplate$HorizontalAlign = Horizontal align
com.top_logic.base.office.excel.POIExcelTemplate$HorizontalAlign.tooltip = This enumeration defines all possible options which can be specified for horizontal alignments.
com.top_logic.base.office.excel.POIExcelTemplate$VerticalAlign = Vertical align
com.top_logic.base.office.excel.POIExcelTemplate$VerticalAlign.tooltip = This enumeration defines all possible options which can be specified for vertical alignments.
com.top_logic.base.office.excel.POIExcelTemplate.Config.max-columns-without-warning = Maximum columns without warning
com.top_logic.base.office.excel.POIExcelTemplate.Config.max-columns-without-warning.tooltip = Maximal number of rows to be contained in the <i>POI Excel template</i> without writing a warning in the logs when parsing the Excel-sheet.
com.top_logic.base.office.excel.POIExcelTemplate.Config.max-rows-without-warning = Maximum rows without warning
com.top_logic.base.office.excel.POIExcelTemplate.Config.max-rows-without-warning.tooltip = Maximal number of rows to be contained in the <i>POI Excel template</i> without writing a warning in the logs when parsing the Excel-sheet.
com.top_logic.base.office.excel.POIExcelTemplate.Config.show-all-column-warnings = Show all column warnings
com.top_logic.base.office.excel.POIExcelTemplate.Config.show-all-column-warnings.tooltip = Defines if a warning should be generated for each row which has to many columns.
com.top_logic.base.office.excel.POIExcelTemplate.HorizontalAlign.CENTER = Center
com.top_logic.base.office.excel.POIExcelTemplate.HorizontalAlign.CENTER.tooltip = Enumeration literal for aligning cell contents to the center.
com.top_logic.base.office.excel.POIExcelTemplate.HorizontalAlign.LEFT = Left
com.top_logic.base.office.excel.POIExcelTemplate.HorizontalAlign.LEFT.tooltip = Enumeration literal for aligning cell contents to the left.
com.top_logic.base.office.excel.POIExcelTemplate.HorizontalAlign.RIGHT = Right
com.top_logic.base.office.excel.POIExcelTemplate.HorizontalAlign.RIGHT.tooltip = Enumeration literal for aligning cell contents to the right.
com.top_logic.base.office.excel.POIExcelTemplate.VerticalAlign.BOTTOM = Bottom
com.top_logic.base.office.excel.POIExcelTemplate.VerticalAlign.BOTTOM.tooltip = Enumeration literal for aligning cell contents to the bottom.
com.top_logic.base.office.excel.POIExcelTemplate.VerticalAlign.CENTER = Center
com.top_logic.base.office.excel.POIExcelTemplate.VerticalAlign.CENTER.tooltip = Enumeration literal for aligning cell contents to the center.
com.top_logic.base.office.excel.POIExcelTemplate.VerticalAlign.TOP = Top
com.top_logic.base.office.excel.POIExcelTemplate.VerticalAlign.TOP.tooltip = Enumeration literal for aligning cell contents to the top.
com.top_logic.base.office.ppt.Powerpoint$GlobalConfig = Global configuration
com.top_logic.base.office.ppt.Powerpoint$GlobalConfig.tooltip = Global configuration options for <i>powerpoint</i>.
com.top_logic.base.office.ppt.Powerpoint.GlobalConfig.legacy-factory = Legacy factory
com.top_logic.base.office.ppt.Powerpoint.GlobalConfig.legacy-factory.tooltip = <i>Powerpoint factory</i> for the legacy format.
com.top_logic.base.office.ppt.Powerpoint.GlobalConfig.xml-factory = XML factory
com.top_logic.base.office.ppt.Powerpoint.GlobalConfig.xml-factory.tooltip = <i>Powerpoint factory</i> for the new XML format.
com.top_logic.base.office.style.TextOffset = Text offset
com.top_logic.base.office.style.TextOffset.DEFAULT = Default
com.top_logic.base.office.style.TextOffset.DEFAULT.tooltip = Use the default setting.
com.top_logic.base.office.style.TextOffset.NORMAL = Normal
com.top_logic.base.office.style.TextOffset.NORMAL.tooltip = No offset.
com.top_logic.base.office.style.TextOffset.SUB = Sub
com.top_logic.base.office.style.TextOffset.SUB.tooltip = Use sub-script.
com.top_logic.base.office.style.TextOffset.SUPER = Super
com.top_logic.base.office.style.TextOffset.SUPER.tooltip = Use super-script.
com.top_logic.base.office.style.TextOffset.tooltip = Text offset setting.
com.top_logic.base.office.style.Underline = Underline
com.top_logic.base.office.style.Underline.DEFAULT = Default
com.top_logic.base.office.style.Underline.DEFAULT.tooltip = Use the default setting.
com.top_logic.base.office.style.Underline.DOUBLE = Double
com.top_logic.base.office.style.Underline.DOUBLE.tooltip = Double underline.
com.top_logic.base.office.style.Underline.DOUBLE_ACCOUNTING = Double accounting
com.top_logic.base.office.style.Underline.DOUBLE_ACCOUNTING.tooltip = Double underline in accounting style.
com.top_logic.base.office.style.Underline.NONE = None
com.top_logic.base.office.style.Underline.NONE.tooltip = No underline.
com.top_logic.base.office.style.Underline.SINGLE = Single
com.top_logic.base.office.style.Underline.SINGLE.tooltip = Single underline.
com.top_logic.base.office.style.Underline.SINGLE_ACCOUNTING = Single accounting
com.top_logic.base.office.style.Underline.SINGLE_ACCOUNTING.tooltip = Single underline in accounting style.
com.top_logic.base.office.style.Underline.tooltip = An underline style.
com.top_logic.base.office.word.WordAccess = Word access
com.top_logic.base.office.word.WordAccess.tooltip = <i>Managed class</i> for access to MS-Word documents. This class provides high level methods for reading and writing Word files. High level means that values from Word can be read and written by passing maps. The maps are expected to be the following: <ul> <li>getValues(): <em>key</em>: The name of the field. <em>value</em>: The content of the field in the template.</li> <li>setValues(): <em>key</em>: The name of the field. <em>value</em>: The new content of the field.</li> </ul>
com.top_logic.base.security.SecurityConfiguration = Security configuration
com.top_logic.base.security.SecurityConfiguration.authorisation = Authorisation
com.top_logic.base.security.SecurityConfiguration.authorisation.tooltip = <i>Authorisation</i> instance of the application.
com.top_logic.base.security.SecurityConfiguration.layout = Layout
com.top_logic.base.security.SecurityConfiguration.layout.tooltip = Configuration holding security relevant settings for the layout.
com.top_logic.base.security.SecurityConfiguration.tooltip = Security relevant configurations for top logic.
com.top_logic.base.security.authorisation.symbols.file.FileAuthorisation = File authorisation
com.top_logic.base.security.authorisation.symbols.file.FileAuthorisation.Config.symbols = Symbols
com.top_logic.base.security.authorisation.symbols.file.FileAuthorisation.Config.symbols.tooltip = Defines the location where the symbols file may be found.
com.top_logic.base.security.authorisation.symbols.file.FileAuthorisation.tooltip = Implementation of the Authorisation used for File system access. The methods of this class can be used to access symbols information from a file defined in the "top-logic.xml".
com.top_logic.base.security.authorisation.symbols.file.FileSymbolFactory$Config = Configuration
com.top_logic.base.security.authorisation.symbols.file.FileSymbolFactory$Config.tooltip = <i>Configuration item</i> describing the structure of a symbols file.
com.top_logic.base.security.authorisation.symbols.file.FileSymbolFactory$SymbolConfig = Symbol configuration
com.top_logic.base.security.authorisation.symbols.file.FileSymbolFactory$SymbolConfig.tooltip = Configuration of a symbol.
com.top_logic.base.security.authorisation.symbols.file.FileSymbolFactory.Config.symbols = Symbols
com.top_logic.base.security.authorisation.symbols.file.FileSymbolFactory.Config.symbols.tooltip = List of symbol definitions.
com.top_logic.base.security.authorisation.symbols.file.FileSymbolFactory.SymbolConfig.allow = Allow
com.top_logic.base.security.authorisation.symbols.file.FileSymbolFactory.SymbolConfig.allow.tooltip = Comma separated list of ACL roles. User with such a role are allowed.
com.top_logic.base.security.authorisation.symbols.file.FileSymbolFactory.SymbolConfig.deny = Deny
com.top_logic.base.security.authorisation.symbols.file.FileSymbolFactory.SymbolConfig.deny.tooltip = Comma separated list of ACL roles. User with such a role are denied.
com.top_logic.base.security.device.AbstractAuthenticationAccessDevice = Authentication access device
com.top_logic.base.security.device.AbstractAuthenticationAccessDevice.tooltip = A SecurityDevice that is both, an PersonDataAccess and an AuthenticationDevice This is an abstract implementation for a SecurityDevice that is both, an PersonDataAccess and an AuthenticationDevice
com.top_logic.base.security.device.AbstractAuthenticationDevice = Authentication device
com.top_logic.base.security.device.AbstractAuthenticationDevice.tooltip = A SecurityDevice that is an AuthenticationDevice. This is an abstract implementation for an AuthenticationDevice Eases implementation of new AuthDevices as configuration access and stuff is already taken care of
com.top_logic.base.security.device.AbstractPersonDataAccessDevice = Person data access device
com.top_logic.base.security.device.AbstractPersonDataAccessDevice.tooltip = A SecurityDevice that is both, an PersonDataAccessDevice and a SecurityDevice. This is an abstract implementation for an PersonDataAccessDevice Eases implementation of new AuthDevices as configuration access and stuff is already taken care of
com.top_logic.base.security.device.AbstractSecurityDevice = Security device
com.top_logic.base.security.device.AbstractSecurityDevice.tooltip = This is an abstract implementation for a SecurityDevice Eases implementation of new AuthDevices as configuration access and stuff is already taken care of
com.top_logic.base.security.device.TLSecurityDeviceManager = Security device manager
com.top_logic.base.security.device.TLSecurityDeviceManager.Config.default-authentication = Default authentication
com.top_logic.base.security.device.TLSecurityDeviceManager.Config.default-authentication.tooltip = Name of the default authentication device. <p> Must either be a key of <i>Security devices</i>, or empty in case there is exactly one authentication device configured. </p>
com.top_logic.base.security.device.TLSecurityDeviceManager.Config.default-data-access = Default data access
com.top_logic.base.security.device.TLSecurityDeviceManager.Config.default-data-access.tooltip = Name of the default data access device. <p> Must either be a key of <i>Security devices</i>, or empty in case there is exactly one data access device configured. </p>
com.top_logic.base.security.device.TLSecurityDeviceManager.Config.security-devices = Security devices
com.top_logic.base.security.device.TLSecurityDeviceManager.Config.security-devices.tooltip = Configuration of all <i>security devices</i>.
com.top_logic.base.security.device.TLSecurityDeviceManager.tooltip = Provides access to all configured SecurityDevices without knowledge of device IDs. The TLSecurityDeviceManager provides all methods to access the configured SecurityDevices and to perform requests over all devices without explicitly knowing a specific device ID.
com.top_logic.base.security.device.db.DBAuthenticationAccessDevice = Database authentication access device
com.top_logic.base.security.device.db.DBAuthenticationAccessDevice.Config.initial-user-resources = Initial user resources
com.top_logic.base.security.device.db.DBAuthenticationAccessDevice.Config.initial-user-resources.tooltip = Name of the resource with initial users to load.
com.top_logic.base.security.device.db.DBAuthenticationAccessDevice.tooltip = AuthenticationDevice and PersonDataAccessDevice for the DBUserRepository. This implementation represents as well an AuthenticationDevice as an PersonDataAccessDevice for the <i>TopLogic</i> internal DBUserRepository Typically this class will be instantiated by the TLSecurityDeviceManager, which also has control of the number of created instances
com.top_logic.base.security.device.interfaces.AuthenticationDevice.AuthenticationDeviceConfig.allow-pwd-change = Allow pwd change
com.top_logic.base.security.device.interfaces.AuthenticationDevice.AuthenticationDeviceConfig.allow-pwd-change.tooltip = Whether this device enables the user to change his password within this system.
com.top_logic.base.security.device.interfaces.PersonDataAccessDevice.PersonDataAccessDeviceConfig.allow-ext-authentication = Allow ext authentication
com.top_logic.base.security.device.interfaces.PersonDataAccessDevice.PersonDataAccessDeviceConfig.allow-ext-authentication.tooltip = Whether users of this device may be granted access to the system trusting an external authentication system (such as authentication done by the servlet container).
com.top_logic.base.security.device.interfaces.PersonDataAccessDevice.PersonDataAccessDeviceConfig.read-only = Read only
com.top_logic.base.security.device.interfaces.PersonDataAccessDevice.PersonDataAccessDeviceConfig.read-only.tooltip = Whether this <i>person data access device</i> is read-only. <p> Data can only be updated by the system, if the device is not read-only. </p>
com.top_logic.base.security.device.interfaces.SecurityDevice$DeviceType = Device type
com.top_logic.base.security.device.interfaces.SecurityDevice$DeviceType.tooltip = Kind of authentication device.
com.top_logic.base.security.device.interfaces.SecurityDevice.DeviceType.AUTH = Auth
com.top_logic.base.security.device.interfaces.SecurityDevice.DeviceType.AUTH.tooltip = A <i>security device</i> for authentication only.
com.top_logic.base.security.device.interfaces.SecurityDevice.DeviceType.AUTH_WITH_DATA = Auth with data
com.top_logic.base.security.device.interfaces.SecurityDevice.DeviceType.AUTH_WITH_DATA.tooltip = A <i>security device</i> for authentication and user data.
com.top_logic.base.security.device.interfaces.SecurityDevice.DeviceType.DATA = Data
com.top_logic.base.security.device.interfaces.SecurityDevice.DeviceType.DATA.tooltip = A <i>security device</i> providing user data only.
com.top_logic.base.security.device.interfaces.SecurityDevice.DeviceType.DISABLED = Disabled
com.top_logic.base.security.device.interfaces.SecurityDevice.DeviceType.DISABLED.tooltip = A disabled <i>security device</i>.
com.top_logic.base.security.device.interfaces.SecurityDevice.SecurityDeviceConfig.disabled = Disabled
com.top_logic.base.security.device.interfaces.SecurityDevice.SecurityDeviceConfig.disabled.tooltip = Whether the configured <i>security device</i> is not active in the application.
com.top_logic.base.security.device.interfaces.SecurityDevice.SecurityDeviceConfig.domain = Domain
com.top_logic.base.security.device.interfaces.SecurityDevice.SecurityDeviceConfig.domain.tooltip = Domain name of the configured <i>security device</i>.
com.top_logic.base.security.device.interfaces.SecurityDevice.SecurityDeviceConfig.id = ID
com.top_logic.base.security.device.interfaces.SecurityDevice.SecurityDeviceConfig.id.tooltip = Id of the configured <i>security device</i>.
com.top_logic.base.security.device.interfaces.SecurityDevice.SecurityDeviceConfig.mappings = Mappings
com.top_logic.base.security.device.interfaces.SecurityDevice.SecurityDeviceConfig.mappings.tooltip = Property mappings.
com.top_logic.base.security.device.interfaces.SecurityDevice.SecurityDeviceConfig.type = Type
com.top_logic.base.security.device.interfaces.SecurityDevice.SecurityDeviceConfig.type.tooltip = <i>Device type</i> of the configured <i>security device</i>.
com.top_logic.base.security.device.ldap.LDAPAuthenticationAccessDevice = LDAP authentication access device
com.top_logic.base.security.device.ldap.LDAPAuthenticationAccessDevice.Config.access-service = Access service
com.top_logic.base.security.device.ldap.LDAPAuthenticationAccessDevice.Config.access-service.tooltip = Configuration of the <i>person LDAP access service</i> to delegate authentication check to.
com.top_logic.base.security.device.ldap.LDAPAuthenticationAccessDevice.tooltip = AuthenticationDevice and PersonDataAccessDevice against LDAP. This implementation represents as well an AuthenticationDevice as an PersonDataAccessDevice for and external UserRepository that can be accessed by the LDAP protocol Typically this class will be instantiated by the TLSecurityDeviceManager, which also has control of the number of created instances. NOTE: this device provides only read only access!
com.top_logic.base.security.password.PasswordManager = Password manager
com.top_logic.base.security.password.PasswordManager.Config.password-validator = Password validator
com.top_logic.base.security.password.PasswordManager.Config.password-validator.tooltip = The <i>password validator</i> to use.
com.top_logic.base.security.password.PasswordManager.tooltip = This manager is responsible for password changing / setting. It takes care of all operations neccessary for password changing, including encoding, the addition of the old password to the password history. This manager also provides access to the Passwordvalidator used to validate the new password
com.top_logic.base.security.password.PasswordValidator = Password validator
com.top_logic.base.security.password.PasswordValidator$ValidationResult = Validation result
com.top_logic.base.security.password.PasswordValidator$ValidationResult.tooltip = Potential results of password validation.
com.top_logic.base.security.password.PasswordValidator.Config.criteria-count = Criteria count
com.top_logic.base.security.password.PasswordValidator.Config.criteria-count.tooltip = The number of password criteria a user password must match. <p> There are 4 content criteria defined. </p>
com.top_logic.base.security.password.PasswordValidator.Config.enabled = Enabled
com.top_logic.base.security.password.PasswordValidator.Config.enabled.tooltip = Whether validation is enabled. <p> All passwords are OK, if validation is disabled. </p>
com.top_logic.base.security.password.PasswordValidator.Config.exclude-uids = Exclude user IDs
com.top_logic.base.security.password.PasswordValidator.Config.exclude-uids.tooltip = Comma separated list of login IDs that are excluded from password validation. <p> Note: Using this options breaks password security. </p>
com.top_logic.base.security.password.PasswordValidator.Config.expiry-period = Expiry period
com.top_logic.base.security.password.PasswordValidator.Config.expiry-period.tooltip = Password expiry period in days. <p> A password will expire after the given number of days. A value of zero means no expiry at all. </p>
com.top_logic.base.security.password.PasswordValidator.Config.min-password-length = Minimum password length
com.top_logic.base.security.password.PasswordValidator.Config.min-password-length.tooltip = The minimum number of characters in a password.
com.top_logic.base.security.password.PasswordValidator.Config.repeat-cycle = Repeat cycle
com.top_logic.base.security.password.PasswordValidator.Config.repeat-cycle.tooltip = Restricts the reuse of passwords. <p> A password must not be reused for the given number of password changes. A value of zero means not to to restrict password reuse. </p>
com.top_logic.base.security.password.PasswordValidator.ValidationResult.CONTENT_INVALID = Content invalid
com.top_logic.base.security.password.PasswordValidator.ValidationResult.CONTENT_INVALID.tooltip = The password does not comply with all requirements.
com.top_logic.base.security.password.PasswordValidator.ValidationResult.OK = Ok
com.top_logic.base.security.password.PasswordValidator.ValidationResult.OK.tooltip = The password matches all requirements.
com.top_logic.base.security.password.PasswordValidator.ValidationResult.TO_SHORT = To short
com.top_logic.base.security.password.PasswordValidator.ValidationResult.TO_SHORT.tooltip = The password is to short.
com.top_logic.base.security.password.PasswordValidator.ValidationResult.USED_BEFORE = Used before
com.top_logic.base.security.password.PasswordValidator.ValidationResult.USED_BEFORE.tooltip = The password was used before and must not be reused.
com.top_logic.base.security.password.PasswordValidator.tooltip = This class implements the a password policy. The individual parameters can be configured. This is the class used for validating the passwords
com.top_logic.base.security.password.hashing.Argon2Hashing = Argon2hashing
com.top_logic.base.security.password.hashing.Argon2Hashing$Argon2Type = Argon2type
com.top_logic.base.security.password.hashing.Argon2Hashing$Argon2Type.tooltip = Type of Argon2 algorithm.
com.top_logic.base.security.password.hashing.Argon2Hashing.Argon2Type.ARGON2D = Argon2d
com.top_logic.base.security.password.hashing.Argon2Hashing.Argon2Type.ARGON2D.tooltip = <i>Argon2d</i> provides the highest resistance against GPU cracking attacks
com.top_logic.base.security.password.hashing.Argon2Hashing.Argon2Type.ARGON2I = Argon2i
com.top_logic.base.security.password.hashing.Argon2Hashing.Argon2Type.ARGON2I.tooltip = <i>Argon2i</i> is designed to resist side-channel attacks.
com.top_logic.base.security.password.hashing.Argon2Hashing.Argon2Type.ARGON2ID = Argon2id
com.top_logic.base.security.password.hashing.Argon2Hashing.Argon2Type.ARGON2ID.tooltip = <i>Argon2d</i> is a hybrid of <i>argon2i</i> and <i>argon2d</i>.
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.hash-size = Hash size
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.hash-size.tooltip = Hash output length to in bytes.
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.iterations = Iterations
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.iterations.tooltip = The number of iterations
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.memory = Memory
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.memory.tooltip = The memory usage in KiB.
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.parallelism = Parallelism
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.parallelism.tooltip = The parallelism to use during hash computation.
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.pepper = Pepper
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.pepper.tooltip = A value that is included into the computation of the hash, but is not contained in the hash, i.e. a hash constructed with configuration "pepper1" can not be verified with configuration "pepper2". <p> <b>WARNING:</b> After changing the pepper, all formerly created hash values are invalid. </p>
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.salt-size = Salt size
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.salt-size.tooltip = Salt length in bytes.
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.type = Type
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.type.tooltip = The type of algorithm to use.
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.version = Version
com.top_logic.base.security.password.hashing.Argon2Hashing.Config.version.tooltip = Version of Argon2.
com.top_logic.base.security.password.hashing.Argon2Hashing.tooltip = <i>Password hashing algorithm</i> based on Argon2. <p> The created hash contains (almost) all configuration informations, such that the hash created with one configuration can be verified with an <i>argon2hashing</i> with different configuration. </p> <p> See: https://github.com/P-H-C/phc-winner-argon2 </p>
com.top_logic.base.security.password.hashing.PasswordHashingService = Password hashing service
com.top_logic.base.security.password.hashing.PasswordHashingService$PasswordHashingAlgorithmConfig = Password hashing algorithm configuration
com.top_logic.base.security.password.hashing.PasswordHashingService$PasswordHashingAlgorithmConfig.tooltip = Named configuration of <i>password hashing algorithm</i>.
com.top_logic.base.security.password.hashing.PasswordHashingService.Config.algorithms = Algorithms
com.top_logic.base.security.password.hashing.PasswordHashingService.Config.algorithms.tooltip = Known <i>password hashing algorithm</i>.
com.top_logic.base.security.password.hashing.PasswordHashingService.Config.automatic-rehash = Automatic rehash
com.top_logic.base.security.password.hashing.PasswordHashingService.Config.automatic-rehash.tooltip = Whether hash values which are not created with the default algorithm must be converted automatically.
com.top_logic.base.security.password.hashing.PasswordHashingService.Config.default-algorithm = Default algorithm
com.top_logic.base.security.password.hashing.PasswordHashingService.Config.default-algorithm.tooltip = Name of the default hashing algorithm.
com.top_logic.base.security.password.hashing.PasswordHashingService.PasswordHashingAlgorithmConfig.implementation = Implementation
com.top_logic.base.security.password.hashing.PasswordHashingService.PasswordHashingAlgorithmConfig.implementation.tooltip = The actual <i>password hashing algorithm</i>.
com.top_logic.base.security.password.hashing.PasswordHashingService.tooltip = Service to create and verify a password hash using configured <i>password hashing algorithm</i>.
com.top_logic.base.security.util.DefaultSignatureService = Default signature service
com.top_logic.base.security.util.DefaultSignatureService.tooltip = <i>Signature service</i> based on a well-known public/private key pair.
com.top_logic.base.security.util.SignatureService = Signature service
com.top_logic.base.security.util.SignatureService.Config.encoding = Encoding
com.top_logic.base.security.util.SignatureService.Config.encoding.tooltip = Encoding for the signature.
com.top_logic.base.security.util.SignatureService.tooltip = Service to create and verify signatures.
com.top_logic.base.services.CurrencySystem = Currency system
com.top_logic.base.services.CurrencySystem.Config.known-codes = Known codes
com.top_logic.base.services.CurrencySystem.Config.known-codes.tooltip = All known currency codes.
com.top_logic.base.services.CurrencySystem.Config.system-currency = System currency
com.top_logic.base.services.CurrencySystem.Config.system-currency.tooltip = String representation of the system currency.
com.top_logic.base.services.CurrencySystem.tooltip = The class <i>currency system</i> initializes and creates the currencies in a <i>TopLogic</i> system.
com.top_logic.base.services.InitialGroupManager = Initial group manager
com.top_logic.base.services.InitialGroupManager$Config$GroupConfig = Group configuration
com.top_logic.base.services.InitialGroupManager$Config$GroupConfig.tooltip = Definition of a group.
com.top_logic.base.services.InitialGroupManager.Config.GroupConfig.name = Name
com.top_logic.base.services.InitialGroupManager.Config.GroupConfig.name.tooltip = Name of the group to create.
com.top_logic.base.services.InitialGroupManager.Config.default-group = Default group
com.top_logic.base.services.InitialGroupManager.Config.default-group.tooltip = Name of the group all persons have. <p> If the "default group" is empty, then there is no group which all persons have. </p>
com.top_logic.base.services.InitialGroupManager.Config.groups = Groups
com.top_logic.base.services.InitialGroupManager.Config.groups.tooltip = Groups to bring to existence during startup.
com.top_logic.base.services.InitialGroupManager.tooltip = The <i>initial group manager</i> installs groups and roles for the application: <p> It ensures that for each existing user there is a representative group. </p>
com.top_logic.base.services.SearchFactory = Search factory
com.top_logic.base.services.SearchFactory.Config.search-engines = Search engines
com.top_logic.base.services.SearchFactory.Config.search-engines.tooltip = All <i>search engine</i> that can be used.
com.top_logic.base.services.SearchFactory.tooltip = The class <i>search factory</i> provides the <i>search service</i>.
com.top_logic.base.services.simpleajax.AJAX = Ajax
com.top_logic.base.services.simpleajax.AJAX.progressBarDelay = Progress bar delay
com.top_logic.base.services.simpleajax.AJAX.progressBarDelay.tooltip = Time in milliseconds that is waited before the progress bar in the button area is automatically displayed.
com.top_logic.base.services.simpleajax.AJAX.tooltip = Configuration for AJAX.
com.top_logic.base.services.simpleajax.AJAX.useWaitPaneInFormula = Use wait pane in formula
com.top_logic.base.services.simpleajax.AJAX.useWaitPaneInFormula.tooltip = Whether the wait pane is automatically displayed when a user action is made in a form.
com.top_logic.base.services.simpleajax.AJAX.waitPaneDelay = Wait pane delay
com.top_logic.base.services.simpleajax.AJAX.waitPaneDelay.tooltip = Time in milliseconds that is waited before the wait pane is automatically displayed.
com.top_logic.base.services.simpleajax.AJAXCommandHandler = AJAX command handler
com.top_logic.base.services.simpleajax.AJAXCommandHandler.Config.concurrent = Concurrent
com.top_logic.base.services.simpleajax.AJAXCommandHandler.Config.read-only = Read only
com.top_logic.base.services.simpleajax.AJAXCommandHandler.tooltip = Abstract base class of all commands that process service requests sent from the browser client via asynchronous HTTP request. <p> An <i>AJAX command handler</i> must be registered at a parent <i>component</i> and is executed in the context of that component. The dispatch of finding a matching <i>AJAX command handler</i> for an incoming request is handled by the <i>AJAX servlet</i>. </p>
com.top_logic.base.services.simpleajax.AJAXServlet$AJAXLogHandler = AJAX log handler
com.top_logic.base.services.simpleajax.AJAXServlet$AJAXLogHandler.tooltip = A special AJAX-command to propagate client / java-script errors to the server.
com.top_logic.base.services.simpleajax.AJAXServlet$Config = Configuration
com.top_logic.base.services.simpleajax.AJAXServlet$Config.tooltip = Configuration for <i>AJAX servlet</i>.
com.top_logic.base.services.simpleajax.AbstractSystemAjaxCommand = System ajax command
com.top_logic.base.services.simpleajax.AbstractSystemAjaxCommand.tooltip = <i>AJAX command handler</i> with system command group.
com.top_logic.base.services.simpleajax.DefaultRequestLockFactory = Default request lock factory
com.top_logic.base.services.simpleajax.DefaultRequestLockFactory.Config.seed-limit = Seed limit
com.top_logic.base.services.simpleajax.DefaultRequestLockFactory.Config.seed-limit.tooltip = Limit to the maximum initial random request number value. <p> The initial request number of a <i>request lock</i> created by this factory is guaranteed not to be greater or equal to this value. </p>
com.top_logic.base.services.simpleajax.DefaultRequestLockFactory.tooltip = Default implementation of <i>request lock factory</i> using global settings.
com.top_logic.base.services.simpleajax.NothingCommand = Nothing command
com.top_logic.base.services.simpleajax.NothingCommand.tooltip = The class <i>nothing command</i> is useful to force an AJAX request.
com.top_logic.base.services.simpleajax.RequestLockFactory = Request lock factory
com.top_logic.base.services.simpleajax.RequestLockFactory.tooltip = Factory creating <i>request lock</i> instances during user logins / subsession creations.
com.top_logic.base.time.BusinessYearConfiguration$Config = Configuration
com.top_logic.base.time.BusinessYearConfiguration$Config.tooltip = Configuration for <i>business year configuration</i>.
com.top_logic.base.time.BusinessYearConfiguration.Config.beginDay = Begin day
com.top_logic.base.time.BusinessYearConfiguration.Config.beginDay.tooltip = Getter for <code>"beginDay"</code>.
com.top_logic.base.time.BusinessYearConfiguration.Config.beginMonth = Begin month
com.top_logic.base.time.BusinessYearConfiguration.Config.beginMonth.tooltip = Getter for <code>"beginMonth"</code>.
com.top_logic.base.time.TimeRangeService = Time range service
com.top_logic.base.time.TimeRangeService$RangeConfig = Range configuration
com.top_logic.base.time.TimeRangeService$RangeConfig.tooltip = Configuration for a time range.
com.top_logic.base.time.TimeRangeService.Config.ranges = Ranges
com.top_logic.base.time.TimeRangeService.Config.ranges.tooltip = Getter for time ranges.
com.top_logic.base.time.TimeRangeService.RangeConfig.implementation = Implementation
com.top_logic.base.time.TimeRangeService.RangeConfig.implementation.tooltip = Getter for <code>"implementation"</code>.
com.top_logic.base.time.TimeRangeService.tooltip = A service managing <i>time range iterators</i>.
com.top_logic.common.folder.AbstractFolderTreeBuilder = Folder tree builder
com.top_logic.common.folder.AbstractFolderTreeBuilder.Config.fileFilter = File filter
com.top_logic.common.folder.AbstractFolderTreeBuilder.Config.fileFilter.tooltip = Only files accepted by this filter will are added to the tree. <p> Folders are not filtered, only files. </p>
com.top_logic.common.folder.AbstractFolderTreeBuilder.tooltip = <i>Tree builder</i> for <i>folder node</i>.
com.top_logic.common.folder.FolderTreeBuilder = Folder tree builder
com.top_logic.common.folder.FolderTreeBuilder.tooltip = TreeBuilder to wrap a FolderDefinition in a tree.
com.top_logic.common.folder.ui.FolderComponent = Folder component
com.top_logic.common.folder.ui.FolderComponent$UIOptions = UI options
com.top_logic.common.folder.ui.FolderComponent$UIOptions.tooltip = In-app customizable options of a <i>folder component</i>.
com.top_logic.common.folder.ui.FolderComponent.Config.columns = Columns
com.top_logic.common.folder.ui.FolderComponent.Config.columns.tooltip = The columns to display.
com.top_logic.common.folder.ui.FolderComponent.Config.treeBuilder = Tree builder
com.top_logic.common.folder.ui.FolderComponent.Config.treeBuilder.tooltip = The <i>tree builder</i> is used to create a tree of <i>folder node</i> objects.
com.top_logic.common.folder.ui.FolderComponent.UIOptions.analyzeDocuments = Analyze documents
com.top_logic.common.folder.ui.FolderComponent.UIOptions.analyzeDocuments.tooltip = Whether documents should be indexed and compared by keywords. <p> The document analysis service hast to be configured also to provide this functionality. </p>
com.top_logic.common.folder.ui.FolderComponent.UIOptions.deleteDocuments = Delete documents
com.top_logic.common.folder.ui.FolderComponent.UIOptions.deleteDocuments.tooltip = Whether a document can be deleted. <p> For a user to delete a document, additional permissions might be required. </p>
com.top_logic.common.folder.ui.FolderComponent.UIOptions.hasClipboardCommand = Use clipboard
com.top_logic.common.folder.ui.FolderComponent.UIOptions.hasClipboardCommand.tooltip = Whether clip-board management buttons for documents should be available.
com.top_logic.common.folder.ui.FolderComponent.UIOptions.hasNewFolderCommand = Sub-folders
com.top_logic.common.folder.ui.FolderComponent.UIOptions.hasNewFolderCommand.tooltip = Whether a button is displayed that allow to create sub-folders.
com.top_logic.common.folder.ui.FolderComponent.UIOptions.hasZipDownloadCommand = ZIP download
com.top_logic.common.folder.ui.FolderComponent.UIOptions.hasZipDownloadCommand.tooltip = Whether the folder can be downloaded as ZIP archive.
com.top_logic.common.folder.ui.FolderComponent.UIOptions.sendDocuments = Send documents
com.top_logic.common.folder.ui.FolderComponent.UIOptions.sendDocuments.tooltip = Whether documents can be sent by e-mail. <p> The mail sender service has to be configured also to provide this functionality. </p>
com.top_logic.common.folder.ui.FolderComponent.UIOptions.updateDocuments = Update documents
com.top_logic.common.folder.ui.FolderComponent.UIOptions.updateDocuments.tooltip = Whether a document can be updated with a new version. <p> For a user to modify a document, additional permissions might be required. </p>
com.top_logic.common.folder.ui.commands.Icons.REMOVE_NODE = Image to delete a folder entry.
com.top_logic.common.folder.ui.commands.Icons.REMOVE_NODE_DISABLED = Disabled image to delete a folder entry.
com.top_logic.common.webfolder.model.DemoWebFolderModelBuilder = Demo web folder model builder
com.top_logic.common.webfolder.model.DemoWebFolderModelBuilder.Config.folderID = Folder ID
com.top_logic.common.webfolder.model.DemoWebFolderModelBuilder.tooltip = Demo model builder for a <i>web folder component</i> using a configured web folder.
com.top_logic.common.webfolder.model.WebFolderTreeBuilder = Web folder tree builder
com.top_logic.common.webfolder.model.WebFolderTreeBuilder.tooltip = <i>Tree builder</i> for <i>container object</i>/<i>web folder</i> object hierarchies.
com.top_logic.common.webfolder.ui.WebFolderComponent = Web folder component
com.top_logic.common.webfolder.ui.WebFolderComponent$UIOptions = UI options
com.top_logic.common.webfolder.ui.WebFolderComponent$UIOptions.tooltip = In-app customizable options for <i>web folder component</i>.
com.top_logic.common.webfolder.ui.WebFolderComponent.Config.manual-locking = Manual locking
com.top_logic.common.webfolder.ui.WebFolderComponent.UIOptions.hasUploadCommand = Upload documents
com.top_logic.common.webfolder.ui.WebFolderComponent.UIOptions.hasUploadCommand.tooltip = Whether new documents can be uploaded by the user into the displayed folder.
com.top_logic.common.webfolder.ui.WebFolderComponent.UIOptions.max-upload-size = Maximum upload size
com.top_logic.common.webfolder.ui.WebFolderComponent.UIOptions.max-upload-size.tooltip = The maximum size of a single document. <p> A value of <code>0</code> means that that the application-wide default applies. </p>
com.top_logic.common.webfolder.ui.WebFolderComponent.tooltip = FolderComponent to display a WebFolder.
com.top_logic.common.webfolder.ui.WebFolderNameRenderer = Web folder name renderer
com.top_logic.common.webfolder.ui.WebFolderNameRenderer.tooltip = <i>Renderer</i> for the name column showing a link icon for linked content.
com.top_logic.common.webfolder.ui.WebFolderUIFactory = Web folder UI factory
com.top_logic.common.webfolder.ui.WebFolderUIFactory.Config.breadcrumb-renderer = Breadcrumb renderer
com.top_logic.common.webfolder.ui.WebFolderUIFactory.Config.breadcrumb-renderer.tooltip = The <i>breadcrumb renderer</i> that will render the breadcrumb of web-folders.
com.top_logic.common.webfolder.ui.WebFolderUIFactory.Config.manual-locking = Manual locking
com.top_logic.common.webfolder.ui.WebFolderUIFactory.Config.max-upload-size = Maximum upload size
com.top_logic.common.webfolder.ui.WebFolderUIFactory.Config.max-upload-size.tooltip = Maximum size of a single file that can be uploaded. A value of <code>0</code> means that there is no limit.
com.top_logic.common.webfolder.ui.WebFolderUIFactory.Config.provide-zip-download = Provide zip download
com.top_logic.common.webfolder.ui.WebFolderUIFactory.Config.zip-download-file-name-provider = Zip download file name provider
com.top_logic.common.webfolder.ui.WebFolderUIFactory.Config.zip-download-size-limit = Zip download size limit
com.top_logic.common.webfolder.ui.WebFolderUIFactory.Config.zip-folder-name-provider = Zip folder name provider
com.top_logic.common.webfolder.ui.WebFolderUIFactory.tooltip = The WebFolderUIFactory provides methods to create stuff for displaying a WebFolder <i>web folder</i>.
com.top_logic.common.webfolder.ui.clipboard.ClipboardDialog$ClearClipboardCommand = Clear clipboard command
com.top_logic.common.webfolder.ui.clipboard.Icons.ADD_CLIPBOARD = Image to create a new clipboard entry.
com.top_logic.common.webfolder.ui.clipboard.Icons.ADD_CLIPBOARD_DISABLED = Disabled image to create a new clipboard entry.
com.top_logic.common.webfolder.ui.clipboard.Icons.CLIPBOARD = Image to create a new clipboard.
com.top_logic.common.webfolder.ui.clipboard.Icons.CLIPBOARD_DISABLED = Disabled image to create a new clipboard
com.top_logic.common.webfolder.ui.clipboard.Icons.REMOVE_CLIPBOARD = Image to remove a clipboard entry.
com.top_logic.common.webfolder.ui.clipboard.ShowClipboardCommandHandler = Show clipboard command handler
com.top_logic.common.webfolder.ui.clipboard.ShowClipboardCommandHandler.tooltip = A <i>command handler</i> to display the <i>clipboard dialog</i> without a <i>web folder</i>, e.g. on a grid or another dialog. The working is the same as that of <i>clipboard executable</i>. Icons are also the same as the ones defined there. To ensure that the clipboard can always be displayed this command is an <i>system command</i>.
com.top_logic.common.webfolder.ui.commands.Icons.DOC_COMMIT = Image to update a document.
com.top_logic.common.webfolder.ui.commands.Icons.DOC_COMMIT_DISABLED = Disabled image to update a document.
com.top_logic.common.webfolder.ui.commands.Icons.DOWNLOAD_FOLDER = Image to create a zip download folder.
com.top_logic.common.webfolder.ui.commands.Icons.DOWNLOAD_FOLDER_DISABLED = Disabled image to create a zip download folder.
com.top_logic.common.webfolder.ui.commands.Icons.NEW_FOLDER = Image to create a new folder.
com.top_logic.common.webfolder.ui.commands.Icons.NEW_FOLDER_DISABLED = Disabled image to create a new folder.
com.top_logic.common.webfolder.ui.commands.Icons.UPLOAD = Image to upload a document.
com.top_logic.common.webfolder.ui.commands.Icons.UPLOAD_DISABLED = Disabled image to upload a document.
com.top_logic.common.webfolder.ui.commands.VersionDialog$Config = Configuration
com.top_logic.common.webfolder.ui.commands.VersionDialog$Config.tooltip = Global configuration of <i>version dialog</i>.
com.top_logic.common.webfolder.ui.commands.VersionDialog.Config.columns = Columns
com.top_logic.common.webfolder.ui.commands.VersionDialog.Config.columns.tooltip = The columns to display in the <i>version dialog</i>.
com.top_logic.common.webfolder.ui.keywords.Icons.KEYWORDS = Image to show the document keywords.
com.top_logic.common.webfolder.ui.keywords.Icons.KEYWORDS_DISABLED = Disabled image to show the document keywords.
com.top_logic.common.webfolder.ui.mail.Icons.MAIL_FORWARD_16 = Image to send this document via mail.
com.top_logic.common.webfolder.ui.mail.Icons.MAIL_FORWARD_DISABLED_16 = Disabled image to send this document via mail.
com.top_logic.common.webfolder.ui.similar.Icons.SIMILAR_OBJECTS = Image to display similar documents.
com.top_logic.common.webfolder.ui.similar.Icons.SIMILAR_OBJECTS_DISABLED = Disabled image to display similar documents.
com.top_logic.event.bus.AbstractReceiver = Receiver
com.top_logic.event.bus.AbstractReceiver.Config.service-name = Service name
com.top_logic.event.bus.AbstractReceiver.Config.service-name.tooltip = Name of the service.
com.top_logic.event.bus.AbstractReceiver.Config.service-namespace = Service namespace
com.top_logic.event.bus.AbstractReceiver.Config.service-namespace.tooltip = Namespace for the service.
com.top_logic.event.bus.AbstractReceiver.tooltip = This class provides the functionality for receiving classes to get a certain service and to be added to the bus. The interface' subscribe()-method is called by Receiver objects to be connected to specified services by the bus.
com.top_logic.event.bus.Gateway.Config.service-name.tooltip = Name of the service.
com.top_logic.event.bus.Gateway.Config.service-namespace.tooltip = Namespace for the service.
com.top_logic.event.infoservice.DefaultInfoServiceItem.closeButton = Writes the button that closes the information dialog.
com.top_logic.event.infoservice.DefaultInfoServiceItem.currentDateTime = Writes the date and time when this message was created.
com.top_logic.event.infoservice.DefaultInfoServiceItem.hasMessageIcon = If there is no icon, the header is not displayed.
com.top_logic.event.infoservice.DefaultInfoServiceItem.header = Writes the title.
com.top_logic.event.infoservice.DefaultInfoServiceItem.isErrorOrWarning = Only for warning and error messages, the time of the message should be specified.
com.top_logic.event.infoservice.DefaultInfoServiceItem.message = Writes the message.
com.top_logic.event.infoservice.DefaultInfoServiceItem.messageBoxClasses = Returns the individual classes for the different types of messages.
com.top_logic.event.infoservice.DefaultInfoServiceItem.messageBoxID = Returns the ID.
com.top_logic.event.infoservice.DefaultInfoServiceItem.messageIcon = Writes the existing error, warning or information icon.
com.top_logic.event.infoservice.Icons.INFO_SERVICE_ITEM_TEMPLATE = Template for displaying a message container in the application. These messages can be either errors, warnings or information.
com.top_logic.event.infoservice.Icons.INFO_SERVICE_MESSAGE_TEMPLATE = Template for displaying the inner message of the INFO_SERVICE_ITEM_TEMPLATE.
com.top_logic.event.infoservice.InfoService$Config = Configuration
com.top_logic.event.infoservice.InfoService$Config.tooltip = Configuration for the <i>info service</i>
com.top_logic.event.infoservice.InfoService.Config.fade-out-timer-seconds = Fade out timer seconds
com.top_logic.event.infoservice.InfoService.Config.fade-out-timer-seconds.tooltip = Seconds, until info service will be fade out, if it has not been pinned.
com.top_logic.event.infoservice.InfoServiceItemMessageFragment.detailsHeader = Writes the header of the details.
com.top_logic.event.infoservice.InfoServiceItemMessageFragment.detailsMessage = Writes the detailed message.
com.top_logic.event.infoservice.InfoServiceItemMessageFragment.doesDetailsExist = Checks whether a detailed message is available.
com.top_logic.event.infoservice.InfoServiceItemMessageFragment.summaryMessage = Writes a summary of the message, if it exists.
com.top_logic.event.layout.ConfigureLogEntriesCommandHandler = Configure log entries command handler
com.top_logic.event.layout.ConfigureLogEntriesComponent = Configure log entries component
com.top_logic.event.layout.LogEntryFilterComponent = Log entry filter component
com.top_logic.event.layout.LogEntryFilterComponent$UpdateLogEntriesCommandHandler = Update log entries command handler
com.top_logic.event.layout.LogEntryFilterComponent$UpdateLogEntriesCommandHandler.tooltip = The UpdateStatusReportCommandHandler updates the component.
com.top_logic.event.layout.LogEntryFilterComponent.Config.allowedEventGroups = Allowed event groups
com.top_logic.event.layout.LogEntryFilterComponent.Config.tableName = Table name
com.top_logic.event.layout.LogEntryFilterComponent.tooltip = <i>Component</i> displaying a filter for <i>log entry</i> elements.
com.top_logic.event.layout.ToggleAllCommand = Toggle all command
com.top_logic.event.layout.ToggleCommand = Toggle command
com.top_logic.event.layout.ToggleCommand.Config.form-group-name = Form group name
com.top_logic.event.layout.ToggleCommand.Config.value = Value
com.top_logic.event.layout.ToggleCommand.tooltip = <i>Command handler</i> switching all <i>boolean fields</i> in a specified <i>form group</i> on or off.
com.top_logic.event.logEntry.DayEntryArchiverTask = Day entry archiver task
com.top_logic.event.logEntry.DayEntryArchiverTask.Config.commit-interval = Commit interval
com.top_logic.event.logEntry.DayEntryArchiverTask.Config.commit-interval.tooltip = Number of <i>user day entry</i> to process in each commit.
com.top_logic.event.logEntry.DayEntryArchiverTask.tooltip = A Task that condensesUserDayEntries to ArchiveUserDayEntries. UserDayEntry are based on (a potentially large number) of KAs which are replaced by the ArchiveUserDayEntry.
com.top_logic.event.logEntry.DayEntryCleanupTask = Day entry cleanup task
com.top_logic.event.logEntry.DayEntryCleanupTask.Config.archive-period = Archive period
com.top_logic.event.logEntry.DayEntryCleanupTask.Config.archive-period.tooltip = Period of time. entries older than this will be deleted. 0 deactivates deletion.
com.top_logic.event.logEntry.DayEntryCleanupTask.tooltip = This Task deletes <i>archive user day entrys</i> and referenced <i>log entrys</i> that exceed a configurable storing period.
com.top_logic.event.logEntry.LogEntryConfiguration = Log entry configuration
com.top_logic.event.logEntry.LogEntryConfiguration$ObjectType = Object type
com.top_logic.event.logEntry.LogEntryConfiguration$ObjectType.tooltip = Configuration of the known object type.
com.top_logic.event.logEntry.LogEntryConfiguration.Config.object-types = Object types
com.top_logic.event.logEntry.LogEntryConfiguration.Config.object-types.tooltip = All known <i>object type</i> indexed by their name.
com.top_logic.event.logEntry.LogEntryConfiguration.ObjectType.display-group = Display group
com.top_logic.event.logEntry.LogEntryConfiguration.ObjectType.display-group.tooltip = Name of the display group to include this objectType.
com.top_logic.event.logEntry.LogEntryConfiguration.ObjectType.event-types = Event types
com.top_logic.event.logEntry.LogEntryConfiguration.ObjectType.event-types.tooltip = Event types for which events may be displayed.
com.top_logic.event.logEntry.LogEntryConfiguration.ObjectType.name.tooltip = Name of the object type to display <i>log entry</i> for.
com.top_logic.event.logEntry.LogEntryConfiguration.tooltip = Service for configuring <i>monitor events</i>. <p> The <i>log entry configuration</i> is used to configure </p> <ul> <li>what kind of <i>monitor events</i> sent by the <i>model tracking service</i> are made persistent within the <i>log entry receiver</i>.</li> <li>the string message key a <i>log entry</i> holds.</li> <li>the grouping of different types of <i>log entrys</i> to a <i>log entry display group</i>. In <i>configure log entries component</i>, the user can choose which of these groups should be displayed in his context.</li> </ul> <pre> &lt;object-types&gt; &lt;object-type name="projectElement.Project" display-group="Project" event-types="created,deleted,modified" /&gt; &lt;/object-types&gt; </pre>
com.top_logic.event.logEntry.LogEntryReceiver = Log entry receiver
com.top_logic.event.logEntry.LogEntryReceiver.Config.service-name.tooltip = Name of the service.
com.top_logic.event.logEntry.LogEntryReceiver.Config.service-namespace.tooltip = Namespace for the service.
com.top_logic.event.logEntry.LogEntryReceiver.tooltip = This class is responsible for receiving events and persisting them as <i>log entrys</i> if necessary.
com.top_logic.event.logEntry.UserDayEntryManager$Config = Configuration
com.top_logic.event.logEntry.UserDayEntryManager$Config.tooltip = Configuration for <i>user day entry manager</i>.
com.top_logic.event.logEntry.UserDayEntryManager.Config.duplicateInterval = Duplicate interval
com.top_logic.event.logEntry.UserDayEntryManager.Config.duplicateInterval.tooltip = Getter for <code>"duplicateInterval"</code>.
com.top_logic.gui.JSFileCompiler = JavaScript file compiler
com.top_logic.gui.JSFileCompiler.Config.additional-files = Additional files
com.top_logic.gui.JSFileCompiler.Config.additional-files.tooltip = Additional JavaScript files which are not included into the compiled file.
com.top_logic.gui.JSFileCompiler.Config.original-names = Original names
com.top_logic.gui.JSFileCompiler.Config.original-names.tooltip = Do not use single stripped results but the original ones , use for debugging (the smaller files) only.
com.top_logic.gui.JSFileCompiler.Config.strip-file = Strip file
com.top_logic.gui.JSFileCompiler.Config.strip-file.tooltip = Whether the files shall be stripped
com.top_logic.gui.JSFileCompiler.tooltip = Compile (most) TopLogic JS-Files into one big file.
com.top_logic.gui.MultiThemeFactory = Multiple theme factory
com.top_logic.gui.MultiThemeFactory.Config.default-theme = Default theme
com.top_logic.gui.MultiThemeFactory.Config.default-theme.tooltip = <i>ID</i> (<i>theme configuration</i>) of the <i>theme</i> a user gets by default.
com.top_logic.gui.MultiThemeFactory.tooltip = An implementation of a ThemeFactory, which is capable of handling multiple themes. The standard method to get the currently valid theme for a user is to lookup the information stored in the user context.
com.top_logic.gui.ScriptResourceDeclaration = Script resource declaration
com.top_logic.gui.ScriptResourceDeclaration.tooltip = Resource which uses the <code>script</code> tag to embed a javascript file.
com.top_logic.gui.ScriptResourceDeclaration.type = Type
com.top_logic.gui.ScriptResourceDeclaration.type.tooltip = Specifies the type of the script resource. <p> When using native javascript modules with export and import the type have to be <code>module</code>. </p>
com.top_logic.gui.ThemeFactory = Theme factory
com.top_logic.gui.ThemeFactory.Config.is-deployed = Is deployed
com.top_logic.gui.ThemeFactory.Config.is-deployed.tooltip = Flag if we are in a deployed state (= styles where pre-created)
com.top_logic.gui.ThemeFactory.tooltip = Registry of <i>themes</i>.
com.top_logic.gui.ThemeNaming$Name = Name
com.top_logic.gui.ThemeNaming$Name.tooltip = <i>Model name</i> of a <i>theme</i>, used by the <i>theme naming</i>.
com.top_logic.gui.ThemeNaming.Name.theme-id = Theme ID
com.top_logic.gui.ThemeNaming.Name.theme-id.tooltip = The ID of the referenced <i>theme</i>.
com.top_logic.gui.config.ConfigState = Configuration state
com.top_logic.gui.config.ConfigState.DISABLED = Disabled
com.top_logic.gui.config.ConfigState.DISABLED.tooltip = Cannot be chosen by the user.
com.top_logic.gui.config.ConfigState.ENABLED = Enabled
com.top_logic.gui.config.ConfigState.ENABLED.tooltip = Can be chosen by the user.
com.top_logic.gui.config.ConfigState.tooltip = Whether a theme is <i>enabled</i> or <i>disabled</i>.
com.top_logic.gui.config.ThemeConfig = Theme configuration
com.top_logic.gui.config.ThemeConfig$StyleSheetRef = Style sheet reference
com.top_logic.gui.config.ThemeConfig$StyleSheetRef.tooltip = Name of a style sheet to load in a certain <i>theme</i>.
com.top_logic.gui.config.ThemeConfig.extends = Extends
com.top_logic.gui.config.ThemeConfig.extends.tooltip = The <i>ID</i> of the base themes to inherit from.
com.top_logic.gui.config.ThemeConfig.id = ID
com.top_logic.gui.config.ThemeConfig.id.tooltip = Identifier for the <i>theme</i>.
com.top_logic.gui.config.ThemeConfig.path = Path
com.top_logic.gui.config.ThemeConfig.path-effective = Path effective
com.top_logic.gui.config.ThemeConfig.path-effective.tooltip = The path to use (<i>Path</i> or fallback to <code>/themes/id</code>).
com.top_logic.gui.config.ThemeConfig.path.tooltip = Configuration option that defines the themes base path. <p> The default is <code>/themes/theme-id</code> </p>
com.top_logic.gui.config.ThemeConfig.protected = Protected
com.top_logic.gui.config.ThemeConfig.protected.tooltip = Flag to indicate if it's possible to edit the theme (styles, theme variables, etc.).
com.top_logic.gui.config.ThemeConfig.state = State
com.top_logic.gui.config.ThemeConfig.state.tooltip = Whether this <i>theme</i> is enabled for being selected by the user. <p> Even a disable <i>theme</i> may be used in an <i>Extends</i> clause of a derived <i>theme</i>. </p>
com.top_logic.gui.config.ThemeConfig.styles = Styles
com.top_logic.gui.config.ThemeConfig.styles.tooltip = The style sheet file names to include.
com.top_logic.gui.config.ThemeConfig.tooltip = Configuration options for a <i>theme</i>.
com.top_logic.gui.config.ThemeSetting$BooleanSetting = Boolean setting
com.top_logic.gui.config.ThemeSetting$BooleanSetting.tooltip = A <i>boolean</i> value.
com.top_logic.gui.config.ThemeSetting$BoxSetting = Box setting
com.top_logic.gui.config.ThemeSetting$BoxSetting.tooltip = A margin or padding value e.g. <code>3px 5px</code>.
com.top_logic.gui.config.ThemeSetting$ColorSetting = Color setting
com.top_logic.gui.config.ThemeSetting$ColorSetting.tooltip = A <i>color</i> value.
com.top_logic.gui.config.ThemeSetting$DimSetting = Dim setting
com.top_logic.gui.config.ThemeSetting$DimSetting.tooltip = A dimension e.g. <code>42em</code>.
com.top_logic.gui.config.ThemeSetting$FloatSetting = Float setting
com.top_logic.gui.config.ThemeSetting$FloatSetting.tooltip = An <i>float</i> value.
com.top_logic.gui.config.ThemeSetting$IconSetting = Icon setting
com.top_logic.gui.config.ThemeSetting$IconSetting.tooltip = A <i>icon</i> value.
com.top_logic.gui.config.ThemeSetting$ImgSetting = Img setting
com.top_logic.gui.config.ThemeSetting$ImgSetting.tooltip = A theme resource <i>icon</i> value.
com.top_logic.gui.config.ThemeSetting$InstanceSetting = Instance setting
com.top_logic.gui.config.ThemeSetting$InstanceSetting.tooltip = An instance value.
com.top_logic.gui.config.ThemeSetting$IntSetting = Int setting
com.top_logic.gui.config.ThemeSetting$IntSetting.tooltip = An <i>integer</i> value.
com.top_logic.gui.config.ThemeSetting$SizeSetting = Size setting
com.top_logic.gui.config.ThemeSetting$SizeSetting.tooltip = A size e.g. <code>42px</code> or <code>50%</code>. <p> This is a specialized form of a <i>dim setting</i> that only allows pixel or percentage as unit. </p>
com.top_logic.gui.config.ThemeSetting$StringSetting = String setting
com.top_logic.gui.config.ThemeSetting$StringSetting.tooltip = A generic string value that does not impose any constraints on its value.
com.top_logic.gui.config.ThemeSetting$TemplateSetting = Template setting
com.top_logic.gui.config.ThemeSetting$TemplateSetting.tooltip = A template theme resource.
com.top_logic.gui.config.ThemeSetting$TypeSetting = Type setting
com.top_logic.gui.config.ThemeSetting$TypeSetting.tooltip = A <i>class</i> value.
com.top_logic.gui.config.ThemeSetting.Config.abstract = Abstract
com.top_logic.gui.config.ThemeSetting.Config.abstract.tooltip = Whether this setting does not provide a <i>Value</i>. <p> An abstract setting is only there to define the type of a theme variable. </p>
com.top_logic.gui.config.ThemeSetting.Config.expr = Expression
com.top_logic.gui.config.ThemeSetting.Config.expr.tooltip = Theme expression to construct the value from, if no concrete value is given. <p> This theme expression may reference other settings with the <code>%OTHER_NAME%</code> syntax. </p>
com.top_logic.gui.config.ThemeSetting.Config.name = Name
com.top_logic.gui.config.ThemeSetting.Config.name.tooltip = Name of the configured object.
com.top_logic.gui.config.ThemeSetting.Config.value = Value
com.top_logic.gui.config.ThemeSetting.Config.value.tooltip = The application value of this setting.
com.top_logic.gui.config.ThemeSetting.ImplSetting.Config.interface = Interface
com.top_logic.gui.config.ThemeSetting.ImplSetting.Config.interface.tooltip = The interface type, the given value must be compatible with.
com.top_logic.gui.config.ThemeSettings$Config = Configuration
com.top_logic.gui.config.ThemeSettings$Config.tooltip = Configuration options for <i>theme settings</i>.
com.top_logic.gui.config.ThemeSettings.Config.settings = Settings
com.top_logic.gui.config.ThemeSettings.Config.settings.tooltip = The typed theme values.
com.top_logic.gui.config.ThemeState = Theme state
com.top_logic.gui.config.ThemeState.DISABLED = Disabled
com.top_logic.gui.config.ThemeState.DISABLED.tooltip = Cannot be chosen by the user. <p> A disabled theme can only be used as base theme for some other theme. </p>
com.top_logic.gui.config.ThemeState.ENABLED = Enabled
com.top_logic.gui.config.ThemeState.ENABLED.tooltip = Can be chosen by the user.
com.top_logic.gui.config.ThemeState.tooltip = Whether a theme is <i>enabled</i> or <i>disabled</i>.
com.top_logic.html.template.config.Icons.TEMPLATE_POPUP_BUTTON = The icon of the pop-up button that shows the HTML template specified in a theme variable in the theme editor.
com.top_logic.html.template.config.Icons.TEMPLATE_POPUP_CONTENTS = Template of the contents of the popup that displays the HTML template specified in a theme variable in the theme editor. <p> The only property available is <code>"content"</code> that renders the template contents. </p>
com.top_logic.knowledge.KIReference = KI reference
com.top_logic.knowledge.KIReference.tooltip = <i>MO reference</i> that references <i>knowledge item</i>.
com.top_logic.knowledge.analyze.DefaultAnalyzeService = Default analyze service
com.top_logic.knowledge.analyze.DefaultAnalyzeService.Config.knowledge-base-name = Knowledge base name
com.top_logic.knowledge.analyze.DefaultAnalyzeService.Config.knowledge-base-name.tooltip = Name of the knowledge base.
com.top_logic.knowledge.analyze.DefaultAnalyzeService.tooltip = Abstract analyze service that defines the base functionality and abstract methods common to all analyze services.
com.top_logic.knowledge.event.DefaultEventWriter$State = State
com.top_logic.knowledge.event.DefaultEventWriter$State.tooltip = States of a <i>default event writer</i>.
com.top_logic.knowledge.event.DefaultEventWriter.State.branchCreated = Branch created
com.top_logic.knowledge.event.DefaultEventWriter.State.branchCreated.tooltip = A branch has been created, but the corresponding commit event has not yet been seen.
com.top_logic.knowledge.event.DefaultEventWriter.State.clean = Clean
com.top_logic.knowledge.event.DefaultEventWriter.State.clean.tooltip = All information has been committed to the underlying <i>knowledge base</i>.
com.top_logic.knowledge.event.DefaultEventWriter.State.transaction = Transaction
com.top_logic.knowledge.event.DefaultEventWriter.State.transaction.tooltip = The writer has opened a transaction that is not yet committed.
com.top_logic.knowledge.event.EventKind = Event kind
com.top_logic.knowledge.event.EventKind.branch = Branch
com.top_logic.knowledge.event.EventKind.branch.tooltip = A <i>branch event</i>.
com.top_logic.knowledge.event.EventKind.commit = Commit
com.top_logic.knowledge.event.EventKind.commit.tooltip = A <i>commit event</i>.
com.top_logic.knowledge.event.EventKind.create = Create
com.top_logic.knowledge.event.EventKind.create.tooltip = An event targeting a single <i>knowledge item</i> creation.
com.top_logic.knowledge.event.EventKind.delete = Delete
com.top_logic.knowledge.event.EventKind.delete.tooltip = An event targeting a single <i>knowledge item</i> deletion.
com.top_logic.knowledge.event.EventKind.tooltip = Classification of <i>knowledge events</i>. <p> The <code>#ordinal()</code> of the elements defines the ordering of events within a revision. </p>
com.top_logic.knowledge.event.EventKind.update = Update
com.top_logic.knowledge.event.EventKind.update.tooltip = An event targeting a single <i>knowledge item</i> update.
com.top_logic.knowledge.event.convert.AttributeRenaming = Attribute renaming
com.top_logic.knowledge.event.convert.AttributeRenaming.Config.include-subtypes = Include subtypes
com.top_logic.knowledge.event.convert.AttributeRenaming.Config.include-subtypes.tooltip = Whether not just for the given types, but also for all sub types the attribute must be renamed.
com.top_logic.knowledge.event.convert.AttributeRenaming.Config.source-attribute = Source attribute
com.top_logic.knowledge.event.convert.AttributeRenaming.Config.source-attribute.tooltip = The attribute name to rename.
com.top_logic.knowledge.event.convert.AttributeRenaming.Config.target-attribute = Target attribute
com.top_logic.knowledge.event.convert.AttributeRenaming.Config.target-attribute.tooltip = The attribute name to rename to.
com.top_logic.knowledge.event.convert.AttributeRenaming.Config.types.tooltip = The names of all types to rename attributes. <p> If the given set is not empty, only the attributes of the types with that names are renamed. </p>
com.top_logic.knowledge.event.convert.AttributeRenaming.tooltip = <i>Event rewriter</i> that changes the name of attributes in <i>item change</i> events.
com.top_logic.knowledge.event.convert.AttributeValueConversion = Attribute value conversion
com.top_logic.knowledge.event.convert.AttributeValueConversion.Config.source-attribute = Source attribute
com.top_logic.knowledge.event.convert.AttributeValueConversion.Config.source-attribute.tooltip = The source attribute to read the conversion source value from.
com.top_logic.knowledge.event.convert.AttributeValueConversion.Config.target-attribute = Target attribute
com.top_logic.knowledge.event.convert.AttributeValueConversion.Config.target-attribute.tooltip = The target attribute to store the converted value to.
com.top_logic.knowledge.event.convert.AttributeValueConversion.Config.types.tooltip = Filter of types. <p> Only events targeting those types are processed. </p>
com.top_logic.knowledge.event.convert.AttributeValueConversion.Config.value-mapping = Value mapping
com.top_logic.knowledge.event.convert.AttributeValueConversion.Config.value-mapping.tooltip = Conversion operation to process the source value with.
com.top_logic.knowledge.event.convert.AttributeValueConversion.tooltip = <i>Event rewriter</i> that changes values of attributes in <i>item change</i> events.
com.top_logic.knowledge.event.convert.ConfiguredRewritingEventVisitor = Configured rewriting event visitor
com.top_logic.knowledge.event.convert.ConfiguredRewritingEventVisitor.tooltip = Configurable <i>rewriting event visitor</i>.
com.top_logic.knowledge.event.convert.EventRewriterProxy = Event rewriter proxy
com.top_logic.knowledge.event.convert.EventRewriterProxy.tooltip = Proxy for an <i>event rewriter</i>.
com.top_logic.knowledge.event.convert.RevisionModificator = Revision modificator
com.top_logic.knowledge.event.convert.RevisionModificator$Modus = Modus
com.top_logic.knowledge.event.convert.RevisionModificator$Modus.tooltip = Different modus in which some <i>revision modificator</i> can be changed
com.top_logic.knowledge.event.convert.RevisionModificator.Config.mode = Mode
com.top_logic.knowledge.event.convert.RevisionModificator.Config.mode.tooltip = The initial mode of operation.
com.top_logic.knowledge.event.convert.RevisionModificator.Config.revision-attributes = Revision attributes
com.top_logic.knowledge.event.convert.RevisionModificator.Config.revision-attributes.tooltip = Attributes that are known to contain revision numbers. <p> The attributes are indexed by threir type name. </p>
com.top_logic.knowledge.event.convert.RevisionModificator.Modus.auto = Auto
com.top_logic.knowledge.event.convert.RevisionModificator.Modus.auto.tooltip = Guess revision inserts and drops from the stream of events. <p> Missing revisions in the input stream are assumed to be dropped, while a duplicated revision in the input stream marks its first occurrence as inserted revision. </p>
com.top_logic.knowledge.event.convert.RevisionModificator.Modus.fakingHistory = Faking history
com.top_logic.knowledge.event.convert.RevisionModificator.Modus.fakingHistory.tooltip = History faking modus: It is expected that in that modus no original events are given but only synthesized. Neither revision numbers nor attributes representing revisions are adopted.
com.top_logic.knowledge.event.convert.RevisionModificator.Modus.replay = Replay
com.top_logic.knowledge.event.convert.RevisionModificator.Modus.replay.tooltip = Replay modus: It is expected that in this modus original <i>knowledge events</i> are replayed. Each revision number and attribute which represents a revision number is adopted.
com.top_logic.knowledge.event.convert.RevisionModificator.tooltip = The class <i>revision modificator</i> is a rewriter which modifies the revisions of the events and attributes of types which represent revisions.
com.top_logic.knowledge.event.convert.TLTypeRenaming = Type renaming
com.top_logic.knowledge.event.convert.TLTypeRenaming.Config.module = Module
com.top_logic.knowledge.event.convert.TLTypeRenaming.Config.module.tooltip = Module of the <i>business object type</i> to rename.
com.top_logic.knowledge.event.convert.TLTypeRenaming.Config.new-type-name = New type name
com.top_logic.knowledge.event.convert.TLTypeRenaming.Config.new-type-name.tooltip = New name of the <i>business object type</i>.
com.top_logic.knowledge.event.convert.TLTypeRenaming.Config.old-type-name = Old type name
com.top_logic.knowledge.event.convert.TLTypeRenaming.Config.old-type-name.tooltip = Name of the <i>business object type</i> to rename.
com.top_logic.knowledge.event.convert.TLTypeRenaming.tooltip = <i>Mapping rewriter</i> rewriting renaming a <i>type</i>.
com.top_logic.knowledge.event.convert.TypeRenaming = Type renaming
com.top_logic.knowledge.event.convert.TypeRenaming.Config.target-type = Target type
com.top_logic.knowledge.event.convert.TypeRenaming.Config.target-type.tooltip = The type name to rename elements to.
com.top_logic.knowledge.event.convert.TypeRenaming.Config.types.tooltip = The names of all types to rename.
com.top_logic.knowledge.event.convert.TypeRenaming.tooltip = <i>Rewriting event visitor</i> changing the name of an <i>meta object</i>.
com.top_logic.knowledge.event.convert.TypesConfig = Types configuration
com.top_logic.knowledge.event.convert.TypesConfig.tooltip = Configuration of a set of types.
com.top_logic.knowledge.event.convert.TypesConfig.types = Types
com.top_logic.knowledge.event.convert.TypesConfig.types.tooltip = Configured type names.
com.top_logic.knowledge.gui.layout.ButtonComponent = Button component
com.top_logic.knowledge.gui.layout.ButtonComponent$Config$ButtonLayoutInfo = Button layout info
com.top_logic.knowledge.gui.layout.ButtonComponent$Config$ButtonLayoutInfo.tooltip = <i>Layout info</i> with specialized defaults for <i>button component</i>.
com.top_logic.knowledge.gui.layout.ButtonComponent.Config.cssClass = Css class
com.top_logic.knowledge.gui.layout.ButtonComponent.Config.form = Form
com.top_logic.knowledge.gui.layout.ButtonComponent.Config.onSubmit = On submit
com.top_logic.knowledge.gui.layout.ButtonComponent.tooltip = Build up the Button-Component (HTML-Component).
com.top_logic.knowledge.gui.layout.DefaultButtonComponent = Default button component
com.top_logic.knowledge.gui.layout.DefaultButtonComponent.tooltip = Use instead of ButtonComponent to avoid extra configuration. <ul> <li>Will automatically connect itself to next Sibling in Parent</li> <li>No need to specify a name, will be derived as target.getName() + "Buttons"</li> <li>Will not work in special cases</li> </ul>
com.top_logic.knowledge.gui.layout.ExternalPageComponent = External page component
com.top_logic.knowledge.gui.layout.ExternalPageComponent.Config.url = URL
com.top_logic.knowledge.gui.layout.ExternalPageComponent.tooltip = A LayoutComponent wrapper for any external url i.e. http://www.google.de.
com.top_logic.knowledge.gui.layout.ImageInfo = Image info
com.top_logic.knowledge.gui.layout.ImageInfo.Config.alt = Alt
com.top_logic.knowledge.gui.layout.ImageInfo.Config.href = Href
com.top_logic.knowledge.gui.layout.ImageInfo.Config.path = Path
com.top_logic.knowledge.gui.layout.ImageInfo.Config.target = Target
com.top_logic.knowledge.gui.layout.ImageInfo.tooltip = Describes a complete img-tag to be used as lightwight component.
com.top_logic.knowledge.gui.layout.KOInstanceTableModelBuilder = KO instance table model builder
com.top_logic.knowledge.gui.layout.KOInstanceTableModelBuilder.Config.metaObject = Meta object
com.top_logic.knowledge.gui.layout.KOInstanceTableModelBuilder.tooltip = <i>List model builder</i> that retrieves all <i>objects</i> of a configured <i>meta object</i> type.
com.top_logic.knowledge.gui.layout.LayoutConfig = Layout configuration
com.top_logic.knowledge.gui.layout.LayoutConfig.client-side-logging-enabled = Client side logging enabled
com.top_logic.knowledge.gui.layout.LayoutConfig.client-side-logging-enabled.tooltip = Global flag for enabling or disabling client-side logging.
com.top_logic.knowledge.gui.layout.LayoutConfig.cloned-external-window-location = Cloned external window location
com.top_logic.knowledge.gui.layout.LayoutConfig.cloned-external-window-location.tooltip = Location of the page that is displayed, if cloning of an external application window is detected.
com.top_logic.knowledge.gui.layout.LayoutConfig.collection-separator = Collection separator
com.top_logic.knowledge.gui.layout.LayoutConfig.collection-separator.tooltip = Separator to separate a collection of objects.
com.top_logic.knowledge.gui.layout.LayoutConfig.debug-headers-enabled = Debug headers enabled
com.top_logic.knowledge.gui.layout.LayoutConfig.debug-headers-enabled.tooltip = When <code>true</code> this will result in some extra comments written to the HTML-header.
com.top_logic.knowledge.gui.layout.LayoutConfig.layouts = Layouts
com.top_logic.knowledge.gui.layout.LayoutConfig.layouts.tooltip = Layout names of the top-level component declarations. <p> The first layout is treated as the default layout. </p>
com.top_logic.knowledge.gui.layout.LayoutConfig.load-layout-time = Load layout time
com.top_logic.knowledge.gui.layout.LayoutConfig.load-layout-time.tooltip = The maximum time in milliseconds a layout load operation may take before issuing a warning.
com.top_logic.knowledge.gui.layout.LayoutConfig.max-subsession-count = Maximum subsession count
com.top_logic.knowledge.gui.layout.LayoutConfig.max-subsession-count.tooltip = The maximum number of browser windows, a user can open in the same session. <p> A value of <code>0</code> means "no limit". </p>
com.top_logic.knowledge.gui.layout.LayoutConfig.stable-window-name = Stable window name
com.top_logic.knowledge.gui.layout.LayoutConfig.stable-window-name.tooltip = Name of the first application window. <p> If not set, all window names are randomly chosen (if not provided by the client). </p>
com.top_logic.knowledge.gui.layout.LayoutConfig.subsession-location = Subsession location
com.top_logic.knowledge.gui.layout.LayoutConfig.subsession-location.tooltip = Location of the page that is displayed, if cloning of the main application window is detected.
com.top_logic.knowledge.gui.layout.LayoutConfig.tooltip = Global configuration options.
com.top_logic.knowledge.gui.layout.SizeInfo = Size info
com.top_logic.knowledge.gui.layout.SizeInfo.defaultI18n = Default internationalization
com.top_logic.knowledge.gui.layout.SizeInfo.defaultI18n.tooltip = Label of the open handler, if this used as dialog or window.
com.top_logic.knowledge.gui.layout.SizeInfo.height = Height
com.top_logic.knowledge.gui.layout.SizeInfo.height.tooltip = The component height.
com.top_logic.knowledge.gui.layout.SizeInfo.tooltip = Configuration of the size of a component display.
com.top_logic.knowledge.gui.layout.SizeInfo.width = Width
com.top_logic.knowledge.gui.layout.SizeInfo.width.tooltip = The component width.
com.top_logic.knowledge.gui.layout.TLLayoutServlet$Config = Configuration
com.top_logic.knowledge.gui.layout.TLLayoutServlet$Config.tooltip = Configuration for <i>layout servlet</i>.
com.top_logic.knowledge.gui.layout.TLMainLayout = Main layout
com.top_logic.knowledge.gui.layout.TLMainLayout.Config.eventHandler = Event handler
com.top_logic.knowledge.gui.layout.TLMainLayout.tooltip = Implements the goto handling on startup.
com.top_logic.knowledge.gui.layout.form.AbstractWrapperApplyCommandHandler = Object apply command handler
com.top_logic.knowledge.gui.layout.form.AbstractWrapperApplyCommandHandler.tooltip = <i>Command handler</i> that controls a transaction.
com.top_logic.knowledge.gui.layout.form.DeleteSimpleWrapperCommandHandler = Delete simple object command handler
com.top_logic.knowledge.gui.layout.form.DeleteSimpleWrapperCommandHandler.tooltip = The DeleteSimpleWrapperCommandHandler just deletes a Wrapper.
com.top_logic.knowledge.gui.layout.form.DeleteSimpleWrapperWithLogEventCommandHandler = Delete simple object with log event command handler
com.top_logic.knowledge.gui.layout.form.DeleteSimpleWrapperWithLogEventCommandHandler.tooltip = The DeleteSimpleWrapperWithLogEventCommandHandler just deletes a Wrapper.
com.top_logic.knowledge.gui.layout.iconBar.HomepageQuestion = Homepage question
com.top_logic.knowledge.gui.layout.iconBar.HomepageQuestion.tooltip = <i>View</i> that writes the "Set homepage" button.
com.top_logic.knowledge.gui.layout.iconBar.IconImage = Icon image
com.top_logic.knowledge.gui.layout.iconBar.IconImage.Config.plain = Plain
com.top_logic.knowledge.gui.layout.iconBar.JavaScriptAdorner = JavaScript adorner
com.top_logic.knowledge.gui.layout.iconBar.JavaScriptAdorner.Config.onclick = Onclick
com.top_logic.knowledge.gui.layout.iconBar.JavaScriptAdorner.Config.onmousedown = Onmousedown
com.top_logic.knowledge.gui.layout.iconBar.JavaScriptAdorner.Config.onmouseover = Onmouseover
com.top_logic.knowledge.gui.layout.iconBar.JavaScriptAdorner.Config.text = Text
com.top_logic.knowledge.gui.layout.list.ClassificationTableModelBuilder = Classification table model builder
com.top_logic.knowledge.gui.layout.list.ClassificationTableModelBuilder.Config.type = Type
com.top_logic.knowledge.gui.layout.list.ClassificationTableModelBuilder.Config.type.tooltip = The scope of classifications to display. <p> No value means to display all classifications. </p>
com.top_logic.knowledge.gui.layout.list.ClassificationTableModelBuilder.tooltip = <i>Model builder</i> that shows all <i>fast list</i>.
com.top_logic.knowledge.gui.layout.person.ApplyPersonCommandHandler = Apply person command handler
com.top_logic.knowledge.gui.layout.person.ApplyPersonCommandHandler.tooltip = Store the changes made to a person.
com.top_logic.knowledge.gui.layout.person.ChangePasswordComponent = Change password component
com.top_logic.knowledge.gui.layout.person.ChangePasswordComponent$ApplyPasswordCommand = Apply password command
com.top_logic.knowledge.gui.layout.person.ChangePasswordComponent$ApplyPasswordCommand.tooltip = <i>Command handler</i> applying a password change.
com.top_logic.knowledge.gui.layout.person.ChangePasswordComponent.tooltip = Dialog allowing to change the password for a <i>account</i>.
com.top_logic.knowledge.gui.layout.person.DeletePersonCommandHandler = Delete person command handler
com.top_logic.knowledge.gui.layout.person.DeletePersonCommandHandler.tooltip = Delete a person from the system.
com.top_logic.knowledge.gui.layout.person.EditPersonComponent = Edit person component
com.top_logic.knowledge.gui.layout.person.EditPersonComponent.tooltip = Component to edit persons.
com.top_logic.knowledge.gui.layout.person.NewPersonCommandHandler = New person command handler
com.top_logic.knowledge.gui.layout.person.NewPersonCommandHandler.tooltip = Default CommandHandler for creating a new Person in TopLogic.
com.top_logic.knowledge.gui.layout.person.NewPersonComponent = New person component
com.top_logic.knowledge.gui.layout.person.NewPersonComponent.tooltip = Create, edit, and delete Persons
com.top_logic.knowledge.gui.layout.person.PersonGroupComponent = Person group component
com.top_logic.knowledge.gui.layout.person.PersonGroupComponent$ApplyPersonGroupCommand = Apply person group command
com.top_logic.knowledge.gui.layout.person.PersonGroupComponent$SavePersonGroupCommand = Save person group command
com.top_logic.knowledge.gui.layout.person.PersonGroupComponent.tooltip = <i>Component</i> allowing to edit the groups, a <i>account</i> is member of.
com.top_logic.knowledge.gui.layout.person.PersonResourceProvider = Person resource provider
com.top_logic.knowledge.gui.layout.person.PersonResourceProvider.Config.show-login-name = Show login name
com.top_logic.knowledge.gui.layout.person.PersonResourceProvider.Config.show-login-name.tooltip = If <code>true</code>, the login name will be included in the label.
com.top_logic.knowledge.gui.layout.person.PersonResourceProvider.tooltip = <i>Resource provider</i> for <i>accounts</i>.
com.top_logic.knowledge.gui.layout.person.PersonTableComponent = Person table component
com.top_logic.knowledge.gui.layout.person.PersonTableComponent.tooltip = A Standard List of Persons for generic usage.
com.top_logic.knowledge.gui.layout.person.RefreshPersonsCommandHandler = Refresh persons command handler
com.top_logic.knowledge.gui.layout.person.RefreshPersonsCommandHandler.tooltip = This handler synchronizes users with external systems.
com.top_logic.knowledge.gui.layout.person.ResetPersonalConfiguration = Reset personal configuration
com.top_logic.knowledge.gui.layout.person.ResetPersonalConfiguration.tooltip = Reset the Personal Configuration assuming the underlying model is a Person. In case the current Person is the model the <i>transient personal configuration</i> from the TLContext will be removed. The <i>personal configuration object</i> will be deleted from the KBase in any case.
com.top_logic.knowledge.gui.layout.person.SelfEditPersonComponent = Self edit person component
com.top_logic.knowledge.gui.layout.person.SelfEditPersonComponent.tooltip = Extend the superclass to allow a Person to edit itself.
com.top_logic.knowledge.gui.layout.table.ExportModalDialogComponent = Export modal dialog component
com.top_logic.knowledge.gui.layout.table.ExportModalDialogComponent$ChoiceExcelExportCommandHandler = Choice Excel export command handler
com.top_logic.knowledge.gui.layout.table.ExportModalDialogComponent$ExportOption = Export option
com.top_logic.knowledge.gui.layout.table.ExportModalDialogComponent$ExportOption.tooltip = An option in the export dialog
com.top_logic.knowledge.gui.layout.table.ExportModalDialogComponent.Config.exportOptions = Export options
com.top_logic.knowledge.gui.layout.table.ExportModalDialogComponent.Config.exportOptions.tooltip = The displayed export options.
com.top_logic.knowledge.gui.layout.table.ExportModalDialogComponent.ExportOption.group = Group
com.top_logic.knowledge.gui.layout.table.ExportModalDialogComponent.ExportOption.group.tooltip = The command group for this option.
com.top_logic.knowledge.gui.layout.upload.ModularFileNameConstraint$Config = Configuration
com.top_logic.knowledge.gui.layout.upload.ModularFileNameConstraint$Config.tooltip = <i>Configuration item</i> for the <i>modular file name constraint</i>.
com.top_logic.knowledge.gui.layout.upload.ModularFileNameConstraint.Config.allow-windows-incompatible-characters = Allow windows incompatible characters
com.top_logic.knowledge.gui.layout.upload.ModularFileNameConstraint.Config.allow-windows-incompatible-characters.tooltip = Whether characters which Windows does not support in file names should be allowed. <p> The default value is <code>false</code>. </p>
com.top_logic.knowledge.gui.layout.upload.ModularFileNameConstraint.Config.max-file-name-size = Maximum file name size
com.top_logic.knowledge.gui.layout.upload.ModularFileNameConstraint.Config.max-file-name-size.tooltip = The maximum allowed file name size}. <p> The default value is <code>100</code>. </p> <p> The limit is arbitrary. It should be a round number to avoid confusing the user. The only real constraint here is, that some Windows installations have problems with paths longer than approximately 255 characters. But that is the whole path, not just the file name. This number is therefore lower. But it is not too low, as it should not constraint the user needlessly: This application is probably running on a Linux server, not Windows. </p> <p> This is just the default value, which is used if the value is not passed in the constructor. </p>
com.top_logic.knowledge.gui.layout.webfolder.AddToClipboardHandler = Add to clipboard handler
com.top_logic.knowledge.gui.layout.webfolder.AddToClipboardHandler.tooltip = Add elements to the clipboard.
com.top_logic.knowledge.gui.layout.webfolder.ClearClipboardHandler = Clear clipboard handler
com.top_logic.knowledge.gui.layout.webfolder.ClearClipboardHandler.tooltip = <i>Command handler</i> to clear the <i>clipboard</i>.
com.top_logic.knowledge.gui.layout.webfolder.CreateFolderHandler = Create folder handler
com.top_logic.knowledge.gui.layout.webfolder.CreateFolderHandler.tooltip = Create a folder in another folder. This handler will use the folder from the component ot its dialogParent, if it's an instance of <i>web folder aware</i>.
com.top_logic.knowledge.gui.layout.webfolder.DeleteHandler = Delete handler
com.top_logic.knowledge.gui.layout.webfolder.DeleteHandler.tooltip = Handler to delete a specific object (ko) from a webfolder of a component.
com.top_logic.knowledge.gui.layout.webfolder.DownloadHandler = Download handler
com.top_logic.knowledge.gui.layout.webfolder.DownloadHandler.tooltip = Allows Downloading of (versioned) physical Resources from Wrappers. Used mostly to download Documents from Webfolders, but should be useable for other Tasks as well.
com.top_logic.knowledge.gui.layout.webfolder.JournalingDownloadHandler = Journaling download handler
com.top_logic.knowledge.gui.layout.webfolder.JournalingDownloadHandler.tooltip = DownloadHandler with journaling facility
com.top_logic.knowledge.indexing.DefaultIndexingService = Default indexing service
com.top_logic.knowledge.indexing.DefaultIndexingService.DefaultIndexingServiceConfig.meta-objects = Meta objects
com.top_logic.knowledge.indexing.DefaultIndexingService.DefaultIndexingServiceConfig.meta-objects.tooltip = Set of KO MetaObject names to index.
com.top_logic.knowledge.indexing.DefaultIndexingService.DefaultIndexingServiceConfig.protocols = Protocols
com.top_logic.knowledge.indexing.DefaultIndexingService.DefaultIndexingServiceConfig.protocols.tooltip = Set of DataSource names to be indexed.
com.top_logic.knowledge.indexing.DefaultIndexingService.tooltip = Default index service that defines the base functionality and methods common to all indexing services.
com.top_logic.knowledge.journal.FlexJournalManager = Flex journal manager
com.top_logic.knowledge.journal.FlexJournalManager$JournalTypes = Journal types
com.top_logic.knowledge.journal.FlexJournalManager$JournalTypes.tooltip = <i>Type provider</i> for <i>flex journal manager</i>.
com.top_logic.knowledge.journal.FlexJournalManager.tooltip = <i>Journal manager</i> that writes to tables with flex data schema.
com.top_logic.knowledge.journal.JournalManager = Journal manager
com.top_logic.knowledge.journal.JournalManager.Config.connection-pool = Connection pool
com.top_logic.knowledge.journal.JournalManager.Config.connection-pool.tooltip = Connection Pool.
com.top_logic.knowledge.journal.JournalManager.Config.journaled-knowledge-objects = Journaled knowledge objects
com.top_logic.knowledge.journal.JournalManager.Config.journaled-knowledge-objects.tooltip = Entries to declare the journaled knowledge objects.
com.top_logic.knowledge.journal.JournalManager.tooltip = Handles journal entries for commitable objects. The journal stores changes to commitable (and journallable) objects. dkh: hmm ... it journals whatever is passed to it. DBContext checks for Journallables and asks if isToJournal, which is true if type is registered (somehow) in project's xml.
com.top_logic.knowledge.monitor.CheckUnusedAccountsTask = Check unused accounts task
com.top_logic.knowledge.monitor.CheckUnusedAccountsTask.Config.checker = Checker
com.top_logic.knowledge.monitor.CheckUnusedAccountsTask.Config.checker.tooltip = Configuration of the actual checker.
com.top_logic.knowledge.monitor.CheckUnusedAccountsTask.tooltip = Task checking all accounts whether they are unused.
com.top_logic.knowledge.monitor.MemoryObserverTableComponent = Memory observer table component
com.top_logic.knowledge.monitor.MemoryObserverTableComponent$RunGarbargeCollectionCommand = Run garbarge collection command
com.top_logic.knowledge.monitor.MemoryObserverTableComponent$StartMemoryObserverCommand = Start memory observer command
com.top_logic.knowledge.monitor.MemoryObserverTableComponent$StopMemoryObserverCommand = Stop memory observer command
com.top_logic.knowledge.monitor.MemoryObserverTableComponent.tooltip = Control the <i>memory observer thread</i>.
com.top_logic.knowledge.monitor.UnusedAccountCheck = Unused account check
com.top_logic.knowledge.monitor.UnusedAccountCheck.Config.deleteDayCount = Delete day count
com.top_logic.knowledge.monitor.UnusedAccountCheck.Config.deleteDayCount.tooltip = The amount of days after which unused accounts will get deleted.
com.top_logic.knowledge.monitor.UnusedAccountCheck.Config.excludeUIDs = Exclude user IDs
com.top_logic.knowledge.monitor.UnusedAccountCheck.Config.excludeUIDs.tooltip = The user names to exclude from automatic deleting.
com.top_logic.knowledge.monitor.UnusedAccountCheck.Config.notifyDayCount = Notify day count
com.top_logic.knowledge.monitor.UnusedAccountCheck.Config.notifyDayCount.tooltip = The amount of days after which users will be notified about unused accounts.
com.top_logic.knowledge.monitor.UnusedAccountCheck.tooltip = Helper class checking for (and deleting) unused accounts.
com.top_logic.knowledge.monitor.UserMonitor = User monitor
com.top_logic.knowledge.monitor.UserMonitor.Config.excludeUIDs = Exclude user IDs
com.top_logic.knowledge.monitor.UserMonitor.Config.excludeUIDs.tooltip = The user names to exclude from beeing logged.
com.top_logic.knowledge.monitor.UserMonitor.Config.service-name.tooltip = Name of the service.
com.top_logic.knowledge.monitor.UserMonitor.Config.service-namespace.tooltip = Namespace for the service.
com.top_logic.knowledge.monitor.UserMonitor.tooltip = Monitor component for user activities within the application. This monitor will collect all logins of users and store them as knowledge objects in the default knowledge base. That objects will be represented by the <i>user session</i> wrapper.
com.top_logic.knowledge.objects.KnowledgeItem$State = State
com.top_logic.knowledge.objects.KnowledgeItem$State.tooltip = Live-cycle state of a <i>knowledge item</i>.
com.top_logic.knowledge.objects.KnowledgeItem.State.NEW = New
com.top_logic.knowledge.objects.KnowledgeItem.State.NEW.tooltip = The item is locally created in a transaction that is not yet committed.
com.top_logic.knowledge.objects.KnowledgeItem.State.PERSISTENT = Persistent
com.top_logic.knowledge.objects.KnowledgeItem.State.PERSISTENT.tooltip = The item has a persistent representation. <p> In this state, the item may have local modifications in a running transaction, or may even be locally deleted in some transaction. </p>
com.top_logic.knowledge.search.BranchParam = Branch parameter
com.top_logic.knowledge.search.BranchParam.all = All
com.top_logic.knowledge.search.BranchParam.all.tooltip = Search within all branches of the system.
com.top_logic.knowledge.search.BranchParam.set = Set
com.top_logic.knowledge.search.BranchParam.set.tooltip = Search within a set of branches.
com.top_logic.knowledge.search.BranchParam.single = Single
com.top_logic.knowledge.search.BranchParam.single.tooltip = Search within a single branch.
com.top_logic.knowledge.search.BranchParam.tooltip = Specification of the branches to search in an <i>query</i>.
com.top_logic.knowledge.search.BranchParam.without = Without
com.top_logic.knowledge.search.BranchParam.without.tooltip = Search within all branches excluding a given set of branches.
com.top_logic.knowledge.search.Operator = Operator
com.top_logic.knowledge.search.Operator.AND = And
com.top_logic.knowledge.search.Operator.AND.tooltip = The boolean and operator.
com.top_logic.knowledge.search.Operator.BRANCH = Branch
com.top_logic.knowledge.search.Operator.BRANCH.tooltip = Access to the branch of the wrapped expression. <p> It is expected that the wrapped expression represents a <i>knowledge item</i> or its identifier. </p>
com.top_logic.knowledge.search.Operator.EQBINARY = Eqbinary
com.top_logic.knowledge.search.Operator.EQBINARY.tooltip = The equals operator using binary comparison.
com.top_logic.knowledge.search.Operator.EQCI = Eqci
com.top_logic.knowledge.search.Operator.EQCI.tooltip = The equals operator using case insensitive comparison.
com.top_logic.knowledge.search.Operator.GE = Ge
com.top_logic.knowledge.search.Operator.GE.tooltip = The greater or equal operator.
com.top_logic.knowledge.search.Operator.GT = Gt
com.top_logic.knowledge.search.Operator.GT.tooltip = The greater than operator.
com.top_logic.knowledge.search.Operator.HISTORY_CONTEXT = History context
com.top_logic.knowledge.search.Operator.HISTORY_CONTEXT.tooltip = Access to the history context of the wrapped expression. <p> It is expected that the wrapped expression represents a <i>knowledge item</i> or its identifier. </p> <p> In contrast to <i>revision</i>, this operator accesses always the history context for the item represented by the wrapped expression. </p>
com.top_logic.knowledge.search.Operator.IDENTIFIER = Identifier
com.top_logic.knowledge.search.Operator.IDENTIFIER.tooltip = Access to the identifier of the wrapped expression. <p> It is expected that the wrapped expression represents a <i>knowledge item</i> or its identifier. </p>
com.top_logic.knowledge.search.Operator.IS_NULL = Is null
com.top_logic.knowledge.search.Operator.IS_NULL.tooltip = Operator that checks whether a given expression evaluates to <code>null</code>.
com.top_logic.knowledge.search.Operator.LE = Le
com.top_logic.knowledge.search.Operator.LE.tooltip = The lower or equal operator.
com.top_logic.knowledge.search.Operator.LT = Lt
com.top_logic.knowledge.search.Operator.LT.tooltip = The lower than operator.
com.top_logic.knowledge.search.Operator.NOT = Not
com.top_logic.knowledge.search.Operator.NOT.tooltip = The boolean not operator.
com.top_logic.knowledge.search.Operator.OR = Or
com.top_logic.knowledge.search.Operator.OR.tooltip = The boolean or operator.
com.top_logic.knowledge.search.Operator.REVISION = Revision
com.top_logic.knowledge.search.Operator.REVISION.tooltip = Access to the revision of the wrapped expression. <p> It is expected that the wrapped expression represents a <i>knowledge item</i> or its identifier. </p> <p> In contrast to <i>history context</i>, this operator accesses the history context of the request, when the wrapped expression represents a current object. </p>
com.top_logic.knowledge.search.Operator.TYPE_NAME = Type name
com.top_logic.knowledge.search.Operator.TYPE_NAME.tooltip = Access to the type name of the wrapped expression. <p> It is expected that the wrapped expression represents a <i>knowledge item</i> or its identifier. </p>
com.top_logic.knowledge.search.Operator.tooltip = Enumeration of operator symbols.
com.top_logic.knowledge.search.PolymorphicQueryBuilder = Polymorphic query builder
com.top_logic.knowledge.search.PolymorphicQueryBuilder.tooltip = <i>Instances query builder</i> for polymorphic tables, i.e. for tables in which instances for more than one type are stored.
com.top_logic.knowledge.search.QNameQueryBuilder = Q name query builder
com.top_logic.knowledge.search.QNameQueryBuilder.Config.type-reference-column = Type reference column
com.top_logic.knowledge.search.QNameQueryBuilder.Config.type-reference-column.tooltip = Name of the <i>MO attribute</i> in which the identifier for the type of the row object is stored.
com.top_logic.knowledge.search.QNameQueryBuilder.Config.type-value-mapping = Type value mapping
com.top_logic.knowledge.search.QNameQueryBuilder.Config.type-value-mapping.tooltip = Mapping from the qualified name of potential <i>business object type</i> to the actual database value for the type. <p> The mapping must be complete, such that for all types that potentially store in the table an unique value is given. </p>
com.top_logic.knowledge.search.QNameQueryBuilder.tooltip = <i>Polymorphic query builder</i> for tables which stores unique (configured) identifiers for the types for the objects in a <i>MO attribute</i>.
com.top_logic.knowledge.search.RangeParam = Range parameter
com.top_logic.knowledge.search.RangeParam.complete = Complete
com.top_logic.knowledge.search.RangeParam.complete.tooltip = All results are requested.
com.top_logic.knowledge.search.RangeParam.first = First
com.top_logic.knowledge.search.RangeParam.first.tooltip = Only the first result that matches the query is requested.
com.top_logic.knowledge.search.RangeParam.head = Head
com.top_logic.knowledge.search.RangeParam.head.tooltip = The first <code>n</code> rows are requested.
com.top_logic.knowledge.search.RangeParam.range = Range
com.top_logic.knowledge.search.RangeParam.range.tooltip = A range of result indices are requested.
com.top_logic.knowledge.search.RangeParam.tooltip = Specification of the requested result range of a query.
com.top_logic.knowledge.search.RevisionParam = Revision parameter
com.top_logic.knowledge.search.RevisionParam.all = All
com.top_logic.knowledge.search.RevisionParam.all.tooltip = Search through the complete history.
com.top_logic.knowledge.search.RevisionParam.range = Range
com.top_logic.knowledge.search.RevisionParam.range.tooltip = Limit the search to a range of <i>revisions</i>.
com.top_logic.knowledge.search.RevisionParam.tooltip = Specification of the <i>revisions</i> to search in a <i>history query</i>.
com.top_logic.knowledge.search.RevisionQuery$LoadStrategy = Load strategy
com.top_logic.knowledge.search.RevisionQuery$LoadStrategy.tooltip = Possible value of <code>RevisionQuery#getLoadStrategy()</code>.
com.top_logic.knowledge.search.RevisionQuery.LoadStrategy.DEFAULT = Default
com.top_logic.knowledge.search.RevisionQuery.LoadStrategy.DEFAULT.tooltip = Use a load strategy based on context information.
com.top_logic.knowledge.search.RevisionQuery.LoadStrategy.FULL_LOAD = Full load
com.top_logic.knowledge.search.RevisionQuery.LoadStrategy.FULL_LOAD.tooltip = Request identifier and data as result of a query.
com.top_logic.knowledge.search.RevisionQuery.LoadStrategy.ID_LOAD = ID load
com.top_logic.knowledge.search.RevisionQuery.LoadStrategy.ID_LOAD.tooltip = Only request identifiers as query result, load data separately for objects not in cache.
com.top_logic.knowledge.search.TypeReferenceQueryBuilder = Type reference query builder
com.top_logic.knowledge.search.TypeReferenceQueryBuilder.Config.type-reference-column = Type reference column
com.top_logic.knowledge.search.TypeReferenceQueryBuilder.Config.type-reference-column.tooltip = Name of the <i>MO reference</i> in which the identifier for the type of the row object is stored.
com.top_logic.knowledge.search.TypeReferenceQueryBuilder.tooltip = <i>Polymorphic query builder</i> for tables which stores the local ID's of the <i>business object type</i> for the objects in a <i>MO reference</i>.
com.top_logic.knowledge.searching.AbstractSearchEngine = Search engine
com.top_logic.knowledge.searching.AbstractSearchEngine.Config.display-name = Display name
com.top_logic.knowledge.searching.AbstractSearchEngine.Config.display-name.tooltip = <i>Resource key</i> to for the display name of the <i>search engine</i>.
com.top_logic.knowledge.searching.AbstractSearchEngine.tooltip = Abstract <i>search engine</i> implementation.
com.top_logic.knowledge.security.SecurityStorage = Security storage
com.top_logic.knowledge.security.SecurityStorage.Config.disable-index = Disable index
com.top_logic.knowledge.security.SecurityStorage.tooltip = Storage for permissions. <p> The storage contains tuples of the form (group, business object, role, reason) meaning "a group has a role on a business object for a reason". </p>
com.top_logic.knowledge.service.DBSetupActions = Database setup actions
com.top_logic.knowledge.service.DBSetupActions.Config.actions = Actions
com.top_logic.knowledge.service.DBSetupActions.Config.actions.tooltip = All actions that take part in the setup process.
com.top_logic.knowledge.service.DBSetupActions.tooltip = Container for all configured <i>database setup action</i>.
com.top_logic.knowledge.service.ExtIDFactory = Ext ID factory
com.top_logic.knowledge.service.ExtIDFactory.Config.external-attribute-mapping = External attribute mapping
com.top_logic.knowledge.service.ExtIDFactory.Config.external-attribute-mapping.tooltip = Mapping from the static type to the attribute name where the external id for the type is stored.
com.top_logic.knowledge.service.ExtIDFactory.tooltip = Resolves an <i>ext ID</i> for an object.
com.top_logic.knowledge.service.FlexDataManagerFactory = Flex data manager factory
com.top_logic.knowledge.service.FlexDataManagerFactory.tooltip = Factory for <i>flex data managers</i>.
com.top_logic.knowledge.service.InitialTableSetup = Initial table setup
com.top_logic.knowledge.service.InitialTableSetup.tooltip = Service that installs the database tables. <p> The trigger for this service to become active is the fact that the sequence table does not exist. </p> <p> If a setup is required (during the first boot of the application), the configured <i>database setup actions</i> are performed as configured in <i>Actions</i> (<i>database setup actions configuration</i>). One of these actions is normally the <i>initial knowledge-base table setup</i> that sets up the table for the <i>knowledge base</i>. </p> <p> If this is not the first boot of the application, the <i>migration service</i> is responsible for upgrading the persistency layer to the currently booting application version. </p>
com.top_logic.knowledge.service.KBBasedManagedClass = Knowledge-base based managed class
com.top_logic.knowledge.service.KBBasedManagedClass.tooltip = <i>Managed class</i> that needs a <i>knowledge base</i>. <p> The module must be a <i>typed runtime module</i>. </p>
com.top_logic.knowledge.service.KnowledgeBaseConfiguration = Knowledge base configuration
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.cleanup-unversioned-types-interval = Cleanup unversioned types interval
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.cleanup-unversioned-types-interval.tooltip = The interval in <i>seconds</i> in which the cleanup of old data of unversioned types must occur. <p> A value <code>&lt;= 0</code> will disable cleaning. </p>
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.commit-warn-time = Commit warn time
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.commit-warn-time.tooltip = Warnings are logged, if commit operations last longer than the specified number of milliseconds.
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.connection-pool = Connection pool
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.connection-pool.tooltip = The name of the <i>connection pool</i> of the <i>knowledge base</i>.
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.disable-versioning = Disable versioning
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.disable-versioning.tooltip = Whether versioning is globally disabled in the <i>knowledge base</i>.
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.name.tooltip = The name of the <i>knowledge base</i>
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.override-persistent-type-definitions = Override persistent type definitions
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.override-persistent-type-definitions.tooltip = Whether the type configuration must be read from configuration files ignoring potential entries in the database.
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.reader-chunk-size = Reader chunk size
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.reader-chunk-size.tooltip = Chunk size for reading history events. <p> During reading the history, the given number of revisions are cached in memory before they are returned by the readers. </p>
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.refetch-interval = Refetch interval
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.refetch-interval.tooltip = The interval between two refetch operations, in milliseconds. <p> A value <= 0 means no automatic refetch. </p>
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.refetch-log-time = Refetch log time
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.refetch-log-time.tooltip = Refetch operations are logged, if they last longer than the specified number of milliseconds.
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.refetch-timeout = Refetch timeout
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.refetch-timeout.tooltip = Time in milliseconds that a refetch operation waits for the refetch lock before aborting the operation.
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.refetch-wait-on-stop-timeout = Refetch wait on stop timeout
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.refetch-wait-on-stop-timeout.tooltip = Milliseconds how long the <i>knowledge base</i> should wait on shutdown for a running refetch to complete. <p> If the time is up, the shutdown proceeds and the refetch might fail because the <i>knowledge base</i> is already shut down. <br/> 0 and negative values mean: Don't wait. <br/> To wait "forever", use for example <code>9223372036854775807</code>. </p>
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.single-node-optimization = Single node optimization
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.single-node-optimization.tooltip = <i>Boolean</i> configuration property that enables single node optimizations. <p> This optimization must only be enabled, if the application is not deployed in a cluster. </p>
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.stop-replay-on-error = Stop replay on error
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.stop-replay-on-error.tooltip = Whether replay should fail when an error occurs.
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.tooltip = Configuration interface of a <i>knowledge base</i>.
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.type-system = Type system
com.top_logic.knowledge.service.KnowledgeBaseConfiguration.type-system.tooltip = The name of the <i>type system configuration</i> used in the <i>knowledge base</i>.
com.top_logic.knowledge.service.KnowledgeBaseFactory = Knowledge base factory
com.top_logic.knowledge.service.KnowledgeBaseFactory.tooltip = This class manages all Knowledgebases availeable in a TopLogic System. <p> It uses an entry from XMLProperties for every Knowledgebase. When required it uses this entry to create a new Insatnce of a Knowledgebase, Knowledgebases are created on demand. </p>
com.top_logic.knowledge.service.KnowledgeBaseFactoryConfig.knowledge-bases = Knowledge bases
com.top_logic.knowledge.service.KnowledgeBaseFactoryConfig.knowledge-bases.tooltip = Configurations of all known <i>knowledge base</i> indexed by name.
com.top_logic.knowledge.service.KnowledgeBaseName = Knowledge base name
com.top_logic.knowledge.service.KnowledgeBaseName.knowledge-base = Knowledge base
com.top_logic.knowledge.service.KnowledgeBaseName.knowledge-base.tooltip = The name of the <i>knowledge base</i> to use. <p> The name of the <i>knowledge base</i> must be known by the <i>knowledge base factory</i>. </p>
com.top_logic.knowledge.service.KnowledgeBaseName.tooltip = Configuration of a <i>knowledge base</i>. <p> Configurations which depend on the <i>knowledge base</i> should extend this interface to be able to configure the name of the <i>knowledge base</i> to use. </p>
com.top_logic.knowledge.service.PersistencyLayer = Persistency layer
com.top_logic.knowledge.service.PersistencyLayer.Config.default-knowledge-base = Default knowledge base
com.top_logic.knowledge.service.PersistencyLayer.Config.default-knowledge-base.tooltip = Default knowledge base.
com.top_logic.knowledge.service.PersistencyLayer.tooltip = Service to access the persistency layers of the application.
com.top_logic.knowledge.service.TypeSystemConfiguration.data = Data
com.top_logic.knowledge.service.TypeSystemConfiguration.data.tooltip = List of resources containing the initial data of the configured types.
com.top_logic.knowledge.service.TypeSystemSetup = Type system setup
com.top_logic.knowledge.service.TypeSystemSetup.tooltip = <i>Schema setup</i> with additional configuration for Java type bindings.
com.top_logic.knowledge.service.db2.AbstractFlexDataManager$Config = Configuration
com.top_logic.knowledge.service.db2.AbstractFlexDataManager$Config.tooltip = Configuration options for <i>flex data manager</i>.
com.top_logic.knowledge.service.db2.AbstractFlexDataManager.Config.fetch-size = Fetch size
com.top_logic.knowledge.service.db2.AbstractFlexDataManager.Config.fetch-size.tooltip = Fetch size for bulk-loading flex attributes.
com.top_logic.knowledge.service.db2.AbstractIndexColumnsStrategy = Index columns strategy
com.top_logic.knowledge.service.db2.AbstractIndexColumnsStrategy.tooltip = Base class for <i>index columns strategy</i> implementations.
com.top_logic.knowledge.service.db2.DefaultIndexColumnsStrategy = Default index columns strategy
com.top_logic.knowledge.service.db2.DefaultIndexColumnsStrategy.Config.branch-after-custom-columns = Branch after custom columns
com.top_logic.knowledge.service.db2.DefaultIndexColumnsStrategy.Config.branch-after-custom-columns.tooltip = Whether the branch column should be appended to the custom columns instead of prepended to them. <p> Since most searches are branch-local, the branch column is always known in searches using the index. Therefore, it is most likely, that the index can be used for the search. However, for branch-global searches, the branch column in front of the custom columns prevents the index from being used. In systems with few branches, the DBMS may also decide not to use an index with a column in front of the index that does not have many different values. </p>
com.top_logic.knowledge.service.db2.DefaultIndexColumnsStrategy.Config.exclude-branch-from-non-unique-indices = Exclude branch from non unique indices
com.top_logic.knowledge.service.db2.DefaultIndexColumnsStrategy.Config.exclude-branch-from-non-unique-indices.tooltip = Whether the branch column should be excluded from non-unique indices. <p> For unique indices, the branch is required in the index to enforce uniqueness only within a branch. Without the branch column in the index, the branch operation is guaranteed to fail, because the uniqueness constraint is violated. </p> <p> Since most queries are branch-local, the branch must even be added for non unique indices to search efficiently. </p>
com.top_logic.knowledge.service.db2.DefaultIndexColumnsStrategy.Config.exclude-revision-from-non-unique-indices = Exclude revision from non unique indices
com.top_logic.knowledge.service.db2.DefaultIndexColumnsStrategy.Config.exclude-revision-from-non-unique-indices.tooltip = Whether the revision column should be excluded from non-unique indices. <p> For unique indices, a revision column is required in the index to enforce uniqueness only within a single time-slice in history. Without a revision column in the index, the updating a versioned object is guaranteed to fail, if not all properties included in the index are changed. </p> <p> Even for non-unique indices, a revision column can speed up searches in the current revision (or near current revisions), since less versions of a long-lived object must be skipped. </p>
com.top_logic.knowledge.service.db2.DefaultIndexColumnsStrategy.tooltip = Configurable <i>index columns strategy</i>.
com.top_logic.knowledge.service.db2.ItemEventReader$EventKeyKind = Event key kind
com.top_logic.knowledge.service.db2.ItemEventReader$EventKeyKind.tooltip = Kind of an event identified by an <i>event key</i> or <i>attribute event key</i>.
com.top_logic.knowledge.service.db2.ItemEventReader.EventKeyKind.attributeDeletion = Attribute deletion
com.top_logic.knowledge.service.db2.ItemEventReader.EventKeyKind.attributeDeletion.tooltip = Potential deletion of a single flexible attribute (end point of a flexible attribute row).
com.top_logic.knowledge.service.db2.ItemEventReader.EventKeyKind.flexAttribute = Flex attribute
com.top_logic.knowledge.service.db2.ItemEventReader.EventKeyKind.flexAttribute.tooltip = Assignment of a single flexible attribute stored in the generic table for flexible attributes.
com.top_logic.knowledge.service.db2.ItemEventReader.EventKeyKind.objectDeletion = Object deletion
com.top_logic.knowledge.service.db2.ItemEventReader.EventKeyKind.objectDeletion.tooltip = Potential object deletion (end point of a object row).
com.top_logic.knowledge.service.db2.ItemEventReader.EventKeyKind.rowAttributes = Row attributes
com.top_logic.knowledge.service.db2.ItemEventReader.EventKeyKind.rowAttributes.tooltip = Assignment of attributes stored in a database row.
com.top_logic.knowledge.service.db2.MutableFlexData$ChangeType = Change type
com.top_logic.knowledge.service.db2.MutableFlexData$ChangeType.tooltip = Enumeration of change type of flex values.
com.top_logic.knowledge.service.db2.MutableFlexData.ChangeType.ADD = Add
com.top_logic.knowledge.service.db2.MutableFlexData.ChangeType.ADD.tooltip = Marker that the value was added to the <i>flex data</i>.
com.top_logic.knowledge.service.db2.MutableFlexData.ChangeType.DELETE = Delete
com.top_logic.knowledge.service.db2.MutableFlexData.ChangeType.DELETE.tooltip = Marker that the value was deleted from the <i>flex data</i>.
com.top_logic.knowledge.service.db2.MutableFlexData.ChangeType.UNCHANGED = Unchanged
com.top_logic.knowledge.service.db2.MutableFlexData.ChangeType.UNCHANGED.tooltip = Marker that the value was unchanged in the <i>flex data</i>.
com.top_logic.knowledge.service.db2.MutableFlexData.ChangeType.UPDATE = Update
com.top_logic.knowledge.service.db2.MutableFlexData.ChangeType.UPDATE.tooltip = Marker that the value was updated in the <i>flex data</i>.
com.top_logic.knowledge.service.db2.SerializingTransformer$Config = Configuration
com.top_logic.knowledge.service.db2.SerializingTransformer$Config$TypeStrategy = Type strategy
com.top_logic.knowledge.service.db2.SerializingTransformer$Config$TypeStrategy$AttributeStrategy = Attribute strategy
com.top_logic.knowledge.service.db2.SerializingTransformer$Config$TypeStrategy$AttributeStrategy.tooltip = Configuration for a specific attribute.
com.top_logic.knowledge.service.db2.SerializingTransformer$Config$TypeStrategy.tooltip = Configuration for a specific object type.
com.top_logic.knowledge.service.db2.SerializingTransformer$Config.tooltip = Configuration of <i>serializing transformer</i>.
com.top_logic.knowledge.service.db2.SerializingTransformer$Strategy = Strategy
com.top_logic.knowledge.service.db2.SerializingTransformer$Strategy.tooltip = Strategy selection for attributes.
com.top_logic.knowledge.service.db2.SerializingTransformer.Config.TypeStrategy.AttributeStrategy.name = Name
com.top_logic.knowledge.service.db2.SerializingTransformer.Config.TypeStrategy.AttributeStrategy.name.tooltip = The name of the attribute.
com.top_logic.knowledge.service.db2.SerializingTransformer.Config.TypeStrategy.AttributeStrategy.strategy = Strategy
com.top_logic.knowledge.service.db2.SerializingTransformer.Config.TypeStrategy.AttributeStrategy.strategy.tooltip = The <i>strategy</i> for the <i>Name</i>.
com.top_logic.knowledge.service.db2.SerializingTransformer.Config.TypeStrategy.attributes = Attributes
com.top_logic.knowledge.service.db2.SerializingTransformer.Config.TypeStrategy.attributes.tooltip = Configuration for some attributes of <i>Name</i>.
com.top_logic.knowledge.service.db2.SerializingTransformer.Config.TypeStrategy.name = Name
com.top_logic.knowledge.service.db2.SerializingTransformer.Config.TypeStrategy.name.tooltip = The name of the configured type.
com.top_logic.knowledge.service.db2.SerializingTransformer.Config.TypeStrategy.strategy = Strategy
com.top_logic.knowledge.service.db2.SerializingTransformer.Config.TypeStrategy.strategy.tooltip = The default <i>strategy</i> for all attributes of the <i>Name</i>.
com.top_logic.knowledge.service.db2.SerializingTransformer.Config.strategy = Strategy
com.top_logic.knowledge.service.db2.SerializingTransformer.Config.strategy.tooltip = The default <i>strategy</i> for all types.
com.top_logic.knowledge.service.db2.SerializingTransformer.Config.types = Types
com.top_logic.knowledge.service.db2.SerializingTransformer.Config.types.tooltip = <i>Type strategy</i> for some specific types.
com.top_logic.knowledge.service.db2.SerializingTransformer.Strategy.exclude = Exclude
com.top_logic.knowledge.service.db2.SerializingTransformer.Strategy.exclude.tooltip = Exclude the attribute from the serialization.
com.top_logic.knowledge.service.db2.SerializingTransformer.Strategy.include = Include
com.top_logic.knowledge.service.db2.SerializingTransformer.Strategy.include.tooltip = Include the attribute in the serialization.
com.top_logic.knowledge.service.db2.migration.FuzzyTableNameMapping = Fuzzy table name mapping
com.top_logic.knowledge.service.db2.migration.FuzzyTableNameMapping$Config$Rename = Rename
com.top_logic.knowledge.service.db2.migration.FuzzyTableNameMapping$Config$Rename.tooltip = Configuration of a renaming applied by the <i>fuzzy table name mapping</i>. <p> A <i>rename</i> defines an additional name to find a <i>meta object</i>. </p>
com.top_logic.knowledge.service.db2.migration.FuzzyTableNameMapping.Config.Rename.name.tooltip = The name of the type to which must also be found using <i>Target name</i>.
com.top_logic.knowledge.service.db2.migration.FuzzyTableNameMapping.Config.Rename.target-name = Target name
com.top_logic.knowledge.service.db2.migration.FuzzyTableNameMapping.Config.Rename.target-name.tooltip = The name under which the <i>meta object</i> with "name" <i>Name</i> must also be found.
com.top_logic.knowledge.service.db2.migration.FuzzyTableNameMapping.Config.renames = Renames
com.top_logic.knowledge.service.db2.migration.FuzzyTableNameMapping.Config.renames.tooltip = The <i>renames</i> of the <i>fuzzy table name mapping</i>.
com.top_logic.knowledge.service.db2.migration.FuzzyTableNameMapping.tooltip = <i>Type mapping</i> based on a <i>MO repository</i> which indexes the <i>meta object</i> either by the name or by its database name.
com.top_logic.knowledge.service.db2.migration.config.FilterConfig = Filter configuration
com.top_logic.knowledge.service.db2.migration.config.FilterConfig.filters = Filters
com.top_logic.knowledge.service.db2.migration.config.FilterConfig.filters.tooltip = The list o configured filters.
com.top_logic.knowledge.service.db2.migration.config.FilterConfig.tooltip = <i>Configuration item</i> holding a list of <i>typed filter</i>
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig = Replay configuration
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig$Step = Step
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig$Step.tooltip = A migration step is a named sequence of rewrites.
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig$TableTransformerStep = Table transformer step
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig$TableTransformerStep.tooltip = A table transformer step is a named sequence of transformers.
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig.Step.rewriters = Rewriters
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig.Step.rewriters.tooltip = The rewrites that transform events in this step.
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig.TableTransformerStep.transformers = Transformers
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig.TableTransformerStep.transformers.tooltip = The <i>row transformers</i> that rewrite table rows.
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig.force-replay = Force replay
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig.force-replay.tooltip = Whether a standard replay should be performed, even if no <i>Steps</i> or <i>Transformer steps</i> are given. <p> This can be useful, if a schema migration is performed that is automatically done by just performing a dump-load operation, e.g. moving an attribute from flex storage to row storage or vice versa. </p>
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig.steps = Steps
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig.steps.tooltip = The replay steps containing <i>event rewriters</i>.
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig.tooltip = Configuration options for a replay migration. <p> In a replay migration, application history is extracted to events. These events are passed to <i>event rewriters</i> and the transformed events are applied to an empty database building a new history. </p>
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig.transformer-steps = Transformer steps
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig.transformer-steps.tooltip = Migration steps for tables that are not known by the <i>knowledge base</i>, e.g. workflow tables.
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig.type-mapping = Type mapping
com.top_logic.knowledge.service.db2.migration.config.ReplayConfig.type-mapping.tooltip = Mapping of type names from the dump to the target system. <p> Since the dump is read in the context of the target system's type system, all type names must be resolvable in the target type system. If types were renamed, the renaming must happen in the dump reader and cannot be realized through a custom rewriter. </p>
com.top_logic.knowledge.service.db2.migration.converters.ByIndexConversion = By index conversion
com.top_logic.knowledge.service.db2.migration.converters.ByIndexConversion.Config.attribute = Attribute
com.top_logic.knowledge.service.db2.migration.converters.ByIndexConversion.Config.attribute.tooltip = Name of the attribute whose value uniquely identifies the object.
com.top_logic.knowledge.service.db2.migration.converters.ByIndexConversion.Config.type = Type
com.top_logic.knowledge.service.db2.migration.converters.ByIndexConversion.Config.type.tooltip = Name of the type whose key attribute uniquely identifies the object.
com.top_logic.knowledge.service.db2.migration.converters.ByIndexConversion.tooltip = <i>Reference conversion</i> that find the referenced key by lookup in an index. <p> It is expected that an item is uniquely identified by an attribute value. This <i>reference conversion</i> expects that the dump value is the value of such an object. </p>
com.top_logic.knowledge.service.db2.migration.converters.ByTypeAttributeConversion = By type attribute conversion
com.top_logic.knowledge.service.db2.migration.converters.ByTypeAttributeConversion.Config.type-attribute = Type attribute
com.top_logic.knowledge.service.db2.migration.converters.ByTypeAttributeConversion.Config.type-attribute.tooltip = Name of the attribute holding the name of the desired type.
com.top_logic.knowledge.service.db2.migration.converters.ByTypeAttributeConversion.tooltip = <i>Reference conversion</i> that expects that an additional attribute contains the type of the referenced object. This <i>reference conversion</i> removes the type attribute and uses it to build the desired <i>object key</i>.
com.top_logic.knowledge.service.db2.migration.converters.IdListMapping = ID list mapping
com.top_logic.knowledge.service.db2.migration.converters.IdListMapping.Config.typed-ids = Typed ids
com.top_logic.knowledge.service.db2.migration.converters.IdListMapping.Config.typed-ids.tooltip = Whether the ids are in the form &lt;type&gt;:&lt;id&gt;. In this case the type is not converted, only the id.
com.top_logic.knowledge.service.db2.migration.converters.IdListMapping.tooltip = <i>Mapping</i> that updates comma-separated list of identifiers with target identifiers.
com.top_logic.knowledge.service.db2.migration.converters.MonomorphicReferenceConversion = Monomorphic reference conversion
com.top_logic.knowledge.service.db2.migration.converters.MonomorphicReferenceConversion.Config.target-type = Target type
com.top_logic.knowledge.service.db2.migration.converters.MonomorphicReferenceConversion.Config.target-type.tooltip = Name of the type of the created <i>object key</i>.
com.top_logic.knowledge.service.db2.migration.converters.MonomorphicReferenceConversion.tooltip = <i>Reference conversion</i> building an <i>object key</i> with a fixed type.
com.top_logic.knowledge.service.db2.migration.converters.ReferenceNavigation = Reference navigation
com.top_logic.knowledge.service.db2.migration.converters.ReferenceNavigation.Config.target-attribute = Target attribute
com.top_logic.knowledge.service.db2.migration.converters.ReferenceNavigation.Config.target-attribute.tooltip = Names of the attribute whose value is the result of the mapping.
com.top_logic.knowledge.service.db2.migration.converters.ReferenceNavigation.tooltip = Mapping of an <i>object key</i> to the value of an attribute of the corresponding object.
com.top_logic.knowledge.service.db2.migration.db.matcher.MatcherByValue = Matcher by value
com.top_logic.knowledge.service.db2.migration.db.matcher.MatcherByValue.Config.attributes = Attributes
com.top_logic.knowledge.service.db2.migration.db.matcher.MatcherByValue.Config.attributes.tooltip = Definition of the attribute value that a <i>row value</i> must have to be skipped. <p> If any attribute name matching a pattern and the corresponding value equals the given value, this filter accepts the value. </p>
com.top_logic.knowledge.service.db2.migration.db.matcher.MatcherByValue.Config.need-match-all = Need match all
com.top_logic.knowledge.service.db2.migration.db.matcher.MatcherByValue.Config.need-match-all.tooltip = If <code>true</code>, all attributes matching any any pattern must have the corresponding value. Otherwise the filter does not match.
com.top_logic.knowledge.service.db2.migration.db.matcher.MatcherByValue.tooltip = <i>Filter</i> of <i>row value</i> matching the <i>row value</i> whose attributes have given values.
com.top_logic.knowledge.service.db2.migration.db.transformers.AbstractColumnTransformer = Column transformer
com.top_logic.knowledge.service.db2.migration.db.transformers.AbstractColumnTransformer.Config.attributes = Attributes
com.top_logic.knowledge.service.db2.migration.db.transformers.AbstractColumnTransformer.Config.attributes.tooltip = The name of the columns which values must be transformed.
com.top_logic.knowledge.service.db2.migration.db.transformers.AbstractColumnTransformer.tooltip = <i>Row transformer</i> transforming the column values of a given set of columns.
com.top_logic.knowledge.service.db2.migration.db.transformers.AbstractRowTransformer = Row transformer
com.top_logic.knowledge.service.db2.migration.db.transformers.AbstractRowTransformer.tooltip = <i>Row transformer</i> that applies to specified types.
com.top_logic.knowledge.service.db2.migration.db.transformers.ColumnTransformer = Column transformer
com.top_logic.knowledge.service.db2.migration.db.transformers.ColumnTransformer.Config.new-value = New value
com.top_logic.knowledge.service.db2.migration.db.transformers.ColumnTransformer.Config.new-value.tooltip = The new value to set.
com.top_logic.knowledge.service.db2.migration.db.transformers.ColumnTransformer.Config.old-value = Old value
com.top_logic.knowledge.service.db2.migration.db.transformers.ColumnTransformer.Config.old-value.tooltip = The old value to replace.
com.top_logic.knowledge.service.db2.migration.db.transformers.ColumnTransformer.tooltip = <i>Row transformer</i> that changes values in a specific column.
com.top_logic.knowledge.service.db2.migration.db.transformers.DOStorageRemovedValuesSkipper = DO storage removed values skipper
com.top_logic.knowledge.service.db2.migration.db.transformers.DOStorageRemovedValuesSkipper.Config.id-attribute = ID attribute
com.top_logic.knowledge.service.db2.migration.db.transformers.DOStorageRemovedValuesSkipper.Config.id-attribute.tooltip = Name of attribute containing the <i>tlid</i> of the object.
com.top_logic.knowledge.service.db2.migration.db.transformers.DOStorageRemovedValuesSkipper.tooltip = <i>Row transformer</i> that skips entries from the DO_STORAGE table for objects that are skipped by the <i>ID mapper</i>.
com.top_logic.knowledge.service.db2.migration.db.transformers.IDMappingTransformer = ID mapping transformer
com.top_logic.knowledge.service.db2.migration.db.transformers.IDMappingTransformer.Config.mappings = Mappings
com.top_logic.knowledge.service.db2.migration.db.transformers.IDMappingTransformer.Config.mappings.tooltip = Configuration of the attributes whose values are <i>tlid</i>.
com.top_logic.knowledge.service.db2.migration.db.transformers.IDMappingTransformer.tooltip = <i>Row transformer</i> that replaces source <i>tlid</i> attribute values by corresponding target <i>tlid</i>.
com.top_logic.knowledge.service.db2.migration.db.transformers.StoreTypeConfiguration = Store type configuration
com.top_logic.knowledge.service.db2.migration.db.transformers.StoreTypeConfiguration.tooltip = <i>Row transformer</i> (and <i>migration processor</i>) updating the stored type system configuration in the <i>knowledge base</i>. <p> Note: This <i>migration processor</i> must not be explicitly configured. It is automatically executed after a potential replay migration, if some of the migrations have the <i>Schema update</i> (<i>migration configuration</i>) flag set. </p>
com.top_logic.knowledge.service.db2.migration.db.transformers.StringToTLIDTransformer = String to TLID transformer
com.top_logic.knowledge.service.db2.migration.db.transformers.StringToTLIDTransformer.tooltip = <i>Column transformer</i> transforms a string value to a <i>string ID</i>.
com.top_logic.knowledge.service.db2.migration.db.transformers.TableRowSkip = Table row skip
com.top_logic.knowledge.service.db2.migration.db.transformers.TableRowSkip.Config.matcher = Matcher
com.top_logic.knowledge.service.db2.migration.db.transformers.TableRowSkip.Config.matcher.tooltip = Configuration of the filter that a row must match to be skipped.
com.top_logic.knowledge.service.db2.migration.db.transformers.TableRowSkip.tooltip = <i>Row transformer</i> skipping rows that matches a configured filter.
com.top_logic.knowledge.service.db2.migration.db.transformers.TableSkipTransformer = Table skip transformer
com.top_logic.knowledge.service.db2.migration.db.transformers.TableSkipTransformer.tooltip = Skips all values for the given types.
com.top_logic.knowledge.service.db2.migration.filters.DelegatingMigrationFilter = Delegating migration filter
com.top_logic.knowledge.service.db2.migration.filters.DelegatingMigrationFilter.tooltip = <i>Migration filter</i> with configured <i>typed filter</i> to delegate to.
com.top_logic.knowledge.service.db2.migration.filters.HasTypeFilter = Has type filter
com.top_logic.knowledge.service.db2.migration.filters.HasTypeFilter.tooltip = <i>Migration filter</i> matching <i>item event</i> with certain type names.
com.top_logic.knowledge.service.db2.migration.filters.HasValueFilter = Has value filter
com.top_logic.knowledge.service.db2.migration.filters.HasValueFilter.Config.attribute = Attribute
com.top_logic.knowledge.service.db2.migration.filters.HasValueFilter.Config.attribute.tooltip = The name of the attribute to find the matching value.
com.top_logic.knowledge.service.db2.migration.filters.HasValueFilter.Config.value = Value
com.top_logic.knowledge.service.db2.migration.filters.HasValueFilter.Config.value.tooltip = The value which the attribute of the event must have.
com.top_logic.knowledge.service.db2.migration.filters.HasValueFilter.tooltip = <i>Migration filter</i> matching <i>item change</i> which have a given special attribute value.
com.top_logic.knowledge.service.db2.migration.filters.KindFilter = Kind filter
com.top_logic.knowledge.service.db2.migration.filters.KindFilter.Config.kind = Kind
com.top_logic.knowledge.service.db2.migration.filters.KindFilter.Config.kind.tooltip = The only accepted <i>event kind</i>.
com.top_logic.knowledge.service.db2.migration.filters.KindFilter.tooltip = <i>Configurable filter</i> accepting <i>item event</i> of a given <i>event kind</i>.
com.top_logic.knowledge.service.db2.migration.filters.MatchesValueFilter = Matches value filter
com.top_logic.knowledge.service.db2.migration.filters.MatchesValueFilter.Config.attribute = Attribute
com.top_logic.knowledge.service.db2.migration.filters.MatchesValueFilter.Config.attribute.tooltip = The name of the attribute to find the matching value.
com.top_logic.knowledge.service.db2.migration.filters.MatchesValueFilter.Config.value = Value
com.top_logic.knowledge.service.db2.migration.filters.MatchesValueFilter.Config.value.tooltip = The value which the attribute of the event must have.
com.top_logic.knowledge.service.db2.migration.filters.MatchesValueFilter.tooltip = <i>Migration filter</i> matching the <i>item change</i> which has an attribute whose value matches a given pattern.
com.top_logic.knowledge.service.db2.migration.filters.NavigateBackwardsFilter = Navigate backwards filter
com.top_logic.knowledge.service.db2.migration.filters.NavigateBackwardsFilter.Config.reference = Reference
com.top_logic.knowledge.service.db2.migration.filters.NavigateBackwardsFilter.Config.reference.tooltip = Name of the reference attribute whose value must be a changed object to be checked.
com.top_logic.knowledge.service.db2.migration.filters.NavigateBackwardsFilter.Config.type = Type
com.top_logic.knowledge.service.db2.migration.filters.NavigateBackwardsFilter.Config.type.tooltip = The type a creation must have to be checked.
com.top_logic.knowledge.service.db2.migration.filters.NavigateBackwardsFilter.tooltip = <i>Delegating migration filter</i> checking creations that reference an object currently changed.
com.top_logic.knowledge.service.db2.migration.filters.NavigateReferenceFilter = Navigate reference filter
com.top_logic.knowledge.service.db2.migration.filters.NavigateReferenceFilter.Config.reference = Reference
com.top_logic.knowledge.service.db2.migration.filters.NavigateReferenceFilter.Config.reference.tooltip = Name of a reference attribute. <p> When an object was changed and the value of this attribute is a newly created object, that <i>object creation</i> is checked. </p>
com.top_logic.knowledge.service.db2.migration.filters.NavigateReferenceFilter.Config.type = Type
com.top_logic.knowledge.service.db2.migration.filters.NavigateReferenceFilter.Config.type.tooltip = Name of a <i>meta object</i>. <p> When an object with that type was changed and the value of <i>Reference</i> is a newly created object, that <i>object creation</i> is checked. </p>
com.top_logic.knowledge.service.db2.migration.filters.NavigateReferenceFilter.tooltip = <i>Delegating migration filter</i> checking creations of objects which are set as reference in the same <i>change set</i>.
com.top_logic.knowledge.service.db2.migration.formats.ValueType = Value type
com.top_logic.knowledge.service.db2.migration.formats.ValueType.BINARY = Binary
com.top_logic.knowledge.service.db2.migration.formats.ValueType.BINARY.tooltip = A byte stream.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.BINARY_DATA = Binary data
com.top_logic.knowledge.service.db2.migration.formats.ValueType.BINARY_DATA.tooltip = A <i>binary data</i> stream.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.BOOLEAN = Boolean
com.top_logic.knowledge.service.db2.migration.formats.ValueType.BOOLEAN.tooltip = Value of type <i>boolean</i>.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.BYTE = Byte
com.top_logic.knowledge.service.db2.migration.formats.ValueType.BYTE.tooltip = Value of type <i>byte</i>.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.CHAR = Char
com.top_logic.knowledge.service.db2.migration.formats.ValueType.CHAR.tooltip = Value of type <i>character</i>.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.CONFIG = Configuration
com.top_logic.knowledge.service.db2.migration.formats.ValueType.CONFIG.tooltip = Configuration value.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.DATE = Date
com.top_logic.knowledge.service.db2.migration.formats.ValueType.DATE.tooltip = Value of type <i>date</i>.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.DOUBLE = Double
com.top_logic.knowledge.service.db2.migration.formats.ValueType.DOUBLE.tooltip = Value of type <i>double</i>.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.ENUM = Enum
com.top_logic.knowledge.service.db2.migration.formats.ValueType.ENUM.tooltip = Enum value.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.EXT_ID = Ext ID
com.top_logic.knowledge.service.db2.migration.formats.ValueType.EXT_ID.tooltip = An external ID.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.EXT_REF = Ext reference
com.top_logic.knowledge.service.db2.migration.formats.ValueType.EXT_REF.tooltip = Value of of an external object reference in the form <code>type#branch/id</code>.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.FLOAT = Float
com.top_logic.knowledge.service.db2.migration.formats.ValueType.FLOAT.tooltip = Value of type <i>float</i>.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.INSTANCE = Instance
com.top_logic.knowledge.service.db2.migration.formats.ValueType.INSTANCE.tooltip = Configured instance value.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.INT = Int
com.top_logic.knowledge.service.db2.migration.formats.ValueType.INT.tooltip = Value of type <i>integer</i>.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.LONG = Long
com.top_logic.knowledge.service.db2.migration.formats.ValueType.LONG.tooltip = Value of type <i>long</i>.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.NULL = Null
com.top_logic.knowledge.service.db2.migration.formats.ValueType.NULL.tooltip = The type of the <code>null</code> value.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.REF = Reference
com.top_logic.knowledge.service.db2.migration.formats.ValueType.REF.tooltip = Value of of an object reference in the form <code>type:branch/id</code>.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.SHORT = Short
com.top_logic.knowledge.service.db2.migration.formats.ValueType.SHORT.tooltip = Value of type <i>short</i>.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.SINGLETON = Singleton
com.top_logic.knowledge.service.db2.migration.formats.ValueType.SINGLETON.tooltip = A singleton reference.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.STRING = String
com.top_logic.knowledge.service.db2.migration.formats.ValueType.STRING.tooltip = Value of type <i>string</i>.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.TLID = Tlid
com.top_logic.knowledge.service.db2.migration.formats.ValueType.TLID.tooltip = <i>Tlid</i> value.
com.top_logic.knowledge.service.db2.migration.formats.ValueType.tooltip = Type of a property value.
com.top_logic.knowledge.service.db2.migration.processor.AbstractXsltProcessor = Xslt processor
com.top_logic.knowledge.service.db2.migration.processor.AbstractXsltProcessor.Config.transform = Transform
com.top_logic.knowledge.service.db2.migration.processor.AbstractXsltProcessor.Config.transform.tooltip = The XSLT resource. <p> The value is a resource name starting with a '/' character rooted at the web application root folder. It typically starts with the prefix <code>/WEB-INF/kbase/migration/</code>. </p>
com.top_logic.knowledge.service.db2.migration.processor.AbstractXsltProcessor.tooltip = Superclass for <i>migration processor</i> that changes an XML value by applying an XSLT transformation.
com.top_logic.knowledge.service.db2.migration.processor.RegExpReplacement = Reg exp replacement
com.top_logic.knowledge.service.db2.migration.processor.RegExpReplacement.Config.replacement = Replacement
com.top_logic.knowledge.service.db2.migration.processor.RegExpReplacement.Config.replacement.tooltip = String that is used to replace the parts of the source string the match the given <i>Search pattern</i>.
com.top_logic.knowledge.service.db2.migration.processor.RegExpReplacement.Config.search-pattern = Search pattern
com.top_logic.knowledge.service.db2.migration.processor.RegExpReplacement.Config.search-pattern.tooltip = <i>Pattern</i> to which the part of a string must correspond in order to be replaced.
com.top_logic.knowledge.service.db2.migration.processor.RegExpReplacement.tooltip = Mapping that replaces all parts in the source string that match a given regular expression.
com.top_logic.knowledge.service.db2.migration.processor.StringColumnTransformProcessor = String column transform processor
com.top_logic.knowledge.service.db2.migration.processor.StringColumnTransformProcessor.Config.column = Column
com.top_logic.knowledge.service.db2.migration.processor.StringColumnTransformProcessor.Config.column.tooltip = The column containing XML values to transform.
com.top_logic.knowledge.service.db2.migration.processor.StringColumnTransformProcessor.Config.raw-table-names = Raw table names
com.top_logic.knowledge.service.db2.migration.processor.StringColumnTransformProcessor.Config.raw-table-names.tooltip = Whether to use the concrete names of the database in <i>Table</i> and <i>Column</i>. <p> By default, <i>TopLogic</i> type names are used in the configuration and automatically converted to all-upper-case with underscore as separator. </p> <p> Note: If a table definition has set the DB name property set, you must use raw table names for specifying the transformation target. </p>
com.top_logic.knowledge.service.db2.migration.processor.StringColumnTransformProcessor.Config.table = Table
com.top_logic.knowledge.service.db2.migration.processor.StringColumnTransformProcessor.Config.table.tooltip = The table name declaring the <i>Column</i>.
com.top_logic.knowledge.service.db2.migration.processor.StringColumnTransformProcessor.tooltip = Abstract superclass for <i>migration processor</i> that modify a <i>string</i> valued column.
com.top_logic.knowledge.service.db2.migration.processor.StringReplacement = String replacement
com.top_logic.knowledge.service.db2.migration.processor.StringReplacement.Config.replacement = Replacement
com.top_logic.knowledge.service.db2.migration.processor.StringReplacement.Config.replacement.tooltip = The <i>string</i> that is used for all occurrences of <i>Target</i>.
com.top_logic.knowledge.service.db2.migration.processor.StringReplacement.Config.target = Target
com.top_logic.knowledge.service.db2.migration.processor.StringReplacement.Config.target.tooltip = The <i>string</i> whose occurrences have to be replaced.
com.top_logic.knowledge.service.db2.migration.processor.StringReplacement.tooltip = Mapping that replaces all occurrences of a configured <i>string</i> by another one.
com.top_logic.knowledge.service.db2.migration.processor.StringReplacementProcessor = String replacement processor
com.top_logic.knowledge.service.db2.migration.processor.StringReplacementProcessor.Config.replacements = Replacements
com.top_logic.knowledge.service.db2.migration.processor.StringReplacementProcessor.Config.replacements.tooltip = Replacements the are applied to the value of <i>Column</i> in each row of <i>Table</i>.
com.top_logic.knowledge.service.db2.migration.processor.StringReplacementProcessor.tooltip = <i>String column transform processor</i> that uses a (list of) configured <i>mappings</i> that are applied in given order to the value in the configured column.
com.top_logic.knowledge.service.db2.migration.processor.XsltColumnProcessor = Xslt column processor
com.top_logic.knowledge.service.db2.migration.processor.XsltColumnProcessor.Config.indent = Indent
com.top_logic.knowledge.service.db2.migration.processor.XsltColumnProcessor.Config.indent.tooltip = Whether to properly indent the result.
com.top_logic.knowledge.service.db2.migration.processor.XsltColumnProcessor.Config.transform = Transform
com.top_logic.knowledge.service.db2.migration.processor.XsltColumnProcessor.Config.transform.tooltip = The XSLT resource.
com.top_logic.knowledge.service.db2.migration.processor.XsltColumnProcessor.tooltip = <i>Migration processor</i> that applies a XSLT to all values of a certain column of a certain table.
com.top_logic.knowledge.service.db2.migration.processor.XsltTableDefinitionBaselineProcessor = Xslt table definition baseline processor
com.top_logic.knowledge.service.db2.migration.processor.XsltTableDefinitionBaselineProcessor.tooltip = <i>Migration processor</i> that applies a XSLT to the stored base-line of the application's table definitions (as preparation for an automatic schema migration).
com.top_logic.knowledge.service.db2.migration.rewriters.AssociationInline = Association inline
com.top_logic.knowledge.service.db2.migration.rewriters.AssociationInline.Config.reference-name = Reference name
com.top_logic.knowledge.service.db2.migration.rewriters.AssociationInline.Config.reference-name.tooltip = Name of the reference column in the target object's table which should store the referenced value.
com.top_logic.knowledge.service.db2.migration.rewriters.AssociationInline.Config.reference-value = Reference value
com.top_logic.knowledge.service.db2.migration.rewriters.AssociationInline.Config.reference-value.tooltip = Name of the attribute in the association table which holds the referenced object. <p> Mostly either <code>"source"</code> or <code>"dest"</code> in case of generic associations. </p>
com.top_logic.knowledge.service.db2.migration.rewriters.AssociationInline.Config.target-object = Target object
com.top_logic.knowledge.service.db2.migration.rewriters.AssociationInline.Config.target-object.tooltip = Name of the reference column in the association table which refers to the object that actually has the "to one" reference column in its storage table. <p> Mostly either <code>"source"</code> or <code>"dest"</code> in case of generic associations. </p>
com.top_logic.knowledge.service.db2.migration.rewriters.AssociationInline.Config.types.tooltip = Name of the association table types which actually store the "to one" reference.
com.top_logic.knowledge.service.db2.migration.rewriters.AssociationInline.tooltip = Rewriter that deletes association events and inlines the corrsponding (singleton) references into the source or destination object. <p> Often a <i>knowledge association</i> is actually a "to one" reference and can be stored in the source (or destination) object of the <i>knowledge association</i>. This <i>rewriter</i> removes such <i>knowledge association</i> links and connects the ends using a reference attribute. </p>
com.top_logic.knowledge.service.db2.migration.rewriters.AttributeConfig = Attribute configuration
com.top_logic.knowledge.service.db2.migration.rewriters.AttributeConfig.attribute = Attribute
com.top_logic.knowledge.service.db2.migration.rewriters.AttributeConfig.attribute.tooltip = Name of the configured attribute.
com.top_logic.knowledge.service.db2.migration.rewriters.AttributeConfig.tooltip = Configuration of an attribute.
com.top_logic.knowledge.service.db2.migration.rewriters.AttributeNameFilter = Attribute name filter
com.top_logic.knowledge.service.db2.migration.rewriters.AttributeNameFilter.Config.exclude-pattern = Exclude pattern
com.top_logic.knowledge.service.db2.migration.rewriters.AttributeNameFilter.Config.exclude-pattern.tooltip = Pattern matching the attributes to remove.
com.top_logic.knowledge.service.db2.migration.rewriters.AttributeNameFilter.tooltip = <i>Attribute rewriter</i> that drops attributes matching a certain regular expression.
com.top_logic.knowledge.service.db2.migration.rewriters.AttributePatternValueConversion = Attribute pattern value conversion
com.top_logic.knowledge.service.db2.migration.rewriters.AttributePatternValueConversion.Config.attribute-pattern = Attribute pattern
com.top_logic.knowledge.service.db2.migration.rewriters.AttributePatternValueConversion.Config.attribute-pattern.tooltip = Pattern matching the name of an attribute to apply the conversion to.
com.top_logic.knowledge.service.db2.migration.rewriters.AttributePatternValueConversion.Config.value-mapping = Value mapping
com.top_logic.knowledge.service.db2.migration.rewriters.AttributePatternValueConversion.Config.value-mapping.tooltip = Conversion operation to process the source value with.
com.top_logic.knowledge.service.db2.migration.rewriters.AttributePatternValueConversion.tooltip = <i>Event rewriter</i> that changes values of attributes in <i>item change</i> events.
com.top_logic.knowledge.service.db2.migration.rewriters.AttributeRewriter = Attribute rewriter
com.top_logic.knowledge.service.db2.migration.rewriters.AttributeRewriter.Config.algorithm = Algorithm
com.top_logic.knowledge.service.db2.migration.rewriters.AttributeRewriter.Config.algorithm.tooltip = The algorithm that rewrites the <i>item change</i>.
com.top_logic.knowledge.service.db2.migration.rewriters.AttributeRewriter.tooltip = Superclass for <i>rewriter</i> that rewrites the values of an <i>item change</i> and does not skip additional events.
com.top_logic.knowledge.service.db2.migration.rewriters.ChangeTablesAnnotation = Change tables annotation
com.top_logic.knowledge.service.db2.migration.rewriters.ChangeTablesAnnotation.Config.source-table = Source table
com.top_logic.knowledge.service.db2.migration.rewriters.ChangeTablesAnnotation.Config.source-table.tooltip = The source table. Identifies the <i>table name</i> to rewrite.
com.top_logic.knowledge.service.db2.migration.rewriters.ChangeTablesAnnotation.Config.target-table = Target table
com.top_logic.knowledge.service.db2.migration.rewriters.ChangeTablesAnnotation.Config.target-table.tooltip = The new table to write to.
com.top_logic.knowledge.service.db2.migration.rewriters.ChangeTablesAnnotation.tooltip = Mapping rewriting the <i>table name</i> annotation of a <i>annotation configs</i>.
com.top_logic.knowledge.service.db2.migration.rewriters.ChangeValue = Change value
com.top_logic.knowledge.service.db2.migration.rewriters.ChangeValue.Config.new-value = New value
com.top_logic.knowledge.service.db2.migration.rewriters.ChangeValue.Config.new-value.tooltip = New value of the attribute.
com.top_logic.knowledge.service.db2.migration.rewriters.ChangeValue.Config.old-value = Old value
com.top_logic.knowledge.service.db2.migration.rewriters.ChangeValue.Config.old-value.tooltip = If not <code>null</code>, the attribute is rewritten, when the value equals this <i>dump value spec</i>.
com.top_logic.knowledge.service.db2.migration.rewriters.ChangeValue.tooltip = <i>Configured item change rewriter</i> changing values of an attribute
com.top_logic.knowledge.service.db2.migration.rewriters.ConfigurationAttributeChange = Configuration attribute change
com.top_logic.knowledge.service.db2.migration.rewriters.ConfigurationAttributeChange.Config.mapping = Mapping
com.top_logic.knowledge.service.db2.migration.rewriters.ConfigurationAttributeChange.Config.mapping.tooltip = Configuration of the mapping from the old value to the new value. <p> The <i>mapping</i> must fulfil the following conditions. </p> <ul> <li>The <i>mapping</i> returns the same <i>configuration item</i> (the same java <i>object</i>) to indicate that the value must not be changed.</li> <li>The given value must no be modified.</li> <li>The <i>mapping</i> returns a new <i>configuration item</i> (or <code>null</code>) which is the new value for the attribute.</li> </ul>
com.top_logic.knowledge.service.db2.migration.rewriters.ConfigurationAttributeChange.tooltip = <i>Item change rewriter</i> changing the value of an configuration values attribute
com.top_logic.knowledge.service.db2.migration.rewriters.ConfiguredItemChangeRewriter = Configured item change rewriter
com.top_logic.knowledge.service.db2.migration.rewriters.ConfiguredItemChangeRewriter.tooltip = Abstract superclass for <i>item change rewriter</i> with configuration.
com.top_logic.knowledge.service.db2.migration.rewriters.FilteredConsumer = Filtered consumer
com.top_logic.knowledge.service.db2.migration.rewriters.FilteredConsumer.Config.consumer = Consumer
com.top_logic.knowledge.service.db2.migration.rewriters.FilteredConsumer.Config.consumer.tooltip = The algorithm that rewrites the <i>item change</i>.
com.top_logic.knowledge.service.db2.migration.rewriters.FilteredConsumer.Config.filter = Filter
com.top_logic.knowledge.service.db2.migration.rewriters.FilteredConsumer.Config.filter.tooltip = The algorithm that rewrites the <i>item change</i>.
com.top_logic.knowledge.service.db2.migration.rewriters.FilteredConsumer.tooltip = <i>Consumer</i> delegating to a configured <i>consumer</i> when a configured <i>filter</i> matches.
com.top_logic.knowledge.service.db2.migration.rewriters.ForeignKeyConverter = Foreign key converter
com.top_logic.knowledge.service.db2.migration.rewriters.ForeignKeyConverter.Config.reference-conversion = Reference conversion
com.top_logic.knowledge.service.db2.migration.rewriters.ForeignKeyConverter.Config.reference-conversion.tooltip = <i>Reference conversion</i> to apply to the referenced object.
com.top_logic.knowledge.service.db2.migration.rewriters.ForeignKeyConverter.Config.reference-name = Reference name
com.top_logic.knowledge.service.db2.migration.rewriters.ForeignKeyConverter.Config.reference-name.tooltip = Name of the reference attribute to put value to.
com.top_logic.knowledge.service.db2.migration.rewriters.ForeignKeyConverter.tooltip = Rewriter converting an <i>string</i> attribute value into an <i>object key</i> as value for a reference attribute.
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl = ID mapper implementation
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl$Config$AttributesConfiguration = Attributes configuration
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl$Config$AttributesConfiguration.tooltip = Configuration of an attribute defining an item uniquely.
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl$Config$TargetMapping = Target mapping
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl$Config$TargetMapping.tooltip = Configuration of the attributes whose values identify an object unique.
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.AttributesConfiguration.source = Source
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.AttributesConfiguration.source-mapping = Source mapping
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.AttributesConfiguration.source-mapping.tooltip = Mapping to use for the value of the source attribute to identify with the value in the target database.
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.AttributesConfiguration.source.tooltip = Name of the attribute in the source database which identifies the item.
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.AttributesConfiguration.target = Target
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.AttributesConfiguration.target-mapping = Target mapping
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.AttributesConfiguration.target-mapping.tooltip = Mapping to use for the value of the target attribute to identify with the value in the source database.
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.AttributesConfiguration.target.tooltip = Name of the attribute in the target database identifying the item unique.
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.TargetMapping.attributes = Attributes
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.TargetMapping.attributes.tooltip = List of attributes whose values for an object of the given type identify the object uniquely. <p> Either this attribute or <i>Key attributes</i> must be set but not both. </p>
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.TargetMapping.key-attributes = Key attributes
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.TargetMapping.key-attributes.tooltip = List of attributes whose values for an object of the given type identify the object uniquely. <p> This is a shortcut for <i>Attributes</i> where source and target are same. </p> <p> Either this attribute or <i>Attributes</i> must be set but not both. </p>
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.TargetMapping.type = Type
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.TargetMapping.type.tooltip = Name of the type whose key attributes are configured.
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.mappings = Mappings
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.Config.mappings.tooltip = Configured <i>target mapping</i> indexed by <i>Type</i> (<i>ID mapper implementation configuration target mapping</i>).
com.top_logic.knowledge.service.db2.migration.rewriters.IdMapperImpl.tooltip = <i>Rewriter</i> that create target <i>tlid</i> from the source <i>tlid</i> and rewrites the events by replacing the ID's.
com.top_logic.knowledge.service.db2.migration.rewriters.IndexerImpl = Indexer implementation
com.top_logic.knowledge.service.db2.migration.rewriters.IndexerImpl.tooltip = Implementation of <i>indexer</i> that updates its internal cache due to visited <i>item events</i>.
com.top_logic.knowledge.service.db2.migration.rewriters.IntroduceRandomSortOrder = Introduce random sort order
com.top_logic.knowledge.service.db2.migration.rewriters.IntroduceRandomSortOrder.Config.attribute = Attribute
com.top_logic.knowledge.service.db2.migration.rewriters.IntroduceRandomSortOrder.Config.attribute.tooltip = The full qualified name of the reference <i>structured type part</i>. E.g. "orgStructure:OrgUnit.base#selectedMaturities".
com.top_logic.knowledge.service.db2.migration.rewriters.IntroduceRandomSortOrder.Config.ma-attribute-name = Ma attribute name
com.top_logic.knowledge.service.db2.migration.rewriters.IntroduceRandomSortOrder.Config.ma-attribute-name.tooltip = Name of the attribute in the association type holding the identifier of the <i>structured type part</i>.
com.top_logic.knowledge.service.db2.migration.rewriters.IntroduceRandomSortOrder.Config.sort-order-attribute = Sort order attribute
com.top_logic.knowledge.service.db2.migration.rewriters.IntroduceRandomSortOrder.Config.sort-order-attribute.tooltip = Name of the sort order attribute.
com.top_logic.knowledge.service.db2.migration.rewriters.IntroduceRandomSortOrder.tooltip = <i>Rewriter</i> setting a sort order to an association value when there is none. <p> When an reference attribute was changed from "set reference" to "list reference", the values must be sorted when this is not done, this rewriter assigns a sort order to those associations. </p>
com.top_logic.knowledge.service.db2.migration.rewriters.MigrationModelIndex = Migration model index
com.top_logic.knowledge.service.db2.migration.rewriters.MigrationModelIndex.Config.indexed-types = Indexed types
com.top_logic.knowledge.service.db2.migration.rewriters.MigrationModelIndex.Config.indexed-types.tooltip = Fully qualified names of types, for which object type resolution should be supported.
com.top_logic.knowledge.service.db2.migration.rewriters.MigrationModelIndex.Config.name = Name
com.top_logic.knowledge.service.db2.migration.rewriters.MigrationModelIndex.Config.name.tooltip = Anchor property to allow resolving a <i>migration model index</i> from the configuration context.
com.top_logic.knowledge.service.db2.migration.rewriters.MigrationModelIndex.Config.rewriters = Rewriters
com.top_logic.knowledge.service.db2.migration.rewriters.MigrationModelIndex.Config.rewriters.tooltip = Inner rewriters that can make use of the model index created.
com.top_logic.knowledge.service.db2.migration.rewriters.MigrationModelIndex.tooltip = Index that allows to resolve names of model references and type names for objects during migration.
com.top_logic.knowledge.service.db2.migration.rewriters.ModelIndexer = Model indexer
com.top_logic.knowledge.service.db2.migration.rewriters.ModelIndexer.tooltip = <i>Rewriting event visitor</i> changing the annotations for a certain <i>type part</i>. <p> The rewrites modifies all versions of affected model parts. </p>
com.top_logic.knowledge.service.db2.migration.rewriters.MoveTLTypeToTable = Move type to table
com.top_logic.knowledge.service.db2.migration.rewriters.MoveTLTypeToTable.Config.target-table = Target table
com.top_logic.knowledge.service.db2.migration.rewriters.MoveTLTypeToTable.Config.target-table.tooltip = The name of the table to move instances to.
com.top_logic.knowledge.service.db2.migration.rewriters.MoveTLTypeToTable.Config.types = Types
com.top_logic.knowledge.service.db2.migration.rewriters.MoveTLTypeToTable.Config.types.tooltip = Fully qualified names of all types whose instances should move to <i>Target table</i>. <p> Note: All types and their sub-types that should be moved must be enumerated here. Sub-types are not moved automatically. </p>
com.top_logic.knowledge.service.db2.migration.rewriters.MoveTLTypeToTable.Config.value-rewriter = Value rewriter
com.top_logic.knowledge.service.db2.migration.rewriters.MoveTLTypeToTable.Config.value-rewriter.tooltip = Delegate visitor that receives all events of moved objects.
com.top_logic.knowledge.service.db2.migration.rewriters.MoveTLTypeToTable.tooltip = <i>Rewriting event visitor</i> moving instances of several <i>business object typees</i> to a new table.
com.top_logic.knowledge.service.db2.migration.rewriters.PatternMatchValueChange = Pattern match value change
com.top_logic.knowledge.service.db2.migration.rewriters.PatternMatchValueChange.Config.new-value = New value
com.top_logic.knowledge.service.db2.migration.rewriters.PatternMatchValueChange.Config.new-value.tooltip = Pattern which the is used to replace the value matched by <i>Old value</i>.
com.top_logic.knowledge.service.db2.migration.rewriters.PatternMatchValueChange.Config.old-value = Old value
com.top_logic.knowledge.service.db2.migration.rewriters.PatternMatchValueChange.Config.old-value.tooltip = Pattern which the value must match to be changed.
com.top_logic.knowledge.service.db2.migration.rewriters.PatternMatchValueChange.tooltip = An <i>configured item change rewriter</i> based on a regular expression.
com.top_logic.knowledge.service.db2.migration.rewriters.ProvidesAPI = Provides API
com.top_logic.knowledge.service.db2.migration.rewriters.ProvidesAPI.tooltip = Annotation for classes that serves as API for the <i>value</i>. <p> When an instance of a such annotated class is instantiated, it can later be used as implementation for the provided API. </p>
com.top_logic.knowledge.service.db2.migration.rewriters.ProvidesAPI.value = Value
com.top_logic.knowledge.service.db2.migration.rewriters.ProvidesAPI.value.tooltip = The class of the interface for which the annotated class can be uses as instance.
com.top_logic.knowledge.service.db2.migration.rewriters.ReferenceHasTypeFilter = Reference has type filter
com.top_logic.knowledge.service.db2.migration.rewriters.ReferenceHasTypeFilter.Config.reference = Reference
com.top_logic.knowledge.service.db2.migration.rewriters.ReferenceHasTypeFilter.Config.reference.tooltip = Name of the reference column to test values.
com.top_logic.knowledge.service.db2.migration.rewriters.ReferenceHasTypeFilter.Config.types = Types
com.top_logic.knowledge.service.db2.migration.rewriters.ReferenceHasTypeFilter.Config.types.tooltip = Fully qualified model type names. <p> The filter accepts events, if the <i>Reference</i> contains an object that has one of the given types. </p> <p> Note: Sub-types are not matched. All concrete types that should match must be enumerated. </p>
com.top_logic.knowledge.service.db2.migration.rewriters.ReferenceHasTypeFilter.tooltip = <i>Configurable filter</i> that accepts <i>item change</i> events, if they contain a reference to an object of a certain model type.
com.top_logic.knowledge.service.db2.migration.rewriters.ReferencesModelElementFilter = References model element filter
com.top_logic.knowledge.service.db2.migration.rewriters.ReferencesModelElementFilter.Config.model-elements = Model elements
com.top_logic.knowledge.service.db2.migration.rewriters.ReferencesModelElementFilter.Config.model-elements.tooltip = Fully qualified model type names. <p> The filter accepts events, if the <i>Reference</i> contains an object that has one of the given types. </p> <p> Note: Sub-types are not matched. All concrete types that should match must be enumerated. </p>
com.top_logic.knowledge.service.db2.migration.rewriters.ReferencesModelElementFilter.Config.reference = Reference
com.top_logic.knowledge.service.db2.migration.rewriters.ReferencesModelElementFilter.Config.reference.tooltip = Name of the reference column to test values.
com.top_logic.knowledge.service.db2.migration.rewriters.ReferencesModelElementFilter.tooltip = <i>Configurable filter</i> that accepts <i>item change</i> events, if they contain a reference to given model element.
com.top_logic.knowledge.service.db2.migration.rewriters.RevisionMerge = Revision merge
com.top_logic.knowledge.service.db2.migration.rewriters.RevisionMerge.Config.start-revision = Start revision
com.top_logic.knowledge.service.db2.migration.rewriters.RevisionMerge.Config.start-revision.tooltip = The first revision to merge (inclusive).
com.top_logic.knowledge.service.db2.migration.rewriters.RevisionMerge.Config.stop-revision = Stop revision
com.top_logic.knowledge.service.db2.migration.rewriters.RevisionMerge.Config.stop-revision.tooltip = The last revision to merge (inclusive). Must be <code>&gt;= startRevision</code>
com.top_logic.knowledge.service.db2.migration.rewriters.RevisionMerge.tooltip = <i>Event rewriter</i> merging all revision between given revisions (including those revisions) into one revision.
com.top_logic.knowledge.service.db2.migration.rewriters.Rewriter = Rewriter
com.top_logic.knowledge.service.db2.migration.rewriters.Rewriter.tooltip = <i>Rewriting event visitor</i> which rewrites only events of certain types which match a configured filter.
com.top_logic.knowledge.service.db2.migration.rewriters.SetModelPartAnnotation = Set model part annotation
com.top_logic.knowledge.service.db2.migration.rewriters.SetModelPartAnnotation.Config.annotations = Annotations
com.top_logic.knowledge.service.db2.migration.rewriters.SetModelPartAnnotation.Config.annotations.tooltip = New <i>annotations</i> to set.
com.top_logic.knowledge.service.db2.migration.rewriters.SetModelPartAnnotation.Config.attribute = Attribute
com.top_logic.knowledge.service.db2.migration.rewriters.SetModelPartAnnotation.Config.attribute.tooltip = Name of the <i>type part</i> for which the annotations must be changed.
com.top_logic.knowledge.service.db2.migration.rewriters.SetModelPartAnnotation.Config.module = Module
com.top_logic.knowledge.service.db2.migration.rewriters.SetModelPartAnnotation.Config.module.tooltip = Name of the <i>module</i> containing the <i>structured type part</i>
com.top_logic.knowledge.service.db2.migration.rewriters.SetModelPartAnnotation.Config.type = Type
com.top_logic.knowledge.service.db2.migration.rewriters.SetModelPartAnnotation.Config.type.tooltip = Name of the <i>structured type</i> containing the <i>structured type part</i>.
com.top_logic.knowledge.service.db2.migration.rewriters.SetModelPartAnnotation.tooltip = <i>Rewriting event visitor</i> setting the annotations for a certain <i>named part</i>. <p> The rewrites ensures that for all time the annotations are the same, i.e. when the annotations has been changed during the timelife of the application, the modifications are overridden. </p>
com.top_logic.knowledge.service.db2.migration.rewriters.StringToTLIDConverter = String to TLID converter
com.top_logic.knowledge.service.db2.migration.rewriters.StringToTLIDConverter.tooltip = <i>Configured item change rewriter</i> that transforms the <i>string</i> value of the attribute into the <i>tlid</i> value.
com.top_logic.knowledge.service.db2.migration.rewriters.XsltValueTransform = Xslt value transform
com.top_logic.knowledge.service.db2.migration.rewriters.XsltValueTransform.Config.indent = Indent
com.top_logic.knowledge.service.db2.migration.rewriters.XsltValueTransform.Config.indent.tooltip = Whether to properly indent the result.
com.top_logic.knowledge.service.db2.migration.rewriters.XsltValueTransform.Config.transform = Transform
com.top_logic.knowledge.service.db2.migration.rewriters.XsltValueTransform.Config.transform.tooltip = Name of the XSLT transformation resource (path name relative to the web application root) to apply to the given <i>Attribute</i>.
com.top_logic.knowledge.service.db2.migration.rewriters.XsltValueTransform.tooltip = An <i>configured item change rewriter</i> transforming an XML attribute using a XSLT transformation.
com.top_logic.knowledge.service.encryption.SecurityService = Security service
com.top_logic.knowledge.service.encryption.SecurityService.Config.providers = Providers
com.top_logic.knowledge.service.encryption.SecurityService.Config.providers.tooltip = Security providers.
com.top_logic.knowledge.service.encryption.SecurityService.tooltip = Service for the application security by, among other things, registering security providers.
com.top_logic.knowledge.service.encryption.data.EncryptedFlexDataManagerFactory = Encrypted flex data manager factory
com.top_logic.knowledge.service.encryption.data.EncryptedFlexDataManagerFactory.Config.transformer = Transformer
com.top_logic.knowledge.service.encryption.data.EncryptedFlexDataManagerFactory.Config.transformer.tooltip = Configuration for the transformer
com.top_logic.knowledge.service.encryption.data.EncryptedFlexDataManagerFactory.tooltip = <i>Flex data manager factory</i> that creates <i>encrypted flex data managers</i>.
com.top_logic.knowledge.service.encryption.pbe.PasswordBasedEncryptionService = Password based encryption service
com.top_logic.knowledge.service.encryption.pbe.PasswordBasedEncryptionService.Config.encryption-algorithm = Encryption algorithm
com.top_logic.knowledge.service.encryption.pbe.PasswordBasedEncryptionService.Config.encryption-algorithm.tooltip = The algorithm for data encryption.
com.top_logic.knowledge.service.encryption.pbe.PasswordBasedEncryptionService.Config.iterations = Iterations
com.top_logic.knowledge.service.encryption.pbe.PasswordBasedEncryptionService.Config.iterations.tooltip = Iterations the algorithm uses.
com.top_logic.knowledge.service.encryption.pbe.PasswordBasedEncryptionService.Config.pbe-algorithm = Pbe algorithm
com.top_logic.knowledge.service.encryption.pbe.PasswordBasedEncryptionService.Config.pbe-algorithm.tooltip = The password based encryption algorithm for encrypting the encryption key.
com.top_logic.knowledge.service.encryption.pbe.PasswordBasedEncryptionService.Config.salt-length = Salt length
com.top_logic.knowledge.service.encryption.pbe.PasswordBasedEncryptionService.Config.salt-length.tooltip = Salt length the algorithm uses.
com.top_logic.knowledge.service.encryption.pbe.PasswordBasedEncryptionService.tooltip = <i>Encryption service</i> that manages a password protected symmetric key.
com.top_logic.knowledge.service.listener.ContentChangeEventListener = Content change event listener
com.top_logic.knowledge.service.listener.ContentChangeEventListener.Config.types = Types
com.top_logic.knowledge.service.listener.ContentChangeEventListener.Config.types.tooltip = Types.
com.top_logic.knowledge.service.listener.ContentChangeEventListener.tooltip = Create appropriate DocumentEvents in case the physical resource of a knowledge object changes. Do not use this class as it possibly result in deadlocks when used multithreaded.
com.top_logic.knowledge.service.migration.CreateTablesProcessor = Create tables processor
com.top_logic.knowledge.service.migration.CreateTablesProcessor.tooltip = <i>Migration processor</i> creating the configured tables.
com.top_logic.knowledge.service.migration.DeleteTableProcessor = Delete table processor
com.top_logic.knowledge.service.migration.DeleteTableProcessor$Config$TableRef = Table reference
com.top_logic.knowledge.service.migration.DeleteTableProcessor$Config$TableRef.tooltip = Reference to the table to delete.
com.top_logic.knowledge.service.migration.DeleteTableProcessor.Config.TableRef.db_name = Database name
com.top_logic.knowledge.service.migration.DeleteTableProcessor.Config.TableRef.db_name.tooltip = Optional name of the table as used in SQL.
com.top_logic.knowledge.service.migration.DeleteTableProcessor.Config.providers = Providers
com.top_logic.knowledge.service.migration.DeleteTableProcessor.Config.providers.tooltip = Names of type providers to remove from the stored DB configuration.
com.top_logic.knowledge.service.migration.DeleteTableProcessor.Config.tables = Tables
com.top_logic.knowledge.service.migration.DeleteTableProcessor.Config.tables.tooltip = Names of the table types to delete.
com.top_logic.knowledge.service.migration.DeleteTableProcessor.tooltip = <i>Migration processor</i> deleting no longer used tables.
com.top_logic.knowledge.service.migration.InsertBranchSwitchProcessor = Insert branch switch processor
com.top_logic.knowledge.service.migration.InsertBranchSwitchProcessor.Config.table-types = Table types
com.top_logic.knowledge.service.migration.InsertBranchSwitchProcessor.Config.table-types.tooltip = Names of the table types to create branch switch entries for.
com.top_logic.knowledge.service.migration.InsertBranchSwitchProcessor.tooltip = <i>Migration processor</i> inserting initial branch-switch rows for new tables.
com.top_logic.knowledge.service.migration.MigrationConfig = Migration configuration
com.top_logic.knowledge.service.migration.MigrationConfig.dependencies = Dependencies
com.top_logic.knowledge.service.migration.MigrationConfig.dependencies.tooltip = The versions which are needed to be able to apply this migration. <p> The dependencies are complete in the sense that for all dependent modules, if there is a version, a version is contained. </p>
com.top_logic.knowledge.service.migration.MigrationConfig.migration = Migration
com.top_logic.knowledge.service.migration.MigrationConfig.migration.tooltip = Definition of the migration steps of a replay.
com.top_logic.knowledge.service.migration.MigrationConfig.post-processors = Post processors
com.top_logic.knowledge.service.migration.MigrationConfig.post-processors.tooltip = <i>Migration post processors</i> that are executed after a replay migration has potentially happened.
com.top_logic.knowledge.service.migration.MigrationConfig.processors = Processors
com.top_logic.knowledge.service.migration.MigrationConfig.processors.tooltip = <i>Migration processor</i> to execute before the actual migration as described in <i>Migration</i>.
com.top_logic.knowledge.service.migration.MigrationConfig.schema-update = Schema update
com.top_logic.knowledge.service.migration.MigrationConfig.schema-update.tooltip = Whether the stored DB schema baseline is updated after all migrations are performed.
com.top_logic.knowledge.service.migration.MigrationConfig.tooltip = Configuration of the migration steps for the represented version.
com.top_logic.knowledge.service.migration.MigrationConfig.version = Version
com.top_logic.knowledge.service.migration.MigrationConfig.version.tooltip = The <i>version</i> for which this migration is made.
com.top_logic.knowledge.service.migration.MigrationService = Migration service
com.top_logic.knowledge.service.migration.MigrationService.Config.allow-downgrade = Allow downgrade
com.top_logic.knowledge.service.migration.MigrationService.Config.allow-downgrade.tooltip = Whether to allow booting even if the version in the database is "higher" than the version of the deployed application. <p> Normally (if this switch is <code>false</code>), booting an old version of an application on a new data version read from the database is prevented. Under rare circumstances, it can be necessary to disable this check to allow booting the main branch of an application on a database that contains (temporary) migrations done in deployments from temporary branches of the application. </p>
com.top_logic.knowledge.service.migration.MigrationService.Config.bufferSize = Buffer size
com.top_logic.knowledge.service.migration.MigrationService.Config.bufferSize.tooltip = Maximal number of items to hold in cache before the insert SQL is created.
com.top_logic.knowledge.service.migration.MigrationService.Config.encryptionAlgorithm = Encryption algorithm
com.top_logic.knowledge.service.migration.MigrationService.Config.encryptionAlgorithm.tooltip = The algorithm that is used to encrypt temporary files.
com.top_logic.knowledge.service.migration.MigrationService.Config.insertChunkSize = Insert chunk size
com.top_logic.knowledge.service.migration.MigrationService.Config.insertChunkSize.tooltip = Maximal number of rows to insert in one statement.
com.top_logic.knowledge.service.migration.MigrationService.Config.modules = Modules
com.top_logic.knowledge.service.migration.MigrationService.Config.modules.tooltip = The database modules.
com.top_logic.knowledge.service.migration.MigrationService.tooltip = <i>Managed class</i> that automatically migrates the application to the newest version. <p> Migrations to perform are described in XML configurations corresponding to the <i>migration configuration</i> schema located in the directory <code>"/WEB-INF/kbase/migration/"</code> in an application. The service automatically keeps track of the migrations already applied so that no <i>migration configuration</i> is applied twice. In other words, the set of <i>migration configurations</i> applied corresponds to the database version of the application. </p>
com.top_logic.knowledge.service.migration.SQLMigrationProcessor = SQL migration processor
com.top_logic.knowledge.service.migration.SQLMigrationProcessor.Config.file-encoding = File encoding
com.top_logic.knowledge.service.migration.SQLMigrationProcessor.Config.file-encoding.tooltip = Encoding of the SQL files.
com.top_logic.knowledge.service.migration.SQLMigrationProcessor.Config.file-name-prefix = File name prefix
com.top_logic.knowledge.service.migration.SQLMigrationProcessor.Config.file-name-prefix.tooltip = File name prefix of the SQL file. The actual file name has the form <i> 'fileNamePrefix'.'sqlDialect'.sql</i>, where 'fileNamePrefix' is value of <i>File name prefix</i>, and 'sqlDialect' something like 'mysql', 'oracle', or 'mssql'.
com.top_logic.knowledge.service.migration.SQLMigrationProcessor.tooltip = <i>Migration processor</i> executing simple SQL files.
com.top_logic.knowledge.service.migration.Version = Version
com.top_logic.knowledge.service.migration.Version.module = Module
com.top_logic.knowledge.service.migration.Version.module.tooltip = Name of a module which requires a database version.
com.top_logic.knowledge.service.migration.Version.name.tooltip = Name of the version in the database.
com.top_logic.knowledge.service.migration.Version.tooltip = Representation of a database version in <i>TopLogic</i>.
com.top_logic.knowledge.service.migration.VersionDescriptor = Version descriptor
com.top_logic.knowledge.service.migration.VersionDescriptor.module-versions = Module versions
com.top_logic.knowledge.service.migration.VersionDescriptor.module-versions.tooltip = <i>Version</i> descriptors for each module.
com.top_logic.knowledge.service.migration.VersionDescriptor.tooltip = Descriptor for an application data version.
com.top_logic.knowledge.service.migration.dump.KBDumpHandler = Knowledge-base dump handler
com.top_logic.knowledge.service.migration.dump.KBDumpHandler.Config.excludeTypes = Exclude types
com.top_logic.knowledge.service.migration.dump.KBDumpHandler.Config.excludeTypes.tooltip = The types to exclude. <p> If this property is not set, the default exclude types are used. </p>
com.top_logic.knowledge.service.migration.dump.KBDumpHandler.tooltip = <i>Download handler</i> delivering the database dump as download.
com.top_logic.knowledge.service.migration.load.LoadDataCommand = Load data command
com.top_logic.knowledge.service.migration.load.LoadDataCommand.tooltip = <i>Command handler</i> starting a data import process.
com.top_logic.knowledge.service.xml.annotation.FullLoadAnnotation = Full load annotation
com.top_logic.knowledge.service.xml.annotation.FullLoadAnnotation.full-load = Full load
com.top_logic.knowledge.service.xml.annotation.FullLoadAnnotation.full-load.tooltip = Whether this class uses the full-load strategy for searches by default. <p> In a search, either a two-stage load (identifiers of matched objects first and data only for those objects that are not already in cache), or a full load (identifier together with data) is performed. The full-load strategy optimizes the number of database requests, while the identifiers-first load minimizes temporary memory usage (at least if some of the result objects are already in the local cache). </p>
com.top_logic.knowledge.service.xml.annotation.FullLoadAnnotation.tooltip = <i>MO annotation</i> marking a <i>MO class</i> using full-load during search.
com.top_logic.knowledge.service.xml.annotation.ImplementationBindingAnnotation = Implementation binding annotation
com.top_logic.knowledge.service.xml.annotation.ImplementationBindingAnnotation.binding = Binding
com.top_logic.knowledge.service.xml.annotation.ImplementationBindingAnnotation.binding.tooltip = The <i>implementation binding</i> to use for the annotated table.
com.top_logic.knowledge.service.xml.annotation.ImplementationBindingAnnotation.tooltip = <i>MO annotation</i> that adds an algorithm to a <i>MO class</i> for determining the Java class to instantiate for rows in that table.
com.top_logic.knowledge.service.xml.annotation.InstancesQueryAnnotation = Instances query annotation
com.top_logic.knowledge.service.xml.annotation.InstancesQueryAnnotation.builder = Builder
com.top_logic.knowledge.service.xml.annotation.InstancesQueryAnnotation.builder.tooltip = The <i>instances query builder</i> to use for the annotated table.
com.top_logic.knowledge.service.xml.annotation.InstancesQueryAnnotation.tooltip = Annotation for an <i>instances query builder</i> on <i>MO class</i>.
com.top_logic.knowledge.service.xml.annotation.KnowledgeItemFactoryAnnotation = Knowledge item factory annotation
com.top_logic.knowledge.service.xml.annotation.KnowledgeItemFactoryAnnotation.implementation-factory = Implementation factory
com.top_logic.knowledge.service.xml.annotation.KnowledgeItemFactoryAnnotation.implementation-factory.tooltip = Returns the factory that creates the <i>knowledge item factory</i> to create the types.
com.top_logic.knowledge.service.xml.annotation.KnowledgeItemFactoryAnnotation.tooltip = <i>MO annotation</i> linking a <i>knowledge item factory</i> to a <i>MO class</i>.
com.top_logic.knowledge.service.xml.annotation.SystemAnnotation = System annotation
com.top_logic.knowledge.service.xml.annotation.SystemAnnotation.tooltip = Marking a <i>MO class</i> as framework internal.
com.top_logic.knowledge.util.TokenBasedTask = Token based task
com.top_logic.knowledge.util.TokenBasedTask.Config.use-commit = Use commit
com.top_logic.knowledge.util.TokenBasedTask.Config.use-commit.tooltip = Use begin/commit only when set (default)
com.top_logic.knowledge.util.TokenBasedTask.tooltip = Thread and cluster save task. This task will try to get an <i>lock</i>. If this succeeds, it'll continue its work by calling <code>#perform()</code>. If the token context cannot be aquired, the task will pause and restart as defined in <i>task implementation</i>.
com.top_logic.knowledge.wrap.CreatePhysicalResource = Create physical resource
com.top_logic.knowledge.wrap.CreatePhysicalResource.DEFERRED = Deferred
com.top_logic.knowledge.wrap.CreatePhysicalResource.DEFERRED.tooltip = Create the physical resource of a <i>web folder</i> the first time it is needed.
com.top_logic.knowledge.wrap.CreatePhysicalResource.IMMEDIATE = Immediate
com.top_logic.knowledge.wrap.CreatePhysicalResource.IMMEDIATE.tooltip = Create the physical resource immediately after creation of <i>web folder</i>.
com.top_logic.knowledge.wrap.CreatePhysicalResource.tooltip = Definition of the time when the physical resource of a <i>web folder</i> must be created.
com.top_logic.knowledge.wrap.TreeWebfolderFactory = Tree webfolder factory
com.top_logic.knowledge.wrap.TreeWebfolderFactory.tooltip = COS Specific variant of the WebFolderFactory.
com.top_logic.knowledge.wrap.WebFolder$LinkType = Link type
com.top_logic.knowledge.wrap.WebFolder$LinkType.tooltip = Values of the <code>"linkType"</code> attribute.
com.top_logic.knowledge.wrap.WebFolder.LinkType.OWNER = Owner
com.top_logic.knowledge.wrap.WebFolder.LinkType.OWNER.tooltip = Indicates ownership, implemented in the database as <code>null</code>.
com.top_logic.knowledge.wrap.WebFolder.LinkType.SOFT_LINK = Soft link
com.top_logic.knowledge.wrap.WebFolder.LinkType.SOFT_LINK.tooltip = Link to a contents of a foreign folder.
com.top_logic.knowledge.wrap.WebFolderFactory = Web folder factory
com.top_logic.knowledge.wrap.WebFolderFactory.Config.create-physical-resource = Create physical resource
com.top_logic.knowledge.wrap.WebFolderFactory.Config.create-physical-resource.tooltip = When to create physical folder for each object.
com.top_logic.knowledge.wrap.WebFolderFactory.Config.folder-types = Folder types
com.top_logic.knowledge.wrap.WebFolderFactory.Config.folder-types.tooltip = Allowed folder types.
com.top_logic.knowledge.wrap.WebFolderFactory.tooltip = Factory for WebFolders.
com.top_logic.knowledge.wrap.binding.DynamicBinding = Dynamic binding
com.top_logic.knowledge.wrap.binding.DynamicBinding.Config.default-application-type = Default application type
com.top_logic.knowledge.wrap.binding.DynamicBinding.Config.default-application-type.tooltip = The application type to use, if the referenced type of the object has no <i>java class</i> annotation.
com.top_logic.knowledge.wrap.binding.DynamicBinding.Config.type-ref = Type reference
com.top_logic.knowledge.wrap.binding.DynamicBinding.Config.type-ref.tooltip = The reference pointing to the <i>business object type</i> type of the object.
com.top_logic.knowledge.wrap.binding.DynamicBinding.tooltip = <i>Implementation binding</i> that determines the application type based on the <i>java class</i> annotation of the specified type reference of the object.
com.top_logic.knowledge.wrap.binding.MonomorphicBinding = Monomorphic binding
com.top_logic.knowledge.wrap.binding.MonomorphicBinding.Config.application-type = Application type
com.top_logic.knowledge.wrap.binding.MonomorphicBinding.Config.application-type.tooltip = The common application type of all objects in the table.
com.top_logic.knowledge.wrap.binding.MonomorphicBinding.tooltip = <i>Implementation binding</i> that uses a single type for all objects in the same table.
com.top_logic.knowledge.wrap.binding.PolymorphicBinding = Polymorphic binding
com.top_logic.knowledge.wrap.binding.PolymorphicBinding$Config$Binding = Binding
com.top_logic.knowledge.wrap.binding.PolymorphicBinding$Config$Binding.tooltip = Entry of <i>Bindings</i> (<i>polymorphic binding configuration</i>).
com.top_logic.knowledge.wrap.binding.PolymorphicBinding.Config.Binding.application-type = Application type
com.top_logic.knowledge.wrap.binding.PolymorphicBinding.Config.Binding.application-type.tooltip = The application type to allocate, if <i>Key attribute</i> (<i>polymorphic binding configuration</i>) contains the value <i>Key</i>.
com.top_logic.knowledge.wrap.binding.PolymorphicBinding.Config.Binding.key = Key
com.top_logic.knowledge.wrap.binding.PolymorphicBinding.Config.Binding.key.tooltip = Value of <i>Key attribute</i> (<i>polymorphic binding configuration</i>) that triggers creating an application type given as <i>Application type</i>.
com.top_logic.knowledge.wrap.binding.PolymorphicBinding.Config.bindings = Bindings
com.top_logic.knowledge.wrap.binding.PolymorphicBinding.Config.bindings.tooltip = Mapping of <i>Key attribute</i> values to <i>Application types</i> (<i>polymorphic binding configuration binding</i>).
com.top_logic.knowledge.wrap.binding.PolymorphicBinding.Config.key-attribute = Key attribute
com.top_logic.knowledge.wrap.binding.PolymorphicBinding.Config.key-attribute.tooltip = The attribute containing discriminating values on which the decision of the concrete application type is based on.
com.top_logic.knowledge.wrap.binding.PolymorphicBinding.Config.resource-type-prefix = Resource type prefix
com.top_logic.knowledge.wrap.binding.PolymorphicBinding.Config.resource-type-prefix.tooltip = No longer in use, property kept for compatibility with legacy configuration.
com.top_logic.knowledge.wrap.binding.PolymorphicBinding.tooltip = <i>Implementation binding</i> that determines the application type based on the contents of a key attribute.
com.top_logic.knowledge.wrap.list.FastListNaming$FastListName = Fast list name
com.top_logic.knowledge.wrap.list.FastListNaming$FastListName.tooltip = The ModelName of the <i>fast list naming</i>.
com.top_logic.knowledge.wrap.list.FastListNaming.FastListName.separator = Separator
com.top_logic.knowledge.wrap.list.FastListNaming.FastListName.separator.tooltip = The separator between the <i>fast list</i> and the <i>fast list element</i>.
com.top_logic.knowledge.wrap.list.FastListNaming.FastListName.translation = Translation
com.top_logic.knowledge.wrap.list.FastListNaming.FastListName.translation.tooltip = The combination of the <i>fast list</i> translation and the <i>fast list element</i> translation, separated by <i>Separator</i>.
com.top_logic.knowledge.wrap.person.Homepage = Homepage
com.top_logic.knowledge.wrap.person.Homepage.component = Component
com.top_logic.knowledge.wrap.person.Homepage.component.tooltip = The name of the component that was set as homepage.
com.top_logic.knowledge.wrap.person.Homepage.main-layout = Main layout
com.top_logic.knowledge.wrap.person.Homepage.main-layout.tooltip = The location of the <i>main layout</i> to which this homepage belongs to.
com.top_logic.knowledge.wrap.person.Homepage.model = Model
com.top_logic.knowledge.wrap.person.Homepage.model.tooltip = The model to set to the homepage component.
com.top_logic.knowledge.wrap.person.Homepage.tooltip = Definition of the homepage of the user.
com.top_logic.knowledge.wrap.person.Homepages = Homepages
com.top_logic.knowledge.wrap.person.Homepages.pages = Pages
com.top_logic.knowledge.wrap.person.Homepages.pages.tooltip = All known homepages for the current user indexed by <i>Main layout</i> (<i>homepage</i>).
com.top_logic.knowledge.wrap.person.Homepages.tooltip = Configuration for the <i>homepages</i> of the current user.
com.top_logic.knowledge.wrap.person.PersonManager = Person manager
com.top_logic.knowledge.wrap.person.PersonManager.Config.knowledge-base = Knowledge base
com.top_logic.knowledge.wrap.person.PersonManager.Config.knowledge-base.tooltip = <i>Knowledge base</i>, to which changes, made by this task, will be committed to
com.top_logic.knowledge.wrap.person.PersonManager.Config.person-name-max-length = Person name maximum length
com.top_logic.knowledge.wrap.person.PersonManager.Config.person-name-max-length.tooltip = Maximum length of person name
com.top_logic.knowledge.wrap.person.PersonManager.Config.person-name-pattern = Person name pattern
com.top_logic.knowledge.wrap.person.PersonManager.Config.person-name-pattern.tooltip = Pattern, which user names must follow
com.top_logic.knowledge.wrap.person.PersonManager.Config.show-representative-groups = Show representative groups
com.top_logic.knowledge.wrap.person.PersonManager.Config.show-representative-groups.tooltip = A config flag indicating whether the persons representative groups should show up in the system or not
com.top_logic.knowledge.wrap.person.PersonManager.Config.super-user-name = Super user name
com.top_logic.knowledge.wrap.person.PersonManager.Config.super-user-name.tooltip = Name of the super user
com.top_logic.knowledge.wrap.person.PersonManager.Config.token-timeout = Token timeout
com.top_logic.knowledge.wrap.person.PersonManager.Config.token-timeout.tooltip = Token timeout
com.top_logic.knowledge.wrap.person.PersonManager.tooltip = Superclass for person managers which also should create the various instances. Usage of different PersonManagers can be done by subclasses of this class, which are registered in the configuration in the section defined by the constants below. Subclasses have to provide an empty constructor which needs to be public if they are not placed in the same package as this class (which is not recommended). However, going this way, a call to getInstance() will always deliver the correct implementation of PersonManager
com.top_logic.knowledge.wrap.person.PersonalConfiguration$Config = Configuration
com.top_logic.knowledge.wrap.person.PersonalConfiguration$Config.tooltip = The <i>configuration item</i> for the features of the <i>personal configuration</i>.
com.top_logic.knowledge.wrap.person.PersonalConfiguration.Config.auto-translate = Auto translate
com.top_logic.knowledge.wrap.person.PersonalConfiguration.Config.auto-translate.tooltip = Whether automatic translation for I18N fields is enabled by default. <p> This setting only applies, if the <i>translation service</i> is activated in an application. </p>
com.top_logic.knowledge.wrap.person.PersonalConfiguration.Config.default-start-page-automatism = Default start page automatism
com.top_logic.knowledge.wrap.person.PersonalConfiguration.Config.default-start-page-automatism.tooltip = Whether the start page should be stored when the user logs out. <p> The user my customize this setting in its account profile, if not <i>Hide option start page automatism</i> is set. </p>
com.top_logic.knowledge.wrap.person.PersonalConfiguration.Config.hide-option-start-page-automatism = Hide option start page automatism
com.top_logic.knowledge.wrap.person.PersonalConfiguration.Config.hide-option-start-page-automatism.tooltip = Whether the option to customize the <i>Default start page automatism</i> setting should be hidden from the user.
com.top_logic.knowledge.wrap.person.RefreshUsersTask = Refresh users task
com.top_logic.knowledge.wrap.person.RefreshUsersTask.Config.knowledge-base = Knowledge base
com.top_logic.knowledge.wrap.person.RefreshUsersTask.Config.knowledge-base.tooltip = <i>Knowledge base</i>, to which changes, made by this task, will be committed to
com.top_logic.knowledge.wrap.person.RefreshUsersTask.Config.person-manager = Person manager
com.top_logic.knowledge.wrap.person.RefreshUsersTask.Config.person-manager.tooltip = <i>Person manager</i>, which shall by updated by this task
com.top_logic.knowledge.wrap.person.RefreshUsersTask.tooltip = <i>Task</i> that calls updates cache in the <i>person manager</i>.
com.top_logic.knowledge.wrap.person.TLPersonManager = Person manager
com.top_logic.knowledge.wrap.person.TLPersonManager.Config.person-deletion-policy = Person deletion policy
com.top_logic.knowledge.wrap.person.TLPersonManager.Config.person-deletion-policy.tooltip = Policy describing which persons without user should be deleted.
com.top_logic.knowledge.wrap.person.TLPersonManager.Config.security-device-manager = Security device manager
com.top_logic.knowledge.wrap.person.TLPersonManager.Config.security-device-manager.tooltip = <i>Security device manager</i>, to which changes, made by this task, will be committed to
com.top_logic.knowledge.wrap.person.TLPersonManager.tooltip = Manage Person entities, reference implementation. Instances of the current PersonManager are to be acquired by a static call to PersonManager.getInstance().
com.top_logic.knowledge.wrap.person.deletion.ConfiguredDeletionPolicy = Configured deletion policy
com.top_logic.knowledge.wrap.person.deletion.ConfiguredDeletionPolicy.tooltip = Super class for configurable <i>person deletion policy</i>.
com.top_logic.knowledge.wrap.person.deletion.MaximumNumberPolicy = Maximum number policy
com.top_logic.knowledge.wrap.person.deletion.MaximumNumberPolicy.Config.max-number-of-persons-to-delete = Maximum number of persons to delete
com.top_logic.knowledge.wrap.person.deletion.MaximumNumberPolicy.Config.max-number-of-persons-to-delete.tooltip = Defining the maximum numbers of persons without user to delete.
com.top_logic.knowledge.wrap.person.deletion.MaximumNumberPolicy.tooltip = <i>Configured deletion policy</i> that allows a maximum number of persons to delete. If there are more persons to delete, no person is deleted and an error is logged.
com.top_logic.layout.ConfigurableControlRenderer = Configurable control renderer
com.top_logic.layout.ConfigurableControlRenderer.Config.controlClass = Control class
com.top_logic.layout.ConfigurableControlRenderer.Config.controlClass.tooltip = CSS class(es) to add to the top-level <i>control</i> tag.
com.top_logic.layout.ConfigurableControlRenderer.Config.controlTag = Control tag
com.top_logic.layout.ConfigurableControlRenderer.Config.controlTag.tooltip = Name of the root tag of the <i>control</i>.
com.top_logic.layout.ConfigurableControlRenderer.tooltip = <i>Default control renderer</i> that has a configuration.
com.top_logic.layout.Control.id = The client-side ID of this <i>control</i>. <p> The identifier must be used as ID attribute of the top-level tag that represents this <i>control</i>. The identifier of a <i>control</i> must be unique within its <i>control component</i>. </p>
com.top_logic.layout.DisplayUnit = Display unit
com.top_logic.layout.DisplayUnit.PERCENT = Percent
com.top_logic.layout.DisplayUnit.PERCENT.tooltip = Percent (%)
com.top_logic.layout.DisplayUnit.PIXEL = Pixel
com.top_logic.layout.DisplayUnit.PIXEL.tooltip = Pixel (px)
com.top_logic.layout.DisplayUnit.tooltip = <i>Enum</i> of units for display.
com.top_logic.layout.ErrorPage$Config = Configuration
com.top_logic.layout.ErrorPage$Config.tooltip = Configuration of error pages.
com.top_logic.layout.ErrorPage.Config.pages = Pages
com.top_logic.layout.ErrorPage.Config.pages.tooltip = Configured error pages.
com.top_logic.layout.I18NConstantsBase$ResourcePrefix = Resource prefix
com.top_logic.layout.I18NConstantsBase$ResourcePrefix.tooltip = Marker annotation to identify elements in extensions of <i>internationalization constants base</i> which will serve as prefix for the real resources. These constants ends with '.'.
com.top_logic.layout.Icons.ADD_COMPONENT_COMMAND = Icon of the command to add a new component.
com.top_logic.layout.Icons.ADD_DIALOG_COMMAND = Icon of the command to add a dialog to the given component.
com.top_logic.layout.Icons.ADD_TAB_COMMAND = Icon of the command to add a new tab to the given tabbar.
com.top_logic.layout.Icons.APP_LOGO = Application logo displayed on the login and logout pages.
com.top_logic.layout.Icons.BUTTON_COMP_HEIGHT = Height of button bars.
com.top_logic.layout.Icons.CONFIGURE_FORM_DEFINITION_COMMAND = Icon of the command to edit the form layout.
com.top_logic.layout.Icons.DELETE_COMPONENT_COMMAND = Icon of the command to delete a component.
com.top_logic.layout.Icons.DELETE_FORM_DEFINITION_COMMAND = Icon of the command to delete the current form layout.
com.top_logic.layout.Icons.EDIT_COMPONENT_COMMAND = Icon of the command to edit the given component.
com.top_logic.layout.Icons.EDIT_LAYOUT_COMMAND = Icon of the command to edit the enclosing layout of the given component.
com.top_logic.layout.Icons.FILTER_DIALOG_WIDTH = Filter dialog width.
com.top_logic.layout.Icons.FROZEN_TABLE_FOOTER_HEIGHT = Height of footer of tables with fixed columns in pixels.
com.top_logic.layout.Icons.FROZEN_TABLE_HEADER_ROW_HEIGHT = Height of a header row of tables with fixed columns in pixels.
com.top_logic.layout.Icons.FROZEN_TABLE_ROW_HEIGHT = Height of a data row of tables with fixed columns in pixels.
com.top_logic.layout.Icons.HIDE_APP_TITLE_ON_LOGIN_PAGE = Whether to hide the application's title on the login page. <p> Enable this setting in the application's default theme, if the application logo is customized and makes the application's title redundant on the login page. </p>
com.top_logic.layout.Icons.POPUP_TEXT_SELECT_VIEW = Whether a separated options selection list view or an input field should be used for the select field.
com.top_logic.layout.Icons.TEXT_FAMILY = General font.
com.top_logic.layout.KeyCode = Key code
com.top_logic.layout.KeyCode.BACK_SPACE = Back space
com.top_logic.layout.KeyCode.DELETE = Delete
com.top_logic.layout.KeyCode.DOWN = Down
com.top_logic.layout.KeyCode.END = End
com.top_logic.layout.KeyCode.ESCAPE = Escape
com.top_logic.layout.KeyCode.F1 = F1
com.top_logic.layout.KeyCode.F10 = F10
com.top_logic.layout.KeyCode.F11 = F11
com.top_logic.layout.KeyCode.F12 = F12
com.top_logic.layout.KeyCode.F2 = F2
com.top_logic.layout.KeyCode.F3 = F3
com.top_logic.layout.KeyCode.F4 = F4
com.top_logic.layout.KeyCode.F5 = F5
com.top_logic.layout.KeyCode.F6 = F6
com.top_logic.layout.KeyCode.F7 = F7
com.top_logic.layout.KeyCode.F8 = F8
com.top_logic.layout.KeyCode.F9 = F9
com.top_logic.layout.KeyCode.HOME = Home
com.top_logic.layout.KeyCode.INSERT = Insert
com.top_logic.layout.KeyCode.LEFT = Left
com.top_logic.layout.KeyCode.LETTER_A = Letter a
com.top_logic.layout.KeyCode.LETTER_B = Letter b
com.top_logic.layout.KeyCode.LETTER_C = Letter c
com.top_logic.layout.KeyCode.LETTER_D = Letter d
com.top_logic.layout.KeyCode.LETTER_E = Letter e
com.top_logic.layout.KeyCode.LETTER_F = Letter f
com.top_logic.layout.KeyCode.LETTER_G = Letter g
com.top_logic.layout.KeyCode.LETTER_H = Letter h
com.top_logic.layout.KeyCode.LETTER_I = Letter i
com.top_logic.layout.KeyCode.LETTER_J = Letter j
com.top_logic.layout.KeyCode.LETTER_K = Letter k
com.top_logic.layout.KeyCode.LETTER_L = Letter l
com.top_logic.layout.KeyCode.LETTER_M = Letter m
com.top_logic.layout.KeyCode.LETTER_N = Letter n
com.top_logic.layout.KeyCode.LETTER_O = Letter o
com.top_logic.layout.KeyCode.LETTER_P = Letter p
com.top_logic.layout.KeyCode.LETTER_Q = Letter q
com.top_logic.layout.KeyCode.LETTER_R = Letter r
com.top_logic.layout.KeyCode.LETTER_S = Letter s
com.top_logic.layout.KeyCode.LETTER_T = Letter t
com.top_logic.layout.KeyCode.LETTER_U = Letter u
com.top_logic.layout.KeyCode.LETTER_V = Letter v
com.top_logic.layout.KeyCode.LETTER_W = Letter w
com.top_logic.layout.KeyCode.LETTER_X = Letter x
com.top_logic.layout.KeyCode.LETTER_Y = Letter y
com.top_logic.layout.KeyCode.LETTER_Z = Letter z
com.top_logic.layout.KeyCode.NUM_0 = Number 0
com.top_logic.layout.KeyCode.NUM_1 = Number 1
com.top_logic.layout.KeyCode.NUM_2 = Number 2
com.top_logic.layout.KeyCode.NUM_3 = Number 3
com.top_logic.layout.KeyCode.NUM_4 = Number 4
com.top_logic.layout.KeyCode.NUM_5 = Number 5
com.top_logic.layout.KeyCode.NUM_6 = Number 6
com.top_logic.layout.KeyCode.NUM_7 = Number 7
com.top_logic.layout.KeyCode.NUM_8 = Number 8
com.top_logic.layout.KeyCode.NUM_9 = Number 9
com.top_logic.layout.KeyCode.PAGE_DOWN = Page down
com.top_logic.layout.KeyCode.PAGE_UP = Page up
com.top_logic.layout.KeyCode.RETURN = Return
com.top_logic.layout.KeyCode.RIGHT = Right
com.top_logic.layout.KeyCode.SPACE = Space
com.top_logic.layout.KeyCode.TAB = Tab
com.top_logic.layout.KeyCode.UP = Up
com.top_logic.layout.KeyCode.tooltip = Enumeration of client-side key codes that can be handled on the server.
com.top_logic.layout.LabelMapping = Label mapping
com.top_logic.layout.LabelMapping.Config.labels = Labels
com.top_logic.layout.LabelMapping.Config.labels.tooltip = The <i>label provider</i> to compute labels for mapped objects.
com.top_logic.layout.LabelMapping.tooltip = <i>Mapping</i> that maps objects to labels using a delegate <i>label provider</i>.
com.top_logic.layout.PositionStrategy = Position strategy
com.top_logic.layout.PositionStrategy.AFTER = After
com.top_logic.layout.PositionStrategy.AFTER.tooltip = Specifies a position after a context element.
com.top_logic.layout.PositionStrategy.AUTO = Auto
com.top_logic.layout.PositionStrategy.AUTO.tooltip = Specifies a position w.r.t. the sort order of a list.
com.top_logic.layout.PositionStrategy.BEFORE = Before
com.top_logic.layout.PositionStrategy.BEFORE.tooltip = Specifies a position before a context element.
com.top_logic.layout.PositionStrategy.END = End
com.top_logic.layout.PositionStrategy.END.tooltip = Specifies a position at the end of a list.
com.top_logic.layout.PositionStrategy.START = Start
com.top_logic.layout.PositionStrategy.START.tooltip = Specifies a position at the start of a list.
com.top_logic.layout.PositionStrategy.tooltip = Positioning strategy for insertion into lists.
com.top_logic.layout.ProcessingKind = Processing kind
com.top_logic.layout.ProcessingKind.COMMAND_EXECUTION = Command execution
com.top_logic.layout.ProcessingKind.COMMAND_EXECUTION.tooltip = User triggered command of a component
com.top_logic.layout.ProcessingKind.COMPONENT_RENDERING = Component rendering
com.top_logic.layout.ProcessingKind.COMPONENT_RENDERING.tooltip = Rendering of a component (esp. via JSP)
com.top_logic.layout.ProcessingKind.JSP_RENDERING = Jsp rendering
com.top_logic.layout.ProcessingKind.JSP_RENDERING.tooltip = JSP rendering without component context
com.top_logic.layout.ProcessingKind.TECHNICAL_COMMAND_EXECUTION = Technical command execution
com.top_logic.layout.ProcessingKind.TECHNICAL_COMMAND_EXECUTION.tooltip = Technical command (e.g. open tree node)
com.top_logic.layout.ProcessingKind.tooltip = Possible processing kinds.
com.top_logic.layout.Resource$IconResourceRenderer = Icon resource renderer
com.top_logic.layout.Resource$IconResourceRenderer.tooltip = <i>Resource renderer</i> for <i>resources</i>, that just renders the image with the label as alternative text and as tooltip, if no tooltip is set explicit.
com.top_logic.layout.ScriptFunction0.impl = Implementation
com.top_logic.layout.ScriptFunction0.impl.tooltip = Instantiates this <i>script function</i> to an <i>I function0</i>.
com.top_logic.layout.ScriptFunction1.impl = Implementation
com.top_logic.layout.ScriptFunction1.impl.tooltip = Instantiates this <i>script function</i> to an <i>I function1</i>.
com.top_logic.layout.ScriptFunction2.impl = Implementation
com.top_logic.layout.ScriptFunction2.impl.tooltip = Instantiates this <i>script function</i> to an <i>I function2</i>.
com.top_logic.layout.ScriptFunction3.impl = Implementation
com.top_logic.layout.ScriptFunction3.impl.tooltip = Instantiates this <i>script function</i> to an <i>I function3</i>.
com.top_logic.layout.ScriptFunction4.impl = Implementation
com.top_logic.layout.ScriptFunction4.impl.tooltip = Instantiates this <i>script function</i> to an <i>I function4</i>.
com.top_logic.layout.ViewInfoComponent = View info component
com.top_logic.layout.ViewInfoComponent$GlobalConfig = Global configuration
com.top_logic.layout.ViewInfoComponent$GlobalConfig.tooltip = Application-global configuration for <i>view info component</i>.
com.top_logic.layout.ViewInfoComponent.GlobalConfig.inspect-component = Inspect component
com.top_logic.layout.ViewInfoComponent.GlobalConfig.inspect-component.tooltip = Session-local name of the <i>view info component</i> to use for inspect buttons.
com.top_logic.layout.ViewInfoComponent.tooltip = Display some information about a component and its environment.
com.top_logic.layout.accessors.AccessorProxy = Accessor proxy
com.top_logic.layout.accessors.AccessorProxy$AccessorImplConfig = Accessor implementation configuration
com.top_logic.layout.accessors.AccessorProxy$AccessorImplConfig.tooltip = Configuration of another <i>accessor</i>.
com.top_logic.layout.accessors.AccessorProxy.AccessorImplConfig.impl = Implementation
com.top_logic.layout.accessors.AccessorProxy.AccessorImplConfig.impl.tooltip = The <i>accessor</i> to delegate to.
com.top_logic.layout.accessors.AccessorProxy.tooltip = Proxy for another configured <i>accessor</i>.
com.top_logic.layout.accessors.ConfiguredTypeSafeAccessor = Configured type safe accessor
com.top_logic.layout.accessors.ConfiguredTypeSafeAccessor.Config.defaultAccessor = Default accessor
com.top_logic.layout.accessors.ConfiguredTypeSafeAccessor.Config.defaultAccessor.tooltip = Chained <i>accessor</i> that is used if the current object does not match the <i>Type</i>.
com.top_logic.layout.accessors.ConfiguredTypeSafeAccessor.Config.type = Type
com.top_logic.layout.accessors.ConfiguredTypeSafeAccessor.Config.type.tooltip = The expected type of instances to access.
com.top_logic.layout.accessors.ConfiguredTypeSafeAccessor.tooltip = <i>Type safe accessor</i> whose <code>#getType()</code> is configured.
com.top_logic.layout.accessors.LabelAccessor = Label accessor
com.top_logic.layout.accessors.LabelAccessor.Config.labels = Labels
com.top_logic.layout.accessors.LabelAccessor.Config.labels.tooltip = <i>Label provider</i> to use to resolve the label for the object.
com.top_logic.layout.accessors.LabelAccessor.tooltip = Accessor that returns the label of the object to get value for.
com.top_logic.layout.accessors.MappingAccessor = Mapping accessor
com.top_logic.layout.accessors.MappingAccessor.Config.mapping = Mapping
com.top_logic.layout.accessors.MappingAccessor.Config.mapping.tooltip = The mapping to use to map object.
com.top_logic.layout.accessors.MappingAccessor.tooltip = <i>Accessor</i> that first maps the object using a given <i>mapping</i> and then use a given <i>accessor</i> to get (and set) value from the mapped object.
com.top_logic.layout.accessors.NullSafeAccessor = Null safe accessor
com.top_logic.layout.accessors.NullSafeAccessor.tooltip = <i>Accessor proxy</i> returning <code>null</code> for <code>null</code> input.
com.top_logic.layout.accessors.ReflectionInstanceAccessor = Reflection instance accessor
com.top_logic.layout.accessors.ReflectionInstanceAccessor.Config.method = Method
com.top_logic.layout.accessors.ReflectionInstanceAccessor.Config.method.tooltip = The name of the no-argument method to invoke on the instances.
com.top_logic.layout.accessors.ReflectionInstanceAccessor.tooltip = <i>Accessor</i> that is implemented by calling a method through reflection.
com.top_logic.layout.accessors.TypeSafeAccessorProxy = Type safe accessor proxy
com.top_logic.layout.accessors.TypeSafeAccessorProxy.tooltip = <i>Configured type safe accessor</i> accessing value by dispatching to another <i>accessor</i>.
com.top_logic.layout.accordion.AccordionButtonRenderer = Accordion button renderer
com.top_logic.layout.accordion.AccordionButtonRenderer.tooltip = <i>Button renderer</i> that creates a command link in the style of an entry in the <i>accordion control</i>. <p> The visual representation is created by delegating to the low-level <i>accordion entry renderer</i>. </p>
com.top_logic.layout.admin.component.AbstractStopServiceHandler = Stop service handler
com.top_logic.layout.admin.component.AbstractStopServiceHandler.tooltip = <i>Command handler</i> asking for confirmation if a service with dependents should be stopped.
com.top_logic.layout.admin.component.ApplyLoggingConfigChanged = Apply logging configuration changed
com.top_logic.layout.admin.component.ApplyLoggingConfigChanged.tooltip = <i>Form command handler</i> applying new logging properties.
com.top_logic.layout.admin.component.EditGroupComponent = Edit group component
com.top_logic.layout.admin.component.EditGroupComponent$ApplyGroupCommandHandler = Apply group command handler
com.top_logic.layout.admin.component.EditGroupComponent$DeleteGroupCommandHandler = Delete group command handler
com.top_logic.layout.admin.component.EditGroupComponent$NewGroupCommandHandler = New group command handler
com.top_logic.layout.admin.component.EditGroupComponent$NewGroupComponent = New group component
com.top_logic.layout.admin.component.EditGroupComponent.Config.permitEditSystemFlag = Permit edit system flag
com.top_logic.layout.admin.component.EditGroupComponent.tooltip = Component to view and edit groups.
com.top_logic.layout.admin.component.EditListComponent = Edit list component
com.top_logic.layout.admin.component.EditListComponent$DeleteListCommandHandler = Delete list command handler
com.top_logic.layout.admin.component.EditListComponent$DeleteListCommandHandler.tooltip = Command handler for deletion of lists.
com.top_logic.layout.admin.component.EditListComponent$ListApplyCommandHandler = List apply command handler
com.top_logic.layout.admin.component.EditListComponent$ListApplyCommandHandler.tooltip = Command handler for applying changes made in the FastList or FastList. This class is intended to be used only from the EditListComponent.
com.top_logic.layout.admin.component.EditListComponent$NewListCommandHandler = New list command handler
com.top_logic.layout.admin.component.EditListComponent$NewListCommandHandler.tooltip = Command handler for creation of new lists.
com.top_logic.layout.admin.component.EditListComponent$NewListComponent = New list component
com.top_logic.layout.admin.component.EditListComponent$NewListComponent.tooltip = Dialog component for creating new fast lists or ordered lists.
com.top_logic.layout.admin.component.EditListComponent.Config.allowRemovingElementsInUse = Allow removing elements in use
com.top_logic.layout.admin.component.EditListComponent.Config.columnSizes = Column sizes
com.top_logic.layout.admin.component.EditListComponent.Config.columns = Columns
com.top_logic.layout.admin.component.EditListComponent.Config.listname = Listname
com.top_logic.layout.admin.component.EditListComponent.Config.listtype = Listtype
com.top_logic.layout.admin.component.EditListComponent.NewListComponent.Config.listtype = Listtype
com.top_logic.layout.admin.component.EditListComponent.tooltip = This class is an edit component to view and edit a single ordered list. The list to edit can be specified in the <code>"listname"</code> in the layout XML file, then this component will be in 'SingleListMode', needing no model and no master layout component. Else a master can be specified, then the component will be in 'MultiListMode', showing the list, which was set as model by the master component. In addition, the columns to show can be specified in the <code>"columns"</code> and the sizes of the text input fields for each column can be specified in the <code>"columnSizes"</code>
com.top_logic.layout.admin.component.MaintenanceWindowComponent = Maintenance window component
com.top_logic.layout.admin.component.MaintenanceWindowComponent$AbortEnteringMaintenanceWindowCommandHandler = Abort entering maintenance window command handler
com.top_logic.layout.admin.component.MaintenanceWindowComponent$AbortEnteringMaintenanceWindowCommandHandler.tooltip = This command aborts the entering of the maintenance window and leaves the system in normal mode, in which every user may be allowed to log in.
com.top_logic.layout.admin.component.MaintenanceWindowComponent$EnterMaintenanceWindowCommandHandler = Enter maintenance window command handler
com.top_logic.layout.admin.component.MaintenanceWindowComponent$EnterMaintenanceWindowCommandHandler.tooltip = This command sets the system into a maintenance window, in which only users within specified groups are allowed to log in.
com.top_logic.layout.admin.component.MaintenanceWindowComponent$EnterMaintenanceWindowDelayedCommandHandler = Enter maintenance window delayed command handler
com.top_logic.layout.admin.component.MaintenanceWindowComponent$EnterMaintenanceWindowDelayedCommandHandler.tooltip = This command sets the system into a maintenance window after a specified amount of time, in which only users within specified groups are allowed to log in.
com.top_logic.layout.admin.component.MaintenanceWindowComponent$EnterMaintenanceWindowDialog = Enter maintenance window dialog
com.top_logic.layout.admin.component.MaintenanceWindowComponent$EnterMaintenanceWindowDialog.tooltip = Dialog component for entering the maintenance window mode.
com.top_logic.layout.admin.component.MaintenanceWindowComponent$LeaveMaintenanceWindowCommandHandler = Leave maintenance window command handler
com.top_logic.layout.admin.component.MaintenanceWindowComponent$LeaveMaintenanceWindowCommandHandler.tooltip = This command leaves the maintenance window and sets the system into normal mode, in which every user may be allowed to log in.
com.top_logic.layout.admin.component.MaintenanceWindowComponent.tooltip = The MaintenanceWindowComponent manages the maintenance window system mode.
com.top_logic.layout.admin.component.PerformanceDataEntryAccessor$NumberKind = Number kind
com.top_logic.layout.admin.component.PerformanceDataEntryAccessor$NumberKind.tooltip = Enum to specify which performance data will be returned for intervals
com.top_logic.layout.admin.component.PerformanceDataEntryAccessor.NumberKind.AVG = Avg
com.top_logic.layout.admin.component.PerformanceDataEntryAccessor.NumberKind.AVG.tooltip = Average value
com.top_logic.layout.admin.component.PerformanceDataEntryAccessor.NumberKind.MAX = Maximum
com.top_logic.layout.admin.component.PerformanceDataEntryAccessor.NumberKind.MAX.tooltip = Max value
com.top_logic.layout.admin.component.PerformanceDataEntryAccessor.NumberKind.MIN = Minimum
com.top_logic.layout.admin.component.PerformanceDataEntryAccessor.NumberKind.MIN.tooltip = Min value
com.top_logic.layout.admin.component.PerformanceDataEntryAccessor.NumberKind.TOT = Tot
com.top_logic.layout.admin.component.PerformanceDataEntryAccessor.NumberKind.TOT.tooltip = Total value
com.top_logic.layout.admin.component.PerformanceMonitor = Performance monitor
com.top_logic.layout.admin.component.PerformanceMonitor.Config.cache-details = Cache details
com.top_logic.layout.admin.component.PerformanceMonitor.Config.cache-details.tooltip = False when no cache details should shown.
com.top_logic.layout.admin.component.PerformanceMonitor.Config.interval-millis = Interval millis
com.top_logic.layout.admin.component.PerformanceMonitor.Config.interval-millis.tooltip = Interval milliseconds.
com.top_logic.layout.admin.component.PerformanceMonitor.Config.max-cache-intervals = Maximum cache intervals
com.top_logic.layout.admin.component.PerformanceMonitor.Config.max-cache-intervals.tooltip = Maximal interval time for caching.
com.top_logic.layout.admin.component.PerformanceMonitor.tooltip = Holds and aggregates information about the time consumed for executing commands in this VM. Might be extended to measure rendering time etc. Extensions to measure time in a cluster would need a database synchronization mechanism.
com.top_logic.layout.admin.component.PerformanceMonitorComponent = Performance monitor component
com.top_logic.layout.admin.component.PerformanceMonitorComponent.Config.show = Show
com.top_logic.layout.admin.component.PerformanceMonitorComponent.tooltip = Show <i>performance data entry</i>
com.top_logic.layout.admin.component.SimpleEditListComponent = Simple edit list component
com.top_logic.layout.admin.component.SimpleEditListComponent$SimpleListApplyCommandHandler = Simple list apply command handler
com.top_logic.layout.admin.component.SimpleEditListComponent$SimpleListApplyCommandHandler.tooltip = Command handler for applying changes made in the FastList or FastList. This class is intended to be used only from the SimpleEditListComponent.
com.top_logic.layout.admin.component.SimpleEditListComponent.tooltip = This class is an simplified and user friendly edit list component to view and edit a single fastlist or ordered list. ID and other technical details are handled automatically and only one language is used for the names.
com.top_logic.layout.admin.component.TLResetServiceConfigHandler = Reset service configuration handler
com.top_logic.layout.admin.component.TLResetServiceConfigHandler.tooltip = Removes the in app custom service configuration from the autoconf directory.
com.top_logic.layout.admin.component.TLRestartServiceHandler = Restart service handler
com.top_logic.layout.admin.component.TLRestartServiceHandler.tooltip = Restarts the given and all dependent TL services.
com.top_logic.layout.admin.component.TLSaveServiceConfigHandler = Save service configuration handler
com.top_logic.layout.admin.component.TLSaveServiceConfigHandler.tooltip = Stores custom service configurations in a separate configuration file in the autoconf folder of the toplevel module.
com.top_logic.layout.admin.component.TLServiceConfigEditorFormBuilder = Service configuration editor form builder
com.top_logic.layout.admin.component.TLServiceConfigEditorFormBuilder$EditModel = Edit model
com.top_logic.layout.admin.component.TLServiceConfigEditorFormBuilder$EditModel.tooltip = Model of the displayed service configuration.
com.top_logic.layout.admin.component.TLServiceConfigEditorFormBuilder.EditModel.service-configuration = Service configuration
com.top_logic.layout.admin.component.TLServiceConfigEditorFormBuilder.EditModel.service-configuration.tooltip = Configuration of a <i>basic runtime module</i>.
com.top_logic.layout.admin.component.TLServiceConfigEditorFormBuilder.tooltip = Builds a form for the configuration of the given TL service.
com.top_logic.layout.admin.component.TLServicesCommandProvider$CommandsByServiceClass = Commands by service class
com.top_logic.layout.admin.component.TLServicesCommandProvider$CommandsByServiceClass.tooltip = Configuration of the commands for a specific <i>managed class</i>.
com.top_logic.layout.admin.component.TLServicesCommandProvider$Config = Configuration
com.top_logic.layout.admin.component.TLServicesCommandProvider$Config.tooltip = Configuration of the <i>services command provider</i>.
com.top_logic.layout.admin.component.TLServicesCommandProvider.CommandsByServiceClass.commands = Commands
com.top_logic.layout.admin.component.TLServicesCommandProvider.CommandsByServiceClass.commands.tooltip = Configuration of the commands for the specified service.
com.top_logic.layout.admin.component.TLServicesCommandProvider.CommandsByServiceClass.service-class = Service class
com.top_logic.layout.admin.component.TLServicesCommandProvider.CommandsByServiceClass.service-class.tooltip = <i>Managed class</i> for which <i>Commands</i> are configured.
com.top_logic.layout.admin.component.TLServicesCommandProvider.Config.commands-by-service-classes = Commands by service classes
com.top_logic.layout.admin.component.TLServicesCommandProvider.Config.commands-by-service-classes.tooltip = Configuration of the commands for a given service. <p> For a concrete <i>managed class</i>, all commands configured for the concrete implementation or a super class are displayed. </p>
com.top_logic.layout.admin.component.TLStartServiceHandler = Start service handler
com.top_logic.layout.admin.component.TLStartServiceHandler.tooltip = Starts the selected TL service.
com.top_logic.layout.admin.component.TLStopServiceHandler = Stop service handler
com.top_logic.layout.admin.component.TLStopServiceHandler.tooltip = Stops the given and all dependent TL services.
com.top_logic.layout.basic.AbstractControlBase.canInspectClass = Technical CSS class that marks a control as potential target for the client-side UI inspector tool.
com.top_logic.layout.basic.AbstractControlBase.cssClass = Writes the CSS classes intrinsic to this control.
com.top_logic.layout.basic.BookmarkRenderer = Bookmark renderer
com.top_logic.layout.basic.BookmarkRenderer.tooltip = <i>Resource renderer</i> that appends an "add bookmark" icon to the rendered contents.
com.top_logic.layout.basic.ButtonUIConfig = Button UI configuration
com.top_logic.layout.basic.ButtonUIConfig.access-key = Access key
com.top_logic.layout.basic.ButtonUIConfig.alt-key = Alt key
com.top_logic.layout.basic.ButtonUIConfig.css-classes = Css classes
com.top_logic.layout.basic.ButtonUIConfig.image = Image
com.top_logic.layout.basic.ButtonUIConfig.label-key = Label key
com.top_logic.layout.basic.ButtonUIConfig.not-executable-image = Not executable image
com.top_logic.layout.basic.ButtonUIConfig.tooltip = Configuration of constant <i>button UI model</i> settings.
com.top_logic.layout.basic.ButtonUIConfig.tooltip-caption-key = Tooltip caption key
com.top_logic.layout.basic.ButtonUIConfig.tooltip-key = Tooltip key
com.top_logic.layout.basic.CommandCommandHandler = Command command handler
com.top_logic.layout.basic.CommandCommandHandler.Config.command = Command
com.top_logic.layout.basic.CommandCommandHandler.Config.command.tooltip = The <i>command</i> to wrap
com.top_logic.layout.basic.CommandCommandHandler.tooltip = The class <i>command command handler</i> is a <i>command handler</i> which executes some <i>command</i> and contains all necessary informations for it.
com.top_logic.layout.basic.CommandModelNaming$CommandModelName = Command model name
com.top_logic.layout.basic.CommandModelNaming$CommandModelName.tooltip = <i>Model name</i> of the <i>command model</i>, used by the <i>command model naming</i>.
com.top_logic.layout.basic.CommandModelNaming.CommandModelName.owner = Owner
com.top_logic.layout.basic.CommandModelNaming.CommandModelName.owner.tooltip = The <i>model name</i> of the <i>command model's</i> owner.
com.top_logic.layout.basic.ConfiguredDelegatingCommandModel = Configured delegating command model
com.top_logic.layout.basic.ConfiguredDelegatingCommandModel.Config.command = Command
com.top_logic.layout.basic.ConfiguredDelegatingCommandModel.Config.command.tooltip = Configuration of the command to dispatch the execution to.
com.top_logic.layout.basic.ConfiguredDelegatingCommandModel.tooltip = Configurable <i>delegating command model</i> with inner command configuration.
com.top_logic.layout.basic.DebuggingConfig = Debugging configuration
com.top_logic.layout.basic.DebuggingConfig.debugFooterEnabled = Debug footer enabled
com.top_logic.layout.basic.DebuggingConfig.debugFooterEnabled.tooltip = Whether a debug footer is written in tables.
com.top_logic.layout.basic.DebuggingConfig.dirtyHandlingDebug = Dirty handling debug
com.top_logic.layout.basic.DebuggingConfig.dirtyHandlingDebug.tooltip = Whether changing form elements should trigger dirty handling in general.
com.top_logic.layout.basic.DebuggingConfig.inspectEnabled = Inspect enabled
com.top_logic.layout.basic.DebuggingConfig.inspectEnabled.tooltip = Whether the inspection of elements is enabled in general.
com.top_logic.layout.basic.DebuggingConfig.showDebugButtons = Show debug buttons
com.top_logic.layout.basic.DebuggingConfig.showDebugButtons.tooltip = Whether debugging buttons are shown.
com.top_logic.layout.basic.DebuggingConfig.tooltip = Configuration for debugging.
com.top_logic.layout.basic.DefaultValue = Default value
com.top_logic.layout.basic.DefaultValue.tooltip = Annotation to set a default value for <i>icon</i> and <i>theme var</i> constants in <i>icons base</i> sub-classes.
com.top_logic.layout.basic.DefaultValue.value = Value
com.top_logic.layout.basic.DefaultValue.value.tooltip = The default value, e.g. <ul> <li><code>css:fas fa-code</code> on a <i>icon</i>.</li> <li><code>300px</code> on a <i>theme var</i> of <i>display dimension</i>.</li> </ul>
com.top_logic.layout.basic.FragmentControlProvider = Fragment control provider
com.top_logic.layout.basic.FragmentControlProvider.Config.fragmentProvider = Fragment provider
com.top_logic.layout.basic.FragmentControlProvider.Config.fragmentProvider.tooltip = If is is null, an empty fragment is created, which writes nothing.
com.top_logic.layout.basic.FragmentControlProvider.tooltip = An adapter that is a <i>control provider</i> and has an <i>HTML fragment provider</i>.
com.top_logic.layout.basic.GenericCommandModelNaming$GenericCommandModelName = Generic command model name
com.top_logic.layout.basic.GenericCommandModelNaming$GenericCommandModelName.tooltip = <i>Generic model name</i> for <i>generic command model naming</i>.
com.top_logic.layout.basic.Icons.RENDERING_ERROR_NORMAL = Image that indicates a rendering error.
com.top_logic.layout.basic.Icons.VERTICAL_SIZABLE_CONTROL_TEMPLATE = Template defining a user size adjustable control.
com.top_logic.layout.basic.LabelFilter = Label filter
com.top_logic.layout.basic.LabelFilter.Config.label-provider = Label provider
com.top_logic.layout.basic.LabelFilter.Config.label-provider.tooltip = The <i>label provider</i> to create the <i>string</i> representation for the filtered objects.
com.top_logic.layout.basic.LabelFilter.tooltip = A <i>filter</i> that filters <i>objects</i> based on their labels (provided by a <i>label provider</i>) and a filter implementation for those labels.
com.top_logic.layout.basic.LabelMatcher = Label matcher
com.top_logic.layout.basic.LabelMatcher.Config.expected-name = Expected name
com.top_logic.layout.basic.LabelMatcher.Config.expected-name.tooltip = The matched label.
com.top_logic.layout.basic.LabelMatcher.Config.label-provider = Label provider
com.top_logic.layout.basic.LabelMatcher.Config.label-provider.tooltip = The <i>label provider</i> to create the label to match for the filtered objects..
com.top_logic.layout.basic.LabelMatcher.tooltip = A <i>filter</i> that filters <i>objects</i> based on their labels (provided by a <i>label provider</i>).
com.top_logic.layout.basic.ResourceRenderer = Resource renderer
com.top_logic.layout.basic.ResourceRenderer.Config.contextMenu = Context menu
com.top_logic.layout.basic.ResourceRenderer.Config.contextMenu.tooltip = Context menu entries for displayed objects.
com.top_logic.layout.basic.ResourceRenderer.Config.maxLength = Maximum length
com.top_logic.layout.basic.ResourceRenderer.Config.maxLength.tooltip = Maximum length of label displayed, may be negative (when deactivated).
com.top_logic.layout.basic.ResourceRenderer.Config.resourceProvider = Resource provider
com.top_logic.layout.basic.ResourceRenderer.Config.resourceProvider.tooltip = Provider for label, images and tool-tips for the rendered objects.
com.top_logic.layout.basic.ResourceRenderer.Config.startPos = Start pos
com.top_logic.layout.basic.ResourceRenderer.Config.startPos.tooltip = Starting position for cutting the label.
com.top_logic.layout.basic.ResourceRenderer.Config.useContextMenu = Use context menu
com.top_logic.layout.basic.ResourceRenderer.Config.useContextMenu.tooltip = Whether the context menu should be used. If <code>false</code>, no context menu is rendered, even if the given <i>Context menu</i> would provide one or object specific context commands exist.
com.top_logic.layout.basic.ResourceRenderer.Config.useImage = Use image
com.top_logic.layout.basic.ResourceRenderer.Config.useImage.tooltip = Whether to render an image. If <code>false</code>, no image is rendered, even if the underlying <i>resource provider</i> would provide one.
com.top_logic.layout.basic.ResourceRenderer.Config.useLink = Use link
com.top_logic.layout.basic.ResourceRenderer.Config.useLink.tooltip = Whether to render a link. If <code>false</code>, no link is rendered, even if the underlying <i>resource provider</i> would provide one.
com.top_logic.layout.basic.ResourceRenderer.Config.useToolTip = Use tool tip
com.top_logic.layout.basic.ResourceRenderer.Config.useToolTip.tooltip = Whether to render a tool tip. If <code>false</code>, no tool tip is rendered, even if the underlying <i>resource provider</i> would provide one.
com.top_logic.layout.basic.ResourceRenderer.tooltip = A <i>renderer</i> implementation that renders an arbitrary object given a <i>resource provider</i>. <p> Depending on the <i>resource provider</i>, this renderer creates an image followed by a text surrounded by a link. </p>
com.top_logic.layout.basic.TemplateType = Template type
com.top_logic.layout.basic.TemplateType.tooltip = Annotation to a <i>theme var</i> definition of type <i>HTML Template</i> defining the context object type that is rendered with the annotated template.
com.top_logic.layout.basic.TemplateType.value = Value
com.top_logic.layout.basic.TemplateType.value.tooltip = The context type in which a <i>HTML Template</i> is evaluated.
com.top_logic.layout.basic.TemplateVariable = Template variable
com.top_logic.layout.basic.TemplateVariable.tooltip = Annotation of a <i>control's</i> getter method or render method that marks the method as accessible through the <i>with properties</i> interface.
com.top_logic.layout.basic.TemplateVariable.value = Value
com.top_logic.layout.basic.TemplateVariable.value.tooltip = The name of the property through which the annotated getter or render function can be accessed.
com.top_logic.layout.basic.VerticalSizableControl.content = Writes the control content.
com.top_logic.layout.basic.VerticalSizableControl.maxHeight = Returns the controls maximal height.
com.top_logic.layout.basic.component.AJAXComponent = AJAX component
com.top_logic.layout.basic.component.AJAXComponent.tooltip = Abstract base class for all <i>components</i> that can be incrementally updated by AJAX <i>client actions</i>.
com.top_logic.layout.basic.component.BreadcrumbComponent = Breadcrumb component
com.top_logic.layout.basic.component.BreadcrumbComponent.Config.renderer = Renderer
com.top_logic.layout.basic.component.BreadcrumbComponent.Config.renderer.tooltip = The <i>breadcrumb renderer</i> to display the <i>breadcrumb data</i> created by <i>Model builder</i>.
com.top_logic.layout.basic.component.BreadcrumbComponent.tooltip = <i>Builder component</i> displaying a breadcrumb navigation. <p> The <i>Model builder</i> is expected to create a <i>breadcrumb data</i> model for display. </p>
com.top_logic.layout.basic.component.ControlComponent = Control component
com.top_logic.layout.basic.component.ControlComponent$DispatchAction = Dispatch action
com.top_logic.layout.basic.component.ControlComponent$DispatchAction.tooltip = The only command that needs to be to be registered at a <i>control component</i> to forward <i>control commands</i> to their <i>controls</i>.
com.top_logic.layout.basic.component.ControlComponent.tooltip = A <i>control component</i> is a holder for a set of active <i>control</i> elements, which can be dynamically updated during the lifetime of the <i>control component's</i> page.
com.top_logic.layout.basic.component.LayoutNavigationBuilder = Layout navigation builder
com.top_logic.layout.basic.component.LayoutNavigationBuilder.Config.rootComponent = Root component
com.top_logic.layout.basic.component.LayoutNavigationBuilder.Config.rootComponent.tooltip = <i>Component name</i> where to start displaying navigation paths.
com.top_logic.layout.basic.component.LayoutNavigationBuilder.tooltip = <i>Model builder</i> for a <i>breadcrumb component</i> displaying the current navigtion state in a layout.
com.top_logic.layout.basic.contextmenu.component.config.WithContextMenu.contextMenu = Context menu
com.top_logic.layout.basic.contextmenu.component.config.WithContextMenu.contextMenu.tooltip = <i>Context menu provider</i> that creates a <i>context menu provider</i> for this component.
com.top_logic.layout.basic.contextmenu.component.config.WithContextMenuFactory.contextMenuFactory = Context menu factory
com.top_logic.layout.basic.contextmenu.component.config.WithContextMenuFactory.contextMenuFactory.tooltip = <i>Context menu factory</i> creating the <i>context menu provider</i> for the configured component.
com.top_logic.layout.basic.contextmenu.component.config.WithPlainContextMenuFactory = With plain context menu factory
com.top_logic.layout.basic.contextmenu.component.config.WithPlainContextMenuFactory.tooltip = <i>With context menu factory</i> that uses <i>plain component context menu factory</i> by default.
com.top_logic.layout.basic.contextmenu.component.factory.ComponentContextMenuFactory = Component context menu factory
com.top_logic.layout.basic.contextmenu.component.factory.ComponentContextMenuFactory.tooltip = <i>Context menu provider</i> that creates context menus from component commands.
com.top_logic.layout.basic.contextmenu.component.factory.PlainComponentContextMenuFactory = Plain component context menu factory
com.top_logic.layout.basic.contextmenu.component.factory.PlainComponentContextMenuFactory.tooltip = <i>Component context menu factory</i> that does not consider the current component model.
com.top_logic.layout.basic.contextmenu.component.factory.SelectableContextMenuFactory = Selectable context menu factory
com.top_logic.layout.basic.contextmenu.component.factory.SelectableContextMenuFactory.tooltip = <i>Component context menu factory</i> that also adds commands of slave components to context menu entries.
com.top_logic.layout.basic.contextmenu.component.factory.TreeContextMenuFactory = Tree context menu factory
com.top_logic.layout.basic.contextmenu.component.factory.TreeContextMenuFactory.tooltip = <i>Selectable context menu factory</i> that maps its context element tree nodes to their business objects before processing.
com.top_logic.layout.basic.contextmenu.component.factory.TypeBasedContextMenuFactory = Type based context menu factory
com.top_logic.layout.basic.contextmenu.component.factory.TypeBasedContextMenuFactory.Config.customCommands = Custom commands
com.top_logic.layout.basic.contextmenu.component.factory.TypeBasedContextMenuFactory.Config.customCommands.tooltip = Commands added to the context menu.
com.top_logic.layout.basic.contextmenu.component.factory.TypeBasedContextMenuFactory.Config.titleProvider = Title provider
com.top_logic.layout.basic.contextmenu.component.factory.TypeBasedContextMenuFactory.Config.titleProvider.tooltip = <i>Label provider</i> that displays the context object in the menu's title bar.
com.top_logic.layout.basic.contextmenu.component.factory.TypeBasedContextMenuFactory.tooltip = <i>Context menu provider</i> that uses custom <i>command handlers</i> to build a context menu in the context of a component. <p> By default, the custom commands are selected depending on the type of the context object using the <i>meta context menu commands provider</i>. </p>
com.top_logic.layout.basic.contextmenu.component.factory.adapter.ComponentContextMenuProvider = Component context menu provider
com.top_logic.layout.basic.contextmenu.component.factory.adapter.ComponentContextMenuProvider.tooltip = <i>Type based context menu provider</i> using <i>component context menu factory</i> for creating the context menu.
com.top_logic.layout.basic.contextmenu.component.factory.adapter.SelectableContextMenuProvider = Selectable context menu provider
com.top_logic.layout.basic.contextmenu.component.factory.adapter.SelectableContextMenuProvider.tooltip = <i>Component context menu provider</i> using <i>selectable context menu factory</i> to create the context menu.
com.top_logic.layout.basic.contextmenu.component.factory.adapter.TypeBasedContextMenuProvider = Type based context menu provider
com.top_logic.layout.basic.contextmenu.component.factory.adapter.TypeBasedContextMenuProvider.tooltip = <i>Context menu provider</i> implemented by a configured <i>context menu factory</i> using the <i>component</i> taken from the configuration context. <p> By default, the <i>type based context menu factory</i> is used that selects context menu commands based on the type of the context object. </p>
com.top_logic.layout.basic.contextmenu.config.ConfiguredContextMenuCommandsProvider = Configured context menu commands provider
com.top_logic.layout.basic.contextmenu.config.ConfiguredContextMenuCommandsProvider.Config.entries = Entries
com.top_logic.layout.basic.contextmenu.config.ConfiguredContextMenuCommandsProvider.Config.entries.tooltip = Further commands added to the context menu.
com.top_logic.layout.basic.contextmenu.config.ConfiguredContextMenuCommandsProvider.Config.override = Override
com.top_logic.layout.basic.contextmenu.config.ConfiguredContextMenuCommandsProvider.Config.override.tooltip = Whether to ignore globally configured commands.
com.top_logic.layout.basic.contextmenu.config.ConfiguredContextMenuCommandsProvider.tooltip = <i>Context menu commands provider</i> that allows adding custom commands to globally configured ones.
com.top_logic.layout.basic.contextmenu.config.NoContextMenuCommands = No context menu commands
com.top_logic.layout.basic.contextmenu.config.NoContextMenuCommands.tooltip = <i>Context menu commands provider</i> that provides no additional commands.
com.top_logic.layout.bookmark.ShowBookmarkLinkCommandHandler = Show bookmark link command handler
com.top_logic.layout.bookmark.ShowBookmarkLinkCommandHandler.Config.include-view = Include view
com.top_logic.layout.bookmark.ShowBookmarkLinkCommandHandler.Config.include-view.tooltip = Whether to include the concrete view in the bookmark, where the bookmark was created. <p> If <code>false</code>, the bookmark navigates to the default view of the object. </p>
com.top_logic.layout.bookmark.ShowBookmarkLinkCommandHandler.tooltip = <i>Command handler</i> showing a dialog with a bookmark link for a given target model.
com.top_logic.layout.buttonbar.ButtonBarControl.buttons = Writes the buttons.
com.top_logic.layout.buttonbar.ButtonBarControl.dataResize = Writes a JavaScript function that makes the button bar adapt to the changed browser size.
com.top_logic.layout.buttonbar.ButtonBarControl.dialogOpener = If the browser screen does not have enough space to display all the buttons, an arrow is displayed. The arrow can be clicked to access the buttons that are not displayed on the screen.
com.top_logic.layout.buttonbar.ButtonBarControl.hiddenButtonCount = Number of currently hidden buttons.
com.top_logic.layout.buttonbar.ButtonBarControl.imageSlider = Writes an animated image at the place where the buttons should be if the button commands are not ready yet.
com.top_logic.layout.buttonbar.ButtonBarControl.scrollContainerClasses = Writes the user-configured CSS classes inherent to this control.
com.top_logic.layout.buttonbar.Icons.BUTTON_BAR_TEMPLATE = Template for rendering a button bar.
com.top_logic.layout.buttonbar.Icons.SLIDER_IMG = Image to display when the command is a long running command.
com.top_logic.layout.channel.BidirectionalTransformLinking = Bidirectional transform linking
com.top_logic.layout.channel.BidirectionalTransformLinking.tooltip = Linking creating a bidirectional transforming channel. Using an inverse transformation to determine the value for the source channel.
com.top_logic.layout.channel.linking.Channel.component-ref = Component reference
com.top_logic.layout.channel.linking.Channel.component-ref.tooltip = Specification of the component to access the specified <i>Name</i> from.
com.top_logic.layout.channel.linking.Channel.name = Name
com.top_logic.layout.channel.linking.Channel.name.tooltip = The model channel implementation kind.
com.top_logic.layout.channel.linking.Provider.impl = Implementation
com.top_logic.layout.channel.linking.Provider.impl.tooltip = The <i>model provider</i> implementation to evaluate for retrieving the model.
com.top_logic.layout.channel.linking.impl.AbstractCachedChannelLinking = Cached channel linking
com.top_logic.layout.channel.linking.impl.AbstractCachedChannelLinking.tooltip = Base class for <i>channel linking</i> implementations caching the channel in the context <i>component</i>.
com.top_logic.layout.channel.linking.impl.AbstractChannelLinking = Channel linking
com.top_logic.layout.channel.linking.impl.AbstractChannelLinking.tooltip = Base class for <i>channel linking</i> implementations.
com.top_logic.layout.channel.linking.impl.AbstractMultiChannelLinking = Multiple channel linking
com.top_logic.layout.channel.linking.impl.AbstractMultiChannelLinking.Config.specs = Channels
com.top_logic.layout.channel.linking.impl.AbstractMultiChannelLinking.Config.specs.tooltip = <i>Component channels</i> to combine.
com.top_logic.layout.channel.linking.impl.AbstractMultiChannelLinking.tooltip = <i>Channel linking</i> with multiple input channels.
com.top_logic.layout.channel.linking.impl.AbstractTransformLinking = Transform linking
com.top_logic.layout.channel.linking.impl.AbstractTransformLinking.Config.input = Input
com.top_logic.layout.channel.linking.impl.AbstractTransformLinking.Config.input.tooltip = The channel providing the input value of the transformation.
com.top_logic.layout.channel.linking.impl.AbstractTransformLinking.tooltip = <i>Channel linking</i> creating a <i>transforming channel</i>.
com.top_logic.layout.channel.linking.impl.CombineLinking = Combine linking
com.top_logic.layout.channel.linking.impl.CombineLinking.tooltip = <i>Channel linking</i> creating a <i>combining channel</i>.
com.top_logic.layout.channel.linking.impl.DirectLinking = Direct linking
com.top_logic.layout.channel.linking.impl.DirectLinking.tooltip = <i>Channel linking</i> specified by <i>channel</i>.
com.top_logic.layout.channel.linking.impl.FalseLinking = False linking
com.top_logic.layout.channel.linking.impl.FalseLinking.tooltip = <i>Channel linking</i> specified by <i>false</i>.
com.top_logic.layout.channel.linking.impl.NullLinking = Null linking
com.top_logic.layout.channel.linking.impl.NullLinking.tooltip = <i>Channel linking</i> specified by <i>null</i>.
com.top_logic.layout.channel.linking.impl.ProviderLinking = Provider linking
com.top_logic.layout.channel.linking.impl.ProviderLinking.tooltip = <i>Channel linking</i> specified by <i>provider</i>.
com.top_logic.layout.channel.linking.impl.TrueLinking = True linking
com.top_logic.layout.channel.linking.impl.TrueLinking.tooltip = <i>Channel linking</i> specified by <i>true</i>.
com.top_logic.layout.channel.linking.impl.UnionLinking = Union linking
com.top_logic.layout.channel.linking.impl.UnionLinking.tooltip = <i>Channel linking</i> specified by <i>union</i>.
com.top_logic.layout.channel.linking.ref.ComponentRelation = Component relation
com.top_logic.layout.channel.linking.ref.ComponentRelation$Kind = Kind
com.top_logic.layout.channel.linking.ref.ComponentRelation$Kind.tooltip = Possible types of <i>component relations</i>.
com.top_logic.layout.channel.linking.ref.ComponentRelation.Kind.dialogParent = Dialog parent
com.top_logic.layout.channel.linking.ref.ComponentRelation.Kind.dialogParent.tooltip = The component that declares the dialog in which the referencing component lives.
com.top_logic.layout.channel.linking.ref.ComponentRelation.Kind.self = Self
com.top_logic.layout.channel.linking.ref.ComponentRelation.Kind.self.tooltip = The component on which the model spec is declared.
com.top_logic.layout.channel.linking.ref.ComponentRelation.kind = Kind
com.top_logic.layout.channel.linking.ref.ComponentRelation.kind.tooltip = The component relation to resolve dynamically.
com.top_logic.layout.channel.linking.ref.ComponentRelation.tooltip = A structural component relation.
com.top_logic.layout.channel.linking.ref.NamedComponent = Named component
com.top_logic.layout.channel.linking.ref.NamedComponent.tooltip = A component resolved by component name.
com.top_logic.layout.compare.AbstractOpenCompareViewCommand = Open compare view command
com.top_logic.layout.compare.AbstractOpenCompareViewCommand.tooltip = Abstract super class for <i>command handler</i> opening a compare view in a dialog.
com.top_logic.layout.compare.AbstractRevisionSelectComponent = Revision select component
com.top_logic.layout.compare.AbstractRevisionSelectComponent.tooltip = Abstract super class for components that transforms models into a different time. <p> An <i>revision select component</i> has a <i>object</i> as model. It allow selection of a <i>revision</i> and has the model in the selected revision as selection. </p>
com.top_logic.layout.compare.DateCompareSelector = Date compare selector
com.top_logic.layout.compare.DateCompareSelector.tooltip = Component to select date in which a model should be displayed.
com.top_logic.layout.compare.DateSelectComponent = Date select component
com.top_logic.layout.compare.DateSelectComponent.tooltip = Component to select date in which a model should be displayed.
com.top_logic.layout.compare.Icons.OPEN_COMPARE_VIEW = Image to open the compare view.
com.top_logic.layout.compare.RevisionCompareComponent = Revision compare component
com.top_logic.layout.compare.RevisionCompareComponent.tooltip = <i>Revision select component</i> that additionally holds a compare revision.
com.top_logic.layout.compare.RevisionModelBuilder = Revision model builder
com.top_logic.layout.compare.RevisionModelBuilder.Config.include-current = Include current
com.top_logic.layout.compare.RevisionModelBuilder.Config.include-current.tooltip = Whether <i>the current revision</i> should be included.
com.top_logic.layout.compare.RevisionModelBuilder.Config.number-revisions = Number revisions
com.top_logic.layout.compare.RevisionModelBuilder.Config.number-revisions.tooltip = Number of revisions to fetch.
com.top_logic.layout.compare.RevisionModelBuilder.tooltip = <i>Model builder</i> returning a list of last <i>revisions</i>.
com.top_logic.layout.compare.RevisionSelectComponent = Revision select component
com.top_logic.layout.compare.RevisionSelectComponent.tooltip = <i>Revision select component</i> that allows selecting a <i>revision</i> from a list of <i>revisions</i>.
com.top_logic.layout.compare.ToggleCompareModeHandler = Toggle compare mode handler
com.top_logic.layout.compare.ToggleCompareModeHandler.Config.deactivateImage = Deactivate image
com.top_logic.layout.compare.ToggleCompareModeHandler.Config.deactivateImage.tooltip = Image to display to deactivate compare mode. <p> If <code>null</code>, <i>Image</i> is used instead. </p>
com.top_logic.layout.compare.ToggleCompareModeHandler.tooltip = <i>Command handler</i> toggling the compare mode of a <i>revision compare component</i>.
com.top_logic.layout.component.ComponentBased = Component based
com.top_logic.layout.component.ComponentBased.Config.componentName = Component name
com.top_logic.layout.component.ComponentBased.Config.componentName.tooltip = The name of the component from which the model should be used for filtering.
com.top_logic.layout.component.ComponentBased.Config.modelMapping = Model mapping
com.top_logic.layout.component.ComponentBased.Config.modelMapping.tooltip = An optional <i>mapping</i> to apply to the component's model.
com.top_logic.layout.component.ComponentBased.tooltip = Base class for a part of the component tree that itself depends on the context component or some named component.
com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName = Component name
com.top_logic.layout.component.ComponentBasedNamingScheme.ComponentBasedName.component-implementation-comment = Component implementation comment
com.top_logic.layout.component.ComponentBasedNamingScheme.ComponentBasedName.component-implementation-comment.tooltip = E.g. the name of the class that is supposed to implements the component. <p> This property is optional and only for debugging purpose. The value of this property must not be used for the action implementation. </p>
com.top_logic.layout.component.ComponentBasedNamingScheme.ComponentBasedName.component-name = Component name
com.top_logic.layout.component.ComponentBasedNamingScheme.ComponentBasedName.component-name.tooltip = The name of the referenced <i>component</i>.
com.top_logic.layout.component.ComponentModelNamingScheme$ComponentModelName = Component model name
com.top_logic.layout.component.ComponentModelNamingScheme$ComponentModelName.tooltip = <i>Model name</i> for the <i>component model naming scheme</i>.
com.top_logic.layout.component.ComponentModelNamingScheme.ComponentModelName.component = Component
com.top_logic.layout.component.ComponentModelNamingScheme.ComponentModelName.component.tooltip = Component to get the model from.
com.top_logic.layout.component.EmbeddedLayoutConfig.horizontal = Horizontal
com.top_logic.layout.component.EmbeddedLayoutConfig.horizontal.tooltip = Whether to layout <i>Components</i> horizontally. <p> Can be used as short-cut for wrapping the contents with an additional layout. </p>
com.top_logic.layout.component.GenericDeleteCommandHandler = Delete command
com.top_logic.layout.component.GenericDeleteCommandHandler.tooltip = Handler for generically deleting persistent objects.
com.top_logic.layout.component.IComponent$ComponentConfig = Component configuration
com.top_logic.layout.component.IComponent$ComponentConfig.tooltip = Configuration options for <i>I component</i>.
com.top_logic.layout.component.Selectable$SelectableConfig = Selectable configuration
com.top_logic.layout.component.Selectable$SelectableConfig.tooltip = Common configuration options for <i>component</i> implementing <i>selectable</i>.
com.top_logic.layout.component.Selectable.SelectableConfig.defaultSelection = Default selection
com.top_logic.layout.component.Selectable.SelectableConfig.defaultSelection.tooltip = Whether the component always tries to select some object.
com.top_logic.layout.component.Selectable.SelectableConfig.partnerGroup = Partner group
com.top_logic.layout.component.Selectable.SelectableConfig.partnerGroup.tooltip = Name to identify all <i>selectable</i> components that should share a common selection. <p> The name is arbitrary and only used to bind all selection channels of components that are in the same partner group to a single common source channel. </p> <p> If a value is given, all selectable components with the same setting send and receive selection events to/from each other. This can be used to links the selection of otherwise independent components together. </p>
com.top_logic.layout.component.Selectable.SelectableConfig.selection = Selection
com.top_logic.layout.component.Selectable.SelectableConfig.selection.tooltip = The source of the component's selection.
com.top_logic.layout.component.SelectableSelectionNaming$SelectableSelectionName = Selectable selection name
com.top_logic.layout.component.SelectableSelectionNaming$SelectableSelectionName.tooltip = <i>Model name</i> for the <i>selectable selection naming</i>.
com.top_logic.layout.component.SelectableSelectionNaming.SelectableSelectionName.selectable = Selectable
com.top_logic.layout.component.SelectableSelectionNaming.SelectableSelectionName.selectable.tooltip = The <i>selectable</i> whose selection is referenced.
com.top_logic.layout.component.TabComponent = Tab component
com.top_logic.layout.component.TabComponent.Config.onChangeSelectFirstTab = On change select first tab
com.top_logic.layout.component.TabComponent.Config.onChangeSelectFirstTab.tooltip = Whenever the number of visible tabs change, select the first one that can be selected. <p> With this option in combination with a hidden tab bar, one can realize a dynamic layout that displays the first alternative that can show the current model. </p>
com.top_logic.layout.component.TabComponent.Config.renderer = Renderer
com.top_logic.layout.component.TabComponent.tooltip = The class <i>tab component</i> is a <i>layout container</i> whose children are displayed as tabs.
com.top_logic.layout.component.UpdateCommandHandler = Update command handler
com.top_logic.layout.component.UpdateCommandHandler.tooltip = The <i>update command handler</i> updates an <i>updatable</i> with special care for <i>form component</i>. Compare with <i>filter refreshable</i> / <i>filter refresh command handler</i>
com.top_logic.layout.component.WithCloseDialog.closeDialog = Close dialog
com.top_logic.layout.component.WithCloseDialog.closeDialog.tooltip = Whether to close the dialog in which the component is displayed, this handler operates on. <p> If the handler's component is not displayed in a dialog, this setting has no effect. </p>
com.top_logic.layout.component.configuration.AbstractCommandModelConfiguration = Command model configuration
com.top_logic.layout.component.configuration.AbstractCommandModelConfiguration.Config.commandArguments = Command arguments
com.top_logic.layout.component.configuration.AbstractCommandModelConfiguration.Config.commandArguments.tooltip = Static arguments for the command.
com.top_logic.layout.component.configuration.AbstractCommandModelConfiguration.tooltip = The class <i>command model configuration</i> is an abstract superclass which handles some properties of the configured <i>command model</i>.
com.top_logic.layout.component.configuration.AbstractViewConfiguration = View configuration
com.top_logic.layout.component.configuration.AbstractViewConfiguration.tooltip = The class <i>view configuration</i> is the abstract superclass of <i>view configuration</i> which handles the <code>ViewConfiguration#getName()</code> aspect.
com.top_logic.layout.component.configuration.CommandModelCustomization = Command model customization
com.top_logic.layout.component.configuration.CommandModelCustomization$Settings = Settings
com.top_logic.layout.component.configuration.CommandModelCustomization$Settings.tooltip = Configuration for a <i>command model</i>.
com.top_logic.layout.component.configuration.CommandModelCustomization.Settings.activeImage = Active image
com.top_logic.layout.component.configuration.CommandModelCustomization.Settings.altTextKey = Alt text key
com.top_logic.layout.component.configuration.CommandModelCustomization.Settings.cssClasses = Css classes
com.top_logic.layout.component.configuration.CommandModelCustomization.Settings.image = Image
com.top_logic.layout.component.configuration.CommandModelCustomization.Settings.labelKey = Label key
com.top_logic.layout.component.configuration.CommandModelCustomization.Settings.notExecutableImage = Not executable image
com.top_logic.layout.component.configuration.CommandModelCustomization.Settings.tooltipKey = Tooltip key
com.top_logic.layout.component.configuration.CommandModelCustomization.tooltip = Configured view-related properties that can be applied to an existing <i>command model</i> implementation.
com.top_logic.layout.component.configuration.CommandModelViewConfiguration = Command model view configuration
com.top_logic.layout.component.configuration.CommandModelViewConfiguration.Config.commandConfiguration = Command configuration
com.top_logic.layout.component.configuration.CommandModelViewConfiguration.Config.commandConfiguration.tooltip = Configuration of the command to execute.
com.top_logic.layout.component.configuration.CommandModelViewConfiguration.Config.renderer = Renderer
com.top_logic.layout.component.configuration.CommandModelViewConfiguration.Config.renderer.tooltip = The <i>I button renderer</i> to create the visual representation.
com.top_logic.layout.component.configuration.CommandModelViewConfiguration.tooltip = The class <i>command model view configuration</i> is an adapter to configure a command model to a <i>component</i>. The resulting <i>view</i> is a view to render the configured <i>command model</i>.
com.top_logic.layout.component.configuration.ConfiguredCommandModelConfiguration = Configured command model configuration
com.top_logic.layout.component.configuration.ConfiguredCommandModelConfiguration.Config.commandModel = Command model
com.top_logic.layout.component.configuration.ConfiguredCommandModelConfiguration.Config.commandModel.tooltip = Configuration of the actual <i>command model</i>.
com.top_logic.layout.component.configuration.ConfiguredCommandModelConfiguration.tooltip = <i>Command model configuration</i> with a configured <i>command model</i> which does not depend on the concrete <i>component</i>.
com.top_logic.layout.component.configuration.DefaultCommandModelConfiguration = Default command model configuration
com.top_logic.layout.component.configuration.DefaultCommandModelConfiguration.Config.command = Command
com.top_logic.layout.component.configuration.DefaultCommandModelConfiguration.Config.command.tooltip = The name of the command this <i>command model configuration</i> configures. The corresponding command must be registered at the <i>command handler factory</i>
com.top_logic.layout.component.configuration.DefaultCommandModelConfiguration.Config.targetComponent = Target component
com.top_logic.layout.component.configuration.DefaultCommandModelConfiguration.Config.targetComponent.tooltip = The name of the <i>component</i> which shall be used to execute the configured command.
com.top_logic.layout.component.configuration.DefaultCommandModelConfiguration.tooltip = The class <i>default command model configuration</i> is the default implementation of <i>command model configuration</i>. It is necessary to specify the command by given the commandName (see <i>Command</i>). It is possible to give the component which will be used to execute the command (see <i>Target component</i>). If no component name is given the command will be executed at the component this <i>command model configuration</i> is configured.
com.top_logic.layout.component.configuration.DialogOpenerCommandModelConfiguration = Dialog opener command model configuration
com.top_logic.layout.component.configuration.DialogOpenerCommandModelConfiguration.Config.dialog = Dialog
com.top_logic.layout.component.configuration.DialogOpenerCommandModelConfiguration.Config.dialog.tooltip = The name of the dialog open handler this <i>command model configuration</i> configures. The corresponding dialog must be registered at the component.
com.top_logic.layout.component.configuration.DialogOpenerCommandModelConfiguration.Config.dialogParent = Dialog parent
com.top_logic.layout.component.configuration.DialogOpenerCommandModelConfiguration.Config.dialogParent.tooltip = The name the component where the dialog with configured dialog opener is registered.
com.top_logic.layout.component.configuration.DialogOpenerCommandModelConfiguration.tooltip = The class <i>dialog opener command model configuration</i> is the implementation of <i>command model configuration</i> to open dialogs. It is necessary to specify the dialog by given the dialog name (see <i>Dialog</i>).
com.top_logic.layout.component.configuration.DirtyCheckingCommandModelConfiguration = Dirty checking command model configuration
com.top_logic.layout.component.configuration.DirtyCheckingCommandModelConfiguration.Config.checkScopeProvider = Check scope provider
com.top_logic.layout.component.configuration.DirtyCheckingCommandModelConfiguration.Config.checkScopeProvider.tooltip = Configuration of the <i>check scope provider</i> to create the <i>check scope</i> to use.
com.top_logic.layout.component.configuration.DirtyCheckingCommandModelConfiguration.Config.componentName = Component name
com.top_logic.layout.component.configuration.DirtyCheckingCommandModelConfiguration.Config.componentName.tooltip = Name of the component that is used to create the <i>check scope</i> from the configured provider.
com.top_logic.layout.component.configuration.DirtyCheckingCommandModelConfiguration.tooltip = The class <i>configured command model configuration</i> which adds a <i>check scope</i> to the configured <i>command model</i>.
com.top_logic.layout.component.configuration.ExternalLinkViewConfiguration = External link view configuration
com.top_logic.layout.component.configuration.ExternalLinkViewConfiguration.Config.css-class = Css class
com.top_logic.layout.component.configuration.ExternalLinkViewConfiguration.Config.css-class.tooltip = The CSS class for the link.
com.top_logic.layout.component.configuration.ExternalLinkViewConfiguration.Config.image = Image
com.top_logic.layout.component.configuration.ExternalLinkViewConfiguration.Config.image.tooltip = The image to click to execute link.
com.top_logic.layout.component.configuration.ExternalLinkViewConfiguration.Config.label-key = Label key
com.top_logic.layout.component.configuration.ExternalLinkViewConfiguration.Config.label-key.tooltip = The link text.
com.top_logic.layout.component.configuration.ExternalLinkViewConfiguration.Config.link = Link
com.top_logic.layout.component.configuration.ExternalLinkViewConfiguration.Config.link.tooltip = The target side to open, e.g. http://www.top-logic.com.
com.top_logic.layout.component.configuration.ExternalLinkViewConfiguration.Config.renderer = Renderer
com.top_logic.layout.component.configuration.ExternalLinkViewConfiguration.Config.renderer.tooltip = The <i>renderer</i> to create the visual representation.
com.top_logic.layout.component.configuration.ExternalLinkViewConfiguration.Config.tooltip-key = Tooltip key
com.top_logic.layout.component.configuration.ExternalLinkViewConfiguration.Config.tooltip-key.tooltip = An optional tool-tip for the link.
com.top_logic.layout.component.configuration.ExternalLinkViewConfiguration.tooltip = <i>View configuration</i> creating an <i>external link</i>.
com.top_logic.layout.component.configuration.LogoutCommandHandler = Logout command handler
com.top_logic.layout.component.configuration.LogoutCommandHandler.tooltip = <i>Command handler</i> terminating the current session.
com.top_logic.layout.component.configuration.LogoutView = Logout view
com.top_logic.layout.component.configuration.LogoutView.Config.cssClass = Css class
com.top_logic.layout.component.configuration.LogoutView.Config.cssClass.tooltip = The CSS class to add to the view.
com.top_logic.layout.component.configuration.LogoutView.Config.image = Image
com.top_logic.layout.component.configuration.LogoutView.Config.image.tooltip = The icon to display.
com.top_logic.layout.component.configuration.LogoutView.Config.renderer = Renderer
com.top_logic.layout.component.configuration.LogoutView.Config.renderer.tooltip = The <i>renderer</i> to create the visual representation.
com.top_logic.layout.component.configuration.LogoutView.tooltip = The class <i>logout view</i> renders the LogoutCommand.
com.top_logic.layout.component.configuration.MaintenanceViewConfiguration = Maintenance view configuration
com.top_logic.layout.component.configuration.MaintenanceViewConfiguration.tooltip = The class <i>maintenance view configuration</i> can be used to configure a <i>maintenance control</i> as additional <i>view</i>.
com.top_logic.layout.component.configuration.MultiViewConfiguration = Multiple view configuration
com.top_logic.layout.component.configuration.MultiViewConfiguration.Config.renderer = Renderer
com.top_logic.layout.component.configuration.MultiViewConfiguration.Config.renderer.tooltip = The configured renderer.
com.top_logic.layout.component.configuration.MultiViewConfiguration.Config.views = Views
com.top_logic.layout.component.configuration.MultiViewConfiguration.Config.views.tooltip = The list of configured view configurations.
com.top_logic.layout.component.configuration.MultiViewConfiguration.tooltip = The <i>multiple view configuration</i> is a <i>view configuration</i> which wraps arbitrary views.
com.top_logic.layout.component.configuration.OpenGuiInspectorView = Open gui inspector view
com.top_logic.layout.component.configuration.OpenGuiInspectorView.Config.image = Image
com.top_logic.layout.component.configuration.OpenGuiInspectorView.Config.image.tooltip = The icon to display.
com.top_logic.layout.component.configuration.OpenGuiInspectorView.Config.labelKey = Label key
com.top_logic.layout.component.configuration.OpenGuiInspectorView.Config.labelKey.tooltip = The label <i>resource key</i> of the command.
com.top_logic.layout.component.configuration.OpenGuiInspectorView.Config.renderer = Renderer
com.top_logic.layout.component.configuration.OpenGuiInspectorView.Config.renderer.tooltip = The <i>renderer</i> to create the visual representation.
com.top_logic.layout.component.configuration.OpenGuiInspectorView.tooltip = <i>View configuration</i>, which can be used to define a view, which triggers <i>gui inspector command</i>.
com.top_logic.layout.component.configuration.PopupViewConfiguration = Popup view configuration
com.top_logic.layout.component.configuration.PopupViewConfiguration.Config.commandConfigurations = Command configurations
com.top_logic.layout.component.configuration.PopupViewConfiguration.Config.commandConfigurations.tooltip = The list of configured view configurations.
com.top_logic.layout.component.configuration.PopupViewConfiguration.Config.cssClass = Css class
com.top_logic.layout.component.configuration.PopupViewConfiguration.Config.cssClass.tooltip = The CSS class to add to the button opening the popup dialog.
com.top_logic.layout.component.configuration.PopupViewConfiguration.Config.horizontalPosition = Horizontal position
com.top_logic.layout.component.configuration.PopupViewConfiguration.Config.horizontalPosition.tooltip = Horizontal position where the pop-up is opened.
com.top_logic.layout.component.configuration.PopupViewConfiguration.Config.icon = Icon
com.top_logic.layout.component.configuration.PopupViewConfiguration.Config.icon.tooltip = The icon of the button opening the popup dialog.
com.top_logic.layout.component.configuration.PopupViewConfiguration.Config.label = Label
com.top_logic.layout.component.configuration.PopupViewConfiguration.Config.label.tooltip = The label of the button opening the popup dialog.
com.top_logic.layout.component.configuration.PopupViewConfiguration.Config.renderer = Renderer
com.top_logic.layout.component.configuration.PopupViewConfiguration.Config.renderer.tooltip = The renderer to display the button opening the popup dialog.
com.top_logic.layout.component.configuration.PopupViewConfiguration.Config.verticalPosition = Vertical position
com.top_logic.layout.component.configuration.PopupViewConfiguration.Config.verticalPosition.tooltip = Vertical position where the pop-up is opened.
com.top_logic.layout.component.configuration.PopupViewConfiguration.tooltip = <i>View configuration</i> that displays a pop-up menu with commands configured by a list of <i>command model configurations</i>.
com.top_logic.layout.component.configuration.SimpleHTMLViewConfiguration = Simple HTML view configuration
com.top_logic.layout.component.configuration.SimpleHTMLViewConfiguration.Config.content-view = Content view
com.top_logic.layout.component.configuration.SimpleHTMLViewConfiguration.Config.content-view.tooltip = Inner view. <p> Either <i>Content view</i> or <i>Content key</i> must be set. </p>
com.top_logic.layout.component.configuration.SimpleHTMLViewConfiguration.Config.contentKey = Content key
com.top_logic.layout.component.configuration.SimpleHTMLViewConfiguration.Config.contentKey.tooltip = The configured content key. <p> Either <i>Content view</i> or <i>Content key</i> must be set. </p>
com.top_logic.layout.component.configuration.SimpleHTMLViewConfiguration.Config.cssClass = Css class
com.top_logic.layout.component.configuration.SimpleHTMLViewConfiguration.Config.cssClass.tooltip = The configured CSS class.
com.top_logic.layout.component.configuration.SimpleHTMLViewConfiguration.Config.style = Style
com.top_logic.layout.component.configuration.SimpleHTMLViewConfiguration.Config.style.tooltip = The configured CSS style.
com.top_logic.layout.component.configuration.SimpleHTMLViewConfiguration.Config.tag = Tag
com.top_logic.layout.component.configuration.SimpleHTMLViewConfiguration.Config.tag.tooltip = The configured tag. Default is <code>SPAN</code>.
com.top_logic.layout.component.configuration.SimpleHTMLViewConfiguration.tooltip = The class <i>simple HTML view configuration</i> is a <i>view configuration</i> to write a single HTML element.
com.top_logic.layout.component.configuration.SystemViewRenderer = System view renderer
com.top_logic.layout.component.configuration.SystemViewRenderer.Config.attributes = Attributes
com.top_logic.layout.component.configuration.SystemViewRenderer.tooltip = Renderer for an <i>composite control</i> that contains <i>views</i> to be displayed in the system area of the application.
com.top_logic.layout.component.configuration.TabSwitchCommandModelConfiguration = Tab switch command model configuration
com.top_logic.layout.component.configuration.TabSwitchCommandModelConfiguration.Config.tabName = Tab name
com.top_logic.layout.component.configuration.TabSwitchCommandModelConfiguration.Config.tabName.tooltip = Tab name the command switch to.
com.top_logic.layout.component.configuration.TabSwitchCommandModelConfiguration.tooltip = The class <i>tab switch command model configuration</i> creates a view to a <i>tab switch command model</i>.
com.top_logic.layout.component.model.ModelByNameProvider = Model by name provider
com.top_logic.layout.component.model.ModelByNameProvider.Config.model-name = Model name
com.top_logic.layout.component.model.ModelByNameProvider.Config.model-name.tooltip = Name of the model to return.
com.top_logic.layout.component.model.ModelByNameProvider.tooltip = <i>Model provider</i> returns a model identified by a <i>model name</i> as business model of a <i>component</i>.
com.top_logic.layout.component.model.NoSelectionModelNaming$NoSelectionModelName = No selection model name
com.top_logic.layout.component.model.NoSelectionModelNaming$NoSelectionModelName.tooltip = <i>Model name</i> of the <i>no selection model</i>, used by the <i>no selection model naming</i>.
com.top_logic.layout.component.model.StaticMethodModelProvider = Static method model provider
com.top_logic.layout.component.model.StaticMethodModelProvider.Config.method = Method
com.top_logic.layout.component.model.StaticMethodModelProvider.Config.method.tooltip = Name of the static method to call on <i>Type</i>.
com.top_logic.layout.component.model.StaticMethodModelProvider.Config.type = Type
com.top_logic.layout.component.model.StaticMethodModelProvider.Config.type.tooltip = The class to search the static method in.
com.top_logic.layout.component.model.StaticMethodModelProvider.tooltip = Configurable <i>model provider</i> that calls a static method by Java reflection.
com.top_logic.layout.component.title.ConfiguredTitleProvider = Configured title provider
com.top_logic.layout.component.title.ConfiguredTitleProvider.tooltip = <i>Configured instance</i> <i>Title provider</i>.
com.top_logic.layout.component.title.ConstantTitle = Constant title
com.top_logic.layout.component.title.ConstantTitle.Config.title = title
com.top_logic.layout.component.title.ConstantTitle.Config.title.tooltip = The internationalized title do display.
com.top_logic.layout.component.title.ConstantTitle.tooltip = <i>Title provider</i> displaying a constant title value.
com.top_logic.layout.component.title.ModelTitle = Model title
com.top_logic.layout.component.title.ModelTitle.Config.key = title
com.top_logic.layout.component.title.ModelTitle.Config.key.tooltip = Optional <i>resource key</i> to display the <i>Model</i> value. <p> If a value is set, it is translations are expected to contain a <code>{0}</code> placeholder where the <i>Model</i> value should be dynamically inserted. </p> <p> If no value is given, only the <i>Model</i> value is displayed. </p>
com.top_logic.layout.component.title.ModelTitle.Config.model = Model
com.top_logic.layout.component.title.ModelTitle.Config.model.tooltip = The <i>component channel</i> to get the value to render from.
com.top_logic.layout.component.title.ModelTitle.tooltip = <i>Title provider</i> displaying the label of the model of a component.
com.top_logic.layout.configEdit.AddNewConfiguration = Add new configuration
com.top_logic.layout.configEdit.AddNewConfiguration.Config.property = Property
com.top_logic.layout.configEdit.AddNewConfiguration.Config.property.tooltip = Name of the <i>property descriptor</i> to add the newly created configuration to. <p> The value is allowed to be a dot-separated path of property names. In that case, the path is evaluated with the command's target model as base object and the new configuration is stored in the property with the last name in the path. </p>
com.top_logic.layout.configEdit.AddNewConfiguration.Config.result = Result
com.top_logic.layout.configEdit.AddNewConfiguration.Config.result.tooltip = The channel to post the new object to.
com.top_logic.layout.configEdit.AddNewConfiguration.tooltip = <i>Command handler</i> adding a newly created <i>configuration item</i> to a configured list property of the <i>configuration item</i> model.
com.top_logic.layout.configEdit.ConfigurationPropertyListModelBuilder = Configuration property list model builder
com.top_logic.layout.configEdit.ConfigurationPropertyListModelBuilder.Config.property = Property
com.top_logic.layout.configEdit.ConfigurationPropertyListModelBuilder.Config.property.tooltip = The property to access for generating the contents.
com.top_logic.layout.configEdit.ConfigurationPropertyListModelBuilder.tooltip = <i>List model builder</i> that creates entries by accessing a <i>property descriptor</i> of a <i>configuration item</i> model.
com.top_logic.layout.configEdit.RemoveConfiguration = Remove configuration
com.top_logic.layout.configEdit.RemoveConfiguration.Config.item = Item
com.top_logic.layout.configEdit.RemoveConfiguration.Config.item.tooltip = Reference to the base object to remove an element from.
com.top_logic.layout.configEdit.RemoveConfiguration.Config.property = Property
com.top_logic.layout.configEdit.RemoveConfiguration.Config.property.tooltip = The property to remove the value form. <p> The value is allowed to be a dot-separated path of property names. </p>
com.top_logic.layout.configEdit.RemoveConfiguration.tooltip = <i>Command handler</i> to remove an entry from the property of a <i>configuration item</i> model.
com.top_logic.layout.currency.EditCurrencyListComponent = Edit currency list component
com.top_logic.layout.currency.EditCurrencyListComponent$ApplyCurrencyCommand = Apply currency command
com.top_logic.layout.currency.EditCurrencyListComponent$ApplyCurrencyCommand.tooltip = Stores the changes made with this EditCurrencyListComponent. This class is intended to be used only from the EditCurrencyListComponent.
com.top_logic.layout.currency.EditCurrencyListComponent$RemoveCurrencyCommand = Remove currency command
com.top_logic.layout.currency.EditCurrencyListComponent$RemoveCurrencyCommand.tooltip = Command to remove a currency from the list.
com.top_logic.layout.currency.EditCurrencyListComponent.Config.allowRenaming = Allow renaming
com.top_logic.layout.currency.EditCurrencyListComponent.Config.displayWithoutModel.tooltip = Model is not used, therefore component must be displayed
com.top_logic.layout.currency.EditCurrencyListComponent.tooltip = This class displays all <i>currencys</i> of the system and allows to add, edit and remove them.
com.top_logic.layout.debug.ReloadI18NCommand = Reload internationalization command
com.top_logic.layout.debug.ReloadI18NCommand.tooltip = Command that reloads the I18N of the application.
com.top_logic.layout.debug.ReloadThemeCommand = Reload theme command
com.top_logic.layout.debug.ReloadThemeCommand.tooltip = Command that reloads the theme.
com.top_logic.layout.debug.ToggleShowAllCommands = Toggle show all commands
com.top_logic.layout.debug.ToggleShowAllCommands.tooltip = <i>Command handler</i> making all commands visible. <p> For debugging only. </p>
com.top_logic.layout.debug.ToggleShowKeyCommand = Toggle show key command
com.top_logic.layout.debug.ToggleShowKeyCommand.tooltip = Command that toggles show keys in the resources.
com.top_logic.layout.dnd.DropActionOp = Drop action
com.top_logic.layout.dnd.DropActionOp.DropAction.drag-view = Drag view
com.top_logic.layout.dnd.DropActionOp.DropAction.drag-view.tooltip = The view from which the object was dragged. <p> For example a <i>table data</i> or <i>tree data</i>. This is only used as the value context for recording and resolving the <i>Dropped object</i>. It is therefore not limited to <i>table data</i> and <i>tree data</i>. Everything that can be used as a value context is okay. If a value context is not necessary or should not be used, this is allowed to be null. </p>
com.top_logic.layout.dnd.DropActionOp.DropAction.drop-position = Drop position
com.top_logic.layout.dnd.DropActionOp.DropAction.drop-position.tooltip = The business object that marks the drop position.
com.top_logic.layout.dnd.DropActionOp.DropAction.drop-view = Drop view
com.top_logic.layout.dnd.DropActionOp.DropAction.drop-view.tooltip = The view into which the object was dropped. <p> For example a <i>table data</i> or <i>tree data</i>. </p>
com.top_logic.layout.dnd.DropActionOp.DropAction.dropped-object = Dropped object
com.top_logic.layout.dnd.DropActionOp.DropAction.dropped-object.tooltip = The dropped business object.
com.top_logic.layout.dnd.DropActionOp.tooltip = The <i>application scripting action</i> for dropping an object with a TL-Script based drop handler.
com.top_logic.layout.dnd.TableDropActionOp = Table drop action
com.top_logic.layout.dnd.TableDropActionOp.tooltip = The <i>application scripting action</i> for dropping an object in a table. <p> The drop handler has to be a <i>business object table drop</i>. </p>
com.top_logic.layout.dynamic.DelegatingLayoutResolver = Delegating layout resolver
com.top_logic.layout.dynamic.DelegatingLayoutResolver.Config.layoutResolvers = Layout resolvers
com.top_logic.layout.dynamic.DelegatingLayoutResolver.Config.layoutResolvers.tooltip = List of <i>layout resolvers</i>, that will be used to resolve layouts out of given context model.
com.top_logic.layout.dynamic.DelegatingLayoutResolver.tooltip = <i>Layout resolver</i>, that delegates layout resolving to a list of configured inner <i>layout resolvers</i>, so that the first <i>layout resolver</i> in order, that can handle the given context model, will be used for layout resolving.
com.top_logic.layout.dynamic.DummyLayoutResolver = Dummy layout resolver
com.top_logic.layout.dynamic.DummyLayoutResolver.tooltip = <i>Layout resolver</i>, that cannot resolve any layout.
com.top_logic.layout.dynamic.DynamicLayoutContainer = Dynamic layout container
com.top_logic.layout.dynamic.DynamicLayoutContainer.Config.defaultLayout = Default layout
com.top_logic.layout.dynamic.DynamicLayoutContainer.Config.layoutResolver = Layout resolver
com.top_logic.layout.dynamic.DynamicLayoutContainer.Config.modelMapper = Model mapper
com.top_logic.layout.dynamic.DynamicLayoutContainer.Config.nullLayout = Null layout
com.top_logic.layout.dynamic.DynamicLayoutContainer.tooltip = <i>Layout container</i> selecting a layout specific to the current business model using a <i>layout resolver</i>.
com.top_logic.layout.dynamic.LayoutResolver = Layout resolver
com.top_logic.layout.dynamic.LayoutResolver.tooltip = A LayoutResolver determines the layout to be used for a given object.
com.top_logic.layout.editor.AbstractComponentConfigurationDialogBuilder$GlobalConfig = Global configuration
com.top_logic.layout.editor.AbstractComponentConfigurationDialogBuilder$GlobalConfig.tooltip = Global configuration options to configure the <i>component configuration dialog builder</i> forms.
com.top_logic.layout.editor.ComponentConfigurationDialogBuilder$GlobalEditConfig = Global edit configuration
com.top_logic.layout.editor.ComponentConfigurationDialogBuilder$GlobalEditConfig.tooltip = Global configuration options for <i>component configuration dialog builder</i> in edit mode.
com.top_logic.layout.editor.DynamicComponentService = Dynamic component service
com.top_logic.layout.editor.DynamicComponentService.tooltip = Module that holds all <i>dynamic component definitions</i> in the system.
com.top_logic.layout.editor.KeyToLayoutTransformLinking = Key to layout transform linking
com.top_logic.layout.editor.KeyToLayoutTransformLinking.tooltip = <i>Channel linking</i> transforming a layout key to the actual <i>layout</i>.
com.top_logic.layout.editor.LayoutKeySelector = Layout key selector
com.top_logic.layout.editor.LayoutKeySelector.tooltip = <i>Component</i> displaying a single select field with valid layout keys as options.
com.top_logic.layout.editor.LayoutTemplate.template-arguments = Template arguments
com.top_logic.layout.editor.LayoutTemplate.template-arguments.tooltip = Typed layout template arguments.
com.top_logic.layout.editor.LayoutTemplate.template-label = Template label
com.top_logic.layout.editor.LayoutTemplate.template-path = Template path
com.top_logic.layout.editor.LayoutTemplate.template-path.tooltip = Layout template path relative to the root layout directory <code>"/WEB-INF/layouts/"</code>.
com.top_logic.layout.editor.StoreTemplateArgumentIntoDatabase = Store template argument into database
com.top_logic.layout.editor.StoreTemplateArgumentIntoDatabase.tooltip = Command to store the <i>layout</i> template arguments into the database.
com.top_logic.layout.editor.TLLayoutApplyHandler = Layout apply handler
com.top_logic.layout.editor.TLLayoutApplyHandler.tooltip = <i>Declarative apply handler</i> for declarative <i>layout</i> forms that are connected to a tree table providing navigation through the application layout. <p> After this handler has made the changes to the layout persistent, it resets the selected and currently edited node in the connected tree table. </p>
com.top_logic.layout.editor.TLLayoutConfigFormBuilder = Layout configuration form builder
com.top_logic.layout.editor.TLLayoutConfigFormBuilder.tooltip = Builds the <i>form context</i> for a layout component configuration.
com.top_logic.layout.editor.TLLayoutFormBuilder = Layout form builder
com.top_logic.layout.editor.TLLayoutFormBuilder$EditModel = Edit model
com.top_logic.layout.editor.TLLayoutFormBuilder$EditModel.tooltip = Model of the displayed form.
com.top_logic.layout.editor.TLLayoutFormBuilder.EditModel.configuration = Configuration
com.top_logic.layout.editor.TLLayoutFormBuilder.EditModel.configuration.tooltip = Displayed configuration.
com.top_logic.layout.editor.TLLayoutFormBuilder.EditModel.layout-key = Layout key
com.top_logic.layout.editor.TLLayoutFormBuilder.EditModel.layout-key.tooltip = Layout identifier.
com.top_logic.layout.editor.TLLayoutFormBuilder.tooltip = General <i>form builder</i> for <i>layouts</i>.
com.top_logic.layout.editor.TLLayoutTemplateArgumentFormBuilder = Layout template argument form builder
com.top_logic.layout.editor.TLLayoutTemplateArgumentFormBuilder.tooltip = Builds the <i>form context</i> for the template arguments of a <i>layout</i>.
com.top_logic.layout.editor.WriteComponentConfigurationIntoFilesystem = Write component configuration into filesystem
com.top_logic.layout.editor.WriteComponentConfigurationIntoFilesystem.tooltip = Command to write the <i>configuration</i> into the filesystem.
com.top_logic.layout.editor.annotation.AvailableTemplates = Available templates
com.top_logic.layout.editor.annotation.AvailableTemplates.tooltip = Annotates group names of layout templates that can be chosen for a property that has <i>options</i> computed by <i>dynamic component options</i>.
com.top_logic.layout.editor.annotation.AvailableTemplates.value = Value
com.top_logic.layout.editor.annotation.AvailableTemplates.value.tooltip = Group names of layout templates that can be chosen.
com.top_logic.layout.editor.annotation.LayoutTemplates = Layout templates
com.top_logic.layout.editor.annotation.LayoutTemplates.tooltip = Annotation providing the arguments for the <i>layout templates default</i> and <i>layout template default</i> provider. <p> The annotated <i>property descriptor</i> must have <i>layout templates default</i> or <i>layout template default</i> as its <i>complex default</i>. </p>
com.top_logic.layout.editor.annotation.LayoutTemplates.value = Value
com.top_logic.layout.editor.annotation.LayoutTemplates.value.tooltip = List of layout template names to use as default values. <p> To be effective, the annotated property must use the <i>layout templates default</i> or <i>layout template default</i> provider as <i>complex default</i>. </p>
com.top_logic.layout.editor.commands.AbstractComponentConfigurationCommandHandler = Component configuration command handler
com.top_logic.layout.editor.commands.AbstractComponentConfigurationCommandHandler.tooltip = Base class for specialized "add component" commands.
com.top_logic.layout.editor.commands.AddComponentCommand = Add component command
com.top_logic.layout.editor.commands.AddComponentCommand.tooltip = <i>Command handler</i> to add a new component to the application.
com.top_logic.layout.editor.commands.AddDialogCommand = Add dialog command
com.top_logic.layout.editor.commands.AddDialogCommand.tooltip = <i>Command handler</i> to add dialogs on this component.
com.top_logic.layout.editor.commands.AddTabCommand = Add tab command
com.top_logic.layout.editor.commands.AddTabCommand.tooltip = <i>Command handler</i> to add tabs on this component.
com.top_logic.layout.editor.commands.AddTileCommand = Add tile command
com.top_logic.layout.editor.commands.AddTileCommand.tooltip = <i>Command handler</i> to add a tile to a <i>group tile component</i>.
com.top_logic.layout.editor.commands.ConfigureTabsCommand = Configure tabs command
com.top_logic.layout.editor.commands.ConfigureTabsCommand.tooltip = <i>Command handler</i> to configure the tabs in a tab component.
com.top_logic.layout.editor.commands.DeleteComponentCommand = Delete component command
com.top_logic.layout.editor.commands.DeleteComponentCommand.tooltip = <i>Command handler</i> to delete the layout by the given component.
com.top_logic.layout.editor.commands.EditComponentCommand = Edit component command
com.top_logic.layout.editor.commands.EditComponentCommand.tooltip = Command to edit the given component instantiated from a typed template.
com.top_logic.layout.editor.commands.EditLayoutCommand = Edit layout command
com.top_logic.layout.editor.commands.EditLayoutCommand.Config.supported-templates = Supported templates
com.top_logic.layout.editor.commands.EditLayoutCommand.Config.supported-templates.tooltip = The name of the templates for which this command is offered. <p> This command is only offered when the layout is loaded from a template layout and the template name is contained in <i>Supported templates</i>. </p>
com.top_logic.layout.editor.commands.EditLayoutCommand.tooltip = <i>Command handler</i> to edit the wrapping layout for the given component instantiated from a typed template.
com.top_logic.layout.editor.commands.ExportLayoutCommandHandler = Export layout command handler
com.top_logic.layout.editor.commands.ExportLayoutCommandHandler.tooltip = Exports the current personal layout to the <i>file system</i>.
com.top_logic.layout.editor.commands.ReleaseLayoutConfiguration = Release layout configuration
com.top_logic.layout.editor.commands.ReleaseLayoutConfiguration.tooltip = Command to release the personal layout configuration for all other users.
com.top_logic.layout.editor.commands.ResetLayoutConfiguration = Reset layout configuration
com.top_logic.layout.editor.commands.ResetLayoutConfiguration.tooltip = Command that resets the layout configuration for the current user.
com.top_logic.layout.editor.commands.ToggleDesignModeCommand = Toggle design mode command
com.top_logic.layout.editor.commands.ToggleDesignModeCommand.tooltip = Toggles the application (actually the <i>sub session context</i>) between design mode and normal mode.
com.top_logic.layout.editor.components.ComponentPlaceholder = Component placeholder
com.top_logic.layout.editor.components.ComponentPlaceholder.tooltip = Component containing a command to configure i.e. replace itself with an instantiated <i>dynamic component definition</i>.
com.top_logic.layout.editor.config.ButtonTemplateParameters.buttons = Buttons
com.top_logic.layout.editor.config.ButtonTemplateParameters.buttons.tooltip = All buttons on this component.
com.top_logic.layout.editor.config.ColumnsTemplateParameters.configurationProviders = Column configurations
com.top_logic.layout.editor.config.ColumnsTemplateParameters.configurationProviders.tooltip = Plug-ins to the table configuration.
com.top_logic.layout.editor.config.ColumnsTemplateParameters.defaultColumns = Default columns
com.top_logic.layout.editor.config.ColumnsTemplateParameters.defaultColumns.tooltip = Columns that shall be displayed by default in the defined order.
com.top_logic.layout.editor.config.DialogOpenHandlerConfig.class.tooltip = Choose default implementation class.
com.top_logic.layout.editor.config.DialogOpenHandlerConfig.dialog-name.tooltip = Only needed when configuring a command to open an existing dialog.
com.top_logic.layout.editor.config.DialogOpenHandlerConfig.executability.tooltip = No executability by default.
com.top_logic.layout.editor.config.DialogOpenHandlerConfig.group.tooltip = Do not by default select a group. <p> The inherited setting is legacy. </p>
com.top_logic.layout.editor.config.DialogTemplateParameters.dialogs = Dialogs
com.top_logic.layout.editor.config.DialogTemplateParameters.dialogs.tooltip = All dialogs on this component.
com.top_logic.layout.editor.config.LayoutEditorConfig = Layout editor configuration
com.top_logic.layout.editor.config.LayoutEditorConfig.excluded-layouts = Excluded layouts
com.top_logic.layout.editor.config.LayoutEditorConfig.excluded-layouts.tooltip = Layouts that are forbidden to insert in the current layout. For example when configuring tabs.
com.top_logic.layout.editor.config.LayoutEditorConfig.tooltip = Configuration for in application layout editing.
com.top_logic.layout.editor.config.LayoutTemplateParameters.horizontal = Horizontal
com.top_logic.layout.editor.config.LayoutTemplateParameters.horizontal.tooltip = Whether the <i>Orientation</i> is <i>horizontal</i>.
com.top_logic.layout.editor.config.LayoutTemplateParameters.orientation = Orientation
com.top_logic.layout.editor.config.LayoutTemplateParameters.orientation.tooltip = The <i>orientation</i> of the created layout.
com.top_logic.layout.editor.config.LayoutTemplateParameters.resizable = Resizable
com.top_logic.layout.editor.config.LayoutTemplateParameters.resizable.tooltip = Whether the Layout can be resized.
com.top_logic.layout.editor.config.OptionalTypeTemplateParameters.type = Type
com.top_logic.layout.editor.config.OptionalTypeTemplateParameters.type.tooltip = Common type for all displayed elements.
com.top_logic.layout.editor.config.TypeWithReferenceTemplateParameters = Type with reference template parameters
com.top_logic.layout.editor.config.TypeWithReferenceTemplateParameters.reference = Reference
com.top_logic.layout.editor.config.TypeWithReferenceTemplateParameters.reference.tooltip = <i>Reference</i> of <i>Type</i>.
com.top_logic.layout.editor.config.TypeWithReferenceTemplateParameters.tooltip = Template parameter definition to provide a type and a in this type contained multiple <i>reference</i> parameter.
com.top_logic.layout.editor.config.TypesTemplateParameters = Types template parameters
com.top_logic.layout.editor.config.TypesTemplateParameters.tooltip = Base interface for layout template parameter definitions to provide a types parameter.
com.top_logic.layout.editor.config.TypesTemplateParameters.type = Type
com.top_logic.layout.editor.config.TypesTemplateParameters.type.tooltip = Types for all displayed elements.
com.top_logic.layout.editor.scripting.CommandActionWithIdentifiers$CommandActionOpWithIdentifiers = Command action with identifiers
com.top_logic.layout.editor.scripting.CommandActionWithIdentifiers$CommandActionOpWithIdentifiers.tooltip = Default implementation of <i>command action with identifiers</i>.
com.top_logic.layout.editor.scripting.CreateComponentButtonAction$CreateComponentButtonActionOp = Create component button action
com.top_logic.layout.editor.scripting.CreateComponentButtonAction$CreateComponentButtonActionOp.tooltip = Default implementation of <i>create component button action</i>.
com.top_logic.layout.editor.scripting.Identifiers = Identifiers
com.top_logic.layout.editor.scripting.Identifiers.component-keys = Component keys
com.top_logic.layout.editor.scripting.Identifiers.component-keys.tooltip = Identifiers for inner <i>component's</i>. To script the dynamic creation of views, stable component identifiers are needed. Normally random <i>uuid's</i> are used while creating new views.
com.top_logic.layout.editor.scripting.Identifiers.tooltip = Collection of stable identifiers using when creating, modifying, or deleting <i>component</i> within the application.
com.top_logic.layout.editor.scripting.Identifiers.uuids = UUIDs
com.top_logic.layout.editor.scripting.Identifiers.uuids.tooltip = Identifiers for configuration properties which are initialised with <i>uuids</i>.
com.top_logic.layout.editor.scripting.WithIdentifiers = With identifiers
com.top_logic.layout.editor.scripting.WithIdentifiers.identifiers = Identifiers
com.top_logic.layout.editor.scripting.WithIdentifiers.identifiers.tooltip = The collection of <i>identifiers</i> to use for creation, modification, or deletion of <i>components</i>.
com.top_logic.layout.editor.scripting.WithIdentifiers.tooltip = Configuration for component scripts that need stable identifiers.
com.top_logic.layout.folder.FolderDataOwner$OwnedFolderDataNaming$FolderName = Folder name
com.top_logic.layout.folder.FolderDataOwner$OwnedFolderDataNaming$FolderName.tooltip = <i>Model name</i> of a <i>folder data</i> within a <i>folder data owner</i>.
com.top_logic.layout.folder.FolderDataOwner.OwnedFolderDataNaming.FolderName.owner-name = Owner name
com.top_logic.layout.folder.FolderDataOwner.OwnedFolderDataNaming.FolderName.owner-name.tooltip = The name of the <i>folder data owner</i>.
com.top_logic.layout.folder.FolderTableRenderer = Folder table renderer
com.top_logic.layout.folder.FolderTableRenderer.tooltip = Providing the correct resource prefix for the web folder table.
com.top_logic.layout.folder.file.selection.FileSelectionComponent = File selection component
com.top_logic.layout.folder.file.selection.FileSelectionComponent.tooltip = A <i>folder component</i> that implements <i>selectable</i> for selecting <i>files</i> on the server. <p> Model channel: The file representing the root directory of this <i>folder component</i>. </p> <p> Selection channel: The file or directory that the user has selected. </p>
com.top_logic.layout.form.FormDialogNamingScheme$FormDialogName = Form dialog name
com.top_logic.layout.form.FormDialogNamingScheme$FormDialogName.tooltip = Identifies as <i>form context</i> the currently active dialog.
com.top_logic.layout.form.FormMember$IDUsage = ID usage
com.top_logic.layout.form.FormMember$IDUsage.tooltip = Usage classification of the UI identifier.
com.top_logic.layout.form.FormMember.IDUsage.INPUT = Input
com.top_logic.layout.form.FormMember.IDUsage.INPUT.tooltip = The ID is requested for an input element.
com.top_logic.layout.form.FormMember.IDUsage.LABEL = Label
com.top_logic.layout.form.FormMember.IDUsage.LABEL.tooltip = The ID is requested for referencing an input element from a label.
com.top_logic.layout.form.FormMember.IDUsage.OTHER = Other
com.top_logic.layout.form.FormMember.IDUsage.OTHER.tooltip = The ID is requested for some other purpose.
com.top_logic.layout.form.FormMemberBasedName.form-handler-name = Form handler name
com.top_logic.layout.form.FormMemberBasedName.form-handler-name.tooltip = The <i>model name</i> for the <i>form handler</i> responsible for the <i>form member</i> identified by this <i>form member based name</i>.
com.top_logic.layout.form.FormMemberBasedName.path = Path
com.top_logic.layout.form.FormMemberBasedName.path.tooltip = The path to the <i>form member</i> in descending order. (Outermost parent first)
com.top_logic.layout.form.FormMemberBusinessObjectNamingScheme$FormMemberBusinessObjectName = Form member business object name
com.top_logic.layout.form.FormMemberBusinessObjectNamingScheme$FormMemberBusinessObjectName.tooltip = <i>Model name</i> used by <i>form member business object naming scheme</i>.
com.top_logic.layout.form.FormMemberBusinessObjectNamingScheme.FormMemberBusinessObjectName.form-member = Form member
com.top_logic.layout.form.FormMemberBusinessObjectNamingScheme.FormMemberBusinessObjectName.form-member.tooltip = The <i>model name</i> of the <i>form member</i> to retrieve the business object from.
com.top_logic.layout.form.FormMemberName = Form member name
com.top_logic.layout.form.FormMemberName.tooltip = <i>Model name</i> for <i>form members</i> that don't need any special treatment.
com.top_logic.layout.form.FuzzyFormMemberNaming$Name = Name
com.top_logic.layout.form.FuzzyFormMemberNaming$Name.tooltip = <i>Model name</i> created by <i>fuzzy form member naming</i>.
com.top_logic.layout.form.FuzzyFormMemberNaming.Name.component = Component
com.top_logic.layout.form.FuzzyFormMemberNaming.Name.component.tooltip = <i>Model name</i> of the owner of the <i>form member</i>, or one of its parents.
com.top_logic.layout.form.FuzzyFormMemberNaming.Name.label = Label
com.top_logic.layout.form.FuzzyFormMemberNaming.Name.label.tooltip = The UI label of the identified <i>form member</i>.
com.top_logic.layout.form.UINonBlocking = UI non blocking
com.top_logic.layout.form.UINonBlocking.tooltip = <i>Annotation</i> for <i>value listener</i> that must not block the UI during execution. <p> Types that are annotated with this annotation must change other parts of the UI. </p>
com.top_logic.layout.form.boxes.layout.ColumnsLayout = Columns layout
com.top_logic.layout.form.boxes.layout.ColumnsLayout.Config.columns = Columns
com.top_logic.layout.form.boxes.layout.ColumnsLayout.Config.columns.tooltip = The number of columns in which to layout contents.
com.top_logic.layout.form.boxes.layout.ColumnsLayout.Config.separator-factory = Separator factory
com.top_logic.layout.form.boxes.layout.ColumnsLayout.Config.separator-factory.tooltip = The <i>box factory</i> to create separator boxes to be placed between columns.
com.top_logic.layout.form.boxes.layout.ColumnsLayout.tooltip = <i>Box layout</i> positioning subsequent boxes vertically but using a fixed numner of super columns. <p> The contents is spread among the super columns so that the total rows being used of the container is kept to a (not strictly mathematical) minimum. </p> <p> <b>Note:</b> This <i>box layout</i> is stateful and must not be used in more than one <i>box</i>. </p>
com.top_logic.layout.form.boxes.layout.LinearLayout = Linear layout
com.top_logic.layout.form.boxes.layout.LinearLayout.Config.horizontal = Horizontal
com.top_logic.layout.form.boxes.layout.LinearLayout.Config.horizontal.tooltip = Whether contents is layouted horizontally (vertical is default).
com.top_logic.layout.form.boxes.layout.LinearLayout.tooltip = <i>Box layout</i> that positions boxes in a single row or column.
com.top_logic.layout.form.boxes.reactive_tag.BoxLayoutTag$ConfigService = Configuration service
com.top_logic.layout.form.boxes.reactive_tag.BoxLayoutTag$ConfigService$Config$LayoutConfig = Layout configuration
com.top_logic.layout.form.boxes.reactive_tag.BoxLayoutTag$ConfigService$Config$LayoutConfig.tooltip = Named <i>box layout</i> configuration.
com.top_logic.layout.form.boxes.reactive_tag.BoxLayoutTag$ConfigService.tooltip = Service creating configured <i>box layout</i> factories from configuration.
com.top_logic.layout.form.boxes.reactive_tag.BoxLayoutTag.ConfigService.Config.LayoutConfig.implementation = Implementation
com.top_logic.layout.form.boxes.reactive_tag.BoxLayoutTag.ConfigService.Config.LayoutConfig.implementation.tooltip = The <i>box layout</i> configuration to instantiate whenever a layout with <i>Name</i> is referenced.
com.top_logic.layout.form.boxes.reactive_tag.BoxLayoutTag.ConfigService.Config.LayoutConfig.name = Name
com.top_logic.layout.form.boxes.reactive_tag.BoxLayoutTag.ConfigService.Config.LayoutConfig.name.tooltip = The name of the layout algorithm to use.
com.top_logic.layout.form.boxes.reactive_tag.BoxLayoutTag.ConfigService.Config.layouts = Layouts
com.top_logic.layout.form.boxes.reactive_tag.BoxLayoutTag.ConfigService.Config.layouts.tooltip = Named <i>box layout</i> configurations.
com.top_logic.layout.form.boxes.reactive_tag.DescriptionCellControl.cellClasses = Space separated list of CSS classes to add to the top-level tag of the cell.
com.top_logic.layout.form.boxes.reactive_tag.DescriptionCellControl.cellStyle = A custom CSS style value to add to the top-level tag of the generated content. <p> Note: This value is only relevant for legacy JSP-generated forms. </p>
com.top_logic.layout.form.boxes.reactive_tag.DescriptionCellControl.cellWidth = A custom CSS <code>width</code> value for the complete cell. <p> Note: This value is only relevant for legacy JSP-generated forms. </p>
com.top_logic.layout.form.boxes.reactive_tag.DescriptionCellControl.content = Writes the content of the cell.
com.top_logic.layout.form.boxes.reactive_tag.DescriptionCellControl.hasLabel = Whether the cell has a label at all.
com.top_logic.layout.form.boxes.reactive_tag.DescriptionCellControl.keepInline = Whether the label should be rendered strictly before the input element, even if the label would otherwise wrap to a separate line due to limited space.
com.top_logic.layout.form.boxes.reactive_tag.DescriptionCellControl.label = Writes the label of the cell.
com.top_logic.layout.form.boxes.reactive_tag.DescriptionCellControl.labelClass = Custom CSS class for the label part of the cell.
com.top_logic.layout.form.boxes.reactive_tag.DescriptionCellControl.labelFirst = Whether the label is rendered before the input element. <p> This is normally <code>true</code> except for certain input types such as check-boxes that are displayed before their labels. </p>
com.top_logic.layout.form.boxes.reactive_tag.DescriptionCellControl.labelStyle = Custom CSS style value to add to the label part of the cell.
com.top_logic.layout.form.boxes.reactive_tag.DescriptionCellControl.labelWidth = The CSS width of the first column of the cell. By default its the cell for the label.
com.top_logic.layout.form.boxes.reactive_tag.DescriptionCellControl.wholeLine = Whether the input cell should span the whole form width, even if the form has a multi-column layout.
com.top_logic.layout.form.boxes.reactive_tag.GroupCellControl.collapsed = Whether the group is currently displayed in minimized state.
com.top_logic.layout.form.boxes.reactive_tag.GroupCellControl.content = The HTML contents of the group.
com.top_logic.layout.form.boxes.reactive_tag.GroupCellControl.menuButton = The menu button to open a context menu displaying additional commands.
com.top_logic.layout.form.boxes.reactive_tag.GroupCellControl.title = Title of the group.
com.top_logic.layout.form.boxes.reactive_tag.GroupCellControl.toggleButton = The button for toggling the collapsed state of the group.
com.top_logic.layout.form.boxes.reactive_tag.GroupSettings.collapsible = Whether the group should never be collapsed.
com.top_logic.layout.form.boxes.reactive_tag.GroupSettings.columns = The maximum number of columns of the group cell.
com.top_logic.layout.form.boxes.reactive_tag.GroupSettings.cssClass = The custom CSS class to add to the generated group cell.
com.top_logic.layout.form.boxes.reactive_tag.GroupSettings.dataId = The data ID for a custom <code>data-id</code> HTML attribute.
com.top_logic.layout.form.boxes.reactive_tag.GroupSettings.draggable = Whether the group is draggable.
com.top_logic.layout.form.boxes.reactive_tag.GroupSettings.hasBorder = Whether a border should be drawn around the group cell. The default value is provided by the theme.
com.top_logic.layout.form.boxes.reactive_tag.GroupSettings.hasLegend = Whether the group cell has a legend to be rendered.
com.top_logic.layout.form.boxes.reactive_tag.GroupSettings.hasMenu = Whether there is a menu.
com.top_logic.layout.form.boxes.reactive_tag.GroupSettings.labelAbove = Whether the label of all inner elements are rendered above their input.
com.top_logic.layout.form.boxes.reactive_tag.GroupSettings.labelInline = Whether the label of all inner elements are rendered in the same line as their input.
com.top_logic.layout.form.boxes.reactive_tag.GroupSettings.menuButton = The <i>icon</i> to open the menu.
com.top_logic.layout.form.boxes.reactive_tag.GroupSettings.rows = The number of rows over which the group should stretch.
com.top_logic.layout.form.boxes.reactive_tag.GroupSettings.style = CSS style to add to the generated group cell.
com.top_logic.layout.form.boxes.reactive_tag.GroupSettings.wholeLine = Whether the form group is rendered over the whole line, even when it is in a multi-column container.
com.top_logic.layout.form.boxes.reactive_tag.GroupSettings.width = The width of the group.
com.top_logic.layout.form.boxes.reactive_tag.Icons.COLON = Whether a colon is set after a label.
com.top_logic.layout.form.boxes.reactive_tag.Icons.FORM_CELL_TEMPLATE = Template defining the layout of a single input element in a form. <p> The template must arrange the input element's label, input and error display. </p>
com.top_logic.layout.form.boxes.reactive_tag.Icons.FORM_GROUP_TEMPLATE = Template for a field set box. <p> A field set groups a form and can be potentially collapsed to temporarily safe space. </p>
com.top_logic.layout.form.boxes.reactive_tag.Icons.LABEL_ABOVE = Whether the label is rendered above the content.
com.top_logic.layout.form.boxes.reactive_tag.Icons.RF_HORIZONTAL_GAP_COLUMNS = Horizontal gap between columns.
com.top_logic.layout.form.boxes.tag.BoxLayoutTag$ConfigService = Configuration service
com.top_logic.layout.form.boxes.tag.BoxLayoutTag$ConfigService$Config$LayoutConfig = Layout configuration
com.top_logic.layout.form.boxes.tag.BoxLayoutTag$ConfigService$Config$LayoutConfig.tooltip = Named <i>box layout</i> configuration.
com.top_logic.layout.form.boxes.tag.BoxLayoutTag$ConfigService.tooltip = Service creating configured <i>box layout</i> factories from configuration.
com.top_logic.layout.form.boxes.tag.BoxLayoutTag.ConfigService.Config.LayoutConfig.implementation = Implementation
com.top_logic.layout.form.boxes.tag.BoxLayoutTag.ConfigService.Config.LayoutConfig.implementation.tooltip = The <i>box layout</i> configuration to instantiate whenever a layout with <i>Name</i> is referenced.
com.top_logic.layout.form.boxes.tag.BoxLayoutTag.ConfigService.Config.LayoutConfig.name = Name
com.top_logic.layout.form.boxes.tag.BoxLayoutTag.ConfigService.Config.LayoutConfig.name.tooltip = The name of the layout algorithm to use.
com.top_logic.layout.form.boxes.tag.BoxLayoutTag.ConfigService.Config.layouts = Layouts
com.top_logic.layout.form.boxes.tag.BoxLayoutTag.ConfigService.Config.layouts.tooltip = Named <i>box layout</i> configurations.
com.top_logic.layout.form.component.AbstractApplyCommandHandler = Apply command handler
com.top_logic.layout.form.component.AbstractApplyCommandHandler$GlobalConfig = Global configuration
com.top_logic.layout.form.component.AbstractApplyCommandHandler$GlobalConfig.tooltip = Global configuration options for <i>apply command handler</i>.
com.top_logic.layout.form.component.AbstractApplyCommandHandler.Config.save = Save
com.top_logic.layout.form.component.AbstractApplyCommandHandler.Config.save.tooltip = Whether an <i>edit component</i> this command is executed on should switch to view mode after the command executed successfully.
com.top_logic.layout.form.component.AbstractApplyCommandHandler.GlobalConfig.warnings-disabled = Warnings disabled
com.top_logic.layout.form.component.AbstractApplyCommandHandler.GlobalConfig.warnings-disabled.tooltip = Whether the warning check upon apply is disabled globally.
com.top_logic.layout.form.component.AbstractApplyCommandHandler.tooltip = Base for <i>command handlers</i> applying changes.
com.top_logic.layout.form.component.AbstractCreateCommandHandler = Create command handler
com.top_logic.layout.form.component.AbstractCreateCommandHandler.tooltip = Handles the creation of a new object.
com.top_logic.layout.form.component.AbstractCreateComponent = Create component
com.top_logic.layout.form.component.AbstractCreateComponent$CancelHandler = Cancel handler
com.top_logic.layout.form.component.AbstractCreateComponent$CancelHandler.tooltip = Default Cancel Command that will close the Dialog, too.
com.top_logic.layout.form.component.AbstractCreateComponent$NewModelAction = New model action
com.top_logic.layout.form.component.AbstractCreateComponent$NewModelAction.tooltip = Enumeration describing possible actions after create.
com.top_logic.layout.form.component.AbstractCreateComponent.Config.cancel-handler = Cancel handler
com.top_logic.layout.form.component.AbstractCreateComponent.Config.cancel-handler.tooltip = The <i>ID</i> (<i>command handler configuration</i>) of the <i>command handler</i> that aborts the create operation.
com.top_logic.layout.form.component.AbstractCreateComponent.Config.create-handler = Create handler
com.top_logic.layout.form.component.AbstractCreateComponent.Config.create-handler.tooltip = The <i>ID</i> (<i>command handler configuration</i>) of the <i>command handler</i> responsible executing the creation of the new object from the information collected by this component.
com.top_logic.layout.form.component.AbstractCreateComponent.Config.newModelAction = New model action
com.top_logic.layout.form.component.AbstractCreateComponent.Config.newModelAction.tooltip = Operation to perform after the new object is created. <p> Note: The current default <i>set parent model</i> is only reasonable, when the create dialog is registered on a form. When registering the create dialog on a table, the value must be changed to <i>set parent selection</i> otherwise, the table will behave unpredictably. </p>
com.top_logic.layout.form.component.AbstractCreateComponent.Config.setParentToEdit = Set parent to edit
com.top_logic.layout.form.component.AbstractCreateComponent.Config.setParentToEdit.tooltip = Whether to switch the dialog parent component to edit mode after the creation succeeds.
com.top_logic.layout.form.component.AbstractCreateComponent.NewModelAction.NO_ACTION = No action
com.top_logic.layout.form.component.AbstractCreateComponent.NewModelAction.NO_ACTION.tooltip = Perform no action.
com.top_logic.layout.form.component.AbstractCreateComponent.NewModelAction.SET_PARENT_MODEL = Set parent model
com.top_logic.layout.form.component.AbstractCreateComponent.NewModelAction.SET_PARENT_MODEL.tooltip = Set the newly created object as model in the dialog parent component.
com.top_logic.layout.form.component.AbstractCreateComponent.NewModelAction.SET_PARENT_SELECTION = Set parent selection
com.top_logic.layout.form.component.AbstractCreateComponent.NewModelAction.SET_PARENT_SELECTION.tooltip = Set the newly created object as selection in the dialog parent component.
com.top_logic.layout.form.component.AbstractCreateComponent.tooltip = <i>Form component</i> to use as base for create dialogs. <p> Note: Instead of creating custom sub-classes of this component, consider using the <code>com.top_logic.element/create/genericCreate.xml</code> template. </p>
com.top_logic.layout.form.component.AbstractDeleteCommandHandler = Delete command handler
com.top_logic.layout.form.component.AbstractDeleteCommandHandler.tooltip = Base class for <i>command handlers</i> deleting objects.
com.top_logic.layout.form.component.AbstractFormCommandHandler = Form command handler
com.top_logic.layout.form.component.AbstractFormCommandHandler.Config.ignoreWarnings = Ignore warnings
com.top_logic.layout.form.component.AbstractFormCommandHandler.Config.ignoreWarnings.tooltip = Whether the warning check is disabled for this command.
com.top_logic.layout.form.component.AbstractFormCommandHandler.tooltip = <i>Command handler</i> that cares about validating a <i>form context</i> of a <i>form component</i> and handling errors and warnings.
com.top_logic.layout.form.component.AbstractSelectorComponent = Selector component
com.top_logic.layout.form.component.AbstractSelectorComponent$UIOptions = UI options
com.top_logic.layout.form.component.AbstractSelectorComponent$UIOptions.tooltip = <i>Selector component</i> options directly displayed in the component's template.
com.top_logic.layout.form.component.AbstractSelectorComponent.UIOptions.multiple = Multiple
com.top_logic.layout.form.component.AbstractSelectorComponent.UIOptions.multiple.tooltip = Whether the user is allowed to select multiple options at the same time. <p> If this option is enabled, the selection channel contains sets of objects instead of singleton objects. </p>
com.top_logic.layout.form.component.AbstractSelectorComponent.UIOptions.presentation = Presentation
com.top_logic.layout.form.component.AbstractSelectorComponent.UIOptions.presentation.tooltip = Option how to display the selection.
com.top_logic.layout.form.component.AbstractSelectorComponent.UIOptions.types = Types
com.top_logic.layout.form.component.AbstractSelectorComponent.UIOptions.types.tooltip = Type(s) of options. <p> Only required for table select display to compute a corresponding table configuration with columns for attributes of the types. </p>
com.top_logic.layout.form.component.AbstractSelectorComponent.tooltip = Base class for components presenting a single <i>select field</i> providing options to be used as context for other components through the selection channel. <p> <b>Note</b>: Instead of sub-classing this class, better use <i>selector component</i> that is fully configurable through a <i>list model builder</i>. </p>
com.top_logic.layout.form.component.DeclarativeFormComponent = Declarative form component
com.top_logic.layout.form.component.DeclarativeFormComponent.Config.compactLayout = Compact layout
com.top_logic.layout.form.component.DeclarativeFormComponent.Config.controlProvider = Control provider
com.top_logic.layout.form.component.DeclarativeFormComponent.Config.controlProvider.tooltip = <i>Control provider</i> to use to render primitive fields.
com.top_logic.layout.form.component.DeclarativeFormComponent.Config.formBodyClass = Form body class
com.top_logic.layout.form.component.DeclarativeFormComponent.Config.formBodyClass.tooltip = The CSS class to use in the outermost <code>div</code> element.
com.top_logic.layout.form.component.DeclarativeFormComponent.Config.formType = Form type
com.top_logic.layout.form.component.DeclarativeFormComponent.Config.formType.tooltip = <i>Configuration item</i> class declaring the properties of the form.
com.top_logic.layout.form.component.DeclarativeFormComponent.tooltip = A <i>form component</i> that uses declarative form definitions.
com.top_logic.layout.form.component.DefaultSaveCommandHandler = Default save command handler
com.top_logic.layout.form.component.DefaultSaveCommandHandler.tooltip = Uses the <i>edit component's</i> apply handler to update the model and then (on success) switch back to view mode.
com.top_logic.layout.form.component.DispatchingDeleteHandler = Delete handler of default view
com.top_logic.layout.form.component.DispatchingDeleteHandler.tooltip = <i>Command handler</i> that executes the delete command of an object as defined by the default view of the object.
com.top_logic.layout.form.component.EditComponent = Edit component
com.top_logic.layout.form.component.EditComponent$CancelCommand = Cancel command
com.top_logic.layout.form.component.EditComponent$CancelCommand.tooltip = The CancelCommand is the default "nothing" command. It switches the component into view mode.
com.top_logic.layout.form.component.EditComponent$CloseDialogInViewCommandHandler = Close dialog in view command handler
com.top_logic.layout.form.component.EditComponent$CloseDialogInViewCommandHandler.tooltip = Close command handler which is visible only in view mode. This one may be used, when the edit component is displayed in a dialog.
com.top_logic.layout.form.component.EditComponent$DiscardCommand = Discard command
com.top_logic.layout.form.component.EditComponent$DiscardCommand.tooltip = The DiscardCommand is the default "discard" command. It discards all changes made in edit mode, like the cancel command, but stays in edit mode.
com.top_logic.layout.form.component.EditComponent.Config.allowRefresh = Allow refresh
com.top_logic.layout.form.component.EditComponent.Config.allowRefresh.tooltip = Whether the <i>form context</i> is reset whenever F5 is pressed.
com.top_logic.layout.form.component.EditComponent.Config.deleteCommand = Delete command
com.top_logic.layout.form.component.EditComponent.Config.deleteCommand.tooltip = ID of the delete <i>command handler</i>. <p> The delete command deletes the currently shown model. </p>
com.top_logic.layout.form.component.EditComponent.Config.keepInvisibleEditMode = Keep invisible edit mode
com.top_logic.layout.form.component.EditComponent.Config.keepInvisibleEditMode.tooltip = Whether to keep the edit mode even if the component becomes invisible. <p> Normally, an <i>edit component</i> switches back to view mode, if it becomes invisible. </p>
com.top_logic.layout.form.component.EditComponent.tooltip = <i>Form component</i> allowing to switch the display between edit and view mode. <p> In view mode, the content is displayed in a way optimized for reading (text only without input fields). In edit mode, an input field is shown for each piece of information that can be edited by the user. The default mode is view mode. If an apply command is registered, the user can switch the component into edit-mode by clicking on the edit button. This apply command is invoked, if the user clicks the "apply" or "save" buttons. </p>
com.top_logic.layout.form.component.Editor$Config = Configuration
com.top_logic.layout.form.component.Editor$Config.tooltip = Configuration options for <i>editor</i>.
com.top_logic.layout.form.component.Editor.Config.applyCommand = Apply command
com.top_logic.layout.form.component.Editor.Config.applyCommand.tooltip = ID of the apply <i>command handler</i>. <p> The apply command makes current changes persistent, but does not switch back to view mode. </p>
com.top_logic.layout.form.component.Editor.Config.cancelCommand = Cancel command
com.top_logic.layout.form.component.Editor.Config.cancelCommand.tooltip = ID of the cancel <i>command handler</i>. <p> The cancel command drops transient changes and switches back to view mode. </p>
com.top_logic.layout.form.component.Editor.Config.discardCommand = Discard command
com.top_logic.layout.form.component.Editor.Config.discardCommand.tooltip = ID of the discard <i>command handler</i>. <p> The discard command drops transient changes, but keeps the edit mode. </p> <p> The discard command is only registered as separate button, if <i>Show discard button</i> is set. Otherwise, the discard command is a globally registered command that is looked up from the <i>command handler factory</i> when required, e.g. when resetting changes upon tab switch. </p>
com.top_logic.layout.form.component.Editor.Config.editCommand = Edit command
com.top_logic.layout.form.component.Editor.Config.editCommand.tooltip = ID of the edit <i>command handler</i> switching the component into edit mode.
com.top_logic.layout.form.component.Editor.Config.save-command-effective = Save command effective
com.top_logic.layout.form.component.Editor.Config.save-command-effective.tooltip = The identifier of the save command handler to use. <p> This method takes into account that a default save command handler is used, if there is an <i>Apply command</i> and no explicit <i>Save command</i> is given. </p>
com.top_logic.layout.form.component.Editor.Config.saveClosesDialog = Save closes dialog
com.top_logic.layout.form.component.Editor.Config.saveClosesDialog.tooltip = Whether the "save" command also closes the surrounding dialog (if this component is opened in a dialog).
com.top_logic.layout.form.component.Editor.Config.saveCommand = Save command
com.top_logic.layout.form.component.Editor.Config.saveCommand.tooltip = ID of the save <i>command handler</i>. <p> The save command makes current changes persistent and switches back to view mode. </p> <p> The default is to <code>null</code>, which means that the generic save handler is registered, if there is an apply handler, see <i>Apply command</i>. </p>
com.top_logic.layout.form.component.Editor.Config.showDiscardButton = Show discard button
com.top_logic.layout.form.component.Editor.Config.showDiscardButton.tooltip = Whether to show the "discard" button in addition to the "edit", "apply", "save", and "cancel" buttons for mode switch. <p> The discard button drops user input but keeps the edit mode active. </p>
com.top_logic.layout.form.component.FormComponent = Form component
com.top_logic.layout.form.component.FormComponent.Config.ignoreWarnings = Ignore warnings
com.top_logic.layout.form.component.FormComponent.Config.ignoreWarnings.tooltip = Whether warnings upon apply should be ignored for all commands in this component.
com.top_logic.layout.form.component.FormComponent.Config.page = Page
com.top_logic.layout.form.component.FormComponent.Config.page.tooltip = The JSP page used for rendering. <p> If no page is given, the component must have a <i>Component control provider</i> that does custom rendering. </p>
com.top_logic.layout.form.component.FormComponent.Config.persistentState = Persistent state
com.top_logic.layout.form.component.FormComponent.Config.persistentState.tooltip = Whether form state (expansion of groups) should be automatically saved to and loaded from the <i>personal configuration</i>.
com.top_logic.layout.form.component.FormComponent.Config.resetInvalidate = Reset invalidate
com.top_logic.layout.form.component.FormComponent.Config.resetInvalidate.tooltip = Whether to reset the form when component is invalidated.
com.top_logic.layout.form.component.FormComponent.Config.tables = Tables
com.top_logic.layout.form.component.FormComponent.Config.tables.tooltip = <i>Table configurations</i> to be applied to tables displayed within this form.
com.top_logic.layout.form.component.FormComponent.tooltip = <i>Component</i> for editing forms. <p> The form model must be provided by a <i>model builder</i>, see <i>Model builder</i>. The actual form layout is defined either by a <i>layout control provider</i> (see <i>Component control provider</i>), or a JSP (see <i>Page</i>). </p>
com.top_logic.layout.form.component.FormMutator$OpenPopup = Open popup
com.top_logic.layout.form.component.FormMutator$OpenPopup.tooltip = Command that opens a <i>form mutator</i> in a separate window.
com.top_logic.layout.form.component.FormStateRecorder = Form state recorder
com.top_logic.layout.form.component.FormStateRecorder.Config.dropOnModelChange = Drop on model change
com.top_logic.layout.form.component.FormStateRecorder.Config.dropOnModelChange.tooltip = Whether the state must be dropped when a new model is set.
com.top_logic.layout.form.component.FormStateRecorder.tooltip = <i>Component resolver</i> adding a <i>form state handler</i> to the resolved component.
com.top_logic.layout.form.component.FormTableConfig = Form table configuration
com.top_logic.layout.form.component.FormTableConfig.tooltip = <i>Table configuration</i> for tables in the context of <i>form component</i> automatically adds type-based context menu commands.
com.top_logic.layout.form.component.InvalidateCommand = Update view
com.top_logic.layout.form.component.InvalidateCommand.tooltip = <i>Command handler</i> that updates it's <i>component</i>. In case of a resets it's <i>form context</i> in case of a <i>form component</i>.
com.top_logic.layout.form.component.LockTimeConfiguration$Config = Configuration
com.top_logic.layout.form.component.LockTimeConfiguration.Config.default-millis = Default millis
com.top_logic.layout.form.component.LockTimeConfiguration.Config.max-millis = Maximum millis
com.top_logic.layout.form.component.LockTimeConfiguration.Config.min-millis = Minimum millis
com.top_logic.layout.form.component.NullModelSwitchEditCommandHandler = Null model switch edit command handler
com.top_logic.layout.form.component.NullModelSwitchEditCommandHandler.tooltip = Default command that will switch a Component to {EditModeAware#EDIT_MODE}, even if the component has no model.
com.top_logic.layout.form.component.PostCreateAction$DeliverAsDownload = Deliver as download
com.top_logic.layout.form.component.PostCreateAction$DeliverAsDownload.tooltip = Provides the result of a command as download. <p> The command must create a binary value as result. </p>
com.top_logic.layout.form.component.PostCreateAction$SetEditMode = Set edit mode
com.top_logic.layout.form.component.PostCreateAction$SetEditMode.tooltip = <i>Post create action</i> activating edit mode in an <i>edit mode</i> component.
com.top_logic.layout.form.component.PostCreateAction$SetModel = Set model
com.top_logic.layout.form.component.PostCreateAction$SetModel.tooltip = <i>Post create action</i> setting the model to some component.
com.top_logic.layout.form.component.PostCreateAction.SetEditMode.Config.component-ref = Component reference
com.top_logic.layout.form.component.PostCreateAction.SetEditMode.Config.component-ref.tooltip = The component to switch to edit mode.
com.top_logic.layout.form.component.PostCreateAction.SetModel.Config.target = Target
com.top_logic.layout.form.component.PostCreateAction.SetModel.Config.target.tooltip = The target channel to propagate the new model to.
com.top_logic.layout.form.component.ResetModelCommandHandler = Reset model command handler
com.top_logic.layout.form.component.ResetModelCommandHandler.tooltip = <i>Command handler</i> resetting the component's model.
com.top_logic.layout.form.component.RestrictedDefaultSaveCommandHandler = Restricted default save command handler
com.top_logic.layout.form.component.RestrictedDefaultSaveCommandHandler.tooltip = DefaultSaveCommandHandler with restricted write command group.
com.top_logic.layout.form.component.RestrictedSwitchEditCommandHandler = Restricted switch edit command handler
com.top_logic.layout.form.component.RestrictedSwitchEditCommandHandler.tooltip = SwitchEditCommandHandler with restricted write command group.
com.top_logic.layout.form.component.SaveDialogCommandHandler = Save dialog command handler
com.top_logic.layout.form.component.SaveDialogCommandHandler.Config.save = Save
com.top_logic.layout.form.component.SelectPresentation = Select presentation
com.top_logic.layout.form.component.SelectPresentation.DROP_DOWN = Drop down
com.top_logic.layout.form.component.SelectPresentation.DROP_DOWN.tooltip = Show the possible values as drop-down list box.
com.top_logic.layout.form.component.SelectPresentation.POP_UP_LIST = Pop up list
com.top_logic.layout.form.component.SelectPresentation.POP_UP_LIST.tooltip = Show the possible values as pop-up dialog.
com.top_logic.layout.form.component.SelectPresentation.POP_UP_TABLE = Pop up table
com.top_logic.layout.form.component.SelectPresentation.POP_UP_TABLE.tooltip = Show the possible values as pop-up table.
com.top_logic.layout.form.component.SelectPresentation.tooltip = Possible presentations of a selection in a selector component.
com.top_logic.layout.form.component.SelectableFormComponent = Selectable form component
com.top_logic.layout.form.component.SelectableFormComponent.tooltip = <i>Form component</i> holding an additional selection.
com.top_logic.layout.form.component.SelectorComponent = Selector component
com.top_logic.layout.form.component.SelectorComponent$UIOptions = UI options
com.top_logic.layout.form.component.SelectorComponent$UIOptions.tooltip = <i>Selector component</i> options directly displayed in the component's template.
com.top_logic.layout.form.component.SelectorComponent.UIOptions.alphabeticalOrder = Alphabetical order
com.top_logic.layout.form.component.SelectorComponent.UIOptions.alphabeticalOrder.tooltip = Whether to present the options in alphabetical order of their labels as defined by the <i>Option label provider</i>. <p> If not checked, options are displayed in the order created by the <i>Option builder</i>. </p>
com.top_logic.layout.form.component.SelectorComponent.UIOptions.defaultSelectionProvider = Default selection provider
com.top_logic.layout.form.component.SelectorComponent.UIOptions.defaultSelectionProvider.tooltip = Algorithm selecting some option, if <i>Default selection</i> is enabled and the user has not yet chosen an option. <p> If <i>Default selection</i> is enabled but no value is given here, the first option from the list is chosen by default. </p>
com.top_logic.layout.form.component.SelectorComponent.UIOptions.optionBuilder = Option builder
com.top_logic.layout.form.component.SelectorComponent.UIOptions.optionBuilder.tooltip = <i>List model builder</i> creating the options to select from. <p> The selected option is immediately published on the selection channel of this component. </p>
com.top_logic.layout.form.component.SelectorComponent.UIOptions.optionLabelProvider = Option label provider
com.top_logic.layout.form.component.SelectorComponent.UIOptions.optionLabelProvider.tooltip = <i>Label provider</i> for displaying the options. <p> If none is given, <i>meta label provider</i> is used. </p>
com.top_logic.layout.form.component.SelectorComponent.tooltip = <i>Component</i> displaying a single select field showing options produced by a <i>list model builder</i>.
com.top_logic.layout.form.component.SimpleFormComponent = Simple form component
com.top_logic.layout.form.component.SimpleFormComponent.tooltip = The <i>simple form component</i> can be used with simple JSP and HTML pages.
com.top_logic.layout.form.component.SwitchEditCommandHandler = Switch edit command handler
com.top_logic.layout.form.component.SwitchEditCommandHandler.tooltip = Default Command that will switch a Component to {EditModeAware#EDIT_MODE}.
com.top_logic.layout.form.component.WithPostCreateActions$Config = Configuration
com.top_logic.layout.form.component.WithPostCreateActions$Config.tooltip = Configuration options for <i>with post create actions</i>.
com.top_logic.layout.form.component.WithPostCreateActions.Config.postCreateActions = User interface actions
com.top_logic.layout.form.component.WithPostCreateActions.Config.postCreateActions.tooltip = Actions in the user interface to be executed after a model operation. <p> If applicable, actions operate on the result of the model operation. </p>
com.top_logic.layout.form.component.edit.CanLock$Config = Configuration
com.top_logic.layout.form.component.edit.CanLock$Config.tooltip = Configuration options for <i>can lock</i>.
com.top_logic.layout.form.component.edit.CanLock.Config.lockHandler = Lock handler
com.top_logic.layout.form.component.edit.CanLock.Config.lockHandler.tooltip = Algorithm for edit-mode token handling. <p> For just specifying an alternative operation, use <i>Lock operation</i>. </p>
com.top_logic.layout.form.component.edit.CanLock.Config.lockOperation = Lock operation
com.top_logic.layout.form.component.edit.CanLock.Config.lockOperation.tooltip = Abstract operation performed by this component with regard to locking. <p> This property is a short-cut for <i>Lock handler</i> using <i>default lock handler</i> with the given operation. You can disable lock handling by setting this property to empty. </p>
com.top_logic.layout.form.component.edit.EditMode$Config = Configuration
com.top_logic.layout.form.component.edit.EditMode$Config.tooltip = Configuration options for <i>edit mode</i>.
com.top_logic.layout.form.component.edit.EditMode$EditorMode = Editor mode
com.top_logic.layout.form.component.edit.EditMode$EditorMode.tooltip = The mode in which an <i>editor</i> can be.
com.top_logic.layout.form.component.edit.EditMode.Config.editMode = Edit mode
com.top_logic.layout.form.component.edit.EditMode.Config.editMode.tooltip = <i>Edit mode</i> channel linking.
com.top_logic.layout.form.component.edit.EditMode.EditorMode.EDIT_MODE = Edit mode
com.top_logic.layout.form.component.edit.EditMode.EditorMode.EDIT_MODE.tooltip = The <i>editor</i> is in edit-mode.
com.top_logic.layout.form.component.edit.EditMode.EditorMode.VIEW_MODE = View mode
com.top_logic.layout.form.component.edit.EditMode.EditorMode.VIEW_MODE.tooltip = The <i>editor</i> is in view-mode.
com.top_logic.layout.form.component.edit.EditModeSwitch = Edit mode switch
com.top_logic.layout.form.component.edit.EditModeSwitch.tooltip = <i>Command handler</i> toggling the edit mode state of a <i>component</i>.
com.top_logic.layout.form.component.edit.OpenDialogInEdit = Open dialog in edit
com.top_logic.layout.form.component.edit.OpenDialogInEdit.Config.editor-name = Editor name
com.top_logic.layout.form.component.edit.OpenDialogInEdit.Config.editor-name.tooltip = Name of the editor in the dialog. <p> If not given, the first editor of the dialog is taken. </p>
com.top_logic.layout.form.component.edit.OpenDialogInEdit.tooltip = Handler for opening a dialog in edit mode. This handler isn't registered in the CommandHandlerFactory, because it isn't state less.
com.top_logic.layout.form.component.edit.SetModeCommandHandler = Set mode command handler
com.top_logic.layout.form.component.edit.SetModeCommandHandler.Config.channel = Channel
com.top_logic.layout.form.component.edit.SetModeCommandHandler.Config.channel.tooltip = The channel to update.
com.top_logic.layout.form.component.edit.SetModeCommandHandler.Config.delegate = Delegate
com.top_logic.layout.form.component.edit.SetModeCommandHandler.Config.delegate.tooltip = Optional ID of a <i>command handler</i> of the same component to trigger before updating the mode.
com.top_logic.layout.form.component.edit.SetModeCommandHandler.Config.mode = Mode
com.top_logic.layout.form.component.edit.SetModeCommandHandler.Config.mode.tooltip = The new mode to set.
com.top_logic.layout.form.component.edit.SetModeCommandHandler.tooltip = <i>Command handler</i> that updates a boolean component channel to a new value. <p> Before the actual mode switch, a delegate command can be executed. </p>
com.top_logic.layout.form.control.AbstractButtonControl.accessKey = Writes the keyboard shortcut to execute this button.
com.top_logic.layout.form.control.AbstractButtonControl.commandImage = Renders an image next to the label if an image exists.
com.top_logic.layout.form.control.AbstractButtonControl.label = Text that is written on the button.
com.top_logic.layout.form.control.AbstractButtonControl.onclick = Determines which method should be executed when the button is pressed.
com.top_logic.layout.form.control.AbstractButtonControl.tooltip = Short explanation that is displayed when the mouse pointer is moved over the button.
com.top_logic.layout.form.control.AbstractButtonLinkRenderer = Button link renderer
com.top_logic.layout.form.control.AbstractButtonLinkRenderer.tooltip = Adapter that uses a <i>renderer</i> to implement an <i>button renderer</i> for displaying <i>button controls</i>.
com.top_logic.layout.form.control.AbstractButtonRenderer = Button renderer
com.top_logic.layout.form.control.AbstractButtonRenderer.Config.execStateInTooltip = Exec state in tooltip
com.top_logic.layout.form.control.AbstractButtonRenderer.tooltip = Base class for all view/renderer classes for <i>button controls</i>.
com.top_logic.layout.form.control.ButtonRenderer = Button renderer
com.top_logic.layout.form.control.ColorChooserSelectionControl$Config = Configuration
com.top_logic.layout.form.control.ColorChooserSelectionControl$Config$ColorItem = Color item
com.top_logic.layout.form.control.ColorChooserSelectionControl$Config$ColorItem.tooltip = A <i>color item</i> has a name which is the name of the cell for which this color is to be used and an hex value which defines the actual color value.
com.top_logic.layout.form.control.ColorChooserSelectionControl$Config.tooltip = Colors to be displayed by color chooser for direct selection
com.top_logic.layout.form.control.ColorChooserSelectionControl.Config.ColorItem.hex-value = Hex value
com.top_logic.layout.form.control.ColorChooserSelectionControl.Config.ColorItem.hex-value.tooltip = Color hex value, <code>null</code> means no predefined color (can be customized by the user).
com.top_logic.layout.form.control.ColorChooserSelectionControl.Config.colors = Colors
com.top_logic.layout.form.control.ColorChooserSelectionControl.Config.colors.tooltip = Predefined color of the named cell in the area with predefined colors. <p> The color cells are named in an Excel-like fashion: A1,..., Z1 for the first row, A1,..., A99 for the first column. </p>
com.top_logic.layout.form.control.ColorChooserSelectionControl.Config.columns = Columns
com.top_logic.layout.form.control.ColorChooserSelectionControl.Config.columns.tooltip = Number of columns in the area with predefined colors.
com.top_logic.layout.form.control.ColorChooserSelectionControl.Config.height = Height
com.top_logic.layout.form.control.ColorChooserSelectionControl.Config.height.tooltip = Height of the dialog in pixels.
com.top_logic.layout.form.control.ColorChooserSelectionControl.Config.rows = Rows
com.top_logic.layout.form.control.ColorChooserSelectionControl.Config.rows.tooltip = Number of rows in the area with predefined colors.
com.top_logic.layout.form.control.ColorChooserSelectionControl.Config.width = Width
com.top_logic.layout.form.control.ColorChooserSelectionControl.Config.width.tooltip = Width of the dialog in pixels.
com.top_logic.layout.form.control.ConfiguredFirstLineRenderer = Configured first line renderer
com.top_logic.layout.form.control.ConfiguredFirstLineRenderer$Options = Options
com.top_logic.layout.form.control.ConfiguredFirstLineRenderer$Options.tooltip = Options of the <i>configured first line renderer</i> configuration.
com.top_logic.layout.form.control.ConfiguredFirstLineRenderer.Options.labelProvider = Label provider
com.top_logic.layout.form.control.ConfiguredFirstLineRenderer.Options.labelProvider.tooltip = <i>Label provider</i> producing a short representation of a complex value (e.g. the first line of a text).
com.top_logic.layout.form.control.ConfiguredFirstLineRenderer.Options.tooltipRenderer = Tooltip renderer
com.top_logic.layout.form.control.ConfiguredFirstLineRenderer.Options.tooltipRenderer.tooltip = <i>Renderer</i> writing the complete value.
com.top_logic.layout.form.control.ConfiguredFirstLineRenderer.tooltip = <i>First line renderer</i> that can be created with configuration options.
com.top_logic.layout.form.control.DataItemControl$Config = Configuration
com.top_logic.layout.form.control.DataItemControl$Config.tooltip = Configuration for <i>data item control</i>.
com.top_logic.layout.form.control.DataItemControl.Config.forbidEmptyFiles = Forbid empty files
com.top_logic.layout.form.control.DataItemControl.Config.forbidEmptyFiles.tooltip = Whether the upload of empty files is forbidden.
com.top_logic.layout.form.control.DefaultButtonLinkRenderer = Default button link renderer
com.top_logic.layout.form.control.DefaultButtonLinkRenderer.Config.renderer = Renderer
com.top_logic.layout.form.control.DefaultButtonLinkRenderer.Config.renderer.tooltip = The <i>renderer</i> that actually produces the visual representation of the <i>button control</i>.
com.top_logic.layout.form.control.DefaultButtonLinkRenderer.tooltip = Configurable default <i>button link renderer</i> adapter that delegates to a <i>renderer</i> for displaying a <i>button control</i>.
com.top_logic.layout.form.control.DefaultButtonRenderer = Default button renderer
com.top_logic.layout.form.control.DefaultButtonRenderer.tooltip = Renderer that visually displays a <i>button control</i> as XHTML button element with a plain text label.
com.top_logic.layout.form.control.DefaultSimpleCompositeControlRenderer = Default simple composite control renderer
com.top_logic.layout.form.control.DefaultSimpleCompositeControlRenderer.tooltip = Renderer that displays the child <i>views</i> of a <i>composite control</i> without any additional mark-up.
com.top_logic.layout.form.control.FirstLineLabelProvider = First line label provider
com.top_logic.layout.form.control.FirstLineLabelProvider.Config.fullTextProvider = Full text provider
com.top_logic.layout.form.control.FirstLineLabelProvider.Config.fullTextProvider.tooltip = <i>Label provider</i> producing the full-text of the displayed object. <p> From the resulting text, the first line is extracted and returned. </p>
com.top_logic.layout.form.control.FirstLineLabelProvider.Config.maxChars = Maximum chars
com.top_logic.layout.form.control.FirstLineLabelProvider.Config.maxChars.tooltip = Optional character limit. <p> The resulting text never exceeds the given number of characters. </p>
com.top_logic.layout.form.control.FirstLineLabelProvider.tooltip = <i>Label provider</i> displaying a potential multi-line text value by cutting of the first line of text with an optional character limit.
com.top_logic.layout.form.control.IconInputControl$Config = Configuration
com.top_logic.layout.form.control.IconInputControl$Config.tooltip = <i>Configuration item</i> for the <i>icon chooser control</i>. Loads the <i>named resource</i> in a list to generate a list of <i>icons</i> out of it.
com.top_logic.layout.form.control.IconInputControl$ThemeImageMetaData = Theme image meta data
com.top_logic.layout.form.control.IconInputControl$ThemeImageMetaData.tooltip = Config for the Metadata of a <i>named resource</i>.
com.top_logic.layout.form.control.IconInputControl.Config.height = Height
com.top_logic.layout.form.control.IconInputControl.Config.height.tooltip = Height of displayed control
com.top_logic.layout.form.control.IconInputControl.Config.resources = Resources
com.top_logic.layout.form.control.IconInputControl.Config.resources.tooltip = List of files including <i>icons</i>.
com.top_logic.layout.form.control.IconInputControl.Config.width = Width
com.top_logic.layout.form.control.IconInputControl.Config.width.tooltip = Width of displayed control
com.top_logic.layout.form.control.IconInputControl.ThemeImageMetaData.icon-mappings = Icon mappings
com.top_logic.layout.form.control.IconInputControl.ThemeImageMetaData.icon-mappings.tooltip = Mapping between the style of the ressource and the encoded <i>icons</i>.
com.top_logic.layout.form.control.IconSelectControl$Provider = Provider
com.top_logic.layout.form.control.IconSelectControl$Provider.tooltip = <i>Control provider</i> that creates <i>icon select controls</i> for <i>boolean field</i> and <i>select field</i>.
com.top_logic.layout.form.control.IconSelectControl.Provider.Config.resetable = Resetable
com.top_logic.layout.form.control.IconSelectControl.Provider.Config.resourceProvider = Resource provider
com.top_logic.layout.form.control.Icons.ALERT = Image for an error message.
com.top_logic.layout.form.control.Icons.ALERT_SPACER = Placeholder image for an error message that is currently not displayed.
com.top_logic.layout.form.control.Icons.CALENDAR = Image that displays a calendar.
com.top_logic.layout.form.control.Icons.CLOCK = Image that displays a clock.
com.top_logic.layout.form.control.Icons.PASSWORD_BAR_MEDIUM_COLOR = Color for an entered medium password.
com.top_logic.layout.form.control.Icons.PASSWORD_BAR_NORMAL_COLOR = Color for an entered password.
com.top_logic.layout.form.control.Icons.PASSWORD_BAR_STRONG_COLOR = Color for an entered strong password.
com.top_logic.layout.form.control.Icons.PASSWORD_BAR_VERY_STRONG_COLOR = Color for an entered very strong password.
com.top_logic.layout.form.control.Icons.PASSWORD_BAR_WEAK_COLOR = Color for an entered weak password.
com.top_logic.layout.form.control.Icons.WAIT_IMAGE = Image which is shown during the upload of a file.
com.top_logic.layout.form.control.ImageButtonRenderer = Image button renderer
com.top_logic.layout.form.control.ImageButtonRenderer.Config.type-css-class = Type css class
com.top_logic.layout.form.control.ImageButtonRenderer.Config.type-css-class.tooltip = CSS class to set on buttons rendered by <i>I button renderer</i>.
com.top_logic.layout.form.control.ImageButtonRenderer.tooltip = Renderer that visually displays a <i>button control</i> as clickable image.
com.top_logic.layout.form.control.ImageLinkButtonRenderer = Image link button renderer
com.top_logic.layout.form.control.ImageLinkButtonRenderer.tooltip = Renderer that visually displays a <i>button control</i> as as clickable image followed by a linked plain text.
com.top_logic.layout.form.control.LinkButtonRenderer = Link button renderer
com.top_logic.layout.form.control.LinkButtonRenderer.tooltip = Renderer that visually displays a <i>button control</i> as linked plain text.
com.top_logic.layout.form.control.PopupEditControl$CP = Cp
com.top_logic.layout.form.control.PopupEditControl$CP.tooltip = <i>Control provider</i> creating <i>popup edit controls</i>.
com.top_logic.layout.form.control.PopupEditControl.CP.Config.dialogHeight = Dialog height
com.top_logic.layout.form.control.PopupEditControl.CP.Config.dialogHeight.tooltip = Height of the opened dialog.
com.top_logic.layout.form.control.PopupEditControl.CP.Config.dialogWidth = Dialog width
com.top_logic.layout.form.control.PopupEditControl.CP.Config.dialogWidth.tooltip = Width of the opened dialog.
com.top_logic.layout.form.control.PopupEditControl.CP.Config.editControlProvider = Edit control provider
com.top_logic.layout.form.control.PopupEditControl.CP.Config.editControlProvider.tooltip = <i>Control provider</i> that is responsible for creating the edit display shown in the popup dialog.
com.top_logic.layout.form.control.TextPopupControl$CP = Cp
com.top_logic.layout.form.control.TextPopupControl$CP.tooltip = <i>Control provider</i> creating <i>text popup controls</i>.
com.top_logic.layout.form.control.TextPopupControl.CP.Config.columns = Columns
com.top_logic.layout.form.control.TextPopupControl.CP.Config.columns.tooltip = Columns of the text field displayed in the pop-up.
com.top_logic.layout.form.control.TextPopupControl.CP.Config.immutable = Immutable
com.top_logic.layout.form.control.TextPopupControl.CP.Config.immutable.tooltip = Configuration if the text field should be immutable.
com.top_logic.layout.form.control.TextPopupControl.CP.Config.rows = Rows
com.top_logic.layout.form.control.TextPopupControl.CP.Config.rows.tooltip = Rows of the text field displayed in the pop-up.
com.top_logic.layout.form.control.WikiTextRenderer = Wiki text renderer
com.top_logic.layout.form.control.WikiTextRenderer.Config.text-extractor = Text extractor
com.top_logic.layout.form.control.WikiTextRenderer.Config.text-extractor.tooltip = Algorithm extracting wiki text from an object.
com.top_logic.layout.form.control.WikiTextRenderer.tooltip = <i>Renderer</i> interpreting a string representation of an object as wiki text.
com.top_logic.layout.form.declarative.DeclarativeApplyHandler = Declarative apply handler
com.top_logic.layout.form.declarative.DeclarativeApplyHandler.tooltip = Apply <i>command handler</i> that stores form values build with <i>declarative form builders</i>.
com.top_logic.layout.form.declarative.DeclarativeFormBuilder = Declarative form builder
com.top_logic.layout.form.declarative.DeclarativeFormBuilder.Config.compactLayout = Compact layout
com.top_logic.layout.form.declarative.DeclarativeFormBuilder.Config.context = Context
com.top_logic.layout.form.declarative.DeclarativeFormBuilder.Config.context.tooltip = Additional context object to be added to the <i>declarative form options</i> context passed to all dynamic elements of this form. <p> The value is derived from the context component this builder is responsible for by resolving the configured <i>component channel</i>. </p>
com.top_logic.layout.form.declarative.DeclarativeFormBuilder.Config.contextOptional = Context optional
com.top_logic.layout.form.declarative.DeclarativeFormBuilder.Config.contextOptional.tooltip = Whether a form can be built with <code>null</code> as context model.
com.top_logic.layout.form.declarative.DeclarativeFormBuilder.Config.create = Create
com.top_logic.layout.form.declarative.DeclarativeFormBuilder.Config.create.tooltip = Whether the form is built in create mode. <p> In create mode, the form is not filled with an existing model. Instead of forcing the component's model to be of display model type, the component's model must be of <i>Create context type</i>. </p>
com.top_logic.layout.form.declarative.DeclarativeFormBuilder.Config.createContextType = Create context type
com.top_logic.layout.form.declarative.DeclarativeFormBuilder.Config.createContextType.tooltip = The required type of the component's model in create mode. <p> Note, in edit mode, the required context type is always display model type, or <code>null</code>, if <i>Context optional</i>. </p> <p> If not given, the context component's model has to be <code>null</code> during create. </p>
com.top_logic.layout.form.declarative.DeclarativeFormBuilder.Config.modelToFormMapping = Model to form mapping
com.top_logic.layout.form.declarative.DeclarativeFormBuilder.Config.modelToFormMapping.tooltip = An optional <i>function</i> used during form model creation to create the form model <i>configuration item</i> from the model of the component. <p> If nothing is configured, the builder's form type is instantiated directly. </p>
com.top_logic.layout.form.declarative.DeclarativeFormBuilder.tooltip = <i>Model builder</i> for <i>form components</i> based on a <i>configuration item</i> as edit model.
com.top_logic.layout.form.declarative.DefaultDeclarativeFormBuilder = Default declarative form builder
com.top_logic.layout.form.declarative.DefaultDeclarativeFormBuilder.Config.formType = Form type
com.top_logic.layout.form.declarative.DefaultDeclarativeFormBuilder.Config.formType.tooltip = Form configuration item type.
com.top_logic.layout.form.declarative.DefaultDeclarativeFormBuilder.Config.modelType = Model type
com.top_logic.layout.form.declarative.DefaultDeclarativeFormBuilder.Config.modelType.tooltip = Required type of the application model.
com.top_logic.layout.form.declarative.DefaultDeclarativeFormBuilder.tooltip = Configurable <i>declarative form builder</i> without any initialization code of the form model based on the business model. <p> For non-trivial applications, the <i>declarative form builder</i> should be sub-classed directly. </p>
com.top_logic.layout.form.declarative.DirectFormControlProvider = Direct form control provider
com.top_logic.layout.form.declarative.DirectFormControlProvider.tooltip = <i>Decorating layout control provider</i> creating a <i>layout control</i> using a <i>direct form display</i>.
com.top_logic.layout.form.declarative.DirectFormDisplay$Config = Configuration
com.top_logic.layout.form.declarative.DirectFormDisplay$Config.tooltip = Configuration options for <i>direct form display</i>.
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.controlProvider = Control provider
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.controlProvider.tooltip = <i>Control provider</i> to use to render primitive fields.
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.cssClass = Css class
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.cssClass.tooltip = An additional custom CSS class to set in the layout control tag.
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.displayedMember = Displayed member
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.displayedMember.tooltip = Name of the <i>form member</i> in the <i>form handler's</i> <i>form context</i> to display.
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.image = Image
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.image.tooltip = The icon to display in the header.
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.imageOverlay = Image overlay
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.imageOverlay.tooltip = The overlay icon to display over <i>Image</i>.
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.imageTooltipKey = Image tooltip key
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.imageTooltipKey.tooltip = <i>Resource key</i> for the tooltip over the header image.
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.noModelKey = No model key
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.noModelKey.tooltip = <i>Resource key</i> for creating a "no model" message. <p> If not given, a suffix to the component's <i>Resource prefix</i> (<i>layout component configuration</i>) is used. If this resource is also not defined, a generic message is shown. </p>
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.showHeader = Show header
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.showHeader.tooltip = Whether to show a header over the form displaying the model name.
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.subTitleKey = Sub title key
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.subTitleKey.tooltip = The <i>resource key</i> for the text to display in the sub-title row. <p> If not given, the model type name is displayed. </p>
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.titleKey = Title key
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.titleKey.tooltip = The <i>resource key</i> for the text to display in the title if the component has a model. <p> The model name is passed as argument to the resource message. </p>
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.titleNoModelKey = Title no model key
com.top_logic.layout.form.declarative.DirectFormDisplay.Config.titleNoModelKey.tooltip = The <i>resource key</i> for the text to display in the title if the component has no model.
com.top_logic.layout.form.declarative.WithShowNoModel.showNoModel = Show no model
com.top_logic.layout.form.declarative.WithShowNoModel.showNoModel.tooltip = Whether a "no model" message should be displayed, if the the component receives an unsupported model (instead of hiding the component).
com.top_logic.layout.form.declarative.mapping.DeclarativeConfigItem = Declarative configuration item
com.top_logic.layout.form.declarative.mapping.DeclarativeConfigItem.tooltip = A <i>function</i> that returns a new <i>configuration item</i> for a configured <i>configuration descriptor</i>.
com.top_logic.layout.form.declarative.mapping.TLPropertyAccess = Property access
com.top_logic.layout.form.declarative.mapping.TLPropertyAccess.Config.ignore-null = Ignore null
com.top_logic.layout.form.declarative.mapping.TLPropertyAccess.Config.ignore-null.tooltip = Whether navigating into a null value should return null and not throw a <i>null pointer exception</i>.
com.top_logic.layout.form.declarative.mapping.TLPropertyAccess.Config.ignore-type-error = Ignore type error
com.top_logic.layout.form.declarative.mapping.TLPropertyAccess.Config.ignore-type-error.tooltip = Whether navigating into a value that is not a <i>configuration item</i> or <i>object</i> or does not have the next property should return null and not throw an exception.
com.top_logic.layout.form.declarative.mapping.TLPropertyAccess.Config.property = Property
com.top_logic.layout.form.declarative.mapping.TLPropertyAccess.Config.property.tooltip = The property (or path of properties) that should be navigated.
com.top_logic.layout.form.declarative.mapping.TLPropertyAccess.tooltip = A <i>function</i> that returns the configured property. <p> Can navigate <i>configuration items</i> and <i>objects</i>. It can therefore be used to navigate into a <i>object</i> and there into a <i>configuration item</i>. </p> <p> If the path is empty, the given value is returned. </p> <p> This can be used for example at: <i>Model to form mapping</i> (<i>declarative form builder configuration</i>) </p>
com.top_logic.layout.form.decorator.AbstractCompareCommandHandler = Compare command handler
com.top_logic.layout.form.decorator.AbstractCompareCommandHandler.tooltip = Provide the mechanism to create a second form context and place that in the original one. <p> This command uses methods from <i>compare service</i>. </p>
com.top_logic.layout.form.decorator.AbstractRevisionCompareHandler = Revision compare handler
com.top_logic.layout.form.decorator.AbstractRevisionCompareHandler.tooltip = <i>Compare command handler</i> that opens a dialog to select a revision to compare the model with.
com.top_logic.layout.form.decorator.ChangeInfo = Change info
com.top_logic.layout.form.decorator.ChangeInfo.CHANGED = Changed
com.top_logic.layout.form.decorator.ChangeInfo.CHANGED.tooltip = Constant indicating that some simple properties of the object have changed.
com.top_logic.layout.form.decorator.ChangeInfo.CREATED = Created
com.top_logic.layout.form.decorator.ChangeInfo.CREATED.tooltip = Constant indicating that the object was created.
com.top_logic.layout.form.decorator.ChangeInfo.DEEP_CHANGED = Deep changed
com.top_logic.layout.form.decorator.ChangeInfo.DEEP_CHANGED.tooltip = Constant indicating that the structure of the object has changed.
com.top_logic.layout.form.decorator.ChangeInfo.NO_CHANGE = No change
com.top_logic.layout.form.decorator.ChangeInfo.NO_CHANGE.tooltip = Constant indicating that the object is unchanged.
com.top_logic.layout.form.decorator.ChangeInfo.REMOVED = Removed
com.top_logic.layout.form.decorator.ChangeInfo.REMOVED.tooltip = Constant indicating that the object was removed.
com.top_logic.layout.form.decorator.ChangeInfo.tooltip = Information about the change type of an object.
com.top_logic.layout.form.decorator.CompareCell$ValueType = Value type
com.top_logic.layout.form.decorator.CompareCell$ValueType.tooltip = Enumeration, whether old or new value shall be used.
com.top_logic.layout.form.decorator.CompareCell.ValueType.AUTO = Auto
com.top_logic.layout.form.decorator.CompareCell.ValueType.AUTO.tooltip = Use heuristic to get base or change value.
com.top_logic.layout.form.decorator.CompareCell.ValueType.BASE = Base
com.top_logic.layout.form.decorator.CompareCell.ValueType.BASE.tooltip = Always use base value.
com.top_logic.layout.form.decorator.CompareCell.ValueType.CHANGE = Change
com.top_logic.layout.form.decorator.CompareCell.ValueType.CHANGE.tooltip = Always use change value.
com.top_logic.layout.form.decorator.CompareTableOwnerNamingScheme$Name = Name
com.top_logic.layout.form.decorator.CompareTableOwnerNamingScheme$Name.tooltip = <i>Model name</i> for <i>compare table owner naming scheme</i>.
com.top_logic.layout.form.decorator.CompareTableOwnerNamingScheme.Name.field = Field
com.top_logic.layout.form.decorator.CompareTableOwnerNamingScheme.Name.field.tooltip = A <i>value reference</i> for the field for which the comparison table is created.
com.top_logic.layout.form.decorator.DetailDecorator$Context = Context
com.top_logic.layout.form.decorator.DetailDecorator$Context.tooltip = In which context the <i>compare info</i> is rendered.
com.top_logic.layout.form.decorator.DetailDecorator.Context.DEFAULT = Default
com.top_logic.layout.form.decorator.DetailDecorator.Context.DEFAULT.tooltip = Detail decorator is used in default context, i.e. no special other contexts.
com.top_logic.layout.form.decorator.DetailDecorator.Context.TABLE = Table
com.top_logic.layout.form.decorator.DetailDecorator.Context.TABLE.tooltip = Detail decorator is used in tables for a decorator column.
com.top_logic.layout.form.decorator.Icons.CHANGED = Image for an object whose properties have changed.
com.top_logic.layout.form.decorator.Icons.COMPARE_MODE_ACTIVE = Image when the compare mode is active.
com.top_logic.layout.form.decorator.Icons.COMPARE_MODE_INACTIVE = Image when the compare mode is inactive.
com.top_logic.layout.form.decorator.Icons.CREATED = Image for a created object.
com.top_logic.layout.form.decorator.Icons.DEEP_CHANGED = Image for an object whose structure have changed.
com.top_logic.layout.form.decorator.Icons.REMOVED = Image for an object that is removed.
com.top_logic.layout.form.decorator.Icons.UNCHANGED = Image for an unchanged object.
com.top_logic.layout.form.decorator.SimpleConfiguredCompareCommandHandler = Simple configured compare command handler
com.top_logic.layout.form.decorator.SimpleConfiguredCompareCommandHandler.Config.algorithm = Algorithm
com.top_logic.layout.form.decorator.SimpleConfiguredCompareCommandHandler.Config.algorithm.tooltip = The algorithm that creates the compare object.
com.top_logic.layout.form.decorator.SimpleConfiguredCompareCommandHandler.tooltip = <i>Compare command handler</i> which delegates the compare object creation to a configured algorithm.
com.top_logic.layout.form.model.FieldManagement = Field management
com.top_logic.layout.form.model.FieldManagement.ComplexField.date.year.max = Complex field date year maximum
com.top_logic.layout.form.model.FieldManagement.ComplexField.date.year.min = Complex field date year minimum
com.top_logic.layout.form.model.FieldManagement.tooltip = Configuration for the field management.
com.top_logic.layout.form.model.FieldMode = Field mode
com.top_logic.layout.form.model.FieldMode.ACTIVE = Active
com.top_logic.layout.form.model.FieldMode.ACTIVE.tooltip = The field displays an input element that is active.
com.top_logic.layout.form.model.FieldMode.BLOCKED = Blocked
com.top_logic.layout.form.model.FieldMode.BLOCKED.tooltip = The field displays neither input element nor the value, but a placeholder for the value that gives visual feedback that the current user is not allowed to see the value.
com.top_logic.layout.form.model.FieldMode.DISABLED = Disabled
com.top_logic.layout.form.model.FieldMode.DISABLED.tooltip = The field displays an input element that is disabled.
com.top_logic.layout.form.model.FieldMode.IMMUTABLE = Immutable
com.top_logic.layout.form.model.FieldMode.IMMUTABLE.tooltip = The field displays only the value in a way that is optimized for reading.
com.top_logic.layout.form.model.FieldMode.INVISIBLE = Invisible
com.top_logic.layout.form.model.FieldMode.INVISIBLE.tooltip = The field does not display anything, but hides itself from the UI.
com.top_logic.layout.form.model.FieldMode.LOCALLY_IMMUTABLE = Locally immutable
com.top_logic.layout.form.model.FieldMode.LOCALLY_IMMUTABLE.tooltip = The field is a group, prevent changing the group layout, but do not prevent modifying contents. <p> This option is only useful in combination of a <i>dynamic mode</i> annotation of a declarative form (as dynamic equivalent to <i>local</i>). This option must not be used to directly manipulate a field's mode through <code>FormMember#setMode(FieldMode)</code>. </p>
com.top_logic.layout.form.model.FieldMode.tooltip = Modes in which a <i>form field</i> can be displayed.
com.top_logic.layout.form.model.Icons.DOC_LOCKED = Image to lock a document.
com.top_logic.layout.form.model.Icons.DOC_LOCKED_DISABLED = Disabled image to lock a document.
com.top_logic.layout.form.model.Icons.DOC_UNLOCK = Image to unlock a document.
com.top_logic.layout.form.model.Icons.DOC_UNLOCK_DISABLED = Disabled image to unlock a document.
com.top_logic.layout.form.model.SelectField$Config = Configuration
com.top_logic.layout.form.model.SelectField.Config.multi-selection-input-enabled = Multiple selection input enabled
com.top_logic.layout.form.model.SelectField.Config.multi-selection-input-enabled.tooltip = True, if selection of multiple options is possible via textual input, false otherwise
com.top_logic.layout.form.model.SelectField.Config.multi-selection-separator = Multiple selection separator
com.top_logic.layout.form.model.SelectField.Config.multi-selection-separator-format = Multiple selection separator format
com.top_logic.layout.form.model.SelectField.Config.multi-selection-separator-format.tooltip = Printable format of separator of multiple selected options.
com.top_logic.layout.form.model.SelectField.Config.multi-selection-separator.tooltip = By parser accepted separator of multiple selected options
com.top_logic.layout.form.model.SelectField.Config.substring-match-enabled = Substring match enabled
com.top_logic.layout.form.model.SelectField.Config.substring-match-enabled.tooltip = True, if filter for option matches will accept substrings, false otherwise.
com.top_logic.layout.form.popupmenu.MenuButtonRenderer = Menu button renderer
com.top_logic.layout.form.popupmenu.MenuButtonRenderer.tooltip = Renderer for menu entries in a popup menu.
com.top_logic.layout.form.popupmenu.PopupCommandNaming$Name = Name
com.top_logic.layout.form.popupmenu.PopupCommandNaming$Name.tooltip = <i>Model name</i> used be <i>popup command naming</i>.
com.top_logic.layout.form.popupmenu.PopupCommandNaming.Name.label = Label
com.top_logic.layout.form.popupmenu.PopupCommandNaming.Name.label.tooltip = The <i>command model's</i> label.
com.top_logic.layout.form.popupmenu.PopupCommandNaming.Name.popup = Popup
com.top_logic.layout.form.popupmenu.PopupCommandNaming.Name.popup.tooltip = <i>Model name</i> of the <i>popup menu model</i>.
com.top_logic.layout.form.selection.DefaultSelectDialogProvider = Default select dialog provider
com.top_logic.layout.form.selection.DefaultSelectDialogProvider.tooltip = Configurable <i>select dialog provider</i>.
com.top_logic.layout.form.selection.SelectDialogConfig.allow-tree-add-all = Allow tree add all
com.top_logic.layout.form.selection.SelectDialogConfig.allow-tree-add-all.tooltip = Whether tree selection dialog should display the add all button.
com.top_logic.layout.form.selection.SelectDialogConfig.dialog-list-renderer = Dialog list renderer
com.top_logic.layout.form.selection.SelectDialogConfig.dialog-list-renderer.tooltip = <i>List renderer</i>, used for display of option list and selection list of the dialog.
com.top_logic.layout.form.selection.SelectDialogConfig.height = Height
com.top_logic.layout.form.selection.SelectDialogConfig.height.tooltip = Returns the height of the dialog.
com.top_logic.layout.form.selection.SelectDialogConfig.initial-tree-expansion-depth = Initial tree expansion depth
com.top_logic.layout.form.selection.SelectDialogConfig.initial-tree-expansion-depth.tooltip = Tree level depth, up to which tree nodes shall be made visible by expanding their parents. <p> The level count begins at the first visible tree level. If the root node is visible, the root node is level zero, otherwise the root's children are level zero. Minimum expansion depth is 0, which means, only the first tree level is visible (no nodes are expanded). Special value <code>-1</code> means, all tree nodes will be expanded. </p>
com.top_logic.layout.form.selection.SelectDialogConfig.left-to-right = Left to right
com.top_logic.layout.form.selection.SelectDialogConfig.left-to-right.tooltip = Whether selection dialog should display options on the left side.
com.top_logic.layout.form.selection.SelectDialogConfig.options-per-page = Options per page
com.top_logic.layout.form.selection.SelectDialogConfig.options-per-page.tooltip = Returns the number of options to show maximal on one page.
com.top_logic.layout.form.selection.SelectDialogConfig.pageable-option-treshold = Pageable option treshold
com.top_logic.layout.form.selection.SelectDialogConfig.pageable-option-treshold.tooltip = Returns the number of options a select field must have, to show not all options on the same page.
com.top_logic.layout.form.selection.SelectDialogConfig.show-options = Show options
com.top_logic.layout.form.selection.SelectDialogConfig.show-options.tooltip = Whether the selection dialog should display select options at all. <p> A select dialog without select options is only usable for a <i>select field</i> with custom order to modify the order of the predefined selection. </p>
com.top_logic.layout.form.selection.SelectDialogConfig.width = Width
com.top_logic.layout.form.selection.SelectDialogConfig.width.tooltip = Returns the width of the dialog.
com.top_logic.layout.form.selection.SelectDialogProvider = Select dialog provider
com.top_logic.layout.form.selection.SelectDialogProvider.tooltip = Factory for <i>select dialogs</i> for <i>select fields</i>.
com.top_logic.layout.form.selection.TableSelectDialogConfig.options-per-page.tooltip = Returns the number of options to show maximal on one page.
com.top_logic.layout.form.selection.TableSelectDialogProvider = Table select dialog provider
com.top_logic.layout.form.selection.TableSelectDialogProvider.tooltip = <i>Select dialog provider</i> of table based select dialogs.
com.top_logic.layout.form.tag.DeckFieldNamingScheme$DeckFieldName = Deck field name
com.top_logic.layout.form.tag.DeckFieldNamingScheme$DeckFieldName.tooltip = Identifier for the <i>tab bar model</i> contained in a <i>deck field</i>.
com.top_logic.layout.form.tag.Icons.EDIT48 = Overlay image for edit actions.
com.top_logic.layout.form.tag.Icons.GROUP_COLLAPSED = Image of a collapsed group.
com.top_logic.layout.form.tag.Icons.GROUP_EXPANDED = Image of a expanded group.
com.top_logic.layout.form.tag.Icons.PLUS48 = Overlay image for create actions.
com.top_logic.layout.form.template.BeaconFormFieldControlProvider = Beacon form field control provider
com.top_logic.layout.form.template.BeaconFormFieldControlProvider.Config.type = Type
com.top_logic.layout.form.template.BeaconFormFieldControlProvider.tooltip = Creates <i>beacon controls</i>.
com.top_logic.layout.form.template.InfoAddingControlProvider = Info adding control provider
com.top_logic.layout.form.template.InfoAddingControlProvider.Config.innerControlProvider = Inner control provider
com.top_logic.layout.form.template.InfoAddingControlProvider.tooltip = <i>Control provider</i> that adds an <i>info control</i> to the actual control for the model created by an inner <i>control provider</i> if the model is an <i>form member</i>.
com.top_logic.layout.form.template.TextInputControlProvider = Text input control provider
com.top_logic.layout.form.template.TextInputControlProvider.Config.columns = Columns
com.top_logic.layout.form.template.TextInputControlProvider.Config.inputStyle = Input style
com.top_logic.layout.form.template.TextInputControlProvider.Config.maxLengthShown = Maximum length shown
com.top_logic.layout.form.template.TextInputControlProvider.Config.multiLine = Multiple line
com.top_logic.layout.form.template.TextInputControlProvider.Config.rows = Rows
com.top_logic.layout.form.template.TextInputControlProvider.Config.style = Style
com.top_logic.layout.form.template.TextInputControlProvider.Config.tabIndex = Tab index
com.top_logic.layout.form.template.TextInputControlProvider.Config.type = Type
com.top_logic.layout.form.template.TextInputControlProvider.tooltip = Configurable <i>control provider</i> that creates <i>text input controls</i>.
com.top_logic.layout.form.template.ValueWithErrorControlProvider = Value with error control provider
com.top_logic.layout.form.template.ValueWithErrorControlProvider.Config.errorFirst = Error first
com.top_logic.layout.form.template.ValueWithErrorControlProvider.Config.errorFirst.tooltip = Whether to prepend the error icon before the value (instead of appending it).
com.top_logic.layout.form.template.ValueWithErrorControlProvider.Config.innerControlProvider = Inner control provider
com.top_logic.layout.form.template.ValueWithErrorControlProvider.Config.innerControlProvider.tooltip = The <i>control provider</i> for creating the value display.
com.top_logic.layout.form.template.ValueWithErrorControlProvider.tooltip = <i>Control provider</i> which delegates the actual creation to another <i>control provider</i> but creates also an additional <i>error control</i> for <i>form fields</i>.
com.top_logic.layout.form.template.model.MemberStyle = Member style
com.top_logic.layout.form.template.model.MemberStyle.DIRECT = Direct
com.top_logic.layout.form.template.model.MemberStyle.DIRECT.tooltip = Renders the form member directly ignoring an annotated <i>control provider</i>.
com.top_logic.layout.form.template.model.MemberStyle.ERROR = Error
com.top_logic.layout.form.template.model.MemberStyle.ERROR.tooltip = Renders only the error display of a <i>form member</i>.
com.top_logic.layout.form.template.model.MemberStyle.LABEL = Label
com.top_logic.layout.form.template.model.MemberStyle.LABEL.tooltip = Renders only the label aspect of a <i>form member</i>.
com.top_logic.layout.form.template.model.MemberStyle.LABEL_WITH_COLON = Label with colon
com.top_logic.layout.form.template.model.MemberStyle.LABEL_WITH_COLON.tooltip = Renders the label aspect of a <i>form member</i> appended with a ':' character.
com.top_logic.layout.form.template.model.MemberStyle.NONE = None
com.top_logic.layout.form.template.model.MemberStyle.NONE.tooltip = Renders the <i>form member</i> with the annotated template or using its default view provided by the context <i>control provider</i>.
com.top_logic.layout.form.template.model.MemberStyle.tooltip = Aspect of a <i>form member</i> to render from within a template.
com.top_logic.layout.form.template.model.internal.TemplateControl.templateModel = The <i>form member</i> to display.
com.top_logic.layout.form.template.model.internal.TemplateControl.templateScope = Access to the inner-most <i>template control</i> currently rendering a part of a form.
com.top_logic.layout.form.treetable.component.AbstractApplyTreeEditCommandHandler = Apply tree edit command handler
com.top_logic.layout.form.treetable.component.AbstractApplyTreeEditCommandHandler.tooltip = Store changes made to a tree used in the <i>structure edit component</i>. Implementing classes will only need to define the real storing of a value from a <i>form field</i> to the representing <i>object</i>.
com.top_logic.layout.form.treetable.component.ConfigurableStructureEditComponent = Configurable structure edit component
com.top_logic.layout.form.treetable.component.ConfigurableStructureEditComponent.Config.nodeGroupInitializer = Node group initializer
com.top_logic.layout.form.treetable.component.ConfigurableStructureEditComponent.Config.treeModelBuilder = Tree model builder
com.top_logic.layout.form.treetable.component.ConfigurableStructureEditComponent.tooltip = A <i>structure edit component</i> whose abstract methods are implemented by configured plugins.
com.top_logic.layout.form.treetable.component.Icons.FROZEN_TABLE_TITLE_HEIGHT = Height of the title of tables with fixed columns.
com.top_logic.layout.form.treetable.component.Icons.FROZEN_TREE_TABLE_TITLE_HEIGHT = Height of the title of tree tables with fixed columns.
com.top_logic.layout.form.treetable.component.OpenStructureEditCompareViewCommand = Open structure edit compare view command
com.top_logic.layout.form.treetable.component.OpenStructureEditCompareViewCommand.tooltip = <i>Open compare view command</i> for a <i>structure edit component</i>.
com.top_logic.layout.form.treetable.component.StructureEditComponent = Structure edit component
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.columns = Columns
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.compareModelBuilder = Compare model builder
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.compareModelBuilder.tooltip = Returns the <i>tree model builder</i> that creates the displayed structure.
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.controlProvider = Control provider
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.downloadNameKey = Download name key
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.expandAll = Expand all
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.exportCommand = Export command
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.exportCommand.tooltip = Command handler name of the export command.
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.fixedColumns = Fixed columns
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.headerRenderer = Header renderer
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.multiSelect = Multiple select
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.multiSelect.tooltip = Whether the component should support multi selection.
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.nodeAccessor = Node accessor
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.nodeResourceProvider = Node resource provider
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.objectType = Object type
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.objectType.tooltip = Type of the displayed objects. This type is used to define generic table configuration.
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.onlyOneLevelModify = Only one level modify
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.onlyOneLevelModify.tooltip = Whether commands are just allowed if selection contains of nodes that all have the same parent.
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.page.tooltip = Is not supported by <i>structure edit component</i> and its subclasses, and is therefore not allowed to be set.
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.rootVisible = Root visible
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.showSelectionColumn = Show selection column
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.showSelectionColumn.tooltip = Whether a column should be displayed which shows selection of tree explicit.
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.templateName = Template name
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.viewModeColumns = View mode columns
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.viewModeColumns.tooltip = Returns the columns that must be shown in view mode. If none are given <i>Columns</i> are used.
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.viewModeFixedColumns = View mode fixed columns
com.top_logic.layout.form.treetable.component.StructureEditComponent.Config.viewModeFixedColumns.tooltip = Returns the number of columns that must be fixed in view mode. If none is given <i>Fixed columns</i> is used.
com.top_logic.layout.form.treetable.component.StructureEditComponent.tooltip = This is a EditComponent to edit a complete structure at once, including adding, moving and removing elements in structure and editing attributes of the elements.
com.top_logic.layout.form.treetable.component.TreeTableNodeGroupInitializer = Tree table node group initializer
com.top_logic.layout.form.treetable.component.TreeTableNodeGroupInitializer.Config.columns = Columns
com.top_logic.layout.form.treetable.component.TreeTableNodeGroupInitializer.Config.fieldAccessor = Field accessor
com.top_logic.layout.form.treetable.component.TreeTableNodeGroupInitializer.Config.fieldProvider = Field provider
com.top_logic.layout.form.treetable.component.TreeTableNodeGroupInitializer.tooltip = <i>Node group initializer</i> which initializes the <i>form group</i> using a configured <i>field provider</i> and <i>accessor</i> for an arbitrary list of column names.
com.top_logic.layout.form.values.CommonMarkText = Common mark text
com.top_logic.layout.form.values.CommonMarkText.tooltip = <i>Multiple line text</i> rendering multi line values in <i>CommonMark</i> syntax.
com.top_logic.layout.form.values.MultiLineText = Multiple line text
com.top_logic.layout.form.values.MultiLineText.Config.rows = Rows
com.top_logic.layout.form.values.MultiLineText.Config.rows.tooltip = The number of rows to display in the text area.
com.top_logic.layout.form.values.MultiLineText.tooltip = <i>Control provider</i> generating a multi-line <i>text input control</i>.
com.top_logic.layout.form.values.edit.EditorFactory$Config = Configuration
com.top_logic.layout.form.values.edit.EditorFactory$Config.tooltip = The <i>typed configuration</i> of the <i>editor factory</i>.
com.top_logic.layout.form.values.edit.EditorFactory.Config.display-fields-as-text = Display fields as text
com.top_logic.layout.form.values.edit.EditorFactory.Config.display-fields-as-text.tooltip = Whether <i>form fields</i> should be displayed as text and get activated by clicking on them. <p> If not, they are displayed how fields are normally displayed in the application. </p>
com.top_logic.layout.form.values.edit.Icons.ADD_ICON = Icon for adding an element to a collection.
com.top_logic.layout.form.values.edit.Icons.ADD_ICON_DISABLED = Icon for adding an element to a collection (disabled).
com.top_logic.layout.form.values.edit.Icons.ITEM_ICON = Icon for displaying an item in a collection.
com.top_logic.layout.form.values.edit.Icons.REMOVE_ICON = Icon for removing an element from a collection.
com.top_logic.layout.form.values.edit.Icons.REMOVE_ICON_DISABLED = Icon for removing an element from a collection (disabled).
com.top_logic.layout.form.values.edit.Icons.SORT_ELEMENTS = Icon for changing the order of a list property.
com.top_logic.layout.form.values.edit.Icons.SORT_ELEMENTS_DISABLED = Icon for changing the order of a list property (disabled).
com.top_logic.layout.form.values.edit.annotation.AcceptableClassifiers = Acceptable classifiers
com.top_logic.layout.form.values.edit.annotation.AcceptableClassifiers.tooltip = Annotation of classifiers to applicable in-app implementations to be selected by the <i>in app implementations</i> option provider function.
com.top_logic.layout.form.values.edit.annotation.AcceptableClassifiers.unclassified = Unclassified
com.top_logic.layout.form.values.edit.annotation.AcceptableClassifiers.unclassified.tooltip = Whether unclassified implementations are considered to match.
com.top_logic.layout.form.values.edit.annotation.AcceptableClassifiers.value = Value
com.top_logic.layout.form.values.edit.annotation.AcceptableClassifiers.value.tooltip = List of classifiers of <i>in app</i> annotated implementations that can be selected by the <i>in app implementations</i> options provider.
com.top_logic.layout.form.values.edit.annotation.AcceptedTypes = Accepted types
com.top_logic.layout.form.values.edit.annotation.AcceptedTypes.checker = Checker
com.top_logic.layout.form.values.edit.annotation.AcceptedTypes.checker.tooltip = The
com.top_logic.layout.form.values.edit.annotation.AcceptedTypes.tooltip = Annotation to a <i>binary data</i>-valued property specifying the <code>accept</code> attribute of the upload field. <p> Note: The property must also be annotated with <i>property editor</i> selecting the <i>binary data editor</i>. </p>
com.top_logic.layout.form.values.edit.annotation.AcceptedTypes.value = Value
com.top_logic.layout.form.values.edit.annotation.AcceptedTypes.value.tooltip = The accepted file types as client-side hint for the upload dialog, e.g. "image/*". <p> Note: Without a <i>checker</i>, the client may still be able to upload files that do not match the criteria given here. </p>
com.top_logic.layout.form.values.edit.annotation.CollapseEntries = Collapse entries
com.top_logic.layout.form.values.edit.annotation.CollapseEntries.tooltip = Annotation for <i>list</i> or <i>map</i> valued properties (<i>property descriptor</i> of type <i>list</i>, <i>map</i>, or <i>array</i>) to display entries initially collapsed.
com.top_logic.layout.form.values.edit.annotation.CollapseEntries.value = Value
com.top_logic.layout.form.values.edit.annotation.CollapseEntries.value.tooltip = Whether the UI for the entries of the annotated <i>property descriptor</i> of type <i>list</i>, <i>map</i>, or <i>array</i> should be initially displayed collapsed.
com.top_logic.layout.form.values.edit.annotation.ControlProvider = Control provider
com.top_logic.layout.form.values.edit.annotation.ControlProvider.tooltip = Annotation for assigning a <i>control provider</i> to a declarative form field. <p> The annotation can be specified at the property or at its value type. </p>
com.top_logic.layout.form.values.edit.annotation.ControlProvider.value = Value
com.top_logic.layout.form.values.edit.annotation.ControlProvider.value.tooltip = <i>Control provider</i> class to instantiate.
com.top_logic.layout.form.values.edit.annotation.CssClass = Css class
com.top_logic.layout.form.values.edit.annotation.CssClass.tooltip = Annotation assigning a CSS class to a declarative form field. <p> The annotation can be specified at the property or at its value type. </p>
com.top_logic.layout.form.values.edit.annotation.CssClass.value = Value
com.top_logic.layout.form.values.edit.annotation.CssClass.value.tooltip = The CSS class to assign to the field for the annotated property.
com.top_logic.layout.form.values.edit.annotation.CustomOptionOrder = Custom option order
com.top_logic.layout.form.values.edit.annotation.CustomOptionOrder.tooltip = Annotates that the options of a <i>configuration item</i> property are already sorted by the option provider.
com.top_logic.layout.form.values.edit.annotation.DisplayMinimized = Display minimized
com.top_logic.layout.form.values.edit.annotation.DisplayMinimized.tooltip = Annotation for <i>property descriptor</i> whether the configuration UI for the value must be displayed as minimal as possible.
com.top_logic.layout.form.values.edit.annotation.DisplayMinimized.value = Value
com.top_logic.layout.form.values.edit.annotation.DisplayMinimized.value.tooltip = Whether the GUI element that is created for the annotated <i>property descriptor</i> should be as minimal as possible, e.g. if a group is displayed, whether it should be displayed collapsed.
com.top_logic.layout.form.values.edit.annotation.DynamicMandatory = Dynamic mandatory
com.top_logic.layout.form.values.edit.annotation.DynamicMandatory.args = Arguments
com.top_logic.layout.form.values.edit.annotation.DynamicMandatory.args.tooltip = Specification of argument references for function.
com.top_logic.layout.form.values.edit.annotation.DynamicMandatory.fun = Function
com.top_logic.layout.form.values.edit.annotation.DynamicMandatory.fun.tooltip = The <i>generic function</i> that computes the "mandatory state" for the input field.
com.top_logic.layout.form.values.edit.annotation.DynamicMandatory.tooltip = Annotation adding an algorithm to a property computing its <code>FormField#isMandatory()</code> state. <p> The annotation can be specified at the property or at its value type. </p>
com.top_logic.layout.form.values.edit.annotation.DynamicMode = Dynamic mode
com.top_logic.layout.form.values.edit.annotation.DynamicMode.args = Arguments
com.top_logic.layout.form.values.edit.annotation.DynamicMode.args.tooltip = Specification of argument references for function.
com.top_logic.layout.form.values.edit.annotation.DynamicMode.fun = Function
com.top_logic.layout.form.values.edit.annotation.DynamicMode.fun.tooltip = The <i>generic function</i> that computes the <i>field mode</i> for the input field.
com.top_logic.layout.form.values.edit.annotation.DynamicMode.tooltip = Annotation to a <i>configuration item</i> property that controls the visibility of its input element in forms.
com.top_logic.layout.form.values.edit.annotation.ItemDisplay = Item display
com.top_logic.layout.form.values.edit.annotation.ItemDisplay$ItemDisplayType = Item display type
com.top_logic.layout.form.values.edit.annotation.ItemDisplay$ItemDisplayType.tooltip = Options for the <i>item display</i> annotation.
com.top_logic.layout.form.values.edit.annotation.ItemDisplay.ItemDisplayType.MONOMORPHIC = Monomorphic
com.top_logic.layout.form.values.edit.annotation.ItemDisplay.ItemDisplayType.MONOMORPHIC.tooltip = Display a group with inner configuration options of the item property (default).
com.top_logic.layout.form.values.edit.annotation.ItemDisplay.ItemDisplayType.POLYMORPHIC = Polymorphic
com.top_logic.layout.form.values.edit.annotation.ItemDisplay.ItemDisplayType.POLYMORPHIC.tooltip = Display a configuration type selector with dynamically changing group contents based on the selected configuration type.
com.top_logic.layout.form.values.edit.annotation.ItemDisplay.ItemDisplayType.VALUE = Value
com.top_logic.layout.form.values.edit.annotation.ItemDisplay.ItemDisplayType.VALUE.tooltip = Display the item as atomic value (e.g. as selection of pre-configured options, or a formatted text field).
com.top_logic.layout.form.values.edit.annotation.ItemDisplay.tooltip = Annotation specifying how create the UI for an <i>item</i> property. <p> By default, an item property is displayed as a group containing the configuration of that item. But especially for <i>instance format</i> properties, it may be useful to only allow selecting between pre-configured options. </p> <p> The annotation can be specified at the property or at its value type. </p>
com.top_logic.layout.form.values.edit.annotation.ItemDisplay.value = Value
com.top_logic.layout.form.values.edit.annotation.ItemDisplay.value.tooltip = How to display <i>item</i> properties.
com.top_logic.layout.form.values.edit.annotation.OptionLabels = Option labels
com.top_logic.layout.form.values.edit.annotation.OptionLabels.tooltip = Annotates a <i>label provider</i> to a <i>configuration item</i> property used for displaying its options. <p> The annotation can be specified at the property or at its value type. </p>
com.top_logic.layout.form.values.edit.annotation.OptionLabels.value = Value
com.top_logic.layout.form.values.edit.annotation.OptionLabels.value.tooltip = The <i>label provider</i> class to use.
com.top_logic.layout.form.values.edit.annotation.Options = Options
com.top_logic.layout.form.values.edit.annotation.Options.args = Arguments
com.top_logic.layout.form.values.edit.annotation.Options.args.tooltip = Specification of argument references for the options function.
com.top_logic.layout.form.values.edit.annotation.Options.fun = Function
com.top_logic.layout.form.values.edit.annotation.Options.fun.tooltip = The <i>generic function</i> that produces options.
com.top_logic.layout.form.values.edit.annotation.Options.mapping = Mapping
com.top_logic.layout.form.values.edit.annotation.Options.mapping.tooltip = The <i>option mapping</i> to translate an option returned by <i>function</i> to the actual value of the annotated <i>object property</i>.
com.top_logic.layout.form.values.edit.annotation.Options.tooltip = Annotates an <i>generic function</i> to a <i>configuration item</i> property. <p> The annotation can be specified at the property or at its value type. </p>
com.top_logic.layout.form.values.edit.annotation.PropertyEditor = Property editor
com.top_logic.layout.form.values.edit.annotation.PropertyEditor.tooltip = Annotation to a configuration property getter selecting an <i>editor</i> strategy for building its form representation.
com.top_logic.layout.form.values.edit.annotation.PropertyEditor.value = Value
com.top_logic.layout.form.values.edit.annotation.PropertyEditor.value.tooltip = The strategy class creating the form representation for the annotated property.
com.top_logic.layout.form.values.edit.annotation.RenderWholeLine = Render whole line
com.top_logic.layout.form.values.edit.annotation.RenderWholeLine.tooltip = <i>Annotation</i> for <i>property descriptor</i> to annotate whether the value is rendered over the whole line. So it stretches over more than 1 column.
com.top_logic.layout.form.values.edit.annotation.RenderWholeLine.value = Value
com.top_logic.layout.form.values.edit.annotation.RenderWholeLine.value.tooltip = Whether this <i>annotation</i> is enabled.
com.top_logic.layout.form.values.edit.annotation.TitleProperty = Title property
com.top_logic.layout.form.values.edit.annotation.TitleProperty.name = Name
com.top_logic.layout.form.values.edit.annotation.TitleProperty.name.tooltip = Name of the <i>property descriptor</i> that is used in the title of a collapsed <i>configuration item</i>.
com.top_logic.layout.form.values.edit.annotation.TitleProperty.tooltip = Annotation for <i>configuration item</i> which of its properties is shown in the title if the item is collapsed. <p> This annotation can also be used on list , map, or array like properties to define the title property for the entries of its property value. This annotation overrides a potential annotation on the entry type. </p>
com.top_logic.layout.form.values.edit.annotation.UseBuilder = Use builder
com.top_logic.layout.form.values.edit.annotation.UseBuilder.tooltip = Annotation to <i>configuration items</i> providing <i>form builders</i> for custom display parts.
com.top_logic.layout.form.values.edit.annotation.UseBuilder.value = Value
com.top_logic.layout.form.values.edit.annotation.UseBuilder.value.tooltip = Builder class the form.
com.top_logic.layout.form.values.edit.annotation.UseTemplate = Use template
com.top_logic.layout.form.values.edit.annotation.UseTemplate.tooltip = Annotation to <i>configuration item</i> types for providing templates for display.
com.top_logic.layout.form.values.edit.annotation.UseTemplate.value = Value
com.top_logic.layout.form.values.edit.annotation.UseTemplate.value.tooltip = Factory class to create a HTML template for rendering a <i>configuration item</i> model.
com.top_logic.layout.form.values.edit.editor.InternationalizationEditor$WithTooltipConfiguration = With tooltip configuration
com.top_logic.layout.form.values.edit.editor.InternationalizationEditor$WithTooltipConfiguration.tooltip = Annotation for the method or type which is annotated with an <i>internationalization editor</i> to define whether derived resources can be edited.
com.top_logic.layout.form.values.edit.editor.InternationalizationEditor.WithTooltipConfiguration.value = Value
com.top_logic.layout.form.values.edit.editor.InternationalizationEditor.WithTooltipConfiguration.value.tooltip = If <code>true</code> that not just the actual <i>resource key</i> can be edited in an <i>internationalization editor</i>, but also the derived <i>resource key</i>.
com.top_logic.layout.form.values.edit.editor.SortListFormAction$SortListFormActionOp = Sort list form action
com.top_logic.layout.form.values.edit.editor.SortListFormAction$SortListFormActionOp.tooltip = Implementation aspect of <i>sort list form action</i>.
com.top_logic.layout.form.values.edit.editor.SortListFormAction.items = Items
com.top_logic.layout.form.values.edit.editor.SortListFormAction.items.tooltip = Ordered names of entries in the <i>List</i> member.
com.top_logic.layout.form.values.edit.editor.SortListFormAction.list = List
com.top_logic.layout.form.values.edit.editor.SortListFormAction.list.tooltip = <i>Model name</i> of the <i>form group</i> representing the list property being updated.
com.top_logic.layout.history.HistoryControl$Config = Configuration
com.top_logic.layout.history.HistoryControl$Config.tooltip = Configuration of the <i>browser history</i>.
com.top_logic.layout.history.HistoryControl.Config.history-size = History size
com.top_logic.layout.history.HistoryControl.Config.history-size.tooltip = Number of steps to store in the history and offer the user to go back using browser back button.
com.top_logic.layout.history.HistoryControl.Config.logout-warn-mode = Logout warn mode
com.top_logic.layout.history.HistoryControl.Config.logout-warn-mode.tooltip = Which warn mode should be used when browser back leaves the application.
com.top_logic.layout.history.HistoryControl.Config.not-undoable-warn-mode = Not undoable warn mode
com.top_logic.layout.history.HistoryControl.Config.not-undoable-warn-mode.tooltip = Which warn mode should be used when browser back can not undo the last action.
com.top_logic.layout.history.WarnDialogTemplate$WarnMode = Warn mode
com.top_logic.layout.history.WarnDialogTemplate.WarnMode.WARN_MODE_CONTINUE = Warn mode continue
com.top_logic.layout.history.WarnDialogTemplate.WarnMode.WARN_MODE_DIALOG = Warn mode dialog
com.top_logic.layout.history.WarnDialogTemplate.WarnMode.WARN_MODE_IGNORE = Warn mode ignore
com.top_logic.layout.image.component.DynamicImageComponent = Dynamic image component
com.top_logic.layout.image.component.DynamicImageComponent.Config.image-model-builder = Image model builder
com.top_logic.layout.image.component.DynamicImageComponent.Config.image-model-builder.tooltip = Configuration for the <i>model builder</i> that creates the <i>dynamic image</i> from the components model.
com.top_logic.layout.image.component.DynamicImageComponent.tooltip = Component to display a single <i>dynamic image</i> created by a <i>model builder</i>.
com.top_logic.layout.image.gallery.GalleryButtonRenderer = Gallery button renderer
com.top_logic.layout.image.gallery.GalleryButtonRenderer.Config.button-width = Button width
com.top_logic.layout.image.gallery.GalleryButtonRenderer.tooltip = <i>Renderer</i> of edit button of <i>gallery control</i>.
com.top_logic.layout.image.gallery.GalleryViewConfiguration.Config.gallery-height = Gallery height
com.top_logic.layout.image.gallery.GalleryViewConfiguration.Config.gallery-height.tooltip = Height of gallery.
com.top_logic.layout.image.gallery.GalleryViewConfiguration.Config.gallery-width = Gallery width
com.top_logic.layout.image.gallery.GalleryViewConfiguration.Config.gallery-width.tooltip = Width of gallery.
com.top_logic.layout.image.gallery.Icons.GALLERY_HEIGHT = Height of an image shown in an image gallery attribute in pixels.
com.top_logic.layout.image.gallery.Icons.GALLERY_WIDTH = Width of an image shown in an image gallery attribute in pixels.
com.top_logic.layout.image.gallery.Icons.NO_PREVIEW_IMAGE = Image to display when no image can be found.
com.top_logic.layout.image.gallery.ImageSizeConfig = Image size configuration
com.top_logic.layout.image.gallery.ImageSizeConfig.max-database-size-megabyte = Maximum database size megabyte
com.top_logic.layout.image.gallery.ImageSizeConfig.max-database-size-megabyte.tooltip = Maximum file size, that is allowed to be stored in database - in megabyte.
com.top_logic.layout.image.gallery.ImageSizeConfig.max-upload-size-megabyte = Maximum upload size megabyte
com.top_logic.layout.image.gallery.ImageSizeConfig.max-upload-size-megabyte.tooltip = Maximum size of uploaded files in megabyte.
com.top_logic.layout.image.gallery.ImageSizeConfig.tooltip = Configuration of image size thresholds. (e.g. maximum size of uploaded images).
com.top_logic.layout.image.gallery.ImageSizeConfig.transformed-image-height = Transformed image height
com.top_logic.layout.image.gallery.ImageSizeConfig.transformed-image-height.tooltip = Height of image, that shall be applied at forced transformation
com.top_logic.layout.image.gallery.ImageSizeConfig.transformed-image-width = Transformed image width
com.top_logic.layout.image.gallery.ImageSizeConfig.transformed-image-width.tooltip = Width of image, that shall be applied at forced transformation
com.top_logic.layout.image.gallery.scripting.GalleryNamingScheme$Name = Name
com.top_logic.layout.image.gallery.scripting.GalleryNamingScheme$Name.tooltip = <i>Model name</i> for <i>gallery dialog handler</i>.
com.top_logic.layout.image.gallery.scripting.GalleryNamingScheme.Name.gallery-name = Gallery name
com.top_logic.layout.image.gallery.scripting.GalleryNamingScheme.Name.gallery-name.tooltip = The context gallery.
com.top_logic.layout.image.util.ImageType = Image type
com.top_logic.layout.image.util.ImageType.JPG = Jpg
com.top_logic.layout.image.util.ImageType.JPG.tooltip = JPG image type
com.top_logic.layout.image.util.ImageType.PNG = Png
com.top_logic.layout.image.util.ImageType.PNG.tooltip = PNG image type
com.top_logic.layout.image.util.ImageType.tooltip = Enumeration of image types / format named used by <i>image IO</i>.
com.top_logic.layout.inspector.InspectorComponent = Inspector component
com.top_logic.layout.inspector.InspectorComponent$Config$FilterSetting = Filter setting
com.top_logic.layout.inspector.InspectorComponent$Config$FilterSetting.tooltip = Configuration of an available filter for the inspector.
com.top_logic.layout.inspector.InspectorComponent.Config.FilterSetting.enable = Enable
com.top_logic.layout.inspector.InspectorComponent.Config.FilterSetting.enable.tooltip = Whether the filter is enabled by default.
com.top_logic.layout.inspector.InspectorComponent.Config.FilterSetting.impl = Implementation
com.top_logic.layout.inspector.InspectorComponent.Config.FilterSetting.impl.tooltip = The <i>filter</i> implementation.
com.top_logic.layout.inspector.InspectorComponent.Config.filters = Filters
com.top_logic.layout.inspector.InspectorComponent.Config.filters.tooltip = Filters to offer for the inspection.
com.top_logic.layout.inspector.InspectorComponent.tooltip = Filter component for the inspector. This component defines different filters which may be used by the <i>inspector tree component</i>.
com.top_logic.layout.inspector.InspectorTreeComponent = Inspector tree component
com.top_logic.layout.inspector.InspectorTreeComponent.tooltip = Component displaying the inspected tree.
com.top_logic.layout.inspector.OpenSeparateInspectorWindowCommandHandler = Open separate inspector window command handler
com.top_logic.layout.inspector.OpenSeparateInspectorWindowCommandHandler.tooltip = This command handler is aware of two parameters that can be passed on client side through java script. It expects that the LayoutComponent calling the command is a ViewInfoComponent.
com.top_logic.layout.inspector.history.GotoSelection = Goto selection
com.top_logic.layout.inspector.history.GotoSelection.Config.selection-mapping = Selection mapping
com.top_logic.layout.inspector.history.GotoSelection.Config.selection-mapping.tooltip = <i>Mapping</i> to apply the the component's selection before using it as model.
com.top_logic.layout.inspector.history.GotoSelection.Config.target-component = Target component
com.top_logic.layout.inspector.history.GotoSelection.Config.target-component.tooltip = Name of component to send the new model to.
com.top_logic.layout.inspector.history.GotoSelection.tooltip = <i>Command handler command</i> switching the component model to the current selection.
com.top_logic.layout.inspector.history.History$Back = Back
com.top_logic.layout.inspector.history.History$Back.tooltip = <i>Command handler</i> showing the previous object in the inspector.
com.top_logic.layout.inspector.history.History$Forward = Forward
com.top_logic.layout.inspector.history.History$Forward.tooltip = <i>Command handler</i> showing the next object from history in the inspector.
com.top_logic.layout.inspector.resources.InspectPropertyResourceProvider = Inspect property resource provider
com.top_logic.layout.inspector.resources.InspectPropertyResourceProvider.tooltip = <i>Resource provider</i> for <i>inspect property</i> values.
com.top_logic.layout.inspector.resources.InspectorNodeResourceProvider = Inspector node resource provider
com.top_logic.layout.inspector.resources.InspectorNodeResourceProvider.tooltip = <i>Resource provider</i> for <i>inspector tree nodes</i>.
com.top_logic.layout.inspector.resources.InspectorValueResourceProvider = Inspector value resource provider
com.top_logic.layout.inspector.resources.InspectorValueResourceProvider.tooltip = <i>Resource provider</i> for the <code>value</code> column of the inspector.
com.top_logic.layout.internal.Icons.LOADING_SCREEN = Page rendered while the application is loading.
com.top_logic.layout.internal.SwitchLayoutCommand = Switch layout command
com.top_logic.layout.internal.SwitchLayoutCommand.Config.layoutName = Layout name
com.top_logic.layout.internal.SwitchLayoutCommand.Config.layoutName.tooltip = Name the layout file which contains the main layout to load. <p> The layout name is the path to the layout file, starting from the layouts folder, e.g. <code>otherMain/masterFrame.xml</code> references to the file <code>WEB-INF/layouts/otherMain/masterFrame.xml</code>. </p>
com.top_logic.layout.internal.SwitchLayoutCommand.tooltip = Command to load and display another main layout. The current main layout is left.
com.top_logic.layout.internal.WindowHandler.LoadingModel.faviconTag = A HTML meta tag pointing to the application's icon for the browser tab. <p> Must be added to the page header. </p>
com.top_logic.layout.internal.WindowHandler.LoadingModel.generator = Value for the HTML meta tag <code>generator</code>.
com.top_logic.layout.internal.WindowHandler.LoadingModel.loadingMessage = Text that informs the user which application is being loaded.
com.top_logic.layout.internal.WindowHandler.LoadingModel.loadingScript = Creates a <i>JavaScript</i> tag that defines the <code>onRender</code> function that must be called from the body's <code>onload</code> handler.
com.top_logic.layout.layoutRenderer.Icons.COLLAPSIBLE_TEMPLATE = Template for rendering a component with a collapse/expand button to temporarily hide a region of the application.
com.top_logic.layout.layoutRenderer.Icons.DIALOG_WINDOW_TEMPLATE = Template for rendering a dialog window.
com.top_logic.layout.layoutRenderer.Icons.MAINLAYOUT_CSS_CLASS = CSS class to set at the top-level element of the main window.
com.top_logic.layout.layoutRenderer.Icons.POPUP_TITLE_HEIGHT = Pop up title height.
com.top_logic.layout.list.ListSelectionChange$Op = Op
com.top_logic.layout.list.ListSelectionChange$Op.tooltip = Default implementation of <i>list selection change</i>.
com.top_logic.layout.list.ListSelectionChange.added = Added
com.top_logic.layout.list.ListSelectionChange.added.tooltip = Descriptions of values added to the <i>Model</i> selection.
com.top_logic.layout.list.ListSelectionChange.model = Model
com.top_logic.layout.list.ListSelectionChange.model.tooltip = Description of the <i>list field</i> to update.
com.top_logic.layout.list.ListSelectionChange.removed = Removed
com.top_logic.layout.list.ListSelectionChange.removed.tooltip = Descriptions of values removed to the <i>Model</i> selection.
com.top_logic.layout.log.LogFolderComponent = Log folder component
com.top_logic.layout.messagebox.AwaitProgressDialog$Op = Wait for background process to finish
com.top_logic.layout.messagebox.AwaitProgressDialog$Op.tooltip = Scripting action that waits until the background process controlled by a <i>progress dialog</i> completes.
com.top_logic.layout.messagebox.AwaitProgressDialog.auto-close-on-success = Auto close on success
com.top_logic.layout.messagebox.AwaitProgressDialog.auto-close-on-success.tooltip = Whether the <i>progress dialog</i> is automatically closed, after the background progress has finished. <p> If the background process does not complete successfully, an error is thrown. </p>
com.top_logic.layout.messagebox.AwaitProgressDialog.timeout = Timeout
com.top_logic.layout.messagebox.AwaitProgressDialog.timeout.tooltip = The time to wait for completing the background task.
com.top_logic.layout.messagebox.Icons.BUTTON_CANCEL_IMAGE = The theme image of a button of type <i>cancel</i> in a <i>message box</i> dialog.
com.top_logic.layout.messagebox.Icons.BUTTON_CANCEL_IMAGE_DISABLED = The theme image of a disabled button of type <i>cancel</i> in a <i>message box</i> dialog.
com.top_logic.layout.messagebox.Icons.BUTTON_CLOSE_IMAGE = The theme image of a button of type <i>close</i> in a <i>message box</i> dialog.
com.top_logic.layout.messagebox.Icons.BUTTON_CLOSE_IMAGE_DISABLED = The theme image of a disabled button of type <i>close</i> in a <i>message box</i> dialog.
com.top_logic.layout.messagebox.Icons.BUTTON_CONTINUE_IMAGE = The theme image of a button of type <i>continue</i> in a <i>message box</i> dialog.
com.top_logic.layout.messagebox.Icons.BUTTON_CONTINUE_IMAGE_DISABLED = The theme image of a disabled button of type <i>continue</i> in a <i>message box</i> dialog.
com.top_logic.layout.messagebox.Icons.BUTTON_NO_IMAGE = The theme image of a button of type <i>no</i> in a <i>message box</i> dialog.
com.top_logic.layout.messagebox.Icons.BUTTON_NO_IMAGE_DISABLED = The theme image of a disabled button of type <i>no</i> in a <i>message box</i> dialog.
com.top_logic.layout.messagebox.Icons.BUTTON_OK_IMAGE = The theme image of a button of type <i>ok</i> in a <i>message box</i> dialog.
com.top_logic.layout.messagebox.Icons.BUTTON_OK_IMAGE_DISABLED = The theme image of a disabled button of type <i>ok</i> in a <i>message box</i> dialog.
com.top_logic.layout.messagebox.Icons.BUTTON_YES_IMAGE = The theme image of a button of type <i>yes</i> in a <i>message box</i> dialog.
com.top_logic.layout.messagebox.Icons.BUTTON_YES_IMAGE_DISABLED = The theme image of a disabled button of type <i>yes</i> in a <i>message box</i> dialog.
com.top_logic.layout.messagebox.Icons.IN_PROGRESS = Default icon of the progress dialog.
com.top_logic.layout.messagebox.MessageBox$ButtonType = Button type
com.top_logic.layout.messagebox.MessageBox$ButtonType.tooltip = Type of a generic button displayed in a <i>message box</i>.
com.top_logic.layout.messagebox.MessageBox$GlobalConfig = Global configuration
com.top_logic.layout.messagebox.MessageBox$GlobalConfig.tooltip = Configuration options for <i>message box</i>.
com.top_logic.layout.messagebox.MessageBox$MessageType = Message type
com.top_logic.layout.messagebox.MessageBox$MessageType.tooltip = Type of a <i>message box</i>.
com.top_logic.layout.messagebox.MessageBox.ButtonType.CANCEL = Cancel
com.top_logic.layout.messagebox.MessageBox.ButtonType.CANCEL.tooltip = Cancel button.
com.top_logic.layout.messagebox.MessageBox.ButtonType.CLOSE = Close
com.top_logic.layout.messagebox.MessageBox.ButtonType.CLOSE.tooltip = Close button.
com.top_logic.layout.messagebox.MessageBox.ButtonType.CONTINUE = Continue
com.top_logic.layout.messagebox.MessageBox.ButtonType.CONTINUE.tooltip = Continue button.
com.top_logic.layout.messagebox.MessageBox.ButtonType.NO = No
com.top_logic.layout.messagebox.MessageBox.ButtonType.NO.tooltip = No button.
com.top_logic.layout.messagebox.MessageBox.ButtonType.OK = Ok
com.top_logic.layout.messagebox.MessageBox.ButtonType.OK.tooltip = Ok button.
com.top_logic.layout.messagebox.MessageBox.ButtonType.YES = Yes
com.top_logic.layout.messagebox.MessageBox.ButtonType.YES.tooltip = Yes button.
com.top_logic.layout.messagebox.MessageBox.GlobalConfig.height = Height
com.top_logic.layout.messagebox.MessageBox.GlobalConfig.height.tooltip = Default height of a message box.
com.top_logic.layout.messagebox.MessageBox.GlobalConfig.resizable = Resizable
com.top_logic.layout.messagebox.MessageBox.GlobalConfig.resizable.tooltip = Whether the default message box can be resized.
com.top_logic.layout.messagebox.MessageBox.GlobalConfig.width = Width
com.top_logic.layout.messagebox.MessageBox.GlobalConfig.width.tooltip = Default width of a message box.
com.top_logic.layout.messagebox.MessageBox.MessageType.CONFIRM = Confirm
com.top_logic.layout.messagebox.MessageBox.MessageType.CONFIRM.tooltip = Type of a <i>message box</i> that asks a question.
com.top_logic.layout.messagebox.MessageBox.MessageType.ERROR = Error
com.top_logic.layout.messagebox.MessageBox.MessageType.ERROR.tooltip = Type of a <i>message box</i> that displays an error.
com.top_logic.layout.messagebox.MessageBox.MessageType.INFO = Info
com.top_logic.layout.messagebox.MessageBox.MessageType.INFO.tooltip = Type of a <i>message box</i> that displays an information.
com.top_logic.layout.messagebox.MessageBox.MessageType.SYSTEM_FAILURE = System failure
com.top_logic.layout.messagebox.MessageBox.MessageType.SYSTEM_FAILURE.tooltip = Type of a <i>message box</i> that displays a system failure.
com.top_logic.layout.messagebox.MessageBox.MessageType.WARNING = Warning
com.top_logic.layout.messagebox.MessageBox.MessageType.WARNING.tooltip = Type of a <i>message box</i> that displays an warning.
com.top_logic.layout.messagebox.ProgressDialog$State = State
com.top_logic.layout.messagebox.ProgressDialog$State.tooltip = The states of the background process managed by a <i>progress dialog</i>.
com.top_logic.layout.messagebox.ProgressDialog.State.CANCELED = Canceled
com.top_logic.layout.messagebox.ProgressDialog.State.CANCELED.tooltip = The background process was canceled by the user.
com.top_logic.layout.messagebox.ProgressDialog.State.COMPLETED = Completed
com.top_logic.layout.messagebox.ProgressDialog.State.COMPLETED.tooltip = The background process has completed sucessfully.
com.top_logic.layout.messagebox.ProgressDialog.State.FAILED = Failed
com.top_logic.layout.messagebox.ProgressDialog.State.FAILED.tooltip = The background process has finished with an error.
com.top_logic.layout.messagebox.ProgressDialog.State.RUNNING = Running
com.top_logic.layout.messagebox.ProgressDialog.State.RUNNING.tooltip = The background process is still running.
com.top_logic.layout.progress.AJAXProgressComponent = AJAX progress component
com.top_logic.layout.progress.AJAXProgressComponent$ProgressReplacement = Progress replacement
com.top_logic.layout.progress.AJAXProgressComponent$ProgressReplacement.tooltip = Depending on the current state this method <ul> <li>replaces the content of the DIV-Tags step by step and set a new timeout if the Progress is not yet finished.</li> <li>sends JSSnipplet with the finishing-commands if there are any registered</li> <li>calls the progressFinished-method and reset local variables</li> </ul>
com.top_logic.layout.progress.AJAXProgressComponent$SignalStopProgress = Signal stop progress
com.top_logic.layout.progress.AJAXProgressComponent$SignalStopProgress.tooltip = <i>Command handler</i> stopping a currently running progress.
com.top_logic.layout.progress.AJAXProgressComponent$WriteFinishedProgressCommand = Write finished progress command
com.top_logic.layout.progress.AJAXProgressComponent$WriteFinishedProgressCommand.tooltip = A dummy command handler used as default finish command. This forces the component to write the last message of progress infos, that were finished before the first reload.
com.top_logic.layout.progress.AJAXProgressComponent.Config.closeOnFinish = Close on finish
com.top_logic.layout.progress.AJAXProgressComponent.Config.finish-command-handlers = Finish command handlers
com.top_logic.layout.progress.AJAXProgressComponent.Config.logFilePrefix = Log file prefix
com.top_logic.layout.progress.AJAXProgressComponent.Config.logMessages = Log messages
com.top_logic.layout.progress.AJAXProgressComponent.Config.progressComponentHeight = Progress component height
com.top_logic.layout.progress.AJAXProgressComponent.Config.progressComponentWidth = Progress component width
com.top_logic.layout.progress.AJAXProgressComponent.Config.refreshInterval = Refresh interval
com.top_logic.layout.progress.AJAXProgressComponent.Config.scrollUp = Scroll up
com.top_logic.layout.progress.AJAXProgressComponent.Config.useIntervallFromProgressProvider = Use intervall from progress provider
com.top_logic.layout.progress.AJAXProgressComponent.tooltip = A generic component to show the progress of a long lasting process provided by an <i>progress info</i> .
com.top_logic.layout.progress.AbstractProgressComponent = Progress component
com.top_logic.layout.progress.AbstractProgressComponent$AbstractProgressCommandHandler = Progress command handler
com.top_logic.layout.progress.AbstractProgressComponent$AbstractProgressCommandHandler.tooltip = Command handler for starting the separate thread and providing the <i>progress info</i> being displayed. If <code>#startThread(DisplayContext, LayoutComponent, Object, Map)</code> doesn't return a <i>progress info</i> the dialog will not be displayed.
com.top_logic.layout.progress.AbstractProgressComponent.tooltip = Handling component for a <i>progress info</i>. The component will provide two fields for the message and the progress. When the <i>progress info</i> is finished, the dialog this component lives in, will disappear.
com.top_logic.layout.progress.CancelProgressHandler = Cancel progress handler
com.top_logic.layout.progress.CancelProgressHandler.tooltip = <i>Command handler</i> that stops a current progress.
com.top_logic.layout.progress.CancelProgressImmediatelyHandler = Cancel progress immediately handler
com.top_logic.layout.progress.CancelProgressImmediatelyHandler.tooltip = Cancel a running <i>progress info</i> and close its dialog.
com.top_logic.layout.provider.AbstractMappingResourceProvider = Mapping resource provider
com.top_logic.layout.provider.AbstractMappingResourceProvider.Config.impl = Implementation
com.top_logic.layout.provider.AbstractMappingResourceProvider.Config.impl.tooltip = The <i>resource provider</i> to delegate mapped objects to.
com.top_logic.layout.provider.AbstractMappingResourceProvider.tooltip = Dispatching <i>resource provider</i> that transforms the target object before dispatch.
com.top_logic.layout.provider.ConfiguredProxyResourceProvider = Configured proxy resource provider
com.top_logic.layout.provider.ConfiguredProxyResourceProvider.Config.inner = Inner
com.top_logic.layout.provider.ConfiguredProxyResourceProvider.Config.inner.tooltip = The inner <i>resource provider</i> to use.
com.top_logic.layout.provider.ConfiguredProxyResourceProvider.tooltip = Configurable <i>proxy resource provider</i>.
com.top_logic.layout.provider.LabelProviderService = Label provider service
com.top_logic.layout.provider.LabelProviderService$ContextMenuConfig = Context menu configuration
com.top_logic.layout.provider.LabelProviderService$ContextMenuConfig.tooltip = Type-specific context menu commands configuration.
com.top_logic.layout.provider.LabelProviderService$MappingConfig = Mapping configuration
com.top_logic.layout.provider.LabelProviderService$MappingConfig.tooltip = <i>Mapping</i> assignment to a <code>"type"</code>.
com.top_logic.layout.provider.LabelProviderService$PDFRendererConfig = PDF renderer configuration
com.top_logic.layout.provider.LabelProviderService$PDFRendererConfig.tooltip = <i>PDF renderer</i> assignment to a <code>"type"</code>.
com.top_logic.layout.provider.LabelProviderService$ProviderConfig = Provider configuration
com.top_logic.layout.provider.LabelProviderService$ProviderConfig.tooltip = <i>Label provider</i> assignment to a <code>"type"</code>.
com.top_logic.layout.provider.LabelProviderService$RendererConfig = Renderer configuration
com.top_logic.layout.provider.LabelProviderService$RendererConfig.tooltip = <i>Renderer</i> assignment to a <code>"type"</code>.
com.top_logic.layout.provider.LabelProviderService$TypeKind = Type kind
com.top_logic.layout.provider.LabelProviderService$TypeKind.tooltip = Kind of supported types.
com.top_logic.layout.provider.LabelProviderService.Config.context-menus = Context menus
com.top_logic.layout.provider.LabelProviderService.Config.context-menus.tooltip = Configuration of type-specific context menu entries.
com.top_logic.layout.provider.LabelProviderService.Config.default-provider = Default provider
com.top_logic.layout.provider.LabelProviderService.Config.default-provider.tooltip = The provider to use, if none is found otherwise.
com.top_logic.layout.provider.LabelProviderService.Config.label-providers = Label providers
com.top_logic.layout.provider.LabelProviderService.Config.label-providers.tooltip = Configured <i>label providers</i> for types. <p> The <i>label providers</i> defined in this section are used when the context requests only a plain label (no type image or link). If no <i>label provider</i> is found in this section for a certain type, a <i>resource provider</i> from <i>Resource providers</i> is used as fallback before considering a <i>label provider</i> for a super type. </p>
com.top_logic.layout.provider.LabelProviderService.Config.mappings = Mappings
com.top_logic.layout.provider.LabelProviderService.Config.mappings.tooltip = Configured <i>mappings</i> for types. These mappings that map an object to a potentially different object that is used to identify objects in compare views.
com.top_logic.layout.provider.LabelProviderService.Config.pdf-renderers = Pdf renderers
com.top_logic.layout.provider.LabelProviderService.Config.pdf-renderers.tooltip = Configured PDF renderers for types.
com.top_logic.layout.provider.LabelProviderService.Config.renderers = Renderers
com.top_logic.layout.provider.LabelProviderService.Config.renderers.tooltip = Configured <i>renderers</i> for types.
com.top_logic.layout.provider.LabelProviderService.Config.resource-providers = Resource providers
com.top_logic.layout.provider.LabelProviderService.Config.resource-providers.tooltip = Configured <i>resource providers</i> for types. <p> The <i>resource providers</i> defined in this section are used when the context requests more than a plain label. If no <i>resource provider</i> is found in this section for a certain type, a <i>label provider</i> from <i>Label providers</i> is used as fallback before considering a <i>resource provider</i> for a super type. Therefore, it might be reasonable to define a custom <i>resource provider</i> for a certain type, if the <i>label provider</i> defined for that type is not de-facto a <i>resource provider</i>. </p>
com.top_logic.layout.provider.LabelProviderService.ContextMenuConfig.commands = Commands
com.top_logic.layout.provider.LabelProviderService.ContextMenuConfig.commands.tooltip = Type-specific commands to add to context menus for the given <i>Type</i>.
com.top_logic.layout.provider.LabelProviderService.MappingConfig.implementation = Implementation
com.top_logic.layout.provider.LabelProviderService.MappingConfig.implementation.tooltip = The <i>mapping</i> implementation for the given <i>Type</i>.
com.top_logic.layout.provider.LabelProviderService.PDFRendererConfig.implementation = Implementation
com.top_logic.layout.provider.LabelProviderService.PDFRendererConfig.implementation.tooltip = The <i>PDF renderer</i> implementation for the given <i>Type</i>.
com.top_logic.layout.provider.LabelProviderService.ProviderConfig.implementation = Implementation
com.top_logic.layout.provider.LabelProviderService.ProviderConfig.implementation.tooltip = The <i>label provider</i> implementation for the given <i>Type</i>.
com.top_logic.layout.provider.LabelProviderService.RegisterableConfig.kind = Kind
com.top_logic.layout.provider.LabelProviderService.RegisterableConfig.kind.tooltip = The kind of <i>Type</i>.
com.top_logic.layout.provider.LabelProviderService.RegisterableConfig.type = Type
com.top_logic.layout.provider.LabelProviderService.RegisterableConfig.type.tooltip = The type for which an implementation can be assigned.
com.top_logic.layout.provider.LabelProviderService.RendererConfig.implementation = Implementation
com.top_logic.layout.provider.LabelProviderService.RendererConfig.implementation.tooltip = The <i>renderer</i> implementation for the given <i>Type</i>.
com.top_logic.layout.provider.LabelProviderService.TypeKind.CODE = Code
com.top_logic.layout.provider.LabelProviderService.TypeKind.CODE.tooltip = A Java type, the type name is a fully-qualified class name.
com.top_logic.layout.provider.LabelProviderService.TypeKind.MODEL = Model
com.top_logic.layout.provider.LabelProviderService.TypeKind.MODEL.tooltip = A model type, the type name is a fully-qualified model type name.
com.top_logic.layout.provider.LabelProviderService.tooltip = Services looking up functional classes assigned to objects.
com.top_logic.layout.provider.LabelResourceProvider = Label resource provider
com.top_logic.layout.provider.LabelResourceProvider.Config.label-provider = Label provider
com.top_logic.layout.provider.LabelResourceProvider.Config.label-provider.tooltip = The <i>label provider</i> to wrap.
com.top_logic.layout.provider.LabelResourceProvider.tooltip = Dynamic extension of a <i>label provider</i> to a <i>resource provider</i> to use a <i>label provider</i> in a context where a <i>resource provider</i> is required.
com.top_logic.layout.provider.label.FileSizeLabelProvider = File size label provider
com.top_logic.layout.provider.label.FileSizeLabelProvider.Config.max-fraction-digits = Maximum fraction digits
com.top_logic.layout.provider.label.FileSizeLabelProvider.Config.max-fraction-digits.tooltip = Maximum amount of displayed fraction digits.
com.top_logic.layout.provider.label.FileSizeLabelProvider.Config.min-fraction-digits = Minimum fraction digits
com.top_logic.layout.provider.label.FileSizeLabelProvider.Config.min-fraction-digits.tooltip = Minimum amount of displayed fraction digits.
com.top_logic.layout.provider.label.FileSizeLabelProvider.Config.unit-separator = Unit separator
com.top_logic.layout.provider.label.FileSizeLabelProvider.Config.unit-separator.tooltip = Separator string between number and unit.
com.top_logic.layout.provider.label.FileSizeLabelProvider.tooltip = <i>Label provider</i>, that converts a file size - long value in byte - into a human readable string, using unit prefixes.
com.top_logic.layout.provider.label.JSONLabelProvider = JSON label provider
com.top_logic.layout.provider.label.JSONLabelProvider.Config.analyzer = Analyzer
com.top_logic.layout.provider.label.JSONLabelProvider.Config.analyzer.tooltip = The <i>value analyzer</i> that interprets the stored JSON string and reconstructs the JSON object.
com.top_logic.layout.provider.label.JSONLabelProvider.Config.pretty = Pretty
com.top_logic.layout.provider.label.JSONLabelProvider.Config.pretty.tooltip = Whether the output is pretty formatted.
com.top_logic.layout.provider.label.JSONLabelProvider.tooltip = <i>Label provider</i> that creates a serialised form for a JSON object.
com.top_logic.layout.renderers.ButtonComponentButtonRenderer = Button component button renderer
com.top_logic.layout.renderers.ButtonComponentButtonRenderer.tooltip = The class <i>button component button renderer</i> is the default button renderer which is used to render the buttons of this component, if no renderer is added as property to the according <i>command model</i>.
com.top_logic.layout.renderers.ConfiguredLabelRenderer = Configured label renderer
com.top_logic.layout.renderers.ConfiguredLabelRenderer.Config.labels = Labels
com.top_logic.layout.renderers.ConfiguredLabelRenderer.Config.labels.tooltip = The <i>label provider</i> that is used to create the rendered label.
com.top_logic.layout.renderers.ConfiguredLabelRenderer.tooltip = <i>Label provider</i> whose internal <i>label provider</i> is configured.
com.top_logic.layout.renderers.DefaultTabBarRenderer = Default tab bar renderer
com.top_logic.layout.renderers.DefaultTabBarRenderer.Config.barSize = Bar size
com.top_logic.layout.renderers.DefaultTabBarRenderer.Config.barSize.tooltip = Overall tab bar height in pixel
com.top_logic.layout.renderers.DefaultTabBarRenderer.Config.tab-bar-class = Tab bar class
com.top_logic.layout.renderers.DefaultTabBarRenderer.Config.tab-bar-class.tooltip = CSS class of the outermost HTML container
com.top_logic.layout.renderers.DefaultTabBarRenderer.tooltip = Renderer of tab bars.
com.top_logic.layout.renderers.IconRenderer = Icon renderer
com.top_logic.layout.renderers.IconRenderer.Config.height = Height
com.top_logic.layout.renderers.IconRenderer.Config.height.tooltip = The height of the icon (in <i>pixel</i>).
com.top_logic.layout.renderers.IconRenderer.Config.width = Width
com.top_logic.layout.renderers.IconRenderer.Config.width.tooltip = The width of the icon (in <i>pixel</i>).
com.top_logic.layout.renderers.IconRenderer.tooltip = <i>Renderer</i> rendering an <i>binary data</i>
com.top_logic.layout.renderers.Icons.BUTTONBAR_ARROW_DECORATION = Whether to show arrow decoration, if a command does not provide a custom icon.
com.top_logic.layout.renderers.Icons.BUTTONBAR_CUSTOM_ICONS = Whether command-provided icons are rendered.
com.top_logic.layout.renderers.Icons.BUTTON_COMPONENT_BUTTON_TEMPLATE = Template for displaying a button that is part of a group of multiple buttons. For example, the one at the bottom right.
com.top_logic.layout.renderers.Icons.TABBAR_HEIGHT = Height of tab bars in pixels.
com.top_logic.layout.renderers.PDFRendererAdapter = PDF renderer adapter
com.top_logic.layout.renderers.PDFRendererAdapter.Config.renderer = Renderer
com.top_logic.layout.renderers.PDFRendererAdapter.Config.renderer.tooltip = The <i>renderer</i> to delegate writing to.
com.top_logic.layout.renderers.PDFRendererAdapter.tooltip = <i>PDF renderer</i> that delegates the write process to a configured <i>renderer</i>.
com.top_logic.layout.renderers.PreformattedContentRenderer = Preformatted content renderer
com.top_logic.layout.renderers.PreformattedContentRenderer.Config.content-renderer = Content renderer
com.top_logic.layout.renderers.PreformattedContentRenderer.Config.content-renderer.tooltip = The <i>renderer</i> that renderes the actual content.
com.top_logic.layout.renderers.PreformattedContentRenderer.tooltip = <i>Preformatted renderer</i> whose content <i>renderer</i> can be configured.
com.top_logic.layout.scripting.FieldMode = Field mode
com.top_logic.layout.scripting.FieldMode.ACTIVE = Active
com.top_logic.layout.scripting.FieldMode.ACTIVE.tooltip = A <i>form field</i> is <i>active</i>, if and only if <code>FormField#isActive()</code> is true.
com.top_logic.layout.scripting.FieldMode.BLOCKED = Blocked
com.top_logic.layout.scripting.FieldMode.BLOCKED.tooltip = A <i>form field</i> is <i>blocked</i>, if and only if <code>FormField#isBlocked()</code> is true.
com.top_logic.layout.scripting.FieldMode.DISABLED = Disabled
com.top_logic.layout.scripting.FieldMode.DISABLED.tooltip = A <i>form field</i> is <i>disabled</i>, if and only if <code>FormField#isDisabled()</code> is true.
com.top_logic.layout.scripting.FieldMode.IMMUTABLE = Immutable
com.top_logic.layout.scripting.FieldMode.IMMUTABLE.tooltip = A <i>form field</i> is <i>immutable</i>, if and only if <code>FormField#isImmutable()</code> is true.
com.top_logic.layout.scripting.FieldMode.INVISIBLE = Invisible
com.top_logic.layout.scripting.FieldMode.INVISIBLE.tooltip = A <i>form field</i> is <i>invisible</i>, if and only if <code>FormField#isVisible()</code> is true.
com.top_logic.layout.scripting.FieldMode.tooltip = Represents the four modes of a <i>form field</i>: <ul> <li><i>active</i></li> <li><i>disabled</i></li> <li><i>immutable</i></li> <li><i>invisible</i></li> </ul>
com.top_logic.layout.scripting.FieldValidity = Field validity
com.top_logic.layout.scripting.FieldValidity.ERROR = Error
com.top_logic.layout.scripting.FieldValidity.ERROR.tooltip = A <i>form field</i> is <i>error</i>, if and only if it has errors.
com.top_logic.layout.scripting.FieldValidity.VALID = Valid
com.top_logic.layout.scripting.FieldValidity.VALID.tooltip = A <i>form field</i> is <i>valid</i>, if and only if it has neither errors nor warnings.
com.top_logic.layout.scripting.FieldValidity.WARNING = Warning
com.top_logic.layout.scripting.FieldValidity.WARNING.tooltip = A <i>form field</i> is <i>warning</i>, if and only if it has no errors but warnings.
com.top_logic.layout.scripting.FieldValidity.tooltip = Represents the three validity states of a <i>form field</i>: <ul> <li><i>valid</i></li> <li><i>warning</i></li> <li><i>error</i></li> </ul>
com.top_logic.layout.scripting.action.AbstractFormAction.field = Field
com.top_logic.layout.scripting.action.AbstractFormAction.field.tooltip = Description of the <i>form field</i> to operate on.
com.top_logic.layout.scripting.action.AbstractFormInput.value = Value
com.top_logic.layout.scripting.action.AbstractFormInput.value.tooltip = Description of the value to set into <i>Field</i>.
com.top_logic.layout.scripting.action.ActionChain.actions = Actions
com.top_logic.layout.scripting.action.ActionChain.actions.tooltip = The grouped actions.
com.top_logic.layout.scripting.action.ApplicationAction.comment = Comment
com.top_logic.layout.scripting.action.ApplicationAction.comment.tooltip = A comment about this action. <p> The comment should describe this action for humans. </p>
com.top_logic.layout.scripting.action.ApplicationAction.failure-message = Failure message
com.top_logic.layout.scripting.action.ApplicationAction.failure-message.tooltip = The message that should be reported, if a failure happens during execution of this action.
com.top_logic.layout.scripting.action.ApplicationAction.locale = Locale
com.top_logic.layout.scripting.action.ApplicationAction.locale.tooltip = Returns the <i>locale</i> of the user which has done / should execute this action.
com.top_logic.layout.scripting.action.ApplicationAction.time-zone = Time zone
com.top_logic.layout.scripting.action.ApplicationAction.time-zone.tooltip = Returns the <i>time zone</i> of the user which has done / should execute this action.
com.top_logic.layout.scripting.action.ApplicationAction.user-id = User ID
com.top_logic.layout.scripting.action.ApplicationAction.user-id.tooltip = Returns the name of the user which has done / should execute this action.
com.top_logic.layout.scripting.action.ApplicationAction.window-name = Window name
com.top_logic.layout.scripting.action.ApplicationAction.window-name.tooltip = The window in which the action has to be executed. <p> The empty <i>string</i> means: The main application window. </p> <p> This is the name of the <i>window scope</i>. </p>
com.top_logic.layout.scripting.action.AwaitAction.max-sleep = Maximum sleep
com.top_logic.layout.scripting.action.AwaitAction.max-sleep.tooltip = Number of milliseconds to wait before aborting. <p> A value of <code>&lt;=0</code> means not to wait at all. </p>
com.top_logic.layout.scripting.action.CardSelection$Op = Op
com.top_logic.layout.scripting.action.CardSelection$Op.tooltip = Default implementation of <i>card selection</i>.
com.top_logic.layout.scripting.action.CardSelection.card-index = Card index
com.top_logic.layout.scripting.action.CardSelection.card-index.tooltip = The index of the card to select. Is just used when <i>Card name</i> is <code>null</code>. <code>-1</code> means "deselect".
com.top_logic.layout.scripting.action.CardSelection.card-name = Card name
com.top_logic.layout.scripting.action.CardSelection.card-name.tooltip = Name of the card to select. May be <code>null</code>, in which case <i>Card index</i> is used.
com.top_logic.layout.scripting.action.CheckLabeledExecutability.executable = Executable
com.top_logic.layout.scripting.action.CheckLabeledExecutability.executable.tooltip = Whether the <i>command model</i> is executable.
com.top_logic.layout.scripting.action.CheckLabeledExecutability.model-name = Model name
com.top_logic.layout.scripting.action.CheckLabeledExecutability.model-name.tooltip = The <i>model name</i> identifying the <i>command model</i>.
com.top_logic.layout.scripting.action.CommandAction.command-implementation-comment = Command implementation comment
com.top_logic.layout.scripting.action.CommandAction.command-implementation-comment.tooltip = The name of the class that is implements the command. <p> This property is optional and only for debugging purpose. The value of this property must not be used for the action implementation. </p>
com.top_logic.layout.scripting.action.CommandAction.command-label = Command label
com.top_logic.layout.scripting.action.CommandAction.command-label.tooltip = Label of the command as displayed at the GUI. <p> The label is only used to identify the command during replay, if <i>Command name</i> is not given. </p>
com.top_logic.layout.scripting.action.CommandAction.command-name = Command name
com.top_logic.layout.scripting.action.CommandAction.command-name.tooltip = The command name as defined in the <i>command handler factory</i>. <p> If not given, <i>Command label</i> is used to identify the command during replay. </p>
com.top_logic.layout.scripting.action.CommandActionBase.arguments = Arguments
com.top_logic.layout.scripting.action.CommandActionBase.arguments.tooltip = Description of the arguments passed to the command execution.
com.top_logic.layout.scripting.action.CommandExecution.failure-expected = Failure expected
com.top_logic.layout.scripting.action.CommandExecution.failure-expected.tooltip = Whether execution of the <i>command</i> is expected to fail.
com.top_logic.layout.scripting.action.ComponentAction.component-implementation-comment = Component implementation comment
com.top_logic.layout.scripting.action.ComponentAction.component-implementation-comment.tooltip = E.g. the name of the class that is supposed to implements the component. <p> This property is optional and only for debugging purpose. The value of this property must not be used for the action implementation. </p>
com.top_logic.layout.scripting.action.ComponentAction.component-name = Component name
com.top_logic.layout.scripting.action.ComponentAction.component-name.tooltip = Name of the component this action is executed on.
com.top_logic.layout.scripting.action.ConditionalAction.condition = Condition
com.top_logic.layout.scripting.action.ConditionalAction.condition.tooltip = An <i>application action</i> that computes a boolean condition. <p> If a condition is given, the <i>Actions</i> are only executed, if the condition "evaluates" to <code>true</code>. </p>
com.top_logic.layout.scripting.action.ControlAction$Argument = Argument
com.top_logic.layout.scripting.action.ControlAction$Argument.tooltip = Configuration of a single <i>control command</i> argument.
com.top_logic.layout.scripting.action.ControlAction$Op = Op
com.top_logic.layout.scripting.action.ControlAction$Op.tooltip = Default implementation of <i>control action</i>.
com.top_logic.layout.scripting.action.ControlAction.Argument.value = Value
com.top_logic.layout.scripting.action.ControlAction.Argument.value.tooltip = Description of the value.
com.top_logic.layout.scripting.action.ControlAction.arguments = Arguments
com.top_logic.layout.scripting.action.ControlAction.arguments.tooltip = Arguments to pass to the <i>Command</i>.
com.top_logic.layout.scripting.action.ControlAction.command = Command
com.top_logic.layout.scripting.action.ControlAction.command.tooltip = The internal name of the <i>control command</i> to trigger.
com.top_logic.layout.scripting.action.ControlAction.component = Component
com.top_logic.layout.scripting.action.ControlAction.component.tooltip = The scope in which to search the control. <p> If not defined, the top-level scope is used. If the <i>Model</i> is a <i>form member</i>, the component is implicitly defined by its <i>form handler</i>. </p>
com.top_logic.layout.scripting.action.ControlAction.model = Model
com.top_logic.layout.scripting.action.ControlAction.model.tooltip = The displayed <i>form member</i> model.
com.top_logic.layout.scripting.action.ControlAction.type = Type
com.top_logic.layout.scripting.action.ControlAction.type.tooltip = The <i>control</i> implementation class to look for.
com.top_logic.layout.scripting.action.CurrentFieldOptions = Current field options
com.top_logic.layout.scripting.action.CurrentFieldOptions.tooltip = Represents the options of a <i>select field</i>.
com.top_logic.layout.scripting.action.CurrentFieldValue = Current field value
com.top_logic.layout.scripting.action.CurrentFieldValue.raw-value = Raw value
com.top_logic.layout.scripting.action.CurrentFieldValue.raw-value.tooltip = Is the raw value of the <i>form field</i> meant, oder the "normal" value?
com.top_logic.layout.scripting.action.CurrentFieldValue.tooltip = <i>Value reference</i> that delivers the current value of a <i>form field</i>.
com.top_logic.layout.scripting.action.ExpandAction.expand = Expand
com.top_logic.layout.scripting.action.ExpandAction.expand.tooltip = True: Expand, false: Collapse
com.top_logic.layout.scripting.action.ExpandAction.path = Path
com.top_logic.layout.scripting.action.ExpandAction.path.tooltip = The path to the node, without root.
com.top_logic.layout.scripting.action.ExportData.data = Data
com.top_logic.layout.scripting.action.ExportData.data.tooltip = Description of the <i>binary data</i> data to export from the application under test.
com.top_logic.layout.scripting.action.ExportData.export-file-name = Export file name
com.top_logic.layout.scripting.action.ExportData.export-file-name.tooltip = The file name to export the <i>Data</i> value to.
com.top_logic.layout.scripting.action.FormAction.field-values = Field values
com.top_logic.layout.scripting.action.FormInput$Mode = Mode
com.top_logic.layout.scripting.action.FormInput$Mode.tooltip = Processing mode of a <i>form input</i> operation.
com.top_logic.layout.scripting.action.FormInput$Op = Op
com.top_logic.layout.scripting.action.FormInput$Op.tooltip = Default implementation of <i>form input</i>.
com.top_logic.layout.scripting.action.FormInput.Mode.ADD = Add
com.top_logic.layout.scripting.action.FormInput.Mode.ADD.tooltip = Adding the given value to the existing value collection.
com.top_logic.layout.scripting.action.FormInput.Mode.REMOVE = Remove
com.top_logic.layout.scripting.action.FormInput.Mode.REMOVE.tooltip = Removing the given value form the existing value collection.
com.top_logic.layout.scripting.action.FormInput.Mode.SET = Set
com.top_logic.layout.scripting.action.FormInput.Mode.SET.tooltip = Setting the new value replacing the old one completely.
com.top_logic.layout.scripting.action.FormInput.mode = Mode
com.top_logic.layout.scripting.action.FormInput.mode.tooltip = The processing mode of the input operation.
com.top_logic.layout.scripting.action.FormRawInput$Op = Op
com.top_logic.layout.scripting.action.FormRawInput$Op.tooltip = Default implementation of <i>form raw input</i>.
com.top_logic.layout.scripting.action.GlobalVariableAction.name.tooltip = The name of the global variable of the scripting framework. <p> <code>null</code> is not a valid name. </p>
com.top_logic.layout.scripting.action.IfAction.condition = Condition
com.top_logic.layout.scripting.action.IfAction.condition.tooltip = Has to resolve to a <i>boolean</i> value.
com.top_logic.layout.scripting.action.IfAction.else = Else
com.top_logic.layout.scripting.action.IfAction.else.tooltip = The <i>application action</i> to execute when the condition is false.
com.top_logic.layout.scripting.action.IfAction.then = Then
com.top_logic.layout.scripting.action.IfAction.then.tooltip = The <i>application action</i> to execute when the condition is true.
com.top_logic.layout.scripting.action.IncludeScriptAction.script = Script
com.top_logic.layout.scripting.action.IncludeScriptAction.script.tooltip = The script, probably a <i>data item value</i>.
com.top_logic.layout.scripting.action.KBRollbackToRevision.revision = Revision
com.top_logic.layout.scripting.action.KBRollbackToRevision.revision.tooltip = The revision to revert to.
com.top_logic.layout.scripting.action.KBRollbackXRevisions.number-revisions = Number revisions
com.top_logic.layout.scripting.action.KBRollbackXRevisions.number-revisions.tooltip = Number of revisions to revert.
com.top_logic.layout.scripting.action.LabeledButtonAction.business-object = Business object
com.top_logic.layout.scripting.action.LabeledButtonAction.label = Label
com.top_logic.layout.scripting.action.LogMessageAction.level = Level
com.top_logic.layout.scripting.action.LogMessageAction.message = Message
com.top_logic.layout.scripting.action.LoginAction.account = Account
com.top_logic.layout.scripting.action.LoginAction.account.tooltip = Name of the account to be used for executing following actions that are marked with <i>Process ID</i> in their <i>User ID</i> field. <p> If not set, the account with the name <i>Process ID</i> is used. </p>
com.top_logic.layout.scripting.action.LoginAction.password = Password
com.top_logic.layout.scripting.action.LoginAction.password.tooltip = The password for the <i>Account</i>. <p> If not set, the master script session asks for the password (if the <i>Account</i> is different from the user that executes the script). </p>
com.top_logic.layout.scripting.action.LoginAction.process-id = Process ID
com.top_logic.layout.scripting.action.LoginAction.process-id.tooltip = The ID of the script processor to start. <p> The started script processor executes those actions that have the given value in their <i>User ID</i> field. </p>
com.top_logic.layout.scripting.action.ModelAction.model-name = Model name
com.top_logic.layout.scripting.action.ModelAction.model-name.tooltip = The name of the target model.
com.top_logic.layout.scripting.action.ModelPart.field-name = Field name
com.top_logic.layout.scripting.action.ModelPart.field-name.tooltip = The description of the field to access.
com.top_logic.layout.scripting.action.NamedTabSwitch.card-comment = Card comment
com.top_logic.layout.scripting.action.NamedTabSwitch.card-comment.tooltip = Optional label of the tab to select as displayed at the GUI. <p> This property is optional and only for documentary purpose. The value of this property must not be used for the action implementation. </p>
com.top_logic.layout.scripting.action.NamedTabSwitch.card-name = Card name
com.top_logic.layout.scripting.action.NamedTabSwitch.card-name.tooltip = The technical name of the tab to select.
com.top_logic.layout.scripting.action.OpenDialog.dialog-name = Dialog name
com.top_logic.layout.scripting.action.OpenTableFilter.filter-column-name = Filter column name
com.top_logic.layout.scripting.action.ReasonKeyAssertion.contained-keys = Contained keys
com.top_logic.layout.scripting.action.ReasonKeyAssertion.contained-keys.tooltip = Keys that are expected to be contained in the errors of the hander result.
com.top_logic.layout.scripting.action.ReasonKeyAssertion.reason-key = Reason key
com.top_logic.layout.scripting.action.ReasonKeyAssertion.reason-key.tooltip = The expected error.
com.top_logic.layout.scripting.action.ReasonKeyAssertion.reason-keys = Reason keys
com.top_logic.layout.scripting.action.ReasonKeyAssertion.reason-keys.tooltip = Keys that are expected to be the errors of the hander result.
com.top_logic.layout.scripting.action.RecordingFailedAction.message = Message
com.top_logic.layout.scripting.action.RecordingFailedAction.message.tooltip = The message of the <i>scripting recorder</i>, what it tried to record when the error occurred.
com.top_logic.layout.scripting.action.RecordingFailedAction.printed-cause = Printed cause
com.top_logic.layout.scripting.action.RecordingFailedAction.printed-cause.tooltip = The <i>throwable</i> that caused the recording to fail.
com.top_logic.layout.scripting.action.RunTaskAction.result-filters = Result filters
com.top_logic.layout.scripting.action.RunTaskAction.result-filters.tooltip = List of <i>filter</i> that must accept the last successful <i>task result</i> of the run task. If the result is not accepted by each <i>filter</i> the task is run again.
com.top_logic.layout.scripting.action.RunTaskAction.task-name = Task name
com.top_logic.layout.scripting.action.RunTaskAction.task-name.tooltip = Name of the task to run.
com.top_logic.layout.scripting.action.SelectAction$SelectionChangeKind = Selection change kind
com.top_logic.layout.scripting.action.SelectAction$SelectionChangeKind.tooltip = How is the selection changed? incremental or Absolute?
com.top_logic.layout.scripting.action.SelectAction.SelectionChangeKind.ABSOLUTE = Absolute
com.top_logic.layout.scripting.action.SelectAction.SelectionChangeKind.ABSOLUTE.tooltip = If a new object is selected, it replaces the old selection. If an object is deselected, the selection is cleared.
com.top_logic.layout.scripting.action.SelectAction.SelectionChangeKind.INCREMENTAL = Incremental
com.top_logic.layout.scripting.action.SelectAction.SelectionChangeKind.INCREMENTAL.tooltip = If a new object is selected, it is selected additionally to the already selected objects. It does not replace the old selection.
com.top_logic.layout.scripting.action.SelectAction.SelectionChangeKind.LEGACY = Legacy
com.top_logic.layout.scripting.action.SelectAction.SelectionChangeKind.LEGACY.tooltip = Only for backwards compatibility with old scripts. <p> This is the default <i>selection change kind</i>, as it is the first enum value. It is used to detect old scripts, where the <i>selection change kind</i> did not exist. </p>
com.top_logic.layout.scripting.action.SelectAction.change-kind = Change kind
com.top_logic.layout.scripting.action.SelectAction.change-kind.tooltip = What kind of change? incremental or Absolute?
com.top_logic.layout.scripting.action.SelectAction.selection = Selection
com.top_logic.layout.scripting.action.SelectAction.selection-model-name = Selection model name
com.top_logic.layout.scripting.action.SelectAction.selection-model-name.tooltip = Returns a <i>model name</i> identifying the <i>named model</i> on which the selectee is being selected or unselected.
com.top_logic.layout.scripting.action.SelectAction.selection.tooltip = Returns the <i>selection reference</i> containing the selectee and its requested selection state.
com.top_logic.layout.scripting.action.SelectObject.matcher-config = Matcher configuration
com.top_logic.layout.scripting.action.SelectSelectableAction.selection = Selection
com.top_logic.layout.scripting.action.ServiceRestartAction$Op = Op
com.top_logic.layout.scripting.action.ServiceRestartAction$Op.tooltip = Implementation of <i>service restart action</i>.
com.top_logic.layout.scripting.action.ServiceRestartAction.service = Service
com.top_logic.layout.scripting.action.ServiceRestartAction.service.tooltip = The service type to restart.
com.top_logic.layout.scripting.action.SetGlobalVariableAction.value = Value
com.top_logic.layout.scripting.action.SetGlobalVariableAction.value.tooltip = The new value of the global variable of the scripting framework. <p> <code>null</code> is a valid value. </p>
com.top_logic.layout.scripting.action.SleepAction.sleep-time-millis = Sleep time millis
com.top_logic.layout.scripting.action.SleepAction.sleep-time-millis.tooltip = The number of milliseconds to sleep.
com.top_logic.layout.scripting.action.TabSwitch.index = Index
com.top_logic.layout.scripting.action.ValueModelUpdate$Op = Op
com.top_logic.layout.scripting.action.ValueModelUpdate$Op.tooltip = Default implementation of <i>value model update</i>.
com.top_logic.layout.scripting.action.VisitTabs.component-implementation-comment = Component implementation comment
com.top_logic.layout.scripting.action.VisitTabs.component-implementation-comment.tooltip = E.g. the name of the class that is supposed to implements the component. <p> This property is optional and only for debugging purpose. The value of this property must not be used for the action implementation. </p>
com.top_logic.layout.scripting.action.VisitTabs.component-name = Component name
com.top_logic.layout.scripting.action.VisitTabs.component-name.tooltip = Name of the component this action is executed on.
com.top_logic.layout.scripting.action.VisitTabs.ignore-components = Ignore components
com.top_logic.layout.scripting.action.VisitTabs.ignore-components.tooltip = Return a collection of components that must not be visited.
com.top_logic.layout.scripting.action.WaitForMaintenanceModeAction.state = State
com.top_logic.layout.scripting.action.WaitForMaintenanceModeAction.state.tooltip = The maintenance mode state to wait for.
com.top_logic.layout.scripting.action.assertion.CheckAction.actual-value = Actual value
com.top_logic.layout.scripting.action.assertion.CheckAction.actual-value.tooltip = Description of the value to check.
com.top_logic.layout.scripting.action.assertion.CheckAction.constraints = Constraints
com.top_logic.layout.scripting.action.assertion.CheckAction.constraints.tooltip = Description of the constraints to apply.
com.top_logic.layout.scripting.action.assertion.FieldErrorAssertion.error = Error
com.top_logic.layout.scripting.action.assertion.FieldErrorAssertion.error-pattern = Error pattern
com.top_logic.layout.scripting.action.assertion.FieldErrorAssertion.error-pattern.tooltip = The <i>pattern</i> which the error value of the target field must match.
com.top_logic.layout.scripting.action.assertion.FieldErrorAssertion.error.tooltip = The expected error value of the target field.
com.top_logic.layout.scripting.action.assertion.FieldLabelAssertion.label = Label
com.top_logic.layout.scripting.action.assertion.FieldModeAssertion.mode = Mode
com.top_logic.layout.scripting.action.assertion.FieldValidityAssertion.validity = Validity
com.top_logic.layout.scripting.action.assertion.GlobalVariableExistenceAssertion.existing = Existing
com.top_logic.layout.scripting.action.assertion.GlobalVariableExistenceAssertion.existing.tooltip = Has this global variable to exist? <p> <code>false</code> means, it must not exist. </p>
com.top_logic.layout.scripting.action.assertion.ModelNotExistsAssertion.failure-pattern = Failure pattern
com.top_logic.layout.scripting.action.assertion.ModelNotExistsAssertion.failure-pattern.tooltip = Regular expression that must match the expected failure.
com.top_logic.layout.scripting.action.assertion.ValueAssertion$Comparision = Comparision
com.top_logic.layout.scripting.action.assertion.ValueAssertion$Comparision.tooltip = Comparison mode of <i>Actual value</i> (<i>value assertion</i>) and <i>Expected value</i> (<i>value assertion</i>).
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.ALL_CONTAINED_IN = All contained in
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.ALL_CONTAINED_IN.tooltip = It is asserted that <i>Actual value</i> (<i>value assertion</i>) is a subset of the <i>Expected value</i> (<i>value assertion</i>) collection.
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.CONTAINED_IN = Contained in
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.CONTAINED_IN.tooltip = It is asserted that <i>Actual value</i> (<i>value assertion</i>) is contained in the <i>Expected value</i> (<i>value assertion</i>) collection.
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.CONTAINS = Contains
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.CONTAINS.tooltip = It is asserted that <i>Actual value</i> (<i>value assertion</i>) is a collection and that it contains the value <i>Expected value</i> (<i>value assertion</i>).
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.CONTAINS_ALL = Contains all
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.CONTAINS_ALL.tooltip = It is asserted that <i>Actual value</i> (<i>value assertion</i>) is a collection and that it contains all values of the <i>Expected value</i> (<i>value assertion</i>) collection.
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.CONTAINS_NONE = Contains none
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.CONTAINS_NONE.tooltip = It is asserted that <i>Actual value</i> (<i>value assertion</i>) is a collection and that it does not contain any of the <i>Expected value</i> (<i>value assertion</i>) collection.
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.CONTAINS_SOME = Contains some
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.CONTAINS_SOME.tooltip = It is asserted that <i>Actual value</i> (<i>value assertion</i>) is a collection and that it contains at least one value of the <i>Expected value</i> (<i>value assertion</i>) collection.
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.EQUALS = Equals
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.EQUALS.tooltip = It is asserted that <i>Actual value</i> (<i>value assertion</i>) equals <i>Expected value</i> (<i>value assertion</i>).
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.GREATER_OR_EQUAL = Greater or equal
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.GREATER_OR_EQUAL.tooltip = It is asserted that <i>Actual value</i> (<i>value assertion</i>) is greater or equal than the <i>Expected value</i> (<i>value assertion</i>). <p> Both, the actual and expected value are required to implement <i>comparable</i> with a compatible bound. </p>
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.GREATER_THAN = Greater than
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.GREATER_THAN.tooltip = It is asserted that <i>Actual value</i> (<i>value assertion</i>) is greater than the <i>Expected value</i> (<i>value assertion</i>). <p> Both, the actual and expected value are required to implement <i>comparable</i> with a compatible bound. </p>
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.LOWER_OR_EQUAL = Lower or equal
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.LOWER_OR_EQUAL.tooltip = It is asserted that <i>Actual value</i> (<i>value assertion</i>) is lower or equal than the <i>Expected value</i> (<i>value assertion</i>). <p> Both, the actual and expected value are required to implement <i>comparable</i> with a compatible bound. </p>
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.LOWER_THAN = Lower than
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.LOWER_THAN.tooltip = It is asserted that <i>Actual value</i> (<i>value assertion</i>) is lower than the <i>Expected value</i> (<i>value assertion</i>). <p> Both, the actual and expected value are required to implement <i>comparable</i> with a compatible bound. </p>
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.MULTI_SET_EQUALS = Multiple set equals
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.MULTI_SET_EQUALS.tooltip = It is asserted that the collection <i>Actual value</i> (<i>value assertion</i>) equals the collection <i>Expected value</i> (<i>value assertion</i>) if both are converted to multi sets.
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.SET_EQUALS = Set equals
com.top_logic.layout.scripting.action.assertion.ValueAssertion.Comparision.SET_EQUALS.tooltip = It is asserted that the collection <i>Actual value</i> (<i>value assertion</i>) equals the collection <i>Expected value</i> (<i>value assertion</i>) if both are converted to sets.
com.top_logic.layout.scripting.action.assertion.ValueAssertion.actual-value = Actual value
com.top_logic.layout.scripting.action.assertion.ValueAssertion.actual-value.tooltip = The actual value retrieved from the application.
com.top_logic.layout.scripting.action.assertion.ValueAssertion.comparision = Comparision
com.top_logic.layout.scripting.action.assertion.ValueAssertion.comparision.tooltip = The mode how the <i>Actual value</i> is compared to the <i>Expected value</i>.
com.top_logic.layout.scripting.action.assertion.ValueAssertion.expected-value = Expected value
com.top_logic.layout.scripting.action.assertion.ValueAssertion.expected-value.tooltip = The expected value for the comparison.
com.top_logic.layout.scripting.action.assertion.ValueAssertion.inverted = Inverted
com.top_logic.layout.scripting.action.assertion.ValueAssertion.inverted.tooltip = Whether the <i>Comparision</i> must evaluate to <code>false</code>.
com.top_logic.layout.scripting.check.AbstractFileEqualityCheck = File equality check
com.top_logic.layout.scripting.check.AbstractFileEqualityCheck.FileMatchConfig.expected-value = Expected value
com.top_logic.layout.scripting.check.AbstractFileEqualityCheck.FileMatchConfig.expected-value.tooltip = Description of the expected value.
com.top_logic.layout.scripting.check.AbstractFileEqualityCheck.tooltip = Base class for <i>value checks</i> on <i>binary datas</i>
com.top_logic.layout.scripting.check.BinaryFileEqualityCheck = Binary file equality check
com.top_logic.layout.scripting.check.BinaryFileEqualityCheck.tooltip = Checks whether the actual file is equal to the expected file based on its name, content type and binary data.
com.top_logic.layout.scripting.check.ContentTypeCheck = Content type check
com.top_logic.layout.scripting.check.ContentTypeCheck.ContentTypeCheckConfig.expected-content-type = Expected content type
com.top_logic.layout.scripting.check.ContentTypeCheck.ContentTypeCheckConfig.expected-content-type.tooltip = The content type that is checked for.
com.top_logic.layout.scripting.check.ContentTypeCheck.tooltip = <i>Constraint</i> that checks the content type of a <i>binary data source</i> value.
com.top_logic.layout.scripting.check.EqualsCheck = Equals check
com.top_logic.layout.scripting.check.EqualsCheck.EqualsCheckConfig.expected-value = Expected value
com.top_logic.layout.scripting.check.EqualsCheck.EqualsCheckConfig.expected-value.tooltip = Description of the expected valued.
com.top_logic.layout.scripting.check.EqualsCheck.tooltip = <i>Value check configuration</i> that checks a value against an expected value.
com.top_logic.layout.scripting.check.ExcelEqualityCheck = Excel equality check
com.top_logic.layout.scripting.check.ExcelEqualityCheck.tooltip = Checks whether the actual Excel file is equal to the expected file based on its textual contents.
com.top_logic.layout.scripting.check.NoContentEqualityCheck = No content equality check
com.top_logic.layout.scripting.check.NoContentEqualityCheck.tooltip = <i>File equality check</i> which does not check the content.
com.top_logic.layout.scripting.check.NullCheck = Null check
com.top_logic.layout.scripting.check.NullCheck.NullCheckConfig.null = Null
com.top_logic.layout.scripting.check.NullCheck.NullCheckConfig.null.tooltip = Has the value to be <code>null</code>? (Not not <code>null</code>?)
com.top_logic.layout.scripting.check.NullCheck.tooltip = <i>Value check</i> that checks if the value is (not) <code>null</code>.
com.top_logic.layout.scripting.check.SimilarCheck = Similar check
com.top_logic.layout.scripting.check.SimilarCheck.SimilarCheckConfig.expected-value = Expected value
com.top_logic.layout.scripting.check.SimilarCheck.SimilarCheckConfig.expected-value.tooltip = Description of the expected valued.
com.top_logic.layout.scripting.check.SimilarCheck.tooltip = <i>Value check</i> that checks a value against an expected value. <p> In contrast to <i>equals check</i>, a fuzzy matching is used that ignores some (implementation) details. </p>
com.top_logic.layout.scripting.check.ValueCheck = Value check
com.top_logic.layout.scripting.check.ValueCheck.tooltip = Constraint on an application value.
com.top_logic.layout.scripting.check.XMLCheck = XML check
com.top_logic.layout.scripting.check.XMLCheck$XMLCheckConfig$NamespaceMapping = Namespace mapping
com.top_logic.layout.scripting.check.XMLCheck$XMLCheckConfig$NamespaceMapping.tooltip = Definition of a namespace prefix.
com.top_logic.layout.scripting.check.XMLCheck.XMLCheckConfig.NamespaceMapping.namespace = Namespace
com.top_logic.layout.scripting.check.XMLCheck.XMLCheckConfig.NamespaceMapping.namespace.tooltip = The namespace bound to the <i>Prefix</i>.
com.top_logic.layout.scripting.check.XMLCheck.XMLCheckConfig.NamespaceMapping.prefix = Prefix
com.top_logic.layout.scripting.check.XMLCheck.XMLCheckConfig.NamespaceMapping.prefix.tooltip = The prefix for the <i>Namespace</i>.
com.top_logic.layout.scripting.check.XMLCheck.XMLCheckConfig.checks = Checks
com.top_logic.layout.scripting.check.XMLCheck.XMLCheckConfig.checks.tooltip = List of XPath expressions that must evaluate to <code>true</code>, if applied to the root node of the tested document.
com.top_logic.layout.scripting.check.XMLCheck.XMLCheckConfig.namespaces = Namespaces
com.top_logic.layout.scripting.check.XMLCheck.XMLCheckConfig.namespaces.tooltip = Namespaces used in the <i>Checks</i>.
com.top_logic.layout.scripting.check.XMLCheck.tooltip = <i>Value check</i> that applies a list of XPath expressions to a <i>binary data</i> value and asserts that they evaluate to <code>true</code>.
com.top_logic.layout.scripting.check.XMLMatch = XML match
com.top_logic.layout.scripting.check.XMLMatch.tooltip = Compares an XML file for semantically matching an expected value.
com.top_logic.layout.scripting.check.ZipFileCheck = Zip file check
com.top_logic.layout.scripting.check.ZipFileCheck$ZipFileCheckConfig$EntryConfig = Entry configuration
com.top_logic.layout.scripting.check.ZipFileCheck$ZipFileCheckConfig$EntryConfig.tooltip = Description of a single ZIP file entry to check.
com.top_logic.layout.scripting.check.ZipFileCheck.ZipFileCheckConfig.EntryConfig.content-constraints = Content constraints
com.top_logic.layout.scripting.check.ZipFileCheck.ZipFileCheckConfig.EntryConfig.content-constraints.tooltip = The <i>value checks</i> to apply to the given entry.
com.top_logic.layout.scripting.check.ZipFileCheck.ZipFileCheckConfig.EntryConfig.path = Path
com.top_logic.layout.scripting.check.ZipFileCheck.ZipFileCheckConfig.EntryConfig.path.tooltip = The path of the ZIP entry to check.
com.top_logic.layout.scripting.check.ZipFileCheck.ZipFileCheckConfig.entry-constraints = Entry constraints
com.top_logic.layout.scripting.check.ZipFileCheck.ZipFileCheckConfig.entry-constraints.tooltip = The checks for entries.
com.top_logic.layout.scripting.check.ZipFileCheck.ZipFileCheckConfig.forbidden-entries = Forbidden entries
com.top_logic.layout.scripting.check.ZipFileCheck.ZipFileCheckConfig.forbidden-entries.tooltip = Entry names that must not occur in the tested ZIP file.
com.top_logic.layout.scripting.check.ZipFileCheck.tooltip = <i>Value check</i> that inspects the entries of a ZIP file.
com.top_logic.layout.scripting.recorder.DefaultScriptingRecorder = Default scripting recorder
com.top_logic.layout.scripting.recorder.DefaultScriptingRecorder$AttributeReference = Attribute reference
com.top_logic.layout.scripting.recorder.DefaultScriptingRecorder$FieldReference = Field reference
com.top_logic.layout.scripting.recorder.DefaultScriptingRecorder.AttributeReference.attribute-name = Attribute name
com.top_logic.layout.scripting.recorder.DefaultScriptingRecorder.AttributeReference.instance = Instance
com.top_logic.layout.scripting.recorder.DefaultScriptingRecorder.Config.enabled = Enabled
com.top_logic.layout.scripting.recorder.DefaultScriptingRecorder.Config.enabled.tooltip = Getter for <code>"enabled"</code>.
com.top_logic.layout.scripting.recorder.DefaultScriptingRecorder.Config.scripting-group = Scripting group
com.top_logic.layout.scripting.recorder.DefaultScriptingRecorder.Config.scripting-group.tooltip = The name of the <i>group</i> in which a user must be see to use the <i>scripting recorder</i>. <p> May be <code>null</code> in which case the default group is used. </p>
com.top_logic.layout.scripting.recorder.DefaultScriptingRecorder.FieldReference.qualified-name = Qualified name
com.top_logic.layout.scripting.recorder.DefaultScriptingRecorder.tooltip = <i>Scripting recorder</i> that dumps events.
com.top_logic.layout.scripting.recorder.DisabledScriptingRecorder = Disabled scripting recorder
com.top_logic.layout.scripting.recorder.DisabledScriptingRecorder.tooltip = <i>Scripting recorder</i> that ignores all events.
com.top_logic.layout.scripting.recorder.ScriptingRecorder = Scripting recorder
com.top_logic.layout.scripting.recorder.ScriptingRecorder$FollowupActionRecording = Followup action recording
com.top_logic.layout.scripting.recorder.ScriptingRecorder$FollowupActionRecording.tooltip = Defines whether an <i>application action</i> should be recorded, if it is a follow-up action, i.e. not the first in the interaction.
com.top_logic.layout.scripting.recorder.ScriptingRecorder.Config.recordImplementationDetails = Record implementation details
com.top_logic.layout.scripting.recorder.ScriptingRecorder.Config.recordImplementationDetails.tooltip = Whether to record technical details not required for replay.
com.top_logic.layout.scripting.recorder.ScriptingRecorder.Config.recordInternationalization = Record internationalization
com.top_logic.layout.scripting.recorder.ScriptingRecorder.Config.recordInternationalization.tooltip = No longer used, remove configuration setting.
com.top_logic.layout.scripting.recorder.ScriptingRecorder.FollowupActionRecording.RECORD_ALWAYS = Record always
com.top_logic.layout.scripting.recorder.ScriptingRecorder.FollowupActionRecording.RECORD_ALWAYS.tooltip = Always record the <i>application action</i>, even if it is not the first in this interaction.
com.top_logic.layout.scripting.recorder.ScriptingRecorder.FollowupActionRecording.RECORD_ONLY_IF_FIRST_ACTION = Record only if first action
com.top_logic.layout.scripting.recorder.ScriptingRecorder.FollowupActionRecording.RECORD_ONLY_IF_FIRST_ACTION.tooltip = Record the <i>application action</i> only if it is the first in this interaction.
com.top_logic.layout.scripting.recorder.ScriptingRecorder.tooltip = Recorder for user events in an application.
com.top_logic.layout.scripting.recorder.gui.ScriptingGuiConfig = Scripting gui configuration
com.top_logic.layout.scripting.recorder.gui.ScriptingGuiConfig.show-server-script-selector = Show server script selector
com.top_logic.layout.scripting.recorder.gui.ScriptingGuiConfig.show-server-script-selector.tooltip = Whether the user should be able to load scripts from the server.
com.top_logic.layout.scripting.recorder.gui.ScriptingGuiConfig.tooltip = <i>Configuration item</i> for the ScriptingGui. <p> This class is in the project "com.top_logic", even though it is used only in "com.top_logic.layout.scripting.template": It is referenced in the "enable-debug.config.xml" which is in "com.top_logic". And this is the easiest way to avoid that forward reference from "com.top_logic" to code in "com.top_logic.layout.scripting.template". </p>
com.top_logic.layout.scripting.recorder.ref.Base64Value = Base64value
com.top_logic.layout.scripting.recorder.ref.Base64Value.base64data = Base64data
com.top_logic.layout.scripting.recorder.ref.Base64Value.base64data.tooltip = The base 64 encoded binary contents.
com.top_logic.layout.scripting.recorder.ref.Base64Value.tooltip = Base64 encoded <i>data item value</i>.
com.top_logic.layout.scripting.recorder.ref.ChangeSetNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.ChangeSetNaming$Name.tooltip = Name for a <i>change set</i>.
com.top_logic.layout.scripting.recorder.ref.ChangeSetNaming.Name.revision = Revision
com.top_logic.layout.scripting.recorder.ref.ChangeSetNaming.Name.revision.tooltip = The name for the revision of the represented <i>change set</i>.
com.top_logic.layout.scripting.recorder.ref.ConfigValueNaming$ConfigValueName = Configuration value name
com.top_logic.layout.scripting.recorder.ref.ConfigValueNaming$ConfigValueName.tooltip = <i>Model name</i> of a property value of a referenced <i>configuration item</i>.
com.top_logic.layout.scripting.recorder.ref.ConfigValueNaming.ConfigValueName.config-name = Configuration name
com.top_logic.layout.scripting.recorder.ref.ConfigValueNaming.ConfigValueName.config-name.tooltip = Name that evaluates to a <i>configuration item</i>.
com.top_logic.layout.scripting.recorder.ref.ConfigValueNaming.ConfigValueName.property = Property
com.top_logic.layout.scripting.recorder.ref.ConfigValueNaming.ConfigValueName.property.tooltip = The name of the property to access in the <i>configuration item</i> resolved from <i>Configuration name</i>.
com.top_logic.layout.scripting.recorder.ref.ConfigurationItemNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.ConfigurationItemNaming$Name.tooltip = <i>Model name</i> for a <i>configuration item</i>.
com.top_logic.layout.scripting.recorder.ref.ConfigurationItemNaming.Name.item = Item
com.top_logic.layout.scripting.recorder.ref.ConfigurationItemNaming.Name.item.tooltip = The <i>configuration item</i> this is a name for.
com.top_logic.layout.scripting.recorder.ref.ContextDependent = Context dependent
com.top_logic.layout.scripting.recorder.ref.ContextDependent.tooltip = <i>Model names</i> that must be resolved within an additional context.
com.top_logic.layout.scripting.recorder.ref.DataItemValue = Data item value
com.top_logic.layout.scripting.recorder.ref.DataItemValue.content-type = Content type
com.top_logic.layout.scripting.recorder.ref.DataItemValue.content-type.tooltip = The content type of the represented <i>binary data</i>.
com.top_logic.layout.scripting.recorder.ref.DataItemValue.name.tooltip = The file name.
com.top_logic.layout.scripting.recorder.ref.DataItemValue.tooltip = Abstract <i>value reference</i> representing the contents of a <i>binary data</i>.
com.top_logic.layout.scripting.recorder.ref.DownloadValue = Download value
com.top_logic.layout.scripting.recorder.ref.DownloadValue.file-name = File name
com.top_logic.layout.scripting.recorder.ref.DownloadValue.file-name.tooltip = The file name.
com.top_logic.layout.scripting.recorder.ref.DownloadValue.tooltip = Identifier for an application-produced download.
com.top_logic.layout.scripting.recorder.ref.ExternalDataValue = External data value
com.top_logic.layout.scripting.recorder.ref.ExternalDataValue.tooltip = <i>Data item value</i> that is filled from an file in the workspace.
com.top_logic.layout.scripting.recorder.ref.ExternalDataValue.url = URL
com.top_logic.layout.scripting.recorder.ref.ExternalDataValue.url.tooltip = The <i>URL</i> of the contents to take the contents from.
com.top_logic.layout.scripting.recorder.ref.FileManagerDataValue = File manager data value
com.top_logic.layout.scripting.recorder.ref.FileManagerDataValue.name.tooltip = The path to the <i>file</i>. <p> Resolved with the <i>file manager</i>, after the <i>alias manager</i> replaced aliases. </p>
com.top_logic.layout.scripting.recorder.ref.FileManagerDataValue.tooltip = <i>Data item value</i> that uses the <i>file manager</i> to find the requested <i>file</i>.
com.top_logic.layout.scripting.recorder.ref.GenericModelOwnerNaming.GenericModelName.algorithm = Algorithm
com.top_logic.layout.scripting.recorder.ref.GenericModelOwnerNaming.GenericModelName.algorithm-name = Algorithm name
com.top_logic.layout.scripting.recorder.ref.GenericModelOwnerNaming.GenericModelName.algorithm-name.tooltip = ResKey, attached to algorithm of <i>Algorithm</i>. Typically provided by <i>resource key from class</i>, that is using algorithm's full qualified class name for translation.
com.top_logic.layout.scripting.recorder.ref.GenericModelOwnerNaming.GenericModelName.algorithm.tooltip = Algorithm that computes the model from the given <i>Reference</i>
com.top_logic.layout.scripting.recorder.ref.GenericModelOwnerNaming.GenericModelName.reference = Reference
com.top_logic.layout.scripting.recorder.ref.GenericModelOwnerNaming.GenericModelName.reference.tooltip = Reference to the owner which is used as input for the computation.
com.top_logic.layout.scripting.recorder.ref.JavaConstantNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.JavaConstantNaming$Name.tooltip = Configuration for a <i>java constant naming</i>.
com.top_logic.layout.scripting.recorder.ref.JavaConstantNaming.Name.declaring-class = Declaring class
com.top_logic.layout.scripting.recorder.ref.JavaConstantNaming.Name.declaring-class.tooltip = The class in which the constant field is defined.
com.top_logic.layout.scripting.recorder.ref.JavaConstantNaming.Name.field-name = Field name
com.top_logic.layout.scripting.recorder.ref.JavaConstantNaming.Name.field-name.tooltip = The name of the static field to locate.
com.top_logic.layout.scripting.recorder.ref.LastRevisionNamingScheme$Name = Name
com.top_logic.layout.scripting.recorder.ref.LastRevisionNamingScheme$Name.tooltip = <i>Model naming scheme</i> for the last committed revision. <p> Note: The result of resolving this <i>model name</i> changes over time. The results depends on the state of the <i>persistency layer</i> of the system. It is recommended to use this <i>model name</i> in combination with a <i>set global variable action</i>. This allows to refer to the state of the system at the time, the global variable was assigned. The concrete Revision can then be referenced through a <i>global variable reference</i>. </p>
com.top_logic.layout.scripting.recorder.ref.ModelName = Model name
com.top_logic.layout.scripting.recorder.ref.ModelName.tooltip = Base interface for structured model names of <i>named models</i>. <p> <i>Model names</i> are created by <i>model naming schemes</i> and resolved to models by the <i>model resolver</i>. </p>
com.top_logic.layout.scripting.recorder.ref.ModelNamingScheme.Config.priority = Priority
com.top_logic.layout.scripting.recorder.ref.ModelResolver = Model resolver
com.top_logic.layout.scripting.recorder.ref.ModelResolver.Config.priorities = Priorities
com.top_logic.layout.scripting.recorder.ref.ModelResolver.Config.priorities.tooltip = The declared priority levels. <p> The first has the highest priority. </p> <p> These priority levels take precedence over the declaration order priority. </p> <p> This is called "priority level" in the code, to distinguish it from the declaration order priority (<i>naming scheme priority</i> vs <i>naming scheme priority level</i>. But in the xml it's called "priority" for simplicity: There is no other "priority" property, it could be confused with. </p>
com.top_logic.layout.scripting.recorder.ref.ModelResolver.Config.schemes = Schemes
com.top_logic.layout.scripting.recorder.ref.ModelResolver.Config.schemes.tooltip = List of <i>model naming schemes</i> in ascending order of relevance.
com.top_logic.layout.scripting.recorder.ref.ModelResolver.tooltip = Resolver for <i>named models</i> based on their model names.
com.top_logic.layout.scripting.recorder.ref.ObjectAspectNaming.ObjectAspectName.arguments = Arguments
com.top_logic.layout.scripting.recorder.ref.ObjectAspectNaming.ObjectAspectName.arguments.tooltip = Arguments that are needed to get the aspect from <i>Base object</i>.
com.top_logic.layout.scripting.recorder.ref.ObjectAspectNaming.ObjectAspectName.base-object = Base object
com.top_logic.layout.scripting.recorder.ref.ObjectAspectNaming.ObjectAspectName.base-object.tooltip = The name of the base object to get aspect from.
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming$Name.tooltip = <i>Model name</i> for <i>resource</i>.
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming.Name.css-class = Css class
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming.Name.css-class.tooltip = CSS class of the resource.
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming.Name.image = Image
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming.Name.image.tooltip = Image of the resource.
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming.Name.label = Label
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming.Name.label.tooltip = Label of the resource.
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming.Name.link = Link
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming.Name.link.tooltip = Link of the resource.
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming.Name.tooltip = Tooltip
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming.Name.tooltip.tooltip = Tooltip of the resource.
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming.Name.type = Type
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming.Name.type.tooltip = Type of the resource.
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming.Name.user-object = User object
com.top_logic.layout.scripting.recorder.ref.ResourceModelNaming.Name.user-object.tooltip = Name for the user object of the resource.
com.top_logic.layout.scripting.recorder.ref.SingletonNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.SingletonNaming$Name.tooltip = <i>Model name</i> of the <i>singleton naming</i>.
com.top_logic.layout.scripting.recorder.ref.SingletonNaming.Name.singleton-class = Singleton class
com.top_logic.layout.scripting.recorder.ref.SingletonNaming.Name.singleton-class.tooltip = The class of the represented singleton.
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming$Config = Configuration
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming$Config.tooltip = The <i>configuration item</i> for the <i>object tree naming</i>.
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming$TLObjectTreeName = Object tree name
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming$TLObjectTreeName.tooltip = <i>Model name</i> for the <i>object tree naming</i>.
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming$TLObjectTreeNamingTypeConfig = Object tree naming type configuration
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming$TLObjectTreeNamingTypeConfig.tooltip = Defines that a non-standard <i>label provider</i> has to be used for instances of a given <i>business object type</i>. <p> This includes instances of subtypes: They use the configured <i>label provider</i>, too. </p>
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming$TLObjectTreeStep = Object tree step
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming$TLObjectTreeStep.tooltip = One step in the <i>object tree name</i>.
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming.Config.types = Types
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming.Config.types.tooltip = A <i>map</i> of types and which <i>label provider</i> should be used for each of them.
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming.TLObjectTreeName.path = Path
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming.TLObjectTreeName.path.tooltip = The <i>object tree step</i> path to the identified <i>object</i>. <p> The path does not contain the root, as that is referenced separately in <i>Root</i>. </p>
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming.TLObjectTreeName.root = Root
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming.TLObjectTreeName.root.tooltip = The root <i>object</i> from which the <i>Path</i> starts.
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming.TLObjectTreeNamingTypeConfig.label-provider = Label provider
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming.TLObjectTreeNamingTypeConfig.label-provider.tooltip = The <i>label provider</i> that should be used for instances of this <i>business object type</i>.
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming.TLObjectTreeNamingTypeConfig.type = Type
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming.TLObjectTreeNamingTypeConfig.type.tooltip = The qualified name of the <i>business object type</i>.
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming.TLObjectTreeStep.attribute = Attribute
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming.TLObjectTreeStep.attribute.tooltip = The name of the attribute in which the inner <i>object</i> is stored.
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming.TLObjectTreeStep.node = Node
com.top_logic.layout.scripting.recorder.ref.TLObjectTreeNaming.TLObjectTreeStep.node.tooltip = The label of the <i>object</i> stored in the <i>Attribute</i>.
com.top_logic.layout.scripting.recorder.ref.TreeLabelPathNaming$TreeLabelPathName = Tree label path name
com.top_logic.layout.scripting.recorder.ref.TreeLabelPathNaming$TreeLabelPathName.tooltip = <i>Model name</i> for a tree label.
com.top_logic.layout.scripting.recorder.ref.TreeLabelPathNaming.TreeLabelPathName.path = Path
com.top_logic.layout.scripting.recorder.ref.TreeLabelPathNaming.TreeLabelPathName.path.tooltip = A path of labels, used to identify a tree node. <p> Root is not contained in the path and represented by an empty path. </p>
com.top_logic.layout.scripting.recorder.ref.TreeObjectPathNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.TreeObjectPathNaming$Name.tooltip = <i>Model name</i> for a object in a tree by using the path to the root of this tree.
com.top_logic.layout.scripting.recorder.ref.TreeObjectPathNaming.Name.path = Path
com.top_logic.layout.scripting.recorder.ref.TreeObjectPathNaming.Name.path.tooltip = A path of labels, used to identify a tree node. <p> Root is not contained in the path and represented by an empty path. </p>
com.top_logic.layout.scripting.recorder.ref.UniqueDownload = Unique download
com.top_logic.layout.scripting.recorder.ref.UniqueDownload.tooltip = <i>Model name</i> for the "unique download", i.e. there must be no other download before me.
com.top_logic.layout.scripting.recorder.ref.ValueInContextNamingScheme$ValueInContextName = Value in context name
com.top_logic.layout.scripting.recorder.ref.ValueInContextNamingScheme$ValueInContextName.tooltip = <i>Model name</i> for <i>value in context naming scheme</i>.
com.top_logic.layout.scripting.recorder.ref.ValueInContextNamingScheme.ValueInContextName.context-name = Context name
com.top_logic.layout.scripting.recorder.ref.ValueInContextNamingScheme.ValueInContextName.context-name.tooltip = The context in which <i>Local name</i> has to be resolved.
com.top_logic.layout.scripting.recorder.ref.ValueInContextNamingScheme.ValueInContextName.local-name = Local name
com.top_logic.layout.scripting.recorder.ref.ValueInContextNamingScheme.ValueInContextName.local-name.tooltip = A context local value.
com.top_logic.layout.scripting.recorder.ref.ValueNamingScheme$NameBase$NamePart = Name part
com.top_logic.layout.scripting.recorder.ref.ValueNamingScheme$NameBase$NamePart.tooltip = Part of a <i>Name</i> (<i>value naming scheme name base</i>).
com.top_logic.layout.scripting.recorder.ref.ValueNamingScheme.NameBase.NamePart.key = Key
com.top_logic.layout.scripting.recorder.ref.ValueNamingScheme.NameBase.NamePart.key.tooltip = The key for this <i>name part</i>.
com.top_logic.layout.scripting.recorder.ref.ValueNamingScheme.NameBase.NamePart.value = Value
com.top_logic.layout.scripting.recorder.ref.ValueNamingScheme.NameBase.NamePart.value.tooltip = Description of the application value this <i>name part</i> consists of.
com.top_logic.layout.scripting.recorder.ref.ValueNamingScheme.NameBase.name = Name
com.top_logic.layout.scripting.recorder.ref.ValueNamingScheme.NameBase.name.tooltip = The structured name of this reference.
com.top_logic.layout.scripting.recorder.ref.ValueNamingScheme.NameBase.provider-name = Provider name
com.top_logic.layout.scripting.recorder.ref.ValueNamingScheme.NameBase.provider-name.tooltip = <i>Value naming scheme</i> name that handles the <i>Name</i>.
com.top_logic.layout.scripting.recorder.ref.ValueNamingSchemeRegistry = Value naming scheme registry
com.top_logic.layout.scripting.recorder.ref.ValueNamingSchemeRegistry$Scheme = Scheme
com.top_logic.layout.scripting.recorder.ref.ValueNamingSchemeRegistry$Scheme.tooltip = Configuration of a <i>value naming scheme</i> for a type.
com.top_logic.layout.scripting.recorder.ref.ValueNamingSchemeRegistry.Config.schemes = Schemes
com.top_logic.layout.scripting.recorder.ref.ValueNamingSchemeRegistry.Config.schemes.tooltip = Getter for the <i>schemes</i>.
com.top_logic.layout.scripting.recorder.ref.ValueNamingSchemeRegistry.Scheme.provider = Provider
com.top_logic.layout.scripting.recorder.ref.ValueNamingSchemeRegistry.Scheme.provider.tooltip = Getter for <code>"provider"</code>.
com.top_logic.layout.scripting.recorder.ref.ValueNamingSchemeRegistry.Scheme.type = Type
com.top_logic.layout.scripting.recorder.ref.ValueNamingSchemeRegistry.Scheme.type.tooltip = Getter for <code>"type"</code>.
com.top_logic.layout.scripting.recorder.ref.ValueNamingSchemeRegistry.tooltip = Registry of configured <i>value naming schemes</i>.
com.top_logic.layout.scripting.recorder.ref.ValueRefNaming$ValueRefName = Value reference name
com.top_logic.layout.scripting.recorder.ref.ValueRefNaming$ValueRefName.tooltip = <i>Model name</i> holding a <i>value reference</i>.
com.top_logic.layout.scripting.recorder.ref.ValueRefNaming.ValueRefName.ref = Reference
com.top_logic.layout.scripting.recorder.ref.ValueRefNaming.ValueRefName.ref.tooltip = The <i>value reference</i>, this <i>model name</i> is a name for.
com.top_logic.layout.scripting.recorder.ref.WrapperInRevisionNaming$WrapperInRevisionName = Object in revision name
com.top_logic.layout.scripting.recorder.ref.WrapperInRevisionNaming$WrapperInRevisionName.tooltip = The <i>model name</i> for the <i>object in revision naming</i>.
com.top_logic.layout.scripting.recorder.ref.WrapperInRevisionNaming.WrapperInRevisionName.revision = Revision
com.top_logic.layout.scripting.recorder.ref.WrapperInRevisionNaming.WrapperInRevisionName.revision.tooltip = The <i>value reference</i> for the <i>revision</i>.
com.top_logic.layout.scripting.recorder.ref.WrapperInRevisionNaming.WrapperInRevisionName.wrapper = Object
com.top_logic.layout.scripting.recorder.ref.WrapperInRevisionNaming.WrapperInRevisionName.wrapper.tooltip = The <i>value reference</i> for the <i>object</i>.
com.top_logic.layout.scripting.recorder.ref.calc.NotRef = Not reference
com.top_logic.layout.scripting.recorder.ref.calc.NotRef.tooltip = A <i>value reference</i> that negates its inner boolean value.
com.top_logic.layout.scripting.recorder.ref.calc.NotRef.value = Value
com.top_logic.layout.scripting.recorder.ref.calc.NotRef.value.tooltip = The <i>boolean</i> value to negate.
com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef = Attribute field reference
com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef.attribute-ref = Attribute reference
com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef.attribute-ref.tooltip = Reference to the attribute itself.
com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef.self-ref = Self reference
com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef.self-ref.tooltip = Reference to the base object, may be <code>null</code>, if the attribute field is used for object creation.
com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef.tooltip = <i>Field reference</i> that identifies a <i>form field</i> that contains an attribute value.
com.top_logic.layout.scripting.recorder.ref.field.BusinessObjectFieldRef = Business object field reference
com.top_logic.layout.scripting.recorder.ref.field.BusinessObjectFieldRef.business-object = Business object
com.top_logic.layout.scripting.recorder.ref.field.BusinessObjectFieldRef.tooltip = <i>Field reference</i> that uses the business object behind the field as its name.
com.top_logic.layout.scripting.recorder.ref.field.FieldRef = Field reference
com.top_logic.layout.scripting.recorder.ref.field.FieldRef.field-label-comment = Field label comment
com.top_logic.layout.scripting.recorder.ref.field.FieldRef.field-label-comment.tooltip = E.g. the label of the referenced form field. <p> This property is optional and only for debugging purpose. The value of this property must not be used for the action implementation. </p>
com.top_logic.layout.scripting.recorder.ref.field.FieldRef.tooltip = Local reference to a <i>form field</i> within a <i>form container</i>.
com.top_logic.layout.scripting.recorder.ref.field.LabeledFieldRef = Labeled field reference
com.top_logic.layout.scripting.recorder.ref.field.LabeledFieldRef.label = Label
com.top_logic.layout.scripting.recorder.ref.field.LabeledFieldRef.label.tooltip = The label of the referenced field.
com.top_logic.layout.scripting.recorder.ref.field.LabeledFieldRef.tooltip = <i>Field reference</i> that identifies a <i>form field</i> by its label.
com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef = Named field reference
com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef.field-name = Field name
com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef.field-name.tooltip = The name of the referenced field within its parent container.
com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef.tooltip = A reference to a <i>form field</i> by the field's local name.
com.top_logic.layout.scripting.recorder.ref.field.TableFieldRef = Table field reference
com.top_logic.layout.scripting.recorder.ref.field.TableFieldRef.column-name = Column name
com.top_logic.layout.scripting.recorder.ref.field.TableFieldRef.column-name.tooltip = The name of the column to access.
com.top_logic.layout.scripting.recorder.ref.field.TableFieldRef.row-object = Row object
com.top_logic.layout.scripting.recorder.ref.field.TableFieldRef.row-object.tooltip = The row object of the row to access.
com.top_logic.layout.scripting.recorder.ref.field.TableFieldRef.tooltip = Reference to a <i>form member</i> in a table cell. <p> For identification, the row object and the column name of the table cell is used. </p>
com.top_logic.layout.scripting.recorder.ref.field.TreeFieldRef = Tree field reference
com.top_logic.layout.scripting.recorder.ref.field.TreeFieldRef.path = Path
com.top_logic.layout.scripting.recorder.ref.field.TreeFieldRef.tooltip = A reference to a <i>form field</i> in an Tree. The field is identified by the path (of parents) to it. Root is not contained in the path and represented by an empty path.
com.top_logic.layout.scripting.recorder.ref.misc.AttributeRef = Attribute reference
com.top_logic.layout.scripting.recorder.ref.misc.AttributeRef.attribute-name = Attribute name
com.top_logic.layout.scripting.recorder.ref.misc.AttributeRef.attribute-name.tooltip = The name of the referenced attribute.
com.top_logic.layout.scripting.recorder.ref.misc.AttributeRef.tooltip = Reference to an object attribute.
com.top_logic.layout.scripting.recorder.ref.misc.AttributeRef.type = Type
com.top_logic.layout.scripting.recorder.ref.misc.AttributeValue = Attribute value
com.top_logic.layout.scripting.recorder.ref.misc.AttributeValue.tooltip = An attribute value assignment.
com.top_logic.layout.scripting.recorder.ref.misc.AttributeValue.value = Value
com.top_logic.layout.scripting.recorder.ref.misc.AttributeValue.value.tooltip = The value that is assigned to the attribute.
com.top_logic.layout.scripting.recorder.ref.misc.FieldValue = Field value
com.top_logic.layout.scripting.recorder.ref.misc.FieldValue.field-path = Field path
com.top_logic.layout.scripting.recorder.ref.misc.FieldValue.field-path.tooltip = Global reference to the target <i>form field</i> from the <i>form context</i> of the context.
com.top_logic.layout.scripting.recorder.ref.misc.FieldValue.tooltip = Description of <i>form field</i> and associated value. <p> A <i>field value</i> serves as input to actions that access (set/check/modify) <i>form field</i> s. </p>
com.top_logic.layout.scripting.recorder.ref.misc.FieldValue.value = Value
com.top_logic.layout.scripting.recorder.ref.misc.FieldValue.value.tooltip = Description of some value. <p> The context action defines the semantics and usage of the value. </p>
com.top_logic.layout.scripting.recorder.ref.misc.SelectionRef = Selection reference
com.top_logic.layout.scripting.recorder.ref.misc.SelectionRef.selectee = Selectee
com.top_logic.layout.scripting.recorder.ref.misc.SelectionRef.selectee.tooltip = Returns a <i>value reference</i> to the Object being selected or unselected.
com.top_logic.layout.scripting.recorder.ref.misc.SelectionRef.selection-state = Selection state
com.top_logic.layout.scripting.recorder.ref.misc.SelectionRef.selection-state.tooltip = Returns whether the selectee is meant to be selected (true) or unselected (false).
com.top_logic.layout.scripting.recorder.ref.misc.SelectionRef.tooltip = Represents an Object being selected or unselected and it's requested selection state.
com.top_logic.layout.scripting.recorder.ref.ui.FuzzyComponentNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.ui.FuzzyComponentNaming$Name.tooltip = The <i>model name</i> used by the <i>fuzzy component naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.FuzzyComponentNaming.Name.name = Name
com.top_logic.layout.scripting.recorder.ref.ui.FuzzyComponentNaming.Name.name.tooltip = The technical name of the searched component, if it is not a direct child of a <i>tab component</i>.
com.top_logic.layout.scripting.recorder.ref.ui.FuzzyComponentNaming.Name.tab-path = Tab path
com.top_logic.layout.scripting.recorder.ref.ui.FuzzyComponentNaming.Name.tab-path.tooltip = The path to a tab as "Breadcrumb String".
com.top_logic.layout.scripting.recorder.ref.ui.button.ButtonAspectNaming.ButtonAspectName.button = Button
com.top_logic.layout.scripting.recorder.ref.ui.button.ButtonAspectNaming.ButtonAspectName.button.tooltip = The <i>command model</i> of the button.
com.top_logic.layout.scripting.recorder.ref.ui.button.ButtonLabelNaming$ButtonLabelName = Button label name
com.top_logic.layout.scripting.recorder.ref.ui.button.ButtonLabelNaming$ButtonLabelName.tooltip = The <i>model name</i> of the <i>button label naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.button.ButtonTooltipCaptionNaming$ButtonTooltipCaptionName = Button tooltip caption name
com.top_logic.layout.scripting.recorder.ref.ui.button.ButtonTooltipCaptionNaming$ButtonTooltipCaptionName.tooltip = The <i>model name</i> of the <i>button tooltip caption naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.button.ButtonTooltipElseLabelNaming$ButtonTooltipElseLabelName = Button tooltip else label name
com.top_logic.layout.scripting.recorder.ref.ui.button.ButtonTooltipElseLabelNaming$ButtonTooltipElseLabelName.tooltip = The <i>model name</i> of the <i>button tooltip else label naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.button.ButtonTooltipNaming$ButtonTooltipName = Button tooltip name
com.top_logic.layout.scripting.recorder.ref.ui.button.ButtonTooltipNaming$ButtonTooltipName.tooltip = The <i>model name</i> of the <i>button tooltip naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.button.ButtonVisibilityNaming$ButtonVisibilityName = Button visibility name
com.top_logic.layout.scripting.recorder.ref.ui.button.ButtonVisibilityNaming$ButtonVisibilityName.tooltip = The <i>model name</i> of the <i>button visibility naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.button.LabeledButtonNaming$LabeledButtonName = Labeled button name
com.top_logic.layout.scripting.recorder.ref.ui.button.LabeledButtonNaming$LabeledButtonName.tooltip = <i>Model name</i> of the <i>labeled button naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.button.LabeledButtonNaming.LabeledButtonName.business-object = Business object
com.top_logic.layout.scripting.recorder.ref.ui.button.LabeledButtonNaming.LabeledButtonName.business-object.tooltip = An optional <i>model name</i> to identify the button. <p> When the button can not be identified unique by its label, <i>Business object</i> may be set to attach additional informations to identify the button. </p>
com.top_logic.layout.scripting.recorder.ref.ui.button.LabeledButtonNaming.LabeledButtonName.component = Component
com.top_logic.layout.scripting.recorder.ref.ui.button.LabeledButtonNaming.LabeledButtonName.component.tooltip = The <i>component</i> where the button is rendered. <p> If component is <code>null</code>, it is interpreted as the top level component of the current browser window, i.e. either the <i>main layout</i> or a <i>window component</i>. </p>
com.top_logic.layout.scripting.recorder.ref.ui.button.LabeledButtonNaming.LabeledButtonName.label = Label
com.top_logic.layout.scripting.recorder.ref.ui.button.LabeledButtonNaming.LabeledButtonName.label.tooltip = The label of the button.
com.top_logic.layout.scripting.recorder.ref.ui.form.BusinessObjectFieldMatcher = Business object field matcher
com.top_logic.layout.scripting.recorder.ref.ui.form.BusinessObjectFieldMatcher.Config.business-object = Business object
com.top_logic.layout.scripting.recorder.ref.ui.form.BusinessObjectFieldMatcher.Config.business-object.tooltip = Description of the business object linked to a matching <i>form member</i>.
com.top_logic.layout.scripting.recorder.ref.ui.form.BusinessObjectFieldMatcher.tooltip = <i>Field matcher</i> that identifies <i>form members</i> based on their annotated business object.
com.top_logic.layout.scripting.recorder.ref.ui.form.DefaultFormMemberNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.ui.form.DefaultFormMemberNaming$Name.tooltip = Description of a <i>form member</i> interpreted by <i>default form member naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.form.DefaultFormMemberNaming.Name.form = Form
com.top_logic.layout.scripting.recorder.ref.ui.form.DefaultFormMemberNaming.Name.form.tooltip = Description of the <i>form handler</i> searched for the <i>form member</i>.
com.top_logic.layout.scripting.recorder.ref.ui.form.DefaultFormMemberNaming.Name.path = Path
com.top_logic.layout.scripting.recorder.ref.ui.form.DefaultFormMemberNaming.Name.path.tooltip = Path of <i>field matchers</i> navigating to the identified <i>form member</i>. <p> The first <i>field matcher</i> in the path is applied to all members of the form's <i>form context</i>. Subsequent matchers are applied to <i>form members</i> found in previous steps. </p>
com.top_logic.layout.scripting.recorder.ref.ui.form.FieldAnalyzers = Field analyzers
com.top_logic.layout.scripting.recorder.ref.ui.form.FieldAnalyzers.analyzers = Analyzers
com.top_logic.layout.scripting.recorder.ref.ui.form.FieldAnalyzers.analyzers.tooltip = List of <i>field analyzers</i> to use for identifying fields during script recording. <p> Note: The list is ordered in reverse order of priority so that custom modules are able to easily add high-priority <i>field analyzers</i>. </p>
com.top_logic.layout.scripting.recorder.ref.ui.form.FieldAnalyzers.tooltip = Global configuration that lists all available <i>field analyzers</i> in the system.
com.top_logic.layout.scripting.recorder.ref.ui.form.FieldLabelMatcher = Field label matcher
com.top_logic.layout.scripting.recorder.ref.ui.form.FieldLabelMatcher.Config.label = Label
com.top_logic.layout.scripting.recorder.ref.ui.form.FieldLabelMatcher.Config.label.tooltip = The expected label.
com.top_logic.layout.scripting.recorder.ref.ui.form.FieldLabelMatcher.tooltip = <i>Filter</i> for <i>form member</i> base on its label.
com.top_logic.layout.scripting.recorder.ref.ui.form.FieldNameMatcher = Field name matcher
com.top_logic.layout.scripting.recorder.ref.ui.form.FieldNameMatcher.Config.name = Name
com.top_logic.layout.scripting.recorder.ref.ui.form.FieldNameMatcher.Config.name.tooltip = The expected technical name.
com.top_logic.layout.scripting.recorder.ref.ui.form.FieldNameMatcher.tooltip = <i>Filter</i> for <i>form member</i> base on its technical name.
com.top_logic.layout.scripting.recorder.ref.ui.form.FormContextMatcher = Form context matcher
com.top_logic.layout.scripting.recorder.ref.ui.form.FormContextMatcher.tooltip = <i>Filter</i> for <i>form members</i> matching the top-level member.
com.top_logic.layout.scripting.recorder.ref.ui.form.FormFieldMandatoryNaming$FormFieldMandatoryName = Form field mandatory name
com.top_logic.layout.scripting.recorder.ref.ui.form.FormFieldMandatoryNaming$FormFieldMandatoryName.tooltip = The <i>model name</i> of the <i>form field mandatory naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.form.FormMemberAspectNaming.FormMemberAspectName.form-member = Form member
com.top_logic.layout.scripting.recorder.ref.ui.form.FormMemberAspectNaming.FormMemberAspectName.form-member.tooltip = The <i>form member</i> this is about.
com.top_logic.layout.scripting.recorder.ref.ui.form.FormMemberTooltipCaptionNaming$FormMemberTooltipCaptionName = Form member tooltip caption name
com.top_logic.layout.scripting.recorder.ref.ui.form.FormMemberTooltipCaptionNaming$FormMemberTooltipCaptionName.tooltip = The <i>model name</i> of the <i>form member tooltip caption naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.form.FormMemberTooltipNaming$FormMemberTooltipName = Form member tooltip name
com.top_logic.layout.scripting.recorder.ref.ui.form.FormMemberTooltipNaming$FormMemberTooltipName.tooltip = The <i>model name</i> of the <i>form member tooltip naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.form.GlobalFormMemberNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.ui.form.GlobalFormMemberNaming$Name.tooltip = <i>Model name</i> created by <i>fuzzy form member naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.form.GlobalFormMemberNaming.Name.component = Component
com.top_logic.layout.scripting.recorder.ref.ui.form.GlobalFormMemberNaming.Name.component.tooltip = The top-level scope to search in.
com.top_logic.layout.scripting.recorder.ref.ui.form.GlobalFormMemberNaming.Name.matchers = Matchers
com.top_logic.layout.scripting.recorder.ref.ui.form.GlobalFormMemberNaming.Name.matchers.tooltip = Path of matchers that must accept the field and its containers. <p> The first <i>field matcher</i> is applied to the displayed field. The second to its container and so on. </p>
com.top_logic.layout.scripting.recorder.ref.ui.form.ListFieldIndexNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.ui.form.ListFieldIndexNaming$Name.tooltip = <i>Model name</i> pointing to a <i>select field</i> option by its label.
com.top_logic.layout.scripting.recorder.ref.ui.form.ListFieldIndexNaming.Name.index = Index
com.top_logic.layout.scripting.recorder.ref.ui.form.ListFieldIndexNaming.Name.index.tooltip = The option label.
com.top_logic.layout.scripting.recorder.ref.ui.form.OptionByLabelNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.ui.form.OptionByLabelNaming$Name.tooltip = <i>Model name</i> pointing to a <i>select field</i> option by its label.
com.top_logic.layout.scripting.recorder.ref.ui.form.OptionByLabelNaming.Name.label = Label
com.top_logic.layout.scripting.recorder.ref.ui.form.OptionByLabelNaming.Name.label.tooltip = The option label.
com.top_logic.layout.scripting.recorder.ref.ui.form.SelectFieldOptionsNaming$SelectFieldOptionsName = Options of {form-member}
com.top_logic.layout.scripting.recorder.ref.ui.form.SelectFieldOptionsNaming$SelectFieldOptionsName.tooltip = The <i>model name</i> of the <i>select field options naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.form.SelectFieldOptionsNaming.SelectFieldOptionsName.include-selection = Include selection
com.top_logic.layout.scripting.recorder.ref.ui.form.SelectFieldOptionsNaming.SelectFieldOptionsName.include-selection.tooltip = Whether the selected elements which are not part of the options are included in the options.
com.top_logic.layout.scripting.recorder.ref.ui.form.TreeFieldMatcher = Tree field matcher
com.top_logic.layout.scripting.recorder.ref.ui.form.TreeFieldMatcher.Config.path = Path
com.top_logic.layout.scripting.recorder.ref.ui.form.TreeFieldMatcher.Config.path.tooltip = The path from root to a node in the tree. <p> The path does not contain the root node. </p>
com.top_logic.layout.scripting.recorder.ref.ui.form.TreeFieldMatcher.tooltip = <i>Field matcher</i> to identify form groups within <i>form tree</i>.
com.top_logic.layout.scripting.recorder.ref.ui.table.LabeledTableRowNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.ui.table.LabeledTableRowNaming$Name.tooltip = <i>Model name</i> created by a <i>labeled table row naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.table.LabeledTableRowNaming.Name.name = Name
com.top_logic.layout.scripting.recorder.ref.ui.table.LabeledTableRowNaming.Name.name.tooltip = The label of the row in its table context.
com.top_logic.layout.scripting.recorder.ref.ui.table.TableAspectName = Table aspect name
com.top_logic.layout.scripting.recorder.ref.ui.table.TableAspectName.table = Table
com.top_logic.layout.scripting.recorder.ref.ui.table.TableAspectName.table.tooltip = Reference to the table.
com.top_logic.layout.scripting.recorder.ref.ui.table.TableAspectName.tooltip = Super interface for things working with tables.
com.top_logic.layout.scripting.recorder.ref.ui.table.TableColumnFilterabilityNaming$TableColumnFilterabilityName = Table column filterability name
com.top_logic.layout.scripting.recorder.ref.ui.table.TableColumnFilterabilityNaming$TableColumnFilterabilityName.tooltip = The <i>model name</i> of the <i>table column filterability naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.table.TableColumnSortabilityNaming$TableColumnSortabilityName = Table column sortability name
com.top_logic.layout.scripting.recorder.ref.ui.table.TableColumnSortabilityNaming$TableColumnSortabilityName.tooltip = The <i>model name</i> of the <i>table column sortability naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.table.TableColumnsNaming$TableColumnsName = Table columns name
com.top_logic.layout.scripting.recorder.ref.ui.table.TableColumnsNaming$TableColumnsName.tooltip = The <i>model name</i> of the <i>table columns naming</i>.
com.top_logic.layout.scripting.recorder.ref.ui.table.TableColumnsNaming.TableColumnsName.all-columns = All columns
com.top_logic.layout.scripting.recorder.ref.ui.table.TableColumnsNaming.TableColumnsName.all-columns.tooltip = Whether the name represents all columns or just the displayed columns.
com.top_logic.layout.scripting.recorder.ref.value.AllTableRows = All table rows
com.top_logic.layout.scripting.recorder.ref.value.AllTableRows.tooltip = <i>Table aspect</i> that resolves to the number of rows in a <i>table data</i> irrespective of active filters.
com.top_logic.layout.scripting.recorder.ref.value.AspectNaming.Name.model = Model
com.top_logic.layout.scripting.recorder.ref.value.AspectNaming.Name.model.tooltip = The referenced base model for which some aspect is extracted.
com.top_logic.layout.scripting.recorder.ref.value.BooleanNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.BooleanNaming$Name.tooltip = <i>Model name</i> of <i>boolean naming</i>.
com.top_logic.layout.scripting.recorder.ref.value.BooleanNaming.Name.value = Value
com.top_logic.layout.scripting.recorder.ref.value.BooleanNaming.Name.value.tooltip = The literal value.
com.top_logic.layout.scripting.recorder.ref.value.BooleanValue = Boolean value
com.top_logic.layout.scripting.recorder.ref.value.BooleanValue.boolean = Boolean
com.top_logic.layout.scripting.recorder.ref.value.BooleanValue.tooltip = A boolean value.
com.top_logic.layout.scripting.recorder.ref.value.BranchName = Branch name
com.top_logic.layout.scripting.recorder.ref.value.BranchName.branch-id = Branch ID
com.top_logic.layout.scripting.recorder.ref.value.BranchName.branch-id.tooltip = The ID of the referenced <i>branch</i> object.
com.top_logic.layout.scripting.recorder.ref.value.BranchName.tooltip = Reference to <i>branch</i> objects.
com.top_logic.layout.scripting.recorder.ref.value.CellChangeInfo = Cell change info
com.top_logic.layout.scripting.recorder.ref.value.CellChangeInfo.tooltip = <i>Row table value</i> for tables with <i>compare info</i> as cell object to retrieve the row's change info.
com.top_logic.layout.scripting.recorder.ref.value.CellCompareValue = Cell compare value
com.top_logic.layout.scripting.recorder.ref.value.CellCompareValue.tooltip = <i>Row table value</i> for tables with <i>compare info</i> as cell object to retrieve the comparison object.
com.top_logic.layout.scripting.recorder.ref.value.ClassNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.ClassNaming$Name.tooltip = <i>Model name</i> of <i>class naming</i>.
com.top_logic.layout.scripting.recorder.ref.value.ClassNaming.Name.value = Value
com.top_logic.layout.scripting.recorder.ref.value.ClassNaming.Name.value.tooltip = The literal value.
com.top_logic.layout.scripting.recorder.ref.value.ComponentNameNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.ComponentNameNaming$Name.tooltip = <i>Model name</i> of <i>component name</i>.
com.top_logic.layout.scripting.recorder.ref.value.ComponentNameNaming.Name.value = Value
com.top_logic.layout.scripting.recorder.ref.value.ComponentNameNaming.Name.value.tooltip = The literal value.
com.top_logic.layout.scripting.recorder.ref.value.DateNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.DateNaming$Name.tooltip = <i>Model name</i> of <i>date naming</i>.
com.top_logic.layout.scripting.recorder.ref.value.DateNaming.Name.format = Format
com.top_logic.layout.scripting.recorder.ref.value.DateNaming.Name.format.tooltip = The <i>format</i> for parsing the <i>date</i> specified in <i>Value</i>
com.top_logic.layout.scripting.recorder.ref.value.DateNaming.Name.value = Value
com.top_logic.layout.scripting.recorder.ref.value.DateNaming.Name.value.tooltip = The literal value.
com.top_logic.layout.scripting.recorder.ref.value.DateValue = Date value
com.top_logic.layout.scripting.recorder.ref.value.DateValue.date = Date
com.top_logic.layout.scripting.recorder.ref.value.DateValue.tooltip = A <i>date</i> value.
com.top_logic.layout.scripting.recorder.ref.value.DisplayedTableRowNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.DisplayedTableRowNaming$Name.tooltip = <i>Model name</i> created by <i>displayed table row naming</i>.
com.top_logic.layout.scripting.recorder.ref.value.DisplayedTableRowNaming.Name.displayed-row-index = Displayed row index
com.top_logic.layout.scripting.recorder.ref.value.DisplayedTableRowNaming.Name.displayed-row-index.tooltip = The row index.
com.top_logic.layout.scripting.recorder.ref.value.DisplayedTableRows = Displayed table rows
com.top_logic.layout.scripting.recorder.ref.value.DisplayedTableRows.tooltip = <i>Table aspect</i> that resolves to the number of actually displayed rows in a <i>table data</i> (after filters have been applied).
com.top_logic.layout.scripting.recorder.ref.value.DoubleNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.DoubleNaming$Name.tooltip = <i>Model name</i> of <i>double naming</i>.
com.top_logic.layout.scripting.recorder.ref.value.DoubleNaming.Name.value = Value
com.top_logic.layout.scripting.recorder.ref.value.DoubleNaming.Name.value.tooltip = The literal value.
com.top_logic.layout.scripting.recorder.ref.value.DoubleValue = Double value
com.top_logic.layout.scripting.recorder.ref.value.DoubleValue.double = Double
com.top_logic.layout.scripting.recorder.ref.value.DoubleValue.tooltip = A Double value.
com.top_logic.layout.scripting.recorder.ref.value.EnumNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.EnumNaming$Name.tooltip = <i>Model name</i> of <i>enum naming</i>.
com.top_logic.layout.scripting.recorder.ref.value.EnumNaming.Name.value = Value
com.top_logic.layout.scripting.recorder.ref.value.EnumNaming.Name.value.tooltip = The literal value.
com.top_logic.layout.scripting.recorder.ref.value.EnumValue = Enum value
com.top_logic.layout.scripting.recorder.ref.value.EnumValue.enum = Enum
com.top_logic.layout.scripting.recorder.ref.value.EnumValue.enum.tooltip = The reference enum constant.
com.top_logic.layout.scripting.recorder.ref.value.EnumValue.tooltip = A generic <i>enum</i> value.
com.top_logic.layout.scripting.recorder.ref.value.FieldAspect.field = Field
com.top_logic.layout.scripting.recorder.ref.value.FieldAspect.field.tooltip = Field to access.
com.top_logic.layout.scripting.recorder.ref.value.FieldChangeInfo = Field change info
com.top_logic.layout.scripting.recorder.ref.value.FieldChangeInfo.tooltip = <i>Field aspect</i> for <i>form fields</i> that have a <i>compare info</i> evaluating to the field's change info.
com.top_logic.layout.scripting.recorder.ref.value.FieldCompareValue = Field compare value
com.top_logic.layout.scripting.recorder.ref.value.FieldCompareValue.tooltip = <i>Field aspect</i> for form fields that have a <i>compare info</i> to retrieve the comparison value.
com.top_logic.layout.scripting.recorder.ref.value.FieldValueAccess = Field value access
com.top_logic.layout.scripting.recorder.ref.value.FieldValueAccess.tooltip = <i>Field aspect</i> resolving to the referened field's value.
com.top_logic.layout.scripting.recorder.ref.value.FloatNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.FloatNaming$Name.tooltip = <i>Model name</i> of <i>float naming</i>.
com.top_logic.layout.scripting.recorder.ref.value.FloatNaming.Name.value = Value
com.top_logic.layout.scripting.recorder.ref.value.FloatNaming.Name.value.tooltip = The literal value.
com.top_logic.layout.scripting.recorder.ref.value.FloatValue = Float value
com.top_logic.layout.scripting.recorder.ref.value.FloatValue.float = Float
com.top_logic.layout.scripting.recorder.ref.value.FloatValue.tooltip = A float value.
com.top_logic.layout.scripting.recorder.ref.value.IndexedTableValue = Indexed table value
com.top_logic.layout.scripting.recorder.ref.value.IndexedTableValue.row-index = Row index
com.top_logic.layout.scripting.recorder.ref.value.IndexedTableValue.row-index.tooltip = The index of the accessed row.
com.top_logic.layout.scripting.recorder.ref.value.IndexedTableValue.tooltip = <i>Table value</i> in a general <i>table model</i>.
com.top_logic.layout.scripting.recorder.ref.value.IntNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.IntNaming$Name.tooltip = <i>Model name</i> of <i>int naming</i>.
com.top_logic.layout.scripting.recorder.ref.value.IntNaming.Name.value = Value
com.top_logic.layout.scripting.recorder.ref.value.IntNaming.Name.value.tooltip = The literal value.
com.top_logic.layout.scripting.recorder.ref.value.IntValue = Int value
com.top_logic.layout.scripting.recorder.ref.value.IntValue.int = Int
com.top_logic.layout.scripting.recorder.ref.value.IntValue.tooltip = An int value.
com.top_logic.layout.scripting.recorder.ref.value.ListNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.ListNaming$Name.tooltip = <i>Model name</i> of <i>list naming</i>.
com.top_logic.layout.scripting.recorder.ref.value.ListNaming.Name.values = Values
com.top_logic.layout.scripting.recorder.ref.value.ListNaming.Name.values.tooltip = The literal value.
com.top_logic.layout.scripting.recorder.ref.value.ListValue = List value
com.top_logic.layout.scripting.recorder.ref.value.ListValue.list = List
com.top_logic.layout.scripting.recorder.ref.value.ListValue.tooltip = A <i>list</i> value.
com.top_logic.layout.scripting.recorder.ref.value.LongNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.LongNaming$Name.tooltip = <i>Model name</i> of <i>long naming</i>.
com.top_logic.layout.scripting.recorder.ref.value.LongNaming.Name.value = Value
com.top_logic.layout.scripting.recorder.ref.value.LongNaming.Name.value.tooltip = The literal value.
com.top_logic.layout.scripting.recorder.ref.value.LongValue = Long value
com.top_logic.layout.scripting.recorder.ref.value.LongValue.long = Long
com.top_logic.layout.scripting.recorder.ref.value.LongValue.tooltip = A long value.
com.top_logic.layout.scripting.recorder.ref.value.MapNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.MapNaming$Name$EntryName = Entry name
com.top_logic.layout.scripting.recorder.ref.value.MapNaming$Name$EntryName.tooltip = Description of a single <i>map</i> enry.
com.top_logic.layout.scripting.recorder.ref.value.MapNaming$Name.tooltip = <i>Model name</i> of <i>map naming</i>.
com.top_logic.layout.scripting.recorder.ref.value.MapNaming.Name.EntryName.key = Key
com.top_logic.layout.scripting.recorder.ref.value.MapNaming.Name.EntryName.key.tooltip = Description of the map entry's key.
com.top_logic.layout.scripting.recorder.ref.value.MapNaming.Name.EntryName.value = Value
com.top_logic.layout.scripting.recorder.ref.value.MapNaming.Name.EntryName.value.tooltip = Description of the map entry's value.
com.top_logic.layout.scripting.recorder.ref.value.MapNaming.Name.values = Values
com.top_logic.layout.scripting.recorder.ref.value.MapNaming.Name.values.tooltip = The literal value.
com.top_logic.layout.scripting.recorder.ref.value.MapValue = Map value
com.top_logic.layout.scripting.recorder.ref.value.MapValue$MapEntryValue = Map entry value
com.top_logic.layout.scripting.recorder.ref.value.MapValue$MapEntryValue.tooltip = A <i>entry</i> value.
com.top_logic.layout.scripting.recorder.ref.value.MapValue.MapEntryValue.key = Key
com.top_logic.layout.scripting.recorder.ref.value.MapValue.MapEntryValue.key.tooltip = Key of the entry.
com.top_logic.layout.scripting.recorder.ref.value.MapValue.MapEntryValue.value = Value
com.top_logic.layout.scripting.recorder.ref.value.MapValue.MapEntryValue.value.tooltip = Value of the entry.
com.top_logic.layout.scripting.recorder.ref.value.MapValue.entries = Entries
com.top_logic.layout.scripting.recorder.ref.value.MapValue.entries.tooltip = The entries of the map.
com.top_logic.layout.scripting.recorder.ref.value.MapValue.tooltip = A <i>map</i> value.
com.top_logic.layout.scripting.recorder.ref.value.NamedValueRef = Named value reference
com.top_logic.layout.scripting.recorder.ref.value.NamedValueRef.tooltip = <i>Value reference</i> for a value which has a name.
com.top_logic.layout.scripting.recorder.ref.value.NullValue = Null value
com.top_logic.layout.scripting.recorder.ref.value.NullValue.tooltip = Represents <code>null</code>.
com.top_logic.layout.scripting.recorder.ref.value.NumberValue = Number value
com.top_logic.layout.scripting.recorder.ref.value.NumberValue.tooltip = A <i>number</i> value.
com.top_logic.layout.scripting.recorder.ref.value.ResKeyNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.ResKeyNaming$Name.tooltip = Script value representing a custom <i>resource key</i> value.
com.top_logic.layout.scripting.recorder.ref.value.ResKeyNaming.Name.key = Key
com.top_logic.layout.scripting.recorder.ref.value.ResKeyNaming.Name.key.tooltip = The key of the resource.
com.top_logic.layout.scripting.recorder.ref.value.ResKeyNaming.Name.translations = Translations
com.top_logic.layout.scripting.recorder.ref.value.ResKeyNaming.Name.translations.tooltip = The translations of a resource key.
com.top_logic.layout.scripting.recorder.ref.value.RevisionName = Revision name
com.top_logic.layout.scripting.recorder.ref.value.RevisionName.commit-number = Commit number
com.top_logic.layout.scripting.recorder.ref.value.RevisionName.commit-number.tooltip = The commit number of the referenced <i>revision</i>. <p> This is either the commit number of the revision for stable revisions, or <code>null</code> for the current revision. </p> <p> Note: The value for the current revision is not <code>9223372036854775807</code> for simplicity. When this <i>revision name</i> is used in XML it is easier to omit the commit number than typing <code>9223372036854775807</code>. </p>
com.top_logic.layout.scripting.recorder.ref.value.RevisionName.tooltip = Reference to <i>revision</i> objects.
com.top_logic.layout.scripting.recorder.ref.value.RowOfObject = Row of object
com.top_logic.layout.scripting.recorder.ref.value.RowOfObject.row-object = Row object
com.top_logic.layout.scripting.recorder.ref.value.RowOfObject.row-object.tooltip = The row of the cell that this assertion is about.
com.top_logic.layout.scripting.recorder.ref.value.RowOfObject.tooltip = <i>Table aspect</i> that resolves to the number of the displayed row of an row object in a <i>table data</i>. All filters and sorting are respected.
com.top_logic.layout.scripting.recorder.ref.value.RowTableValue = Row table value
com.top_logic.layout.scripting.recorder.ref.value.RowTableValue.row-object = Row object
com.top_logic.layout.scripting.recorder.ref.value.RowTableValue.row-object.tooltip = The row of the cell that this assertion is about.
com.top_logic.layout.scripting.recorder.ref.value.RowTableValue.tooltip = <i>Table value</i> in an <i>editable row table model</i>.
com.top_logic.layout.scripting.recorder.ref.value.StringNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.StringNaming$Name.tooltip = <i>Model name</i> of <i>string naming</i>.
com.top_logic.layout.scripting.recorder.ref.value.StringNaming.Name.value = Value
com.top_logic.layout.scripting.recorder.ref.value.StringNaming.Name.value.tooltip = The literal value.
com.top_logic.layout.scripting.recorder.ref.value.StringValue = String value
com.top_logic.layout.scripting.recorder.ref.value.StringValue.string = String
com.top_logic.layout.scripting.recorder.ref.value.StringValue.tooltip = A <i>string</i> value.
com.top_logic.layout.scripting.recorder.ref.value.TableAspect = Table aspect
com.top_logic.layout.scripting.recorder.ref.value.TableAspect.table = Table
com.top_logic.layout.scripting.recorder.ref.value.TableAspect.table.tooltip = The table this assertion is about.
com.top_logic.layout.scripting.recorder.ref.value.TableAspect.tooltip = Abstract <i>value reference</i> that accesses some aspect of a <i>table data</i> model.
com.top_logic.layout.scripting.recorder.ref.value.TableColumnRef = Table column reference
com.top_logic.layout.scripting.recorder.ref.value.TableColumnRef.column-label = Column label
com.top_logic.layout.scripting.recorder.ref.value.TableColumnRef.column-label.tooltip = Column label of the cell that this assertion is about.
com.top_logic.layout.scripting.recorder.ref.value.TableColumnRef.column-name = Column name
com.top_logic.layout.scripting.recorder.ref.value.TableColumnRef.column-name.tooltip = Column of the cell that this assertion is about.
com.top_logic.layout.scripting.recorder.ref.value.TableColumnRef.tooltip = The information to identify a column in a given table. <p> Either the <i>Column name</i> or the <i>Column label</i> has to to be set. Setting both is not allowed. </p>
com.top_logic.layout.scripting.recorder.ref.value.TableDisplayValue = Table display value
com.top_logic.layout.scripting.recorder.ref.value.TableDisplayValue.row-number = Row number
com.top_logic.layout.scripting.recorder.ref.value.TableDisplayValue.row-number.tooltip = <i>Value reference</i> resolving to the row number in the <i>Table</i>.
com.top_logic.layout.scripting.recorder.ref.value.TableDisplayValue.tooltip = The value of a table cell in an actually displayed table row accessed with row number (instead of row object). <p> This form of access is only useful to reason about tables in a certain sort order. </p>
com.top_logic.layout.scripting.recorder.ref.value.TableSelection = Table selection
com.top_logic.layout.scripting.recorder.ref.value.TableSelection.tooltip = <i>Table aspect</i> that resolves to selected row in a <i>table data</i>..
com.top_logic.layout.scripting.recorder.ref.value.TableValue = Table value
com.top_logic.layout.scripting.recorder.ref.value.TableValue.tooltip = Reference to the actual value in a table cell.
com.top_logic.layout.scripting.recorder.ref.value.TreeNodeChildCountRef = Tree node child count reference
com.top_logic.layout.scripting.recorder.ref.value.TreeNodeChildCountRef.tooltip = <i>Tree node reference</i> for the number of children of the tree node.
com.top_logic.layout.scripting.recorder.ref.value.TreeNodeExpansionRef = Tree node expansion reference
com.top_logic.layout.scripting.recorder.ref.value.TreeNodeExpansionRef.tooltip = <i>Tree node reference</i> for the expansion state of a tree node.
com.top_logic.layout.scripting.recorder.ref.value.TreeNodeLeafRef = Tree node leaf reference
com.top_logic.layout.scripting.recorder.ref.value.TreeNodeLeafRef.tooltip = <i>Tree node reference</i> for the leaf state of a tree node.
com.top_logic.layout.scripting.recorder.ref.value.TreeNodeRef = Tree node reference
com.top_logic.layout.scripting.recorder.ref.value.TreeNodeRef.context = Context
com.top_logic.layout.scripting.recorder.ref.value.TreeNodeRef.context.tooltip = The context to resolve the given node.
com.top_logic.layout.scripting.recorder.ref.value.TreeNodeRef.node = Node
com.top_logic.layout.scripting.recorder.ref.value.TreeNodeRef.node.tooltip = The representation of the tree node.
com.top_logic.layout.scripting.recorder.ref.value.TreeNodeRef.tooltip = A <i>value reference</i> for a tree node.
com.top_logic.layout.scripting.recorder.ref.value.TreeNodeSelectionRef = Tree node selection reference
com.top_logic.layout.scripting.recorder.ref.value.TreeNodeSelectionRef.tooltip = <i>Tree node reference</i> for the selection state of a tree node.
com.top_logic.layout.scripting.recorder.ref.value.expressions.SingletonValue = Singleton value
com.top_logic.layout.scripting.recorder.ref.value.expressions.SingletonValue.collection = Collection
com.top_logic.layout.scripting.recorder.ref.value.expressions.SingletonValue.collection.tooltip = The collection value to take the single element from.
com.top_logic.layout.scripting.recorder.ref.value.expressions.SingletonValue.tooltip = Conversion of a list to it's only element (or <code>null</code>).
com.top_logic.layout.scripting.recorder.ref.value.form.FieldLabelNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.form.FieldLabelNaming$Name.tooltip = Reference to the option list of a given field.
com.top_logic.layout.scripting.recorder.ref.value.form.FieldOptionLabelsNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.form.FieldOptionLabelsNaming$Name.tooltip = Reference to the option labels of a given field.
com.top_logic.layout.scripting.recorder.ref.value.form.FieldOptionsNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.form.FieldOptionsNaming$Name.tooltip = Reference to the option list of a given field.
com.top_logic.layout.scripting.recorder.ref.value.form.FieldRawValueNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.form.FieldRawValueNaming$Name.tooltip = Reference to the option list of a given field.
com.top_logic.layout.scripting.recorder.ref.value.form.FieldValueNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.form.FieldValueNaming$Name.tooltip = Reference to the option list of a given field.
com.top_logic.layout.scripting.recorder.ref.value.object.CompactLabelPath = Compact label path
com.top_logic.layout.scripting.recorder.ref.value.object.CompactLabelPath.label-path = Label path
com.top_logic.layout.scripting.recorder.ref.value.object.CompactLabelPath.label-path.tooltip = A path of labels, used to identify an object. <p> Root is not contained in the path and represented by an empty path. </p>
com.top_logic.layout.scripting.recorder.ref.value.object.CompactLabelPath.tooltip = A path of labels, used to identify an object. <p> A <i>compact label path</i> is similar to a <i>label path</i>, but the path is not specified with individual tags but in an attribute in the form "Bli > Bla > Blub". </p>
com.top_logic.layout.scripting.recorder.ref.value.object.FormattedValue = Formatted value
com.top_logic.layout.scripting.recorder.ref.value.object.FormattedValue.format = Format
com.top_logic.layout.scripting.recorder.ref.value.object.FormattedValue.format.tooltip = The <i>format</i> that is used for formatting and parsing <i>Formatted value</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.FormattedValue.formatted-value = Formatted value
com.top_logic.layout.scripting.recorder.ref.value.object.FormattedValue.formatted-value.tooltip = The value formatted with <i>Format</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.FormattedValue.tooltip = Uses the given <i>format</i> to parse the value stored in <i>Formatted value</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.GlobalVariableNaming$GlobalVariableName = Global variable name
com.top_logic.layout.scripting.recorder.ref.value.object.GlobalVariableNaming$GlobalVariableName.tooltip = The <i>model name</i> for the <i>global variable naming</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.GlobalVariableRef = Global variable reference
com.top_logic.layout.scripting.recorder.ref.value.object.GlobalVariableRef.name.tooltip = Getter for the name (not the value!) of the global variable. <p> When this reference is resolved, the current value of the global variable is returned. </p>
com.top_logic.layout.scripting.recorder.ref.value.object.GlobalVariableRef.tooltip = An <i>value reference</i> that identifies a global variable of the scripting framework.
com.top_logic.layout.scripting.recorder.ref.value.object.IdRef = ID reference
com.top_logic.layout.scripting.recorder.ref.value.object.IdRef.object-name = Object name
com.top_logic.layout.scripting.recorder.ref.value.object.IdRef.object-name.tooltip = The object identifier.
com.top_logic.layout.scripting.recorder.ref.value.object.IdRef.table-name = Table name
com.top_logic.layout.scripting.recorder.ref.value.object.IdRef.table-name.tooltip = The name of the <i>MO class</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.IdRef.tooltip = A reference to an object by table name and identifier.
com.top_logic.layout.scripting.recorder.ref.value.object.IndexRef = Index reference
com.top_logic.layout.scripting.recorder.ref.value.object.IndexRef.key-values = Key values
com.top_logic.layout.scripting.recorder.ref.value.object.IndexRef.key-values.tooltip = <i>Attribute values</i> that describe values of a unique index of the referenced object.
com.top_logic.layout.scripting.recorder.ref.value.object.IndexRef.table-name = Table name
com.top_logic.layout.scripting.recorder.ref.value.object.IndexRef.table-name.tooltip = The name of the object's <i>MO class</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.IndexRef.tooltip = Reference to an object by values of a unique index.
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming$GlobalConfig$TypeSetting = Type setting
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming$GlobalConfig$TypeSetting.tooltip = Index settings for a type with qualified name <i>Name</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming$Name = Name
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming$Name$AttributeAssignment = Attribute assignment
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming$Name$AttributeAssignment.tooltip = Assignment of a single attribute <i>Name</i> to the value <i>Value</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming$Name.tooltip = Identifier for a persistent object using values of a unique index.
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming.GlobalConfig.TypeSetting.attributes = Attributes
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming.GlobalConfig.TypeSetting.attributes.tooltip = List of attributes unambiguously identifying an object of type <i>Name</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming.GlobalConfig.types = Types
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming.GlobalConfig.types.tooltip = Configuration of key attributes by fully qualified type.
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming.Name.AttributeAssignment.value = Value
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming.Name.AttributeAssignment.value.tooltip = The value that is assigned to the attribute <i>Name</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming.Name.attributes = Attributes
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming.Name.attributes.tooltip = <i>Attribute assignments</i> that describe values of a unique index of the referenced object.
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming.Name.table = Table
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming.Name.table.tooltip = The name of the object's <i>MO class</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming.Name.type = Type
com.top_logic.layout.scripting.recorder.ref.value.object.IndexedObjectNaming.Name.type.tooltip = The dynamic type of the identified object.
com.top_logic.layout.scripting.recorder.ref.value.object.LabelPath = Label path
com.top_logic.layout.scripting.recorder.ref.value.object.LabelPath.label-path = Label path
com.top_logic.layout.scripting.recorder.ref.value.object.LabelPath.label-path.tooltip = List of node names that describe a path from the structure root to the referenced node.
com.top_logic.layout.scripting.recorder.ref.value.object.LabelPath.tooltip = A path of labels, used to identify an object. Root is not contained in the path and represented by an empty path.
com.top_logic.layout.scripting.recorder.ref.value.object.LabeledValue = Labeled value
com.top_logic.layout.scripting.recorder.ref.value.object.LabeledValue.label = Label
com.top_logic.layout.scripting.recorder.ref.value.object.LabeledValue.label.tooltip = The identifying label of the value.
com.top_logic.layout.scripting.recorder.ref.value.object.LabeledValue.tooltip = <i>Context reference</i> that identifies a value in a <i>label scope</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.NamedModelRef = Named model reference
com.top_logic.layout.scripting.recorder.ref.value.object.NamedModelRef.model-name = Model name
com.top_logic.layout.scripting.recorder.ref.value.object.NamedModelRef.tooltip = Represents a reference to a <i>named model</i>. Uses the <i>model name</i> of the <i>named model</i> to identify it.
com.top_logic.layout.scripting.recorder.ref.value.object.NamedValue = Named value
com.top_logic.layout.scripting.recorder.ref.value.object.NamedValue.tooltip = <i>Context reference</i> that identifies a value with a structured name. <p> A <i>named value</i> can only be retrieved from a context with choices by matching. </p>
com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef = Node reference
com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef.structure-name = Structure name
com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef.structure-name.tooltip = The name of the structure the referenced object is part of.
com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef.structure-path = Structure path
com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef.structure-path.tooltip = List of node names that describe a path from the structure root (exclusive) to the referenced node (inclusive).
com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef.tooltip = A reference to a node in a structure.
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectAttribute = Object attribute
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectAttribute.attribute = Attribute
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectAttribute.attribute.tooltip = The technical attribute name.
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectAttribute.target = Target
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectAttribute.target.tooltip = The target object to access, has to be a reference to an <i>object</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectAttribute.tooltip = Access to the value of an object attribute.
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectAttributeByLabel = Object attribute by label
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectAttributeByLabel.attribute-label = Attribute label
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectAttributeByLabel.attribute-label.tooltip = The GUI label of the attribute to access.
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectAttributeByLabel.fuzzy = Fuzzy
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectAttributeByLabel.fuzzy.tooltip = Should the <i>Attribute label</i> be matched fuzzy? <p> <b>Usage discouraged, as multiple attribute labels can fuzzy match the same string.</b> </p>
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectAttributeByLabel.target = Target
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectAttributeByLabel.target.tooltip = The target object to access, has to be a reference to an <i>object</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectAttributeByLabel.tooltip = Access to an object attribute by attribute label.
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectRef = Object reference
com.top_logic.layout.scripting.recorder.ref.value.object.ObjectRef.tooltip = A reference to a persistent object.
com.top_logic.layout.scripting.recorder.ref.value.object.SelectedModelRef = Selected model reference
com.top_logic.layout.scripting.recorder.ref.value.object.SelectedModelRef.component = Component
com.top_logic.layout.scripting.recorder.ref.value.object.SelectedModelRef.component.tooltip = A reference to the component whose selection is meant by this <i>selected model reference</i>. Has to be a <i>selectable</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.SelectedModelRef.tooltip = <i>Value reference</i> that can be used to identify the selected object of the referenced value. It is expected that the referenced component is a <i>selectable</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.TypeRef = Type reference
com.top_logic.layout.scripting.recorder.ref.value.object.TypeRef.scope-ref = Scope reference
com.top_logic.layout.scripting.recorder.ref.value.object.TypeRef.scope-ref.tooltip = Reference to the object that declares the type this attribute is part of. <p> If the scope is <code>null</code>, a global type is referenced. </p>
com.top_logic.layout.scripting.recorder.ref.value.object.TypeRef.tooltip = <i>Object reference</i> referencing a dynamic type instance.
com.top_logic.layout.scripting.recorder.ref.value.object.TypeRef.type-name = Type name
com.top_logic.layout.scripting.recorder.ref.value.object.TypeRef.type-name.tooltip = The name of the type, this attribute belongs to.
com.top_logic.layout.scripting.recorder.ref.value.object.ValuePath = Value path
com.top_logic.layout.scripting.recorder.ref.value.object.ValuePath.nodes = Nodes
com.top_logic.layout.scripting.recorder.ref.value.object.ValuePath.nodes.tooltip = Path of <i>value references</i>.
com.top_logic.layout.scripting.recorder.ref.value.object.ValuePath.tooltip = A path of <i>value references</i> that are resolved in a context-dependent manner. Root is not contained in the path and represented by an empty path.
com.top_logic.layout.scripting.recorder.ref.value.object.VersionedObjectNaming.Name.branch = Branch
com.top_logic.layout.scripting.recorder.ref.value.object.VersionedObjectNaming.Name.branch.tooltip = Description of the branch this object resides in. <p> <code>null</code> means trunk. </p>
com.top_logic.layout.scripting.recorder.ref.value.object.VersionedObjectNaming.Name.revision = Revision
com.top_logic.layout.scripting.recorder.ref.value.object.VersionedObjectNaming.Name.revision.tooltip = Description of the revision this object resides in. <p> <code>null</code> means current. </p>
com.top_logic.layout.scripting.recorder.ref.value.object.VersionedObjectRef = Versioned object reference
com.top_logic.layout.scripting.recorder.ref.value.object.VersionedObjectRef.branch = Branch
com.top_logic.layout.scripting.recorder.ref.value.object.VersionedObjectRef.branch.tooltip = Description of the branch this object resides in. <p> <code>null</code> means trunk. </p>
com.top_logic.layout.scripting.recorder.ref.value.object.VersionedObjectRef.revision = Revision
com.top_logic.layout.scripting.recorder.ref.value.object.VersionedObjectRef.revision.tooltip = Description of the revision this object resides in. <p> <code>null</code> means current. </p>
com.top_logic.layout.scripting.recorder.ref.value.object.VersionedObjectRef.tooltip = Abstract description of branch and revision aware objects.
com.top_logic.layout.scripting.recorder.ref.value.table.TableCellFullText = Table cell full text
com.top_logic.layout.scripting.recorder.ref.value.table.TableCellFullText.tooltip = A <i>table value</i> representing the full-text of a table cell.
com.top_logic.layout.scripting.recorder.ref.value.table.TableColumnLabel = Table column label
com.top_logic.layout.scripting.recorder.ref.value.table.TableColumnLabel.tooltip = A <i>table value</i> representing the column label.
com.top_logic.layout.scripting.recorder.specialcases.PersonalizedExpandableNamingScheme$Name = Name
com.top_logic.layout.scripting.recorder.specialcases.PersonalizedExpandableNamingScheme$Name.tooltip = <i>Model name</i> of a <i>personalizing expandable</i>.
com.top_logic.layout.scripting.recorder.specialcases.PersonalizedExpandableNamingScheme.Name.key = Key
com.top_logic.layout.scripting.recorder.specialcases.PersonalizedExpandableNamingScheme.Name.key.tooltip = Personalization key of the identified expandable.
com.top_logic.layout.scripting.runtime.action.AbstractApplicationActionOp = Application action
com.top_logic.layout.scripting.runtime.action.AbstractApplicationActionOp.tooltip = Base class for <i>application scripting action</i> implementations.
com.top_logic.layout.scripting.runtime.action.AbstractCommandActionOp = Command action
com.top_logic.layout.scripting.runtime.action.AbstractCommandActionOp.tooltip = Base class for <i>application scripting actions</i> checking various aspects of commands.
com.top_logic.layout.scripting.runtime.action.AbstractFormActionOp = Form action
com.top_logic.layout.scripting.runtime.action.AbstractFormActionOp.tooltip = Base class for <i>application scripting actions</i> that target a single <i>form member</i>.
com.top_logic.layout.scripting.runtime.action.AbstractLabeledButtonActionOp = Labeled button action
com.top_logic.layout.scripting.runtime.action.AbstractLabeledButtonActionOp.tooltip = Searches for a clickable button with the given label (<code>config.getLabel()</code>) and clicks it. Asserts to find exactly one matching button.
com.top_logic.layout.scripting.runtime.action.AbstractModelActionOp = Model action
com.top_logic.layout.scripting.runtime.action.AbstractModelActionOp.tooltip = Base class for <i>application scripting actions</i> that are about named models.
com.top_logic.layout.scripting.runtime.action.ActionChainOp = Action chain
com.top_logic.layout.scripting.runtime.action.ActionChainOp.tooltip = <i>Application</i> that consists of several other actions that should be processed in sequence.
com.top_logic.layout.scripting.runtime.action.AddValueActionOp = Add value action
com.top_logic.layout.scripting.runtime.action.AddValueActionOp.tooltip = <i>Add value action</i> adds values to a <i>form field</i>. <p> Does not cause duplicate values: Only those values are added, which are not already set. </p>
com.top_logic.layout.scripting.runtime.action.AwaitProgressActionOp = Await progress action
com.top_logic.layout.scripting.runtime.action.AwaitProgressActionOp.tooltip = Await the completion of a <i>progress info</i>. <p> The model of the target component has to be <i>progress info</i>. </p> In case of an <i>progress component</i> this action will close the dialog.
com.top_logic.layout.scripting.runtime.action.CheckExecutabilityOp = Check executability
com.top_logic.layout.scripting.runtime.action.CheckExecutabilityOp.tooltip = <i>Application scripting action</i> that executes a given command and checks for a potential noExecutability reason.
com.top_logic.layout.scripting.runtime.action.CheckLabeledExecutabilityOp = Check labeled executability
com.top_logic.layout.scripting.runtime.action.CheckLabeledExecutabilityOp.tooltip = Checks the executability of a <i>command model</i> identified by its label.
com.top_logic.layout.scripting.runtime.action.CheckSelectionOp = Check selection
com.top_logic.layout.scripting.runtime.action.CheckSelectionOp.tooltip = <i>Application scripting action</i> that checks the selection in a given component.
com.top_logic.layout.scripting.runtime.action.CheckVisibilityOp = Check visibility
com.top_logic.layout.scripting.runtime.action.CheckVisibilityOp.Config.visible = Visible
com.top_logic.layout.scripting.runtime.action.CheckVisibilityOp.tooltip = <i>Application scripting action</i> that checks the visibility of a given component.
com.top_logic.layout.scripting.runtime.action.ClearDownloadsOp = Clear downloads
com.top_logic.layout.scripting.runtime.action.ClearDownloadsOp.tooltip = <i>Application scripting action</i> that clears the currently available downloads. <p> This action must be issued, after all checks on available downloads have been performed. </p>
com.top_logic.layout.scripting.runtime.action.ClearGlobalVariablesOp = Clear global variables
com.top_logic.layout.scripting.runtime.action.ClearGlobalVariablesOp.tooltip = Clears the <i>global variable store</i>.
com.top_logic.layout.scripting.runtime.action.CloseDialogActionOp = Close dialog action
com.top_logic.layout.scripting.runtime.action.CloseDialogActionOp.tooltip = <i>Component action</i> that closes the dialog of the component.
com.top_logic.layout.scripting.runtime.action.CollapseToolbarActionOp = Collapse toolbar action
com.top_logic.layout.scripting.runtime.action.CollapseToolbarActionOp.CollapseToolbarAction.expandable = Expandable
com.top_logic.layout.scripting.runtime.action.CollapseToolbarActionOp.CollapseToolbarAction.expandable.tooltip = The owner of the toolbar to collapse or expand.
com.top_logic.layout.scripting.runtime.action.CollapseToolbarActionOp.CollapseToolbarAction.expansion-state = Expansion state
com.top_logic.layout.scripting.runtime.action.CollapseToolbarActionOp.CollapseToolbarAction.expansion-state.tooltip = The <i>expansion state</i> of the toolbar.
com.top_logic.layout.scripting.runtime.action.CollapseToolbarActionOp.tooltip = <i>Application action</i> for <i>collapse toolbar action</i>.
com.top_logic.layout.scripting.runtime.action.CommandActionOp = Command action
com.top_logic.layout.scripting.runtime.action.CommandActionOp.tooltip = Type-bound version of <i>command action base</i>.
com.top_logic.layout.scripting.runtime.action.CommandActionOpBase = Command action base
com.top_logic.layout.scripting.runtime.action.CommandActionOpBase.tooltip = Base class for <i>application scripting actions</i> executing a <i>command handler</i>.
com.top_logic.layout.scripting.runtime.action.CommandExecutionOp = Command execution
com.top_logic.layout.scripting.runtime.action.CommandExecutionOp.tooltip = <i>Model action</i> that executes a <i>command model</i>.
com.top_logic.layout.scripting.runtime.action.ComponentActionOp = Component action
com.top_logic.layout.scripting.runtime.action.ComponentActionOp.tooltip = <i>Application scripting action</i> that does the processing in the context of a given component.
com.top_logic.layout.scripting.runtime.action.DelGlobalVariableOp = Del global variable
com.top_logic.layout.scripting.runtime.action.DelGlobalVariableOp.tooltip = Deletes a global variable of the scripting framework.
com.top_logic.layout.scripting.runtime.action.DynamicActionOp = Dynamic action
com.top_logic.layout.scripting.runtime.action.DynamicActionOp.tooltip = Composite <i>application scripting action</i> that dynamically creates the concrete actions to execute.
com.top_logic.layout.scripting.runtime.action.EditActionOp = Edit action
com.top_logic.layout.scripting.runtime.action.EditActionOp.tooltip = <i>Application scripting action</i> that performs an edit of an <i>editor</i>.
com.top_logic.layout.scripting.runtime.action.ExpandActionOp = Expand action
com.top_logic.layout.scripting.runtime.action.ExpandActionOp.tooltip = Implementation for the <i>expand action</i>.
com.top_logic.layout.scripting.runtime.action.ExpectedFailureActionOp = Expected failure action
com.top_logic.layout.scripting.runtime.action.ExpectedFailureActionOp.ExpectedFailureAction.expected-failure-message = Expected failure message
com.top_logic.layout.scripting.runtime.action.ExpectedFailureActionOp.ExpectedFailureAction.expected-failure-message.tooltip = A part of the failure message when the <i>Failure action</i> fails.
com.top_logic.layout.scripting.runtime.action.ExpectedFailureActionOp.ExpectedFailureAction.failure-action = Failure action
com.top_logic.layout.scripting.runtime.action.ExpectedFailureActionOp.ExpectedFailureAction.failure-action.tooltip = The <i>application action</i> expected to fail.
com.top_logic.layout.scripting.runtime.action.ExpectedFailureActionOp.tooltip = <i>Application scripting action</i> that triggers an inner action and expects that the action fails.
com.top_logic.layout.scripting.runtime.action.ExportDataOp = Export data
com.top_logic.layout.scripting.runtime.action.ExportDataOp.tooltip = <i>Application scripting action</i> that saves a <i>binary data</i> value from the tested application to a file in the test workspace.
com.top_logic.layout.scripting.runtime.action.FieldActionOp = Field action
com.top_logic.layout.scripting.runtime.action.FieldActionOp.tooltip = Base class for <i>form actions</i> targeting certain <i>form fields</i>.
com.top_logic.layout.scripting.runtime.action.FormActionOp = Form action
com.top_logic.layout.scripting.runtime.action.FormActionOp.tooltip = <i>Application scripting action</i> that updates a <i>form handler</i>.
com.top_logic.layout.scripting.runtime.action.FormInputOp = Form input
com.top_logic.layout.scripting.runtime.action.FormInputOp.tooltip = <i>Field action</i> setting a value to a <i>form field</i>.
com.top_logic.layout.scripting.runtime.action.FormRawInputOp = Form raw input
com.top_logic.layout.scripting.runtime.action.FormRawInputOp.tooltip = <i>Field action</i> setting a value to a <i>form field</i>.
com.top_logic.layout.scripting.runtime.action.FuzzyGotoActionOp = Fuzzy goto action
com.top_logic.layout.scripting.runtime.action.FuzzyGotoActionOp.FuzzyGoto.component = Component
com.top_logic.layout.scripting.runtime.action.FuzzyGotoActionOp.FuzzyGoto.component.tooltip = The component to go to or a parent of it.
com.top_logic.layout.scripting.runtime.action.FuzzyGotoActionOp.FuzzyGoto.target-object = Target object
com.top_logic.layout.scripting.runtime.action.FuzzyGotoActionOp.FuzzyGoto.target-object.tooltip = The model for the target component. Is used to identify the target component of this <i>fuzzy goto</i>. <p> If this is <code>null</code> or resoves to <code>null</code> <i>Component</i> is the target component. </p> <p> The target component is either <i>Component</i> if it accepts this target object, or the child which does. The children are searched recursively: For all <i>layout containers</i>, every child is searched. Except for <i>tab component</i> for which only the selected child is searched. </p> <p> The target component must support this target object. </p> <p> If there is more than one component which would accept this target object, it is unspecified which one is found. If no one accepts this target object, an <i>application assertion</i> is thrown. </p>
com.top_logic.layout.scripting.runtime.action.FuzzyGotoActionOp.tooltip = <i>Application scripting action</i> that makes a "goto" to a fuzzy described target component.
com.top_logic.layout.scripting.runtime.action.GenericCommnadActionOp = Generic commnad action
com.top_logic.layout.scripting.runtime.action.GenericCommnadActionOp.Config.command = Command
com.top_logic.layout.scripting.runtime.action.GenericCommnadActionOp.Config.command.tooltip = A reference to the <i>command handler</i> to execute.
com.top_logic.layout.scripting.runtime.action.GenericCommnadActionOp.tooltip = <i>Application scripting action</i> executing a <i>command handler</i> referenced by a <i>model name</i>.
com.top_logic.layout.scripting.runtime.action.GlobalVariableActionOp = Global variable action
com.top_logic.layout.scripting.runtime.action.GlobalVariableActionOp.tooltip = An <i>application scripting action</i> about a global variable of the scripting framework.
com.top_logic.layout.scripting.runtime.action.GotoActionOp = Goto action
com.top_logic.layout.scripting.runtime.action.GotoActionOp.tooltip = <i>Application scripting action</i> that executes a given command.
com.top_logic.layout.scripting.runtime.action.IfActionOp = If action
com.top_logic.layout.scripting.runtime.action.IfActionOp.tooltip = Executes an <i>application scripting action</i> depending on a condition. <p> As this class is deprecated, <em>there is no ScriptingGui support for this action</em>. That means, neither is there a beautification xslt, nor will the ScriptingGui show the "then action" or the "else action". </p>
com.top_logic.layout.scripting.runtime.action.IncludeScriptActionOp = Include script action
com.top_logic.layout.scripting.runtime.action.IncludeScriptActionOp.tooltip = A <i>dynamic action</i> that includes a script file.
com.top_logic.layout.scripting.runtime.action.IsTabSelectableOp = Is tab selectable
com.top_logic.layout.scripting.runtime.action.IsTabSelectableOp.tooltip = <i>Application scripting action</i> that computes whether a given tab in a given tab component can be selected. <p> This action is only useful as condition in an <i>conditional action</i>. </p>
com.top_logic.layout.scripting.runtime.action.KBRollbackActionOp = Knowledge-base rollback action
com.top_logic.layout.scripting.runtime.action.KBRollbackActionOp.tooltip = <i>Application scripting action</i> that reverts the <i>knowledge base</i> to a certain revision.
com.top_logic.layout.scripting.runtime.action.KBRollbackToRevisionOp = Knowledge-base rollback to revision
com.top_logic.layout.scripting.runtime.action.KBRollbackToRevisionOp.tooltip = A <i>knowledge-base rollback action</i> that rollsback to the named revision.
com.top_logic.layout.scripting.runtime.action.KBRollbackXRevisionsOp = Knowledge-base rollback X revisions
com.top_logic.layout.scripting.runtime.action.KBRollbackXRevisionsOp.tooltip = A <i>knowledge-base rollback action</i> that rollsback the last X revisions.
com.top_logic.layout.scripting.runtime.action.LabeledButtonActionOp = Labeled button action
com.top_logic.layout.scripting.runtime.action.LabeledButtonActionOp.tooltip = Type-bound version of <i>labeled button action</i>.
com.top_logic.layout.scripting.runtime.action.LogMessageActionOp = Log message action
com.top_logic.layout.scripting.runtime.action.LogMessageActionOp.tooltip = Logs the given message at the given log level. Use for example to log the progress of your test by including this action after every major chunk of tests. <br/> But be aware, that the framework for scripted tests throws an Exception and marks the current test as failed, if an error or an fatal is logged during its execution. <br/> You might use this to warn about incomplete testcases: As the last action of the incomplete testcase, log an error telling "this testcase is still incomplete" (or something alike) and they will fail and remember the person executing them at their incompleteness.
com.top_logic.layout.scripting.runtime.action.LoginActionOp = Login action
com.top_logic.layout.scripting.runtime.action.LoginActionOp.tooltip = <i>Application scripting action</i> that simulates a login event.
com.top_logic.layout.scripting.runtime.action.LogoutActionOp = Logout action
com.top_logic.layout.scripting.runtime.action.LogoutActionOp.tooltip = <i>Application scripting action</i> that invalidates the current session.
com.top_logic.layout.scripting.runtime.action.MakeVisibleOp = Make visible
com.top_logic.layout.scripting.runtime.action.MakeVisibleOp.tooltip = <i>Application scripting action</i> that makes a given component visible.
com.top_logic.layout.scripting.runtime.action.NamedTabSwitchOp = Named tab switch
com.top_logic.layout.scripting.runtime.action.NamedTabSwitchOp.tooltip = <i>Application scripting action</i> that switches a tab to a given card name.
com.top_logic.layout.scripting.runtime.action.OpenDialogOp = Open dialog
com.top_logic.layout.scripting.runtime.action.OpenDialogOp.tooltip = <i>Application scripting action</i> that opens a named dialog.
com.top_logic.layout.scripting.runtime.action.OpenTableFilterOp = Open table filter
com.top_logic.layout.scripting.runtime.action.OpenTableFilterOp.tooltip = <i>Table action</i> that opens a table filter dialog for a certain column.
com.top_logic.layout.scripting.runtime.action.OpenTreeFilterOp = Open tree filter
com.top_logic.layout.scripting.runtime.action.OpenTreeFilterOp.tooltip = <i>Table action</i> that opens the tree filter options popup.
com.top_logic.layout.scripting.runtime.action.RecordingFailedActionOp = Recording failed action
com.top_logic.layout.scripting.runtime.action.RecordingFailedActionOp.tooltip = This <i>application action</i> is recorded, when the recording of the actual <i>application action</i> fails. Useful for printing a warning to the tester. If an <i>recording failed action</i> is recorded, the tester should realize the script is unusable and not execute it. In this case, this class would not be necessary.
com.top_logic.layout.scripting.runtime.action.RenderAction = Render action
com.top_logic.layout.scripting.runtime.action.RenderAction.tooltip = Action that renders and checks the current state of the session. <p> This action is equivalent to pressing F5 in a real browser client and passing the produced HTML to a HTML checker. </p>
com.top_logic.layout.scripting.runtime.action.RunTaskActionOp = Run task action
com.top_logic.layout.scripting.runtime.action.RunTaskActionOp.tooltip = <i>Application action</i> for a <i>run task action</i>.
com.top_logic.layout.scripting.runtime.action.SelectActionOp = Select action
com.top_logic.layout.scripting.runtime.action.SelectActionOp.tooltip = Handles both kinds of selections: <i>selectable</i> and <i>selection model</i>
com.top_logic.layout.scripting.runtime.action.SelectObjectOp = Select object
com.top_logic.layout.scripting.runtime.action.SelectObjectOp.tooltip = <i>Application scripting action</i> that selects an object within a <i>selectable</i>.
com.top_logic.layout.scripting.runtime.action.SelectSelectableActionOp = Select selectable action
com.top_logic.layout.scripting.runtime.action.SelectSelectableActionOp.tooltip = Just for backward compatibility of old recordings. Use <i>select action</i> instead.
com.top_logic.layout.scripting.runtime.action.SetGlobalVariableOp = Set global variable
com.top_logic.layout.scripting.runtime.action.SetGlobalVariableOp.tooltip = Sets the value of a global variable of the scripting framework.
com.top_logic.layout.scripting.runtime.action.SetModelActionOp = Set model action
com.top_logic.layout.scripting.runtime.action.SetModelActionOp.Config.model = Model
com.top_logic.layout.scripting.runtime.action.SetModelActionOp.tooltip = Action that modifies the session by injecting a model set event that cannot occur by regular operation.
com.top_logic.layout.scripting.runtime.action.SetTableColumns.columns = Columns
com.top_logic.layout.scripting.runtime.action.SetTableColumns.columns.tooltip = The columns to display.
com.top_logic.layout.scripting.runtime.action.SetTableColumns.label = Label
com.top_logic.layout.scripting.runtime.action.SetTableColumns.label.tooltip = Whether the names in the <i>Columns</i> are labels.
com.top_logic.layout.scripting.runtime.action.SetTableColumnsOp = Set table columns
com.top_logic.layout.scripting.runtime.action.SetTableColumnsOp.tooltip = <i>Table action</i> that sets the columns of a table.
com.top_logic.layout.scripting.runtime.action.SimpleActionWrapperOp = Simple action object
com.top_logic.layout.scripting.runtime.action.SimpleActionWrapperOp.Config.action-class = Action class
com.top_logic.layout.scripting.runtime.action.SimpleActionWrapperOp.tooltip = <i>Application action</i> wrapper for a <i>simple action</i>.
com.top_logic.layout.scripting.runtime.action.SleepActionOp = Sleep action
com.top_logic.layout.scripting.runtime.action.SleepActionOp.tooltip = <i>Application scripting action</i> sleeping for a given number of milliseconds.
com.top_logic.layout.scripting.runtime.action.SortTableColumn.label = Label
com.top_logic.layout.scripting.runtime.action.SortTableColumn.label.tooltip = Whether the names in the <i>sort configurations</i> are labels.
com.top_logic.layout.scripting.runtime.action.SortTableColumn.sort-orders = Sort orders
com.top_logic.layout.scripting.runtime.action.SortTableColumn.sort-orders.tooltip = The list of <i>sort configurations</i> defining the sort order.
com.top_logic.layout.scripting.runtime.action.SortTableColumnOp = Sort table column
com.top_logic.layout.scripting.runtime.action.SortTableColumnOp.tooltip = <i>Table action</i> that sorts a table by a a given column.
com.top_logic.layout.scripting.runtime.action.TabSwitchOp = Tab switch
com.top_logic.layout.scripting.runtime.action.TabSwitchOp.tooltip = <i>Application scripting action</i> that switches a tab to a given index.
com.top_logic.layout.scripting.runtime.action.TableActionOp = Table action
com.top_logic.layout.scripting.runtime.action.TableActionOp.tooltip = Specialization of <i>component action</i> that uses a table.
com.top_logic.layout.scripting.runtime.action.ValidatingActionOp = Validating action
com.top_logic.layout.scripting.runtime.action.ValidatingActionOp.tooltip = Action that validates the session.
com.top_logic.layout.scripting.runtime.action.VisitTabsOp = Visit tabs
com.top_logic.layout.scripting.runtime.action.VisitTabsOp.tooltip = <i>Application scripting action</i> that visits all of the <i>layout containers</i> tabs and subtabs. <br/> The given <i>layout container</i> should either be a <i>tab component</i> or the <i>main layout</i>.
com.top_logic.layout.scripting.runtime.action.WaitForMaintenanceModeActionOp = Wait for maintenance mode action
com.top_logic.layout.scripting.runtime.action.WaitForMaintenanceModeActionOp.tooltip = Default implementation for usage of <i>wait for maintenance mode action</i>.
com.top_logic.layout.scripting.runtime.action.assertion.CheckActionOp = Check action
com.top_logic.layout.scripting.runtime.action.assertion.CheckActionOp.tooltip = <i>Application action</i> that applies configured <i>value checks</i> to an inspected application value.
com.top_logic.layout.scripting.runtime.action.assertion.FieldAssertionOp = Field assertion
com.top_logic.layout.scripting.runtime.action.assertion.FieldAssertionOp.tooltip = The base class for all assertions about a single <i>form field</i>. It asserts for the existence of the field before it delegates to the subclass asserts. <p> This class is not abstract for compatibility with existing scripts. </p>
com.top_logic.layout.scripting.runtime.action.assertion.FieldErrorAssertionOp = Field error assertion
com.top_logic.layout.scripting.runtime.action.assertion.FieldErrorAssertionOp.tooltip = <i>Field assertion</i> for <i>field error assertion</i>.
com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp = Field label assertion
com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp.tooltip = Assertion for the label of a <i>form member</i>. The comparison is done case-sensitive. (As the humans using the applications usually care about it.)
com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp = Field mode assertion
com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp.tooltip = Assertion for the mode of a <i>form member</i>.
com.top_logic.layout.scripting.runtime.action.assertion.FieldValidityAssertionOp = Field validity assertion
com.top_logic.layout.scripting.runtime.action.assertion.FieldValidityAssertionOp.tooltip = Assertion for the validity of a <i>form field</i>.
com.top_logic.layout.scripting.runtime.action.assertion.FormAssertionOp = Form assertion
com.top_logic.layout.scripting.runtime.action.assertion.FormAssertionOp.tooltip = The base class for all assertions about a single <i>form member</i>. It asserts for the existence of the <i>form member</i> before it delegates to the subclass asserts. It can also be used directly (not subclassed) if just the existence of the field should be checked.
com.top_logic.layout.scripting.runtime.action.assertion.GlobalVariableExistenceAssertionOp = Global variable existence assertion
com.top_logic.layout.scripting.runtime.action.assertion.GlobalVariableExistenceAssertionOp.tooltip = Assertion, whether a global variable of the scripting framework is set.
com.top_logic.layout.scripting.runtime.action.assertion.ModelNotExistsAssertionOp = Model not exists assertion
com.top_logic.layout.scripting.runtime.action.assertion.ModelNotExistsAssertionOp.tooltip = <i>Application scripting action</i> that is used to assert that a certain model name cannot be resolved.
com.top_logic.layout.scripting.runtime.action.assertion.NamedTabAssertOp = Named tab assert
com.top_logic.layout.scripting.runtime.action.assertion.NamedTabAssertOp.tooltip = <i>Application scripting action</i> that switches a tab to a given card name.
com.top_logic.layout.scripting.runtime.action.assertion.TryConditionOp = Try condition
com.top_logic.layout.scripting.runtime.action.assertion.TryConditionOp.tooltip = <i>Check action</i> that does not stop the script in case of a failing test, but returns false. <p> Note: This action is only useful as condition in an <i>conditional action</i>. </p>
com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp = Value assertion
com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp.tooltip = Asserts that the given <i>value assertion</i> holds.
com.top_logic.layout.scripting.runtime.execution.LiveActionExecutor$StartReplay = Start replay
com.top_logic.layout.scripting.runtime.execution.LiveActionExecutor$StartReplay.tooltip = <i>Command handler</i> directly executed after logging in the new session to start the replay.
com.top_logic.layout.security.ModelMappingConfig = Model mapping configuration
com.top_logic.layout.security.ModelMappingConfig.model-mapping = Model mapping
com.top_logic.layout.security.ModelMappingConfig.model-mapping.tooltip = Mapping from row object to represented business objects. <p> If there is no <i>object</i> that is represented by the row, the mapping must return <code>null</code>. </p>
com.top_logic.layout.security.ModelMappingConfig.tooltip = Mapping of some object, e.g. the row object in a table, to an object on which security can be computed. Security for the input object is computed on the output object.
com.top_logic.layout.security.SecurityFilter = Security filter
com.top_logic.layout.security.SecurityFilter.Config.delegationDestination = Delegation destination
com.top_logic.layout.security.SecurityFilter.Config.delegationDestination.tooltip = Name of the component to delegate security to. <p> The delegation destination is used to check whether a node can be selected. Typically it is the name of a slave component of a tree which decides whether the node can be set as model, because if a tree selects that node, the slave gets it as model. </p>
com.top_logic.layout.security.SecurityFilter.Config.selectionRole = Selection role
com.top_logic.layout.security.SecurityFilter.Config.selectionRole.tooltip = This method returns a list of role names. These roles specify which objects are acccepted by this filter. E.g. in a tree a node is selectable by the user (for security reasons) if the user has one of these roles on the node.
com.top_logic.layout.security.SecurityFilter.tooltip = Filter that checks the security of a given object by either checking some roles or delegation to a certain component.
com.top_logic.layout.state.ViewStateManager$Config = Configuration
com.top_logic.layout.state.ViewStateManager$SpecialStateDescription = Special state description
com.top_logic.layout.state.ViewStateManager$StateDescription = State description
com.top_logic.layout.state.ViewStateManager.Config.DefaultValues = Default values
com.top_logic.layout.state.ViewStateManager.Config.SpecialValues = Special values
com.top_logic.layout.state.ViewStateManager.SpecialStateDescription.viewName = View name
com.top_logic.layout.state.ViewStateManager.StateDescription.commandGroups = Command groups
com.top_logic.layout.state.ViewStateManager.StateDescription.commands = Commands
com.top_logic.layout.state.ViewStateManager.StateDescription.stateclass = Stateclass
com.top_logic.layout.structure.AbstractContentLayouting = Content layouting
com.top_logic.layout.structure.AbstractContentLayouting.tooltip = Base <i>layouting</i> for leaf components.
com.top_logic.layout.structure.BrowserWindowControl$Config = Configuration
com.top_logic.layout.structure.BrowserWindowControl$Config.tooltip = Configuration of the <i>browser window control</i>.
com.top_logic.layout.structure.BrowserWindowControl.Config.download-modification = Download modification
com.top_logic.layout.structure.BrowserWindowControl.Config.download-modification.tooltip = Plugin to modify the <i>binary data</i> delivered by this <i>browser window control</i>.
com.top_logic.layout.structure.BrowserWindowControl.Config.download-surviving-time = Download surviving time
com.top_logic.layout.structure.BrowserWindowControl.Config.download-surviving-time.tooltip = Time in milliseconds which is used to determine when a download can be forgotten: At each time a download is accessed the date of access is stored. If an AJAX-Request receives the server and the last access happened <i>Download surviving time</i> milliseconds ago, then the corresponding download will be thrown away.
com.top_logic.layout.structure.CollapsibleControl.collapseButton = The button that minimizes the view by collapsing the contents.
com.top_logic.layout.structure.CollapsibleControl.collapsed = Whether this control is collapsed/minimized.
com.top_logic.layout.structure.CollapsibleControl.collapsedSize = Writes client-side data for the collapsed state of the <code>"data-collapsed-size"</code> attribute.
com.top_logic.layout.structure.CollapsibleControl.layout = The layout information of this control to be written to the <code>"data-layout"</code> attribute.
com.top_logic.layout.structure.CollapsibleControl.maximizeButton = The button that allows maximizing the contents.
com.top_logic.layout.structure.CollapsibleControl.showCollapse = Whether the collapse button should be rendered.
com.top_logic.layout.structure.CollapsibleControl.showMaximize = Whether a maximize button should be rendered.
com.top_logic.layout.structure.CollapsibleControl.title = Writes the title.
com.top_logic.layout.structure.CollapsibleControl.toolbar = Writes the toolbar that contains the buttons next to the title in the header.
com.top_logic.layout.structure.CollapsibleControl.toolbarLayoutSize = Writes client-side data for the <code>"data-layout-size"</code> attribute.
com.top_logic.layout.structure.CollapsibleControlProvider = Collapsible control provider
com.top_logic.layout.structure.CollapsibleControlProvider.tooltip = The class <i>collapsible control provider</i> can be used to create a <i>collapsible control</i> for some <i>layout</i>.
com.top_logic.layout.structure.ConfiguredLayoutControlProvider = Configured layout control provider
com.top_logic.layout.structure.ConfiguredLayoutControlProvider.tooltip = Configured variant of <i>layout control provider</i>.
com.top_logic.layout.structure.ContentLayoutControlProvider = Content layout control provider
com.top_logic.layout.structure.ContentLayoutControlProvider.Config.css-class = Css class
com.top_logic.layout.structure.ContentLayoutControlProvider.Config.css-class.tooltip = An additional custom CSS class to set in the layout control tag.
com.top_logic.layout.structure.ContentLayoutControlProvider.tooltip = Base class for <i>layout control provider</i> implementations that provide a display for leaf components.
com.top_logic.layout.structure.ContentLayouting = Content layouting
com.top_logic.layout.structure.ContentLayouting.tooltip = <i>Layouting</i> rendering through <i>write body inline</i>.
com.top_logic.layout.structure.ContextMenuLayoutControlProvider = Context menu layout control provider
com.top_logic.layout.structure.ContextMenuLayoutControlProvider.tooltip = <i>Decorating layout control provider</i> for <i>component</i> which only have a context menu as configuration.
com.top_logic.layout.structure.ControlRepresentableCP = Control representable CP
com.top_logic.layout.structure.ControlRepresentableCP.Config.css-class = Css class
com.top_logic.layout.structure.ControlRepresentableCP.Config.css-class.tooltip = An additional custom CSS class to set in the layout control tag.
com.top_logic.layout.structure.ControlRepresentableCP.tooltip = <i>Layout control provider</i> for <i>control representable</i> components.
com.top_logic.layout.structure.DeckPaneControlProvider = Deck pane control provider
com.top_logic.layout.structure.DeckPaneControlProvider.tooltip = The class <i>deck pane control provider</i> creates a <i>deck pane control</i> for the given <i>tab component</i>
com.top_logic.layout.structure.DecoratingLayoutControlProvider = Decorating layout control provider
com.top_logic.layout.structure.DecoratingLayoutControlProvider.tooltip = <i>Layout control provider</i> that decorates its result.
com.top_logic.layout.structure.DialogWindowControl.bottomBorderHeight = Specifies the height of the bottom border of the dialog.
com.top_logic.layout.structure.DialogWindowControl.closeDialogOnBackgroundClick = Writes the handler to close the underlying dialog when the user clicks on the background.
com.top_logic.layout.structure.DialogWindowControl.dialogTitle = Specifies the title text.
com.top_logic.layout.structure.DialogWindowControl.titleBarHeight = Specifies the height of the title of the dialog.
com.top_logic.layout.structure.DialogWindowControl.verticalBorderWidth = Specifies the width of the left and right border of the dialog.
com.top_logic.layout.structure.DialogWindowControl.writeDialogContent = Writes the content of the dialog.
com.top_logic.layout.structure.DialogWindowControl.writeDialogToolbar = Writes the tool list next to the title, which contains various commands that can be used to modify the dialog window.
com.top_logic.layout.structure.Expandable$ExpansionState = Expansion state
com.top_logic.layout.structure.Expandable$ExpansionState.tooltip = The states a <i>collapsible control</i> can have.
com.top_logic.layout.structure.Expandable.ExpansionState.MAXIMIZED = Maximized
com.top_logic.layout.structure.Expandable.ExpansionState.MAXIMIZED.tooltip = The content is taken out of normal flow and displayed maximized.
com.top_logic.layout.structure.Expandable.ExpansionState.MINIMIZED = Minimized
com.top_logic.layout.structure.Expandable.ExpansionState.MINIMIZED.tooltip = The content is not displayed.
com.top_logic.layout.structure.Expandable.ExpansionState.NORMALIZED = Normalized
com.top_logic.layout.structure.Expandable.ExpansionState.NORMALIZED.tooltip = The content is displayed regularly.
com.top_logic.layout.structure.ExpandableConfig = Expandable configuration
com.top_logic.layout.structure.ExpandableConfig.initiallyMinimized = Initially minimized
com.top_logic.layout.structure.ExpandableConfig.initiallyMinimized.tooltip = Whether the configured <i>expandable</i> should be displayed minimized initially.
com.top_logic.layout.structure.ExpandableConfig.tooltip = Configuration for an <i>expandable</i>.
com.top_logic.layout.structure.IFrameLayoutControlProvider = I frame layout control provider
com.top_logic.layout.structure.IFrameLayoutControlProvider.Config.css-class = Css class
com.top_logic.layout.structure.IFrameLayoutControlProvider.Config.css-class.tooltip = An additional custom CSS class to set in the layout control tag.
com.top_logic.layout.structure.IFrameLayoutControlProvider.Config.scrolling = Scrolling
com.top_logic.layout.structure.IFrameLayoutControlProvider.Config.scrolling.tooltip = Whether the displayed component should get scroll bars.
com.top_logic.layout.structure.IFrameLayoutControlProvider.tooltip = <i>Layout control provider</i> that embeds any legacy <i>component</i> through an <i>inline content view</i> in div layout.
com.top_logic.layout.structure.Icons.DIALOG_BOTTOM_BORDER_HEIGHT = Bottom border height of dialogs.
com.top_logic.layout.structure.Icons.DIALOG_TITLE_HEIGHT = Height of dialog titles.
com.top_logic.layout.structure.Icons.DIALOG_VERTICAL_BORDER_WIDTH = Vertical border width of dialogs.
com.top_logic.layout.structure.Icons.TAB_COMPONENT_DEFAULT_CONTROL_PROVIDER = Default <i>layout control</i> provider for tabbars.
com.top_logic.layout.structure.Icons.WINDOW_MINIMIZE = Image to minimize the window size.
com.top_logic.layout.structure.InlineLayoutControlProvider = Inline layout control provider
com.top_logic.layout.structure.InlineLayoutControlProvider.Config.page = Page
com.top_logic.layout.structure.InlineLayoutControlProvider.Config.page.tooltip = Optional reference to JSP page to render. <p> If this option is given, the default rendering defined by the component does not apply. Instead, the given JSP page is rendered in the context of the component. </p>
com.top_logic.layout.structure.InlineLayoutControlProvider.tooltip = <i>Layout control provider</i> that embeds any legacy <i>component</i> through an <i>inline content view</i> in div layout.
com.top_logic.layout.structure.IntroducesToolbar = Introduces toolbar
com.top_logic.layout.structure.IntroducesToolbar.tooltip = Annotation for <i>layout control providers</i> that explicitly introduce toolbars. <p> A toolbar of a component using a <i>layout control provider</i> annotated with <i>introduces toolbar</i> is not automatically moved to its surrounding layout, even if it is embedded only in a technical layout. </p>
com.top_logic.layout.structure.KeyEventConfiguration = Key event configuration
com.top_logic.layout.structure.KeyEventConfiguration.no-default-action-on-enter = No default action on enter
com.top_logic.layout.structure.KeyEventConfiguration.no-default-action-on-enter.tooltip = Whether the default action of the displayed <i>component</i> should <b>not</b> be executed when the user pressed "Enter" without any modifier, i.e. without "ctrl", "shift", or "alt".
com.top_logic.layout.structure.KeyEventConfiguration.tooltip = Configuration of global key events.
com.top_logic.layout.structure.LayoutControl.horizontal = Whether this element is part of a horizontal row.
com.top_logic.layout.structure.LayoutControl.layoutSize = Creates information for client-side layouting to be rendered into the <code>"data-layout-size"</code> attribute.
com.top_logic.layout.structure.LayoutControlFactory = Layout control factory
com.top_logic.layout.structure.LayoutControlFactory$GlobalConfig = Global configuration
com.top_logic.layout.structure.LayoutControlFactory$GlobalConfig.tooltip = Settings for <i>layout control factory</i> that are layout and theme-idependent.
com.top_logic.layout.structure.LayoutControlFactory.Config.automatic-maximization-groups = Automatic maximization groups
com.top_logic.layout.structure.LayoutControlFactory.Config.automatic-maximization-groups.tooltip = Whether to automatically create maximization groups based on the master-slave relation of components.
com.top_logic.layout.structure.LayoutControlFactory.Config.automatic-toolbars = Automatic toolbars
com.top_logic.layout.structure.LayoutControlFactory.Config.automatic-toolbars-in-dialogs = Automatic toolbars in dialogs
com.top_logic.layout.structure.LayoutControlFactory.Config.automatic-toolbars-in-dialogs.tooltip = Whether to also use automatic toolbars within dialogs, too.
com.top_logic.layout.structure.LayoutControlFactory.Config.automatic-toolbars.tooltip = Whether to automatically add component toolbars based on the <i>Toolbar</i> (<i>layout component configuration</i>) option.
com.top_logic.layout.structure.LayoutControlFactory.Config.defaultLayoutControlProvider = Default layout control provider
com.top_logic.layout.structure.LayoutControlFactory.Config.defaultLayoutControlProvider.tooltip = <i>Layout control provider</i> to use for leaf components that have no <i>layout control provider</i> assigned.
com.top_logic.layout.structure.LayoutControlFactory.GlobalConfig.dialogEnhancers = Dialog enhancers
com.top_logic.layout.structure.LayoutControlFactory.GlobalConfig.dialogEnhancers.tooltip = Extension point for processing dialogs before opening them.
com.top_logic.layout.structure.LayoutControlFactory.tooltip = The class <i>layout control factory</i> creates <i>layout controls</i> for <i>components</i>.
com.top_logic.layout.structure.MediaQueryControl$Layout = Layout
com.top_logic.layout.structure.MediaQueryControl$Layout.tooltip = <i>Layout control provider</i> creating a <i>content control</i> wrapped in a <i>media query control</i>.
com.top_logic.layout.structure.MediaQueryControl.Layout.Config.content-layout = Content layout
com.top_logic.layout.structure.MediaQueryControl.Layout.Config.content-layout.tooltip = <i>Layout control provider</i> for creating the component's content layout. <p> Note: Since CSS rules work only within a single document, the content layout must be rendered inline. </p>
com.top_logic.layout.structure.MediaQueryControl.Layout.Config.css-prefix = Css prefix
com.top_logic.layout.structure.MediaQueryControl.Layout.Config.css-prefix.tooltip = The prefix of the dynamically added CSS class.
com.top_logic.layout.structure.MediaQueryControl.Layout.Config.max-columns = Maximum columns
com.top_logic.layout.structure.MediaQueryControl.Layout.Config.max-columns.tooltip = The maximum number of columns to use. <p> This setting can be used to limit the maximum number of columns to a value smaller than <code>5</code>, without explicitly specifying column widths using <i>Sizes</i>. </p>
com.top_logic.layout.structure.MediaQueryControl.Layout.Config.sizes = Sizes
com.top_logic.layout.structure.MediaQueryControl.Layout.Config.sizes.tooltip = The minimum column sizes in ascending order. <p> If the available content width is smaller than the value at position <code>X</code>, the CSS class <code>dflSize[X]</code> is set. </p>
com.top_logic.layout.structure.MinimizableControl$Provider = Provider
com.top_logic.layout.structure.MinimizableControl$Provider.tooltip = <i>Layout control provider</i> wrapping a component in a <i>minimizable control</i>.
com.top_logic.layout.structure.MinimizableControl.Provider.Config.minimizedSize = Minimized size
com.top_logic.layout.structure.MinimizableControl.Provider.Config.minimizedSize.tooltip = The <i>size info</i> to use in minimized state.
com.top_logic.layout.structure.OrientationAware$Orientation = Orientation
com.top_logic.layout.structure.OrientationAware$Orientation.tooltip = The how child controls of a container are arranged.
com.top_logic.layout.structure.OrientationAware.Orientation.HORIZONTAL = Horizontal
com.top_logic.layout.structure.OrientationAware.Orientation.HORIZONTAL.tooltip = In a horizontal layout, children are placed from left to right.
com.top_logic.layout.structure.OrientationAware.Orientation.VERTICAL = Vertical
com.top_logic.layout.structure.OrientationAware.Orientation.VERTICAL.tooltip = A vertical layout, children are placed from top to bottom.
com.top_logic.layout.structure.PopupDialogControl$HorizontalPopupPosition = Horizontal popup position
com.top_logic.layout.structure.PopupDialogControl$HorizontalPopupPosition.tooltip = Horizontal position of the pop-up relative to the opening button.
com.top_logic.layout.structure.PopupDialogControl$VerticalPopupPosition = Vertical popup position
com.top_logic.layout.structure.PopupDialogControl$VerticalPopupPosition.tooltip = Vertical position of the pop-up relative to the opening button.
com.top_logic.layout.structure.PopupDialogControl.HorizontalPopupPosition.LEFT_ALIGNED = Left aligned
com.top_logic.layout.structure.PopupDialogControl.HorizontalPopupPosition.LEFT_ALIGNED.tooltip = Below or above the button keeping the left border of the popup aligned to the left side of the button. <pre> +------+ |Button| +------+ +------------------ |Popu-up | | </pre>
com.top_logic.layout.structure.PopupDialogControl.HorizontalPopupPosition.RIGHT_ALIGNED = Right aligned
com.top_logic.layout.structure.PopupDialogControl.HorizontalPopupPosition.RIGHT_ALIGNED.tooltip = Below or above the button keeping the right border of the popup aligned to the right side of the button. <pre> +------+ |Button| +------+ +-----------------+ Popu-up| | | </pre>
com.top_logic.layout.structure.PopupDialogControl.HorizontalPopupPosition.TO_THE_LEFT = To the left
com.top_logic.layout.structure.PopupDialogControl.HorizontalPopupPosition.TO_THE_LEFT.tooltip = Aligning the right border of the pop-up to the left side of the button. <pre> ------------------++------+ Popu-up||Button| |+------+ | </pre>
com.top_logic.layout.structure.PopupDialogControl.HorizontalPopupPosition.TO_THE_RIGHT = To the right
com.top_logic.layout.structure.PopupDialogControl.HorizontalPopupPosition.TO_THE_RIGHT.tooltip = Aligning the left border of the pop-up to the right side of the button. <pre> +------++------------------ |Button||Popu-up +------+| | </pre>
com.top_logic.layout.structure.PopupDialogControl.VerticalPopupPosition.ABOVE = Above
com.top_logic.layout.structure.PopupDialogControl.VerticalPopupPosition.ABOVE.tooltip = Opening the pop-up above the button or keeping the bottom borders of the button and the pop-up aligned.
com.top_logic.layout.structure.PopupDialogControl.VerticalPopupPosition.BELOW = Below
com.top_logic.layout.structure.PopupDialogControl.VerticalPopupPosition.BELOW.tooltip = Opening the pop-up below the button or keeping the top borders of the button and the pop-up aligned.
com.top_logic.layout.structure.Scrolling = Scrolling
com.top_logic.layout.structure.Scrolling.AUTO = Auto
com.top_logic.layout.structure.Scrolling.AUTO.tooltip = Show a scroll bar if the content does not fit.
com.top_logic.layout.structure.Scrolling.NO = No
com.top_logic.layout.structure.Scrolling.NO.tooltip = Never show scroll bars, clip content instead.
com.top_logic.layout.structure.Scrolling.YES = Yes
com.top_logic.layout.structure.Scrolling.YES.tooltip = Always show scroll bars.
com.top_logic.layout.structure.Scrolling.tooltip = Strategy for scroll bar display.
com.top_logic.layout.structure.SeparateTableControlProvider = Separate table control provider
com.top_logic.layout.structure.SeparateTableControlProvider.Config.sidebar = Sidebar
com.top_logic.layout.structure.SeparateTableControlProvider.Config.sidebar.tooltip = Whether a filter sidebar for this table shall be shown, or not.
com.top_logic.layout.structure.SeparateTableControlProvider.Config.sidebarMinimized = Sidebar minimized
com.top_logic.layout.structure.SeparateTableControlProvider.Config.sidebarMinimized.tooltip = Whether sidebar shall be displayed minimized initially, false otherwise.
com.top_logic.layout.structure.SeparateTableControlProvider.Config.sidebarWidth = Sidebar width
com.top_logic.layout.structure.SeparateTableControlProvider.Config.sidebarWidth.tooltip = Width of the sidebar.
com.top_logic.layout.structure.SeparateTableControlProvider.Config.tableName = Table name
com.top_logic.layout.structure.SeparateTableControlProvider.Config.tableName.tooltip = The name of the table field in the FormContext of the displayed component.
com.top_logic.layout.structure.SeparateTableControlProvider.Config.toolbar = Toolbar
com.top_logic.layout.structure.SeparateTableControlProvider.Config.toolbar.tooltip = Whether an explicit toolbar should be allocated for this table. <p> This should only be set to <code>false</code>, to prevent duplicate toolbars, if a toolbar is allocated in the context by other means. </p>
com.top_logic.layout.structure.SeparateTableControlProvider.tooltip = ControlProvider for takes a given <i>table field</i> from the <i>form context</i> of a <i>form component</i> and renders it separate. <p> This enables to render a table of a component as frozen table. </p>
com.top_logic.layout.structure.SimpleDecoratingLayoutControlProvider = Simple decorating layout control provider
com.top_logic.layout.structure.SimpleDecoratingLayoutControlProvider.tooltip = <i>Decorating layout control provider</i> for <i>layout control provider</i> which actually have no configuration.
com.top_logic.layout.structure.TableFilterLayoutControlProvider = Table filter layout control provider
com.top_logic.layout.structure.TableFilterLayoutControlProvider.Config.maximizeRoot = Maximize root
com.top_logic.layout.structure.TableFilterLayoutControlProvider.Config.maximizeRoot.tooltip = Name of a surrounding layout that should be maximized, if the maximize button in the table sidebar is pressed.
com.top_logic.layout.structure.TableFilterLayoutControlProvider.tooltip = <i>Layout control provider</i>, that provides a <i>layout control</i> for separate filter handling of a table.
com.top_logic.layout.structure.TableWithSidebar = Table with sidebar
com.top_logic.layout.structure.TableWithSidebar.Config.filterWidth = Filter width
com.top_logic.layout.structure.TableWithSidebar.Config.filterWidth.tooltip = Width of the sidebar.
com.top_logic.layout.structure.TableWithSidebar.tooltip = <i>Layout control provider</i>, that provides a <i>layout control</i> for a table with a filter sidebar.
com.top_logic.layout.structure.ToolbarOptions = Toolbar options
com.top_logic.layout.structure.ToolbarOptions.showMaximize = Show maximize
com.top_logic.layout.structure.ToolbarOptions.showMaximize.tooltip = Whether the maximize button is shown in the toolbar.
com.top_logic.layout.structure.ToolbarOptions.showMinimize = Show minimize
com.top_logic.layout.structure.ToolbarOptions.showMinimize.tooltip = Whether the minimize button is shown in the toolbar.
com.top_logic.layout.structure.ToolbarOptions.tooltip = Configuration options that describe toolbar properties.
com.top_logic.layout.structure.WrappingControl.child = This method returns the wrapped control.
com.top_logic.layout.tabbar.Icons.TAB_BAR_TEMPLATE = Template for rendering a tab bar.
com.top_logic.layout.tabbar.Icons.TAB_TEMPLATE = Template for rendering a tab.
com.top_logic.layout.tabbar.TabBarControl.additionalRightContentCommands = Writes a button to the right edge of the tab container that contains commands. This is always the case when the <b>design mode</b> is active.
com.top_logic.layout.tabbar.TabBarControl.dataResize = Writes a JavaScript function that makes the tab bar adjust to the size of the browser.
com.top_logic.layout.tabbar.TabBarControl.scrollLeft = Writes the JavaScript method that will be executed when the left arrow is clicked to scroll left.
com.top_logic.layout.tabbar.TabBarControl.scrollLeftArrowIcon = Writes the left arrow icon for scrolling to the left tabs, if not all of them have space in the browser window.
com.top_logic.layout.tabbar.TabBarControl.scrollRight = Writes the JavaScript method that will be executed when the right arrow is being clicked to scroll right.
com.top_logic.layout.tabbar.TabBarControl.scrollRightArrowIcon = Writes the right arrow icon for scrolling to the right tabs, if not all of them have space in the browser window.
com.top_logic.layout.tabbar.TabBarControl.tabUpdateScript = Writes a script that controls the visibility of the tab buttons. When the right arrow is pressed, the tabs on the right should become visible and the tabs that disappear on the left should become invisible.
com.top_logic.layout.tabbar.TabBarControl.tabbarClass = CSS class for the tab bar container.
com.top_logic.layout.tabbar.TabBarControl.tabs = Writes all tabs.
com.top_logic.layout.tabbar.TabBarControlProvider = Tab bar control provider
com.top_logic.layout.tabbar.TabBarControlProvider.tooltip = The class <i>tab bar control provider</i> is a <i>layout control provider</i> which creates a <i>layout control</i> for the tab bar of a <i>tab component</i>.
com.top_logic.layout.tabbar.TabBarNamingScheme$TabBarName = Tab bar name
com.top_logic.layout.tabbar.TabBarNamingScheme$TabBarName.tooltip = Identifier of the <i>tab bar model</i> within a <i>tab component</i>.
com.top_logic.layout.tabbar.TabContent.isTabSelected = Indicates whether this tab is currently active and selected.
com.top_logic.layout.tabbar.TabContent.label = Writes the label to the tab.
com.top_logic.layout.tabbar.TabContent.onclick = Specifies the JavaScript method that is executed when the tab is pressed. The tab container then moves the tabs so that the clicked tab becomes fully visible on the screen.
com.top_logic.layout.tabbar.TabContent.tabID = Returns the ID of the tab. Not all tabs have the same ID. The index of the tab is appended to the ID at the end.
com.top_logic.layout.tabbar.TabContent.tabKey = Writes the full technical name of this tab.
com.top_logic.layout.tabbar.TabContent.tooltip = Short explanation that is displayed when the mouse pointer is moved over the tab. <p> <b>Tooltip</b> should be used for the <b>data-tooltip</b> variable, because it returns text inside HTML tags. </p>
com.top_logic.layout.tabbar.TabInfo = Tab info
com.top_logic.layout.tabbar.TabInfo$TabConfig = Tab configuration
com.top_logic.layout.tabbar.TabInfo$TabConfig.tooltip = Configuration interface of <i>tab info</i>.
com.top_logic.layout.tabbar.TabInfo.TabConfig.decorator = Decorator
com.top_logic.layout.tabbar.TabInfo.TabConfig.decorator.tooltip = Decorator for the tab.
com.top_logic.layout.tabbar.TabInfo.TabConfig.id = ID
com.top_logic.layout.tabbar.TabInfo.TabConfig.id.tooltip = ID of a tab
com.top_logic.layout.tabbar.TabInfo.TabConfig.image = Image
com.top_logic.layout.tabbar.TabInfo.TabConfig.image.tooltip = Icon for the tab.
com.top_logic.layout.tabbar.TabInfo.TabConfig.imageSelected = Image selected
com.top_logic.layout.tabbar.TabInfo.TabConfig.imageSelected.tooltip = An icon for the selected state of a tab.
com.top_logic.layout.tabbar.TabInfo.TabConfig.label = Label
com.top_logic.layout.tabbar.TabInfo.TabConfig.label.tooltip = Label/name for a tab.
com.top_logic.layout.tabbar.TabInfo.TabConfig.rendered = Rendered
com.top_logic.layout.tabbar.TabInfo.TabConfig.rendered.tooltip = Whether the tab should be rendered or not.
com.top_logic.layout.tabbar.TabInfo.tooltip = Save the information needed for a tabber in a tabframe. Since writing a Tabber is quite complex this is not an Adorner.
com.top_logic.layout.tabbar.TabSwitchCommandModel$AbstractTabSwitchVetoCommand = Tab switch veto command
com.top_logic.layout.tabbar.TabSwitchCommandModel$AbstractTabSwitchVetoCommand.tooltip = The class <i>tab switch veto command</i> is a command which switches a <i>tab component</i> to a card whose name is stored in the argument map under the key <code>"tabName"</code>. Before switching the tab, a <i>tab switch veto listener</i> is consulted.
com.top_logic.layout.tabbar.TabSwitchCommandModel$ConstantTabSwitchVetoCommand = Constant tab switch veto command
com.top_logic.layout.tabbar.TabSwitchCommandModel$ConstantTabSwitchVetoCommand.tooltip = The class <i>constant tab switch veto command</i> always uses a given <i>tab switch veto listener</i>.
com.top_logic.layout.tabbar.TabSwitchCommandModel$DefaultTabSwitchVetoCommand = Default tab switch veto command
com.top_logic.layout.tabbar.TabSwitchCommandModel$DefaultTabSwitchVetoCommand.tooltip = The class <i>default tab switch veto command</i> is an <i>tab switch veto command</i> whose <i>tab switch veto listener</i> is a <i>default tab switch veto listener</i> which opens the dialog in the window in which the command is executed.
com.top_logic.layout.table.GenericTableDataNaming$GenericTableDataName = Generic table data name
com.top_logic.layout.table.GenericTableDataNaming$GenericTableDataName.tooltip = <i>Generic model name</i> for <i>generic table data naming</i>.
com.top_logic.layout.table.SortConfig = Sort configuration
com.top_logic.layout.table.SortConfig.ascending = Ascending
com.top_logic.layout.table.SortConfig.ascending.tooltip = Whether the <i>Column</i> is sorted in ascending order. <p> <code>false</code> if the column is sorted in descending order. </p>
com.top_logic.layout.table.SortConfig.column = Column
com.top_logic.layout.table.SortConfig.column.tooltip = The sorted column name.
com.top_logic.layout.table.SortConfig.tooltip = Sort configuration of a single column.
com.top_logic.layout.table.TableRenderer.Config.numberHeaderRows = Number header rows
com.top_logic.layout.table.TableRenderer.Config.numberHeaderRows.tooltip = Number of rows in header of the table.
com.top_logic.layout.table.command.AbstractTableCommandProvider = Table command provider
com.top_logic.layout.table.command.AbstractTableCommandProvider.Config.css-class = Css class
com.top_logic.layout.table.command.AbstractTableCommandProvider.Config.css-class.tooltip = A custom CSS class to render.
com.top_logic.layout.table.command.AbstractTableCommandProvider.Config.image = Image
com.top_logic.layout.table.command.AbstractTableCommandProvider.Config.image-disabled = Image disabled
com.top_logic.layout.table.command.AbstractTableCommandProvider.Config.image-disabled.tooltip = The image to display, if the button gets disabled.
com.top_logic.layout.table.command.AbstractTableCommandProvider.Config.image.tooltip = The button image.
com.top_logic.layout.table.command.AbstractTableCommandProvider.Config.label = Label
com.top_logic.layout.table.command.AbstractTableCommandProvider.Config.label.tooltip = The label to to display.
com.top_logic.layout.table.command.AbstractTableCommandProvider.Config.show-progress = Show progress
com.top_logic.layout.table.command.AbstractTableCommandProvider.Config.show-progress.tooltip = Whether to lock the UI while executing.
com.top_logic.layout.table.command.AbstractTableCommandProvider.Config.tooltip = Tooltip
com.top_logic.layout.table.command.AbstractTableCommandProvider.Config.tooltip-caption = Tooltip caption
com.top_logic.layout.table.command.AbstractTableCommandProvider.Config.tooltip-caption.tooltip = The caption displayed above the tooltip.
com.top_logic.layout.table.command.AbstractTableCommandProvider.Config.tooltip.tooltip = The tooltip for the button.
com.top_logic.layout.table.command.AbstractTableCommandProvider.tooltip = Base class for <i>table command providers</i> that thake their visual aspects from their configuration.
com.top_logic.layout.table.command.DirectTableCommandProvider = Direct table command provider
com.top_logic.layout.table.command.DirectTableCommandProvider.tooltip = <i>Table command provider</i> that implements <i>table command</i> directly.
com.top_logic.layout.table.command.TableCommandConfig = Table command configuration
com.top_logic.layout.table.command.TableCommandConfig.button = Button
com.top_logic.layout.table.command.TableCommandConfig.button.tooltip = <i>Table command provider</i> creating the button.
com.top_logic.layout.table.command.TableCommandConfig.toolbar-group = Toolbar group
com.top_logic.layout.table.command.TableCommandConfig.toolbar-group.tooltip = The toolbar group where to display the command. <p> Toolbar groups are top-level <i>Cliques</i> (<i>command handler factory configuration</i>) configured in the <i>command handler factory</i>. </p>
com.top_logic.layout.table.command.TableCommandConfig.tooltip = Configuration part of <i>Commands</i> (<i>table configuration</i>).
com.top_logic.layout.table.component.AbstractTableFilterProvider = Table filter provider
com.top_logic.layout.table.component.AbstractTableFilterProvider.Config.separate-option-display-threshold = Separate option display threshold
com.top_logic.layout.table.component.AbstractTableFilterProvider.Config.separate-option-display-threshold.tooltip = Threshold, below that every option will be displayed as separate filter entry. A value of -1 means infinity.
com.top_logic.layout.table.component.AbstractTableFilterProvider.Config.show-non-matching-options = Show non matching options
com.top_logic.layout.table.component.AbstractTableFilterProvider.Config.show-non-matching-options.tooltip = True, when options, that do not match filter criteria, shall be displayed, false otherwise
com.top_logic.layout.table.component.AbstractTableFilterProvider.Config.show-option-entries = Show option entries
com.top_logic.layout.table.component.AbstractTableFilterProvider.Config.show-option-entries.tooltip = True, if option entries shall be displayed separately at all, false otherwise
com.top_logic.layout.table.component.AbstractTableFilterProvider.tooltip = Abstract filter provider for plugging some <i>configured filter</i> into a table column filter.
com.top_logic.layout.table.component.BuilderComponent = Builder component
com.top_logic.layout.table.component.BuilderComponent.Config.modelBuilder = Model builder
com.top_logic.layout.table.component.BuilderComponent.tooltip = Component, which will get it's model from the configured builder class.
com.top_logic.layout.table.component.ColumnsChannel$Config = Configuration
com.top_logic.layout.table.component.ColumnsChannel$Config.tooltip = Configuration for components that supports the column channel.
com.top_logic.layout.table.component.ColumnsChannel.Config.columns = Columns
com.top_logic.layout.table.component.ColumnsChannel.Config.columns.tooltip = Definition of the target channel to connect the columns channel to.
com.top_logic.layout.table.component.ComponentTableConfig = Component table configuration
com.top_logic.layout.table.component.ComponentTableConfig.tooltip = <i>Table configuration</i> with defaults for <i>tab components</i>.
com.top_logic.layout.table.component.DefaultTableDataName = Default table data name
com.top_logic.layout.table.component.DefaultTableDataName.default-table-data-owner = Default table data owner
com.top_logic.layout.table.component.DefaultTableDataName.tooltip = The <i>default table data name</i> consists of a <i>model name</i> for the <i>table data owner</i> of the <i>default table data</i>.
com.top_logic.layout.table.component.OpenTableComponentCompareViewCommand = Open table component compare view command
com.top_logic.layout.table.component.OpenTableComponentCompareViewCommand.tooltip = <i>Open compare view command</i> for <i>table components</i>.
com.top_logic.layout.table.component.SelectableBuilderComponent = Selectable builder component
com.top_logic.layout.table.component.SelectableBuilderComponent.tooltip = <i>Builder component</i> holding a selection.
com.top_logic.layout.table.component.TableComponent = Table component
com.top_logic.layout.table.component.TableComponent.Config.caching = Caching
com.top_logic.layout.table.component.TableComponent.Config.checkMissingTypeConfiguration = Check missing type configuration
com.top_logic.layout.table.component.TableComponent.Config.checkMissingTypeConfiguration.tooltip = Check for missing types in <i>Object type</i>. <p> Enable to find problems in existing tables when doing the migration for ticket #27174. They will be logged as errors when the table is used. <br/> Disable it afterwards, as this check is time consuming and slows the application down. </p>
com.top_logic.layout.table.component.TableComponent.Config.columnBuilderClass = Column builder class
com.top_logic.layout.table.component.TableComponent.Config.columnSecurityProviderClass = Column security provider class
com.top_logic.layout.table.component.TableComponent.Config.componentTableConfigProvider = Component table configuration provider
com.top_logic.layout.table.component.TableComponent.Config.componentTableConfigProvider.tooltip = Returns the factory to create programmatic <i>table configuration provider</i> for the configured <i>table component</i>.
com.top_logic.layout.table.component.TableComponent.Config.defaultSortable = Default sortable
com.top_logic.layout.table.component.TableComponent.Config.excludeColumns = Exclude columns
com.top_logic.layout.table.component.TableComponent.Config.formMemberProvider = Form member provider
com.top_logic.layout.table.component.TableComponent.Config.objectType = Object type
com.top_logic.layout.table.component.TableComponent.Config.selectable = Selectable
com.top_logic.layout.table.component.TableComponent.Config.table = Table
com.top_logic.layout.table.component.TableComponent.Config.useFooterForPaging = Use footer for paging
com.top_logic.layout.table.component.TableComponent.tooltip = Component for displaying and working with tables.
com.top_logic.layout.table.control.FilterFormOwner$Naming$Name = Name
com.top_logic.layout.table.control.FilterFormOwner$Naming$Name.tooltip = <i>Model name</i> for <i>filter form owner</i>.
com.top_logic.layout.table.control.FilterFormOwner.Naming.Name.context-name = Context name
com.top_logic.layout.table.control.FilterFormOwner.Naming.Name.context-name.tooltip = The name/id of the form context associated with the table of <i>Table name</i>
com.top_logic.layout.table.control.FilterFormOwner.Naming.Name.table-name = Table name
com.top_logic.layout.table.control.FilterFormOwner.Naming.Name.table-name.tooltip = The context table.
com.top_logic.layout.table.control.Icons.DELETE_TOOLBAR = Image of the command to delete a table row.
com.top_logic.layout.table.control.Icons.DELETE_TOOLBAR_DISABLED = Disabled image of the command to delete a table row.
com.top_logic.layout.table.control.Icons.MOVE_ROW_DOWN = Image of the command to move the given table row down.
com.top_logic.layout.table.control.Icons.MOVE_ROW_DOWN_DISABLED = Disabled image of the command to move the given table row down.
com.top_logic.layout.table.control.Icons.MOVE_ROW_TO_BOTTOM = Image of the command to move the given table row to the bottom.
com.top_logic.layout.table.control.Icons.MOVE_ROW_TO_BOTTOM_DISABLED = Disabled image of the command to move the given table row to the bottom.
com.top_logic.layout.table.control.Icons.MOVE_ROW_TO_TOP = Image of the command to move the given table row to the top.
com.top_logic.layout.table.control.Icons.MOVE_ROW_TO_TOP_DISABLED = Disabled image of the command to move the given table row to the top.
com.top_logic.layout.table.control.Icons.MOVE_ROW_UP = Image of the command to move the given table row up.
com.top_logic.layout.table.control.Icons.MOVE_ROW_UP_DISABLED = Disabled image of the command to move the given table row up.
com.top_logic.layout.table.control.Icons.OPEN_SELECTOR = Image of the command to select a table row.
com.top_logic.layout.table.control.Icons.OPEN_SELECTOR_DISABLED = Disabled image of the command to select a table row.
com.top_logic.layout.table.control.SortConfigDialog$Config = Configuration
com.top_logic.layout.table.control.SortConfigDialog$Config.tooltip = Configuration for <i>sort configuration dialog</i>.
com.top_logic.layout.table.control.SortConfigDialog$OpenForControlRepresentable = Open for control representable
com.top_logic.layout.table.control.SortConfigDialog$OpenForControlRepresentable.tooltip = External command to open the <i>sort configuration dialog</i> for a <i>control representable</i> component that is rendered through a <i>table control</i>.
com.top_logic.layout.table.control.SortConfigDialog$OpenForTableComponent = Open for table component
com.top_logic.layout.table.control.SortConfigDialog$OpenForTableComponent.tooltip = External command to open the <i>sort configuration dialog</i> for a <i>table component</i>.
com.top_logic.layout.table.control.SortConfigDialog.Config.height = Height
com.top_logic.layout.table.control.SortConfigDialog.Config.height.tooltip = The height of the dialog to sort columns.
com.top_logic.layout.table.control.SortConfigDialog.Config.width = Width
com.top_logic.layout.table.control.SortConfigDialog.Config.width.tooltip = The width of the dialog to sort columns.
com.top_logic.layout.table.control.TableControl$SelectionType = Selection type
com.top_logic.layout.table.control.TableControl$SelectionType.tooltip = The way how the selection has to be changed.
com.top_logic.layout.table.control.TableControl.SelectionType.AREA = Area
com.top_logic.layout.table.control.TableControl.SelectionType.AREA.tooltip = All elements between the last clicked row and the clicked row must be selected. Other selection remains untouched.
com.top_logic.layout.table.control.TableControl.SelectionType.SINGLE = Single
com.top_logic.layout.table.control.TableControl.SelectionType.SINGLE.tooltip = The clicked row must be selected.
com.top_logic.layout.table.control.TableControl.SelectionType.TOGGLE_AREA = Toggle area
com.top_logic.layout.table.control.TableControl.SelectionType.TOGGLE_AREA.tooltip = All elements between the last clicked row and the clicked row must be selected. Other elements are deselected.
com.top_logic.layout.table.control.TableControl.SelectionType.TOGGLE_SINGLE = Toggle single
com.top_logic.layout.table.control.TableControl.SelectionType.TOGGLE_SINGLE.tooltip = The selection state of the row has to be toggled, i.e. if the row is currently selected, it must be de-selected, if it is not selected, it must be selected.
com.top_logic.layout.table.control.TableControl.cols = Access to the table's columns.
com.top_logic.layout.table.control.TableControl.rows = Access to the table's rows.
com.top_logic.layout.table.control.TableControl.title = The table's title.
com.top_logic.layout.table.control.TableControl.toolbar = The tables <i>tool bar</i>.
com.top_logic.layout.table.dnd.TableDropEvent$Position = Position
com.top_logic.layout.table.dnd.TableDropEvent$Position.tooltip = Specifier where a drop event happened relative to a reference row in a table.
com.top_logic.layout.table.dnd.TableDropEvent.Position.ABOVE = Above
com.top_logic.layout.table.dnd.TableDropEvent.Position.ABOVE.tooltip = Just before the reference row.
com.top_logic.layout.table.dnd.TableDropEvent.Position.BELOW = Below
com.top_logic.layout.table.dnd.TableDropEvent.Position.BELOW.tooltip = Just after the reference row.
com.top_logic.layout.table.dnd.TableDropEvent.Position.ONTO = Onto
com.top_logic.layout.table.dnd.TableDropEvent.Position.ONTO.tooltip = Unordered drop on the reference row.
com.top_logic.layout.table.dnd.TableDropTarget$DropType = Drop type
com.top_logic.layout.table.dnd.TableDropTarget$DropType.tooltip = Kind of drop operation possible in a <i>table drop target</i>.
com.top_logic.layout.table.dnd.TableDropTarget.DropType.ORDERED = Ordered
com.top_logic.layout.table.dnd.TableDropTarget.DropType.ORDERED.tooltip = A drop is specified as "before", or "after" a reference row.
com.top_logic.layout.table.dnd.TableDropTarget.DropType.ROW = Row
com.top_logic.layout.table.dnd.TableDropTarget.DropType.ROW.tooltip = A drop occurs to a row itself, without positioning relative to the target row.
com.top_logic.layout.table.export.AbstractTableExportHandler = Table export handler
com.top_logic.layout.table.export.AbstractTableExportHandler.tooltip = Base class for <i>table data</i> exports.
com.top_logic.layout.table.export.ExcelExportHandler = Excel export handler
com.top_logic.layout.table.export.ExcelExportHandler.tooltip = Handler for generating Excel reports from <i>table data</i>.
com.top_logic.layout.table.export.StreamingExcelExportHandler = Streaming Excel export handler
com.top_logic.layout.table.export.StreamingExcelExportHandler.Config.exportNameKey = Download name
com.top_logic.layout.table.export.StreamingExcelExportHandler.Config.exportNameKey.tooltip = File name of the created download.
com.top_logic.layout.table.export.StreamingExcelExportHandler.Config.exportSheetKey = Sheet name
com.top_logic.layout.table.export.StreamingExcelExportHandler.Config.exportSheetKey.tooltip = Name of the Excel sheet that is filled with data.
com.top_logic.layout.table.export.StreamingExcelExportHandler.tooltip = <i>Command handler</i> exporting <i>table data</i> to Excel format.
com.top_logic.layout.table.filter.CellExistenceTesterProxy = Cell existence tester proxy
com.top_logic.layout.table.filter.CellExistenceTesterProxy.Config.tester = Tester
com.top_logic.layout.table.filter.CellExistenceTesterProxy.Config.tester.tooltip = Configuration of the <i>cell existence tester</i> to dispatch to.
com.top_logic.layout.table.filter.CellExistenceTesterProxy.tooltip = Proxy for a configured <i>cell existence tester</i>.
com.top_logic.layout.table.filter.CollectionLabelFilterProvider = Collection label filter provider
com.top_logic.layout.table.filter.CollectionLabelFilterProvider.Config.mandatory = Mandatory
com.top_logic.layout.table.filter.CollectionLabelFilterProvider.tooltip = <i>Table filter provider</i> that creates filters for <i>collection</i> valued columns based on rendered labels.
com.top_logic.layout.table.filter.ComparableFilterConfiguration$Operators = Operators
com.top_logic.layout.table.filter.ComparableFilterConfiguration$Operators.tooltip = The possible operators for comparison
com.top_logic.layout.table.filter.ComparableFilterConfiguration.Operators.BETWEEN = Between
com.top_logic.layout.table.filter.ComparableFilterConfiguration.Operators.EQUALS = Equals
com.top_logic.layout.table.filter.ComparableFilterConfiguration.Operators.GREATER_OR_EQUALS = Greater or equals
com.top_logic.layout.table.filter.ComparableFilterConfiguration.Operators.GREATER_THAN = Greater than
com.top_logic.layout.table.filter.ComparableFilterConfiguration.Operators.LESS_OR_EQUALS = Less or equals
com.top_logic.layout.table.filter.ComparableFilterConfiguration.Operators.LESS_THAN = Less than
com.top_logic.layout.table.filter.ComparableFilterConfiguration.Operators.NOT_EQUAL = Not equal
com.top_logic.layout.table.filter.ComparableTableFilterProvider = Comparable table filter provider
com.top_logic.layout.table.filter.ComparableTableFilterProvider.Config.comparison-operators-provider = Comparison operators provider
com.top_logic.layout.table.filter.ComparableTableFilterProvider.Config.comparison-operators-provider.tooltip = Provider of available operators for the given filter
com.top_logic.layout.table.filter.ComparableTableFilterProvider.Config.mandatory = Mandatory
com.top_logic.layout.table.filter.ComparableTableFilterProvider.Config.mandatory.tooltip = Whether the column contains mandatory values, or not
com.top_logic.layout.table.filter.ComparableTableFilterProvider.tooltip = <i>Table filter provider</i> for <i>comparable</i>-valued columns.
com.top_logic.layout.table.filter.DateTableFilterProvider = Date table filter provider
com.top_logic.layout.table.filter.DateTableFilterProvider.tooltip = <i>Table filter provider</i> for <i>date</i>-valued columns where the values represent whole days (without time).
com.top_logic.layout.table.filter.DateTimeTableFilterProvider = Date time table filter provider
com.top_logic.layout.table.filter.DateTimeTableFilterProvider.tooltip = <i>Comparable table filter provider</i> for <i>date</i> values where the time value is significant.
com.top_logic.layout.table.filter.DefaultClassificationTableFilterProvider = Default classification table filter provider
com.top_logic.layout.table.filter.DefaultClassificationTableFilterProvider.Config.classifications = Classifications
com.top_logic.layout.table.filter.DefaultClassificationTableFilterProvider.Config.mandatory = Mandatory
com.top_logic.layout.table.filter.DefaultClassificationTableFilterProvider.Config.multi = Multiple
com.top_logic.layout.table.filter.DefaultClassificationTableFilterProvider.tooltip = Configurable <i>table filter provider</i> for enumerations.
com.top_logic.layout.table.filter.GlobalTextFilterProvider = Global text filter provider
com.top_logic.layout.table.filter.GlobalTextFilterProvider.tooltip = <i>Table filter provider</i> for <i>global text filter</i>.
com.top_logic.layout.table.filter.InstanceofTester = Instanceof tester
com.top_logic.layout.table.filter.InstanceofTester.Config.supports-null = Supports null
com.top_logic.layout.table.filter.InstanceofTester.Config.supports-null.tooltip = Whether null is supported or not.
com.top_logic.layout.table.filter.InstanceofTester.Config.type = Type
com.top_logic.layout.table.filter.InstanceofTester.Config.type.tooltip = The supported type.
com.top_logic.layout.table.filter.InstanceofTester.tooltip = <i>Cell existence tester</i> checking for instance of a given class.
com.top_logic.layout.table.filter.LabelFilterProvider = Label filter provider
com.top_logic.layout.table.filter.LabelFilterProvider.Config.mandatory = Mandatory
com.top_logic.layout.table.filter.LabelFilterProvider.tooltip = <i>Table filter provider</i> for label-based filters.
com.top_logic.layout.table.filter.MandatoryDateFilterProvider = Mandatory date filter provider
com.top_logic.layout.table.filter.MandatoryDateFilterProvider.tooltip = <i>Date table filter provider</i> for mandatory columns.
com.top_logic.layout.table.filter.MappedCellExistenceTester = Mapped cell existence tester
com.top_logic.layout.table.filter.MappedCellExistenceTester.Config.column-mapping = Column mapping
com.top_logic.layout.table.filter.MappedCellExistenceTester.Config.column-mapping.tooltip = <i>Mapping</i> for the column names.
com.top_logic.layout.table.filter.MappedCellExistenceTester.Config.object-mapping = Object mapping
com.top_logic.layout.table.filter.MappedCellExistenceTester.Config.object-mapping.tooltip = <i>Mapping</i> for the row objects.
com.top_logic.layout.table.filter.MappedCellExistenceTester.tooltip = <i>Cell existence tester proxy</i> which maps the row object and the column name using configured <i>mappings</i>.
com.top_logic.layout.table.filter.NumberTableFilterProvider = Number table filter provider
com.top_logic.layout.table.filter.NumberTableFilterProvider.tooltip = <i>Comparable table filter provider</i> filtering numbers.
com.top_logic.layout.table.filter.SelectableOptionFilterProvider = Selectable option filter provider
com.top_logic.layout.table.filter.SelectableOptionFilterProvider.Config.multiple-values = Multiple values
com.top_logic.layout.table.filter.SelectableOptionFilterProvider.Config.multiple-values.tooltip = Whether a table cell contains multiple values (e.g. collection), or not.
com.top_logic.layout.table.filter.SelectableOptionFilterProvider.Config.use-raw-options = Use raw options
com.top_logic.layout.table.filter.SelectableOptionFilterProvider.Config.use-raw-options.tooltip = True, if raw value from accessor shall be use, false, if string mapping by full text provider is requested
com.top_logic.layout.table.filter.SelectableOptionFilterProvider.tooltip = <i>Table filter provider</i> of <i>selection filter</i>.
com.top_logic.layout.table.filter.SimpleDateFilterProvider = Simple date filter provider
com.top_logic.layout.table.filter.SimpleDateFilterProvider.tooltip = <i>Date table filter provider</i> for non-mandatory columns.
com.top_logic.layout.table.filter.TableFilterEvent$FilterEventTypes = Filter event types
com.top_logic.layout.table.filter.TableFilterEvent$FilterEventTypes.tooltip = Enumeration of event types, which may occur in a <i>table filter</i>.
com.top_logic.layout.table.filter.TableFilterEvent.FilterEventTypes.CONFIGURATION_UPDATE = Configuration update
com.top_logic.layout.table.filter.TableFilterEvent.FilterEventTypes.DEACTIVATION = Deactivation
com.top_logic.layout.table.filter.TableFilterEvent.FilterEventTypes.ERROR = Error
com.top_logic.layout.table.filter.TableFilterEvent.FilterEventTypes.RE_APPLIANCE = Re appliance
com.top_logic.layout.table.filter.TableFilterModelEvent$FilterModelEventTypes = Filter model event types
com.top_logic.layout.table.filter.TableFilterModelEvent$FilterModelEventTypes.tooltip = Enumeration of event types, which may occur in a <i>table filter model</i>.
com.top_logic.layout.table.filter.TableFilterModelEvent.FilterModelEventTypes.CONFIGURATION_UPDATE = Configuration update
com.top_logic.layout.table.filter.TableFilterModelEvent.FilterModelEventTypes.DEACTIVATION = Deactivation
com.top_logic.layout.table.filter.TableFilterModelEvent.FilterModelEventTypes.RE_APPLIANCE = Re appliance
com.top_logic.layout.table.filter.TextFilterViewBuilder$Config = Configuration
com.top_logic.layout.table.filter.TextFilterViewBuilder$Config.tooltip = Configuration for this view
com.top_logic.layout.table.filter.TextFilterViewBuilder.Config.use-regular-expressions = Use regular expressions
com.top_logic.layout.table.filter.TextFilterViewBuilder.Config.use-regular-expressions.tooltip = True, if regular expressions shall be enabled, false otherwise
com.top_logic.layout.table.model.AllVisibleColumnsProvider = All visible columns provider
com.top_logic.layout.table.model.AllVisibleColumnsProvider.Config.columns = Columns
com.top_logic.layout.table.model.AllVisibleColumnsProvider.Config.columns.tooltip = All column names for the configured types in its form model.
com.top_logic.layout.table.model.AllVisibleColumnsProvider.tooltip = <i>Table configuration provider</i> providing all columns that the user can display.
com.top_logic.layout.table.model.ColumnBaseConfig = Column base configuration
com.top_logic.layout.table.model.ColumnBaseConfig.accessor = Accessor
com.top_logic.layout.table.model.ColumnBaseConfig.accessor.tooltip = <i>Accessor</i> to access part of the row value that is displayed within the column, or <code>null</code> if none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.additionalHeaders = Additional headers
com.top_logic.layout.table.model.ColumnBaseConfig.additionalHeaders.tooltip = The <i>HTML fragment providers</i> for this column's additional headers. <p> Each provider represents one additional header. The first entry represents the uppermost additional column. If columns have different numbers of additional headers, they are filled top to bottom and the lowest additional columns are left empty. </p> <p> If this <i>list</i> is empty, or the <i>HTML fragment provider</i> returns null, the cell is empty. </p> <p> An <i>additional header control model</i> is passed to the create fragment method as the first (model) parameter. </p>
com.top_logic.layout.table.model.ColumnBaseConfig.cellExistenceTester = Cell existence tester
com.top_logic.layout.table.model.ColumnBaseConfig.cellExistenceTester.tooltip = <i>Cell existence tester</i> for this column, or <code>null</code> if none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.cellRenderer = Cell renderer
com.top_logic.layout.table.model.ColumnBaseConfig.cellRenderer.tooltip = <i>Cell renderer</i> to render cell decorations, <code>null</code> for default rendering.
com.top_logic.layout.table.model.ColumnBaseConfig.cellStyle = Cell style
com.top_logic.layout.table.model.ColumnBaseConfig.cellStyle.tooltip = CSS style for the content of this column, or empty string when not configured.
com.top_logic.layout.table.model.ColumnBaseConfig.classifier = Classifier
com.top_logic.layout.table.model.ColumnBaseConfig.classifier.tooltip = Classifiers are used to mark the columns in an arbitrary way; classifiers are comma separated strings.
com.top_logic.layout.table.model.ColumnBaseConfig.columnLabel = Column label
com.top_logic.layout.table.model.ColumnBaseConfig.columnLabel.tooltip = Internationalised label for this column, or empty string if none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.columnLabelKey = Column label key
com.top_logic.layout.table.model.ColumnBaseConfig.columnLabelKey.tooltip = I18N key to produce label for this column, or empty string if none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.columnWidth = Column width
com.top_logic.layout.table.model.ColumnBaseConfig.columnWidth.tooltip = The width of the column, or empty string when not configured.
com.top_logic.layout.table.model.ColumnBaseConfig.commandGroup = Command group
com.top_logic.layout.table.model.ColumnBaseConfig.comparator = Comparator
com.top_logic.layout.table.model.ColumnBaseConfig.comparator.tooltip = <i>Comparator</i> to compare content of this column (ascending), or <code>null</code> if not configured.
com.top_logic.layout.table.model.ColumnBaseConfig.configurators = Configurators
com.top_logic.layout.table.model.ColumnBaseConfig.configurators.tooltip = Additional code to be executed when a <i>column configuration</i> is applied to a <i>column configuration</i>.
com.top_logic.layout.table.model.ColumnBaseConfig.controlProvider = Control provider
com.top_logic.layout.table.model.ColumnBaseConfig.controlProvider.tooltip = <i>Control provider</i> to produce a <i>cell renderer</i> from, or <code>null</code> if none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.cssClass = Css class
com.top_logic.layout.table.model.ColumnBaseConfig.cssClass.tooltip = CSS class for this column, or empty string if none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.cssClassGroupFirst = Css class group first
com.top_logic.layout.table.model.ColumnBaseConfig.cssClassGroupFirst.tooltip = CSS class for this column if it is the first column in a column group, or empty string if none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.cssClassGroupLast = Css class group last
com.top_logic.layout.table.model.ColumnBaseConfig.cssClassGroupLast.tooltip = CSS class for this column if it is the last column in a column group, or empty string if none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.cssClassProvider = Css class provider
com.top_logic.layout.table.model.ColumnBaseConfig.cssClassProvider.tooltip = CSS class for this column, or empty string if none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.descendingComparator = Descending comparator
com.top_logic.layout.table.model.ColumnBaseConfig.descendingComparator.tooltip = <i>Comparator</i> to compare content of this column (descending), or <code>null</code> if not configured.
com.top_logic.layout.table.model.ColumnBaseConfig.editControlProvider = Edit control provider
com.top_logic.layout.table.model.ColumnBaseConfig.excelRenderer = Excel renderer
com.top_logic.layout.table.model.ColumnBaseConfig.excelRenderer.tooltip = <i>Excel cell renderer</i> that is used when the value for this column is exported to excel, or <code>null</code> if none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.excludeFilterFromSidebar = Exclude filter from sidebar
com.top_logic.layout.table.model.ColumnBaseConfig.excludeFilterFromSidebar.tooltip = True, if filter of this columns shall be not available in filter sidebar, false otherwise.
com.top_logic.layout.table.model.ColumnBaseConfig.fieldProvider = Field provider
com.top_logic.layout.table.model.ColumnBaseConfig.fieldProvider.tooltip = <i>Field provider</i> to produce <i>form field</i> for the value of the column, or <code>null</code> if none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.filterProvider = Filter provider
com.top_logic.layout.table.model.ColumnBaseConfig.filterProvider.tooltip = <i>Table filter provider</i> to provide <i>table filter</i> for this column, or <code>null</code> if none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.fullTextProvider = Full text provider
com.top_logic.layout.table.model.ColumnBaseConfig.fullTextProvider.tooltip = <i>Label provider</i> to provide the column value for full-text search. <p> If not configured, it defaults to either <i>Label provider</i>, or <i>Resource provider</i>, if one of those properties are set. </p> <p> If neither <i>Label provider</i> nor <i>Resource provider</i> is set, but the column has an <i>Accessor</i>, the default for the full-text provider is <i>meta label provider</i>. </p>
com.top_logic.layout.table.model.ColumnBaseConfig.headControlProvider = Head control provider
com.top_logic.layout.table.model.ColumnBaseConfig.headControlProvider.tooltip = The <i>control provider</i> to produce the control rendering the head of the column, or <code>null</code> when none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.headStyle = Head style
com.top_logic.layout.table.model.ColumnBaseConfig.headStyle.tooltip = The CSS style to annotate at the header of the column, or empty string when none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.labelProvider = Label provider
com.top_logic.layout.table.model.ColumnBaseConfig.labelProvider.tooltip = <i>Label provider</i> to create a <i>cell renderer</i> from, or <code>null</code> if none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.mandatory = Mandatory
com.top_logic.layout.table.model.ColumnBaseConfig.mandatory.tooltip = Whether the column can not be removed from view. Shortcut for <i>Visibility</i>
com.top_logic.layout.table.model.ColumnBaseConfig.pdfRenderer = Pdf renderer
com.top_logic.layout.table.model.ColumnBaseConfig.pdfRenderer.tooltip = The <i>PDF renderer</i> producing the output when exporting value of the column to PDF, or <code>null</code> when none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.preloadContribution = Preload contribution
com.top_logic.layout.table.model.ColumnBaseConfig.renderer = Renderer
com.top_logic.layout.table.model.ColumnBaseConfig.renderer.tooltip = <i>Renderer</i> for cell values, <code>null</code> to use default rendering.
com.top_logic.layout.table.model.ColumnBaseConfig.resourceProvider = Resource provider
com.top_logic.layout.table.model.ColumnBaseConfig.resourceProvider.tooltip = <i>Resource provider</i> to create a <i>cell renderer</i> from, or <code>null</code> if none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.selectable = Selectable
com.top_logic.layout.table.model.ColumnBaseConfig.selectable.tooltip = Whether a click to this column selects the row.
com.top_logic.layout.table.model.ColumnBaseConfig.showHeader = Show header
com.top_logic.layout.table.model.ColumnBaseConfig.showHeader.tooltip = Whether the header of the column should be shown.
com.top_logic.layout.table.model.ColumnBaseConfig.sortKeyProvider = Sort key provider
com.top_logic.layout.table.model.ColumnBaseConfig.sortKeyProvider.tooltip = <i>Mapping</i> that maps value of the column to something that can be compared by the <i>comparator</i>, or <code>null</code> if none configured.
com.top_logic.layout.table.model.ColumnBaseConfig.sortable = Sortable
com.top_logic.layout.table.model.ColumnBaseConfig.sortable.tooltip = Whether the table can be sorted by the content of this column.
com.top_logic.layout.table.model.ColumnBaseConfig.tooltip = Configuration options that are common among columns and column groups.
com.top_logic.layout.table.model.ColumnBaseConfig.visibility = Visibility
com.top_logic.layout.table.model.ColumnBaseConfig.visibility.tooltip = Visibility mode of this column.
com.top_logic.layout.table.model.ColumnBaseConfig.visible = Visible
com.top_logic.layout.table.model.ColumnBaseConfig.visible.tooltip = Whether the column is visible. Shortcut for <i>Visibility</i>.
com.top_logic.layout.table.model.ColumnConfig = Column configuration
com.top_logic.layout.table.model.ColumnConfig.name.tooltip = Name of the configured column.
com.top_logic.layout.table.model.ColumnConfig.tooltip = Configuration of a table column.
com.top_logic.layout.table.model.ColumnConfiguration$DisplayMode = Display mode
com.top_logic.layout.table.model.ColumnConfiguration$DisplayMode.tooltip = Visibility of a column.
com.top_logic.layout.table.model.ColumnConfiguration.DisplayMode.excluded = Excluded
com.top_logic.layout.table.model.ColumnConfiguration.DisplayMode.excluded.tooltip = Column is hidden by default and cannot be chosen by the user.
com.top_logic.layout.table.model.ColumnConfiguration.DisplayMode.hidden = Hidden
com.top_logic.layout.table.model.ColumnConfiguration.DisplayMode.hidden.tooltip = Column is hidden by default but can be chosen by the user.
com.top_logic.layout.table.model.ColumnConfiguration.DisplayMode.mandatory = Mandatory
com.top_logic.layout.table.model.ColumnConfiguration.DisplayMode.mandatory.tooltip = Column is <i>visible</i> an cannot be removed by the user.
com.top_logic.layout.table.model.ColumnConfiguration.DisplayMode.visible = Visible
com.top_logic.layout.table.model.ColumnConfiguration.DisplayMode.visible.tooltip = Column is displayed by default.
com.top_logic.layout.table.model.ColumnContainerConfig = Column container configuration
com.top_logic.layout.table.model.ColumnContainerConfig.columns = Columns
com.top_logic.layout.table.model.ColumnContainerConfig.columns.tooltip = Columns available in this container.
com.top_logic.layout.table.model.ColumnContainerConfig.tooltip = <i>Configuration item</i> containing a list of <i>column configuration</i>.
com.top_logic.layout.table.model.ColumnCustomization = Column customization
com.top_logic.layout.table.model.ColumnCustomization.NONE = None
com.top_logic.layout.table.model.ColumnCustomization.NONE.tooltip = Columns cannot be customized by the user.
com.top_logic.layout.table.model.ColumnCustomization.ORDER = Order
com.top_logic.layout.table.model.ColumnCustomization.ORDER.tooltip = The order of columns can be customized.
com.top_logic.layout.table.model.ColumnCustomization.SELECTION = Selection
com.top_logic.layout.table.model.ColumnCustomization.SELECTION.tooltip = Columns can be selected and unselected. This includes the customization <i>order</i>.
com.top_logic.layout.table.model.ColumnCustomization.tooltip = How table columns can be customized by the user.
com.top_logic.layout.table.model.DynamicColumns = Dynamic columns
com.top_logic.layout.table.model.DynamicColumns.Config.column-default = Column default
com.top_logic.layout.table.model.DynamicColumns.Config.column-default.tooltip = Configuration to apply to all dynamically added columns.
com.top_logic.layout.table.model.DynamicColumns.tooltip = Base class for <i>table configuration providers</i> that allow dynamically creating columns with common configured properties.
com.top_logic.layout.table.model.Enabled = Enabled
com.top_logic.layout.table.model.Enabled.always = Always
com.top_logic.layout.table.model.Enabled.always.tooltip = Enable the feature.
com.top_logic.layout.table.model.Enabled.auto = Auto
com.top_logic.layout.table.model.Enabled.auto.tooltip = Decide dynamically, whether enabling the feature makes sense.
com.top_logic.layout.table.model.Enabled.never = Never
com.top_logic.layout.table.model.Enabled.never.tooltip = Disable the feature.
com.top_logic.layout.table.model.Enabled.tooltip = Three-state decision whether to enable a feature.
com.top_logic.layout.table.model.ExportConfig = Export configuration
com.top_logic.layout.table.model.ExportConfig.autofitColumns = Autofit columns
com.top_logic.layout.table.model.ExportConfig.autofitColumns.tooltip = Flag, if columns have to be auto fitted to matching width.
com.top_logic.layout.table.model.ExportConfig.downloadNameKey = Download name key
com.top_logic.layout.table.model.ExportConfig.downloadNameKey.tooltip = Resource key for the name of the download file.
com.top_logic.layout.table.model.ExportConfig.templateName = Template name
com.top_logic.layout.table.model.ExportConfig.templateName.tooltip = Name of the Excel template that is used to export table.
com.top_logic.layout.table.model.ExportConfig.tooltip = Configuration of an Excel export.
com.top_logic.layout.table.model.IDColumnConfig = ID column configuration
com.top_logic.layout.table.model.IDColumnConfig.tooltip = Configuration to set the id column of a table. <p> The id column is the column for which an icon of the row objects type is added before its value and which is rendered as a link to its row object. </p>
com.top_logic.layout.table.model.IDColumnConfig.value = Value
com.top_logic.layout.table.model.IDColumnConfig.value.tooltip = The technical column name for which an icon of the row objects type is added before its value and which is rendered as a link to its row object. <p> If no id column is annotated then the <code>name</code> column is used by default, if it exists. </p>
com.top_logic.layout.table.model.IDColumnTableConfigurationProvider = ID column table configuration provider
com.top_logic.layout.table.model.IDColumnTableConfigurationProvider.tooltip = <i>Table configuration provider</i> to set the id column of a table. <p> The id column is the column for which an icon of the row objects type is added before its value and which is rendered as a link to its row object. </p>
com.top_logic.layout.table.model.Icons.SELECTION_COLUMN_WIDTH = Width of the selection column of tables.
com.top_logic.layout.table.model.SimpleTableDataExport = Simple table data export
com.top_logic.layout.table.model.SimpleTableDataExport.Config.executability = Executability
com.top_logic.layout.table.model.SimpleTableDataExport.Config.executability.tooltip = Function that computes the <i>executable state</i> for a given <i>table data</i>.
com.top_logic.layout.table.model.SimpleTableDataExport.Config.include-hidden = Include hidden
com.top_logic.layout.table.model.SimpleTableDataExport.Config.include-hidden.tooltip = Whether all information should be exported (not only thus currently displayed).
com.top_logic.layout.table.model.SimpleTableDataExport.Config.start-row = Start row
com.top_logic.layout.table.model.SimpleTableDataExport.Config.start-row.tooltip = Number of the first row (zero based) in the template file in which application data are stored, e.g. with value of <code>0</code> the data export fills the first row.
com.top_logic.layout.table.model.SimpleTableDataExport.tooltip = <i>Executable table data export</i> that exports the table using <i>Excel access</i>.
com.top_logic.layout.table.model.SortColumnsConfig = Sort columns configuration
com.top_logic.layout.table.model.SortColumnsConfig.order = Order
com.top_logic.layout.table.model.SortColumnsConfig.order.tooltip = Columns order by which the rows are sorted.
com.top_logic.layout.table.model.SortColumnsConfig.tooltip = Configuration to set the sort order of the table rows.
com.top_logic.layout.table.model.SortColumnsTableConfigurationProvider = Sort columns table configuration provider
com.top_logic.layout.table.model.SortColumnsTableConfigurationProvider.tooltip = <i>Table configuration provider</i> to set the tables sort columns order by which the rows are sorted. <p> If the table has no sort columns order set then the table rows are sorted after the id column if it exists. </p>
com.top_logic.layout.table.model.TableConfig = Table configuration
com.top_logic.layout.table.model.TableConfig.column-default = Column default
com.top_logic.layout.table.model.TableConfig.column-default.tooltip = Default column.
com.top_logic.layout.table.model.TableConfig.columnCustomization = Column customization
com.top_logic.layout.table.model.TableConfig.commands = Commands
com.top_logic.layout.table.model.TableConfig.commands.tooltip = Custom commands to be displayed in the table header.
com.top_logic.layout.table.model.TableConfig.configurationProviders = Configuration providers
com.top_logic.layout.table.model.TableConfig.configurationProviders.tooltip = <i>Table configuration providers</i> to dynamically extends this configuration.
com.top_logic.layout.table.model.TableConfig.defaultColumns = Default columns
com.top_logic.layout.table.model.TableConfig.defaultColumns.tooltip = Columns, that shall be displayed by default in defined order.
com.top_logic.layout.table.model.TableConfig.defaultFilterProvider = Default filter provider
com.top_logic.layout.table.model.TableConfig.defaultSortOrder = Default sort order
com.top_logic.layout.table.model.TableConfig.dragSource = Drag source
com.top_logic.layout.table.model.TableConfig.dragSource.tooltip = The <i>table drag source</i> algorithm to use.
com.top_logic.layout.table.model.TableConfig.exporter = Exporter
com.top_logic.layout.table.model.TableConfig.exporter.tooltip = Returns the algorithm that exports the configured table to Excel.
com.top_logic.layout.table.model.TableConfig.filterDisplayChildren = Filter display children
com.top_logic.layout.table.model.TableConfig.filterDisplayChildren.tooltip = Whether to display the children if its parent matches the filter.
com.top_logic.layout.table.model.TableConfig.filterDisplayParents = Filter display parents
com.top_logic.layout.table.model.TableConfig.filterDisplayParents.tooltip = Whether to display the parents if a child matches the filter.
com.top_logic.layout.table.model.TableConfig.filterProvider = Filter provider
com.top_logic.layout.table.model.TableConfig.fixedColumns = Fixed columns
com.top_logic.layout.table.model.TableConfig.fixedColumns.tooltip = Number of fixed table columns.
com.top_logic.layout.table.model.TableConfig.footerStyle = Footer style
com.top_logic.layout.table.model.TableConfig.footerStyle.tooltip = CSS style for the footer row of the table.
com.top_logic.layout.table.model.TableConfig.headerStyle = Header style
com.top_logic.layout.table.model.TableConfig.headerStyle.tooltip = CSS style for the header row of the table.
com.top_logic.layout.table.model.TableConfig.id-column = ID column
com.top_logic.layout.table.model.TableConfig.id-column.tooltip = Column for which the cell value is rendered as link with an image of the row objects type before.
com.top_logic.layout.table.model.TableConfig.maxColumns = Maximum columns
com.top_logic.layout.table.model.TableConfig.maxColumns.tooltip = Maximal number of displayed columns.
com.top_logic.layout.table.model.TableConfig.multiSort = Multiple sort
com.top_logic.layout.table.model.TableConfig.multipleSettingsKey = Multiple settings key
com.top_logic.layout.table.model.TableConfig.multipleSettingsKey.tooltip = If <i>Support multiple settings</i>, this property can specify a key as storage identifier for these settings. This key is used for different component instances to share (identify) the same set of stored settings (by using the same key). If no value is given, the stored settings are visible just to their respective component instance.
com.top_logic.layout.table.model.TableConfig.name = Name
com.top_logic.layout.table.model.TableConfig.name.tooltip = Name of the table.
com.top_logic.layout.table.model.TableConfig.pageSizeOptions = Page size options
com.top_logic.layout.table.model.TableConfig.pageSizeOptions.tooltip = The available page size options of the table.
com.top_logic.layout.table.model.TableConfig.resPrefix = Resource prefix
com.top_logic.layout.table.model.TableConfig.resPrefix.tooltip = The <i>resource prefix</i> deriving column names and titles from, if no specialized keys are set.
com.top_logic.layout.table.model.TableConfig.rowClassProvider = Row class provider
com.top_logic.layout.table.model.TableConfig.rowClassProvider.tooltip = <i>Row class provider</i> to define CSS classes for the content of the table.
com.top_logic.layout.table.model.TableConfig.rowObjectResourceProvider = Row object resource provider
com.top_logic.layout.table.model.TableConfig.rowObjectResourceProvider.tooltip = <i>Resource provider</i> for the table internal row objects.
com.top_logic.layout.table.model.TableConfig.rowStyle = Row style
com.top_logic.layout.table.model.TableConfig.rowStyle.tooltip = CSS style for each content row in the table.
com.top_logic.layout.table.model.TableConfig.showColumnHeader = Show column header
com.top_logic.layout.table.model.TableConfig.showColumnHeader.tooltip = Whether the column headers must be shown.
com.top_logic.layout.table.model.TableConfig.showFooter = Show footer
com.top_logic.layout.table.model.TableConfig.showFooter.tooltip = Whether the footer of the table must be shown.
com.top_logic.layout.table.model.TableConfig.showTitle = Show title
com.top_logic.layout.table.model.TableConfig.showTitle.tooltip = Whether the title of the table should be shown.
com.top_logic.layout.table.model.TableConfig.sidebarFilters = Sidebar filters
com.top_logic.layout.table.model.TableConfig.supportMultipleSettings = Support multiple settings
com.top_logic.layout.table.model.TableConfig.supportMultipleSettings.tooltip = Whether this table supports storing multiple table settings. When enabled, the table provides additional save- and load commands in the user interface, which allow the user to store and load different table settings (filters, columns) as named presets.
com.top_logic.layout.table.model.TableConfig.tableDrop = Table drop
com.top_logic.layout.table.model.TableConfig.tableDrop.tooltip = The <i>table drop target</i> algorithm to use.
com.top_logic.layout.table.model.TableConfig.tableRenderer = Table renderer
com.top_logic.layout.table.model.TableConfig.tableRenderer.tooltip = Configuration for the <i>table renderer</i> to render this table.
com.top_logic.layout.table.model.TableConfig.titleKey = Title key
com.top_logic.layout.table.model.TableConfig.titleKey.tooltip = The <i>resource key</i> defining the table title.
com.top_logic.layout.table.model.TableConfig.titleStyle = Title style
com.top_logic.layout.table.model.TableConfig.titleStyle.tooltip = CSS style for the title row of the table.
com.top_logic.layout.table.model.TableConfig.tooltip = Configuration of an operational <i>table configuration</i>. <p> <i>Table configurations</i> are created and manipulated by <i>table configuration factory</i>. </p>
com.top_logic.layout.table.model.TableConfigurationFactory = Table configuration factory
com.top_logic.layout.table.model.TableConfigurationFactory.Config.table-defaults = Table defaults
com.top_logic.layout.table.model.TableConfigurationFactory.Config.table-defaults.tooltip = The application-wide defaults for <i>table configuration</i>.
com.top_logic.layout.table.model.TableConfigurationFactory.tooltip = Factory for <i>table configurations</i>.
com.top_logic.layout.table.model.TableExportProvider = Table export
com.top_logic.layout.table.model.TableExportProvider.Config.export = Export
com.top_logic.layout.table.model.TableExportProvider.Config.export.tooltip = Export configuration that describes the table export to add.
com.top_logic.layout.table.model.TableExportProvider.tooltip = Configurable <i>table configuration provider</i> that adds an <i>table data export</i> to a <i>table configuration</i>.
com.top_logic.layout.table.model.evaluation.AdditionalHeaderControlProviderAverage = Additional header control provider average
com.top_logic.layout.table.model.evaluation.AdditionalHeaderControlProviderAverage.tooltip = The <i>control provider</i> that for an additional header that displays the average of the values.
com.top_logic.layout.table.model.evaluation.AdditionalHeaderControlProviderMax = Additional header control provider maximum
com.top_logic.layout.table.model.evaluation.AdditionalHeaderControlProviderMax.tooltip = The <i>control provider</i> that for an additional header that displays the maximum value.
com.top_logic.layout.table.model.evaluation.AdditionalHeaderControlProviderMedian = Additional header control provider median
com.top_logic.layout.table.model.evaluation.AdditionalHeaderControlProviderMedian.tooltip = The <i>control provider</i> that for an additional header that displays the median of the values.
com.top_logic.layout.table.model.evaluation.AdditionalHeaderControlProviderMin = Additional header control provider minimum
com.top_logic.layout.table.model.evaluation.AdditionalHeaderControlProviderMin.tooltip = The <i>control provider</i> that for an additional header that displays the minimum value.
com.top_logic.layout.table.model.evaluation.AdditionalHeaderControlProviderNullCount = Additional header control provider null count
com.top_logic.layout.table.model.evaluation.AdditionalHeaderControlProviderNullCount.tooltip = The <i>control provider</i> that for an additional header that displays the maximum value.
com.top_logic.layout.table.model.evaluation.AdditionalHeaderControlProviderNullPercentage = Additional header control provider null percentage
com.top_logic.layout.table.model.evaluation.AdditionalHeaderControlProviderNullPercentage.tooltip = The <i>control provider</i> that for an additional header that displays the maximum value.
com.top_logic.layout.table.model.evaluation.AdditionalHeaderControlProviderSum = Additional header control provider sum
com.top_logic.layout.table.model.evaluation.AdditionalHeaderControlProviderSum.tooltip = The <i>control provider</i> that for an additional header that displays the sum of the values.
com.top_logic.layout.table.provider.ButtonColumnProvider = Column with buttons
com.top_logic.layout.table.provider.ButtonColumnProvider$CommandInTableRowNaming$Name = Name
com.top_logic.layout.table.provider.ButtonColumnProvider$CommandInTableRowNaming$Name.tooltip = <i>Model name</i> for a <i>command handler</i> defined in a table column.
com.top_logic.layout.table.provider.ButtonColumnProvider.CommandInTableRowNaming.Name.column-id = Column ID
com.top_logic.layout.table.provider.ButtonColumnProvider.CommandInTableRowNaming.Name.column-id.tooltip = The technical ID of the column the <i>command handler</i> is defined in.
com.top_logic.layout.table.provider.ButtonColumnProvider.CommandInTableRowNaming.Name.command-id = Command ID
com.top_logic.layout.table.provider.ButtonColumnProvider.CommandInTableRowNaming.Name.command-id.tooltip = The technical ID of the <i>command handler</i>.
com.top_logic.layout.table.provider.ButtonColumnProvider.CommandInTableRowNaming.Name.table = Table
com.top_logic.layout.table.provider.ButtonColumnProvider.CommandInTableRowNaming.Name.table.tooltip = The table to locate the commands in.
com.top_logic.layout.table.provider.ButtonColumnProvider.Config.width = width
com.top_logic.layout.table.provider.ButtonColumnProvider.Config.width.tooltip = The width of the declared column.
com.top_logic.layout.table.provider.ButtonColumnProvider.tooltip = <i>Table configuration provider</i> that adds a column with custom commands that operate on the model object displayed in a row.
com.top_logic.layout.table.provider.ColumnProviderConfig.columnId = Column ID
com.top_logic.layout.table.provider.ColumnProviderConfig.columnId.tooltip = Technical name of the defined column.
com.top_logic.layout.table.provider.ColumnProviderConfig.columnLabel = Column label
com.top_logic.layout.table.provider.ColumnProviderConfig.columnLabel.tooltip = Label to be displayed in the column header.
com.top_logic.layout.table.provider.WebFolderAttributeFilterProvider = Web folder attribute filter provider
com.top_logic.layout.table.provider.generic.ConfiguredColumnInfoProvider = Configured column info provider
com.top_logic.layout.table.provider.generic.ConfiguredColumnInfoProvider.tooltip = <i>Column info provider</i> that is directly derived from a <i>column info</i> annotation.
com.top_logic.layout.table.provider.generic.TableConfigModelCache = Table configuration model cache
com.top_logic.layout.table.provider.generic.TableConfigModelCache.Config.model-info-factory = Model info factory
com.top_logic.layout.table.provider.generic.TableConfigModelCache.Config.model-info-factory.tooltip = The <i>table configuration model info factory</i> that should be used.
com.top_logic.layout.table.provider.generic.TableConfigModelCache.tooltip = The actual <i>knowledge-base cache</i> of the <i>table configuration model service</i>.
com.top_logic.layout.table.provider.generic.TableConfigModelInfoFactoryImpl = Table configuration model info factory implementation
com.top_logic.layout.table.provider.generic.TableConfigModelInfoFactoryImpl.tooltip = <i>Table configuration model info factory</i> that creates <i>table configuration model info implementations</i>.
com.top_logic.layout.table.provider.generic.TableConfigModelService = Table configuration model service
com.top_logic.layout.table.provider.generic.TableConfigModelService.Config.model-info-provider = Model info provider
com.top_logic.layout.table.provider.generic.TableConfigModelService.Config.model-info-provider.tooltip = The <i>table configuration model info provider</i> to use.
com.top_logic.layout.table.provider.generic.TableConfigModelService.tooltip = Cache service for <i>model</i> related information for the <i>generic table configuration provider</i>.
com.top_logic.layout.table.renderer.AbstractTableRenderer = Table renderer
com.top_logic.layout.table.renderer.AbstractTableRenderer.tooltip = Common super class of all <i>table renderer</i> implementations.
com.top_logic.layout.table.renderer.CellControlRenderer = Cell control renderer
com.top_logic.layout.table.renderer.CellControlRenderer.Config.controlProvider = Control provider
com.top_logic.layout.table.renderer.CellControlRenderer.Config.fallbackRenderer = Fallback renderer
com.top_logic.layout.table.renderer.CellControlRenderer.tooltip = <i>Cell renderer</i> that renders a table cell value through a <i>control provider</i>.
com.top_logic.layout.table.renderer.ConfiguredTableRenderer = Configured table renderer
com.top_logic.layout.table.renderer.ConfiguredTableRenderer.Config.row-template = Row template
com.top_logic.layout.table.renderer.ConfiguredTableRenderer.Config.row-template.tooltip = The template for rendering the <i>button control</i>.
com.top_logic.layout.table.renderer.ConfiguredTableRenderer.tooltip = <i>I table renderer</i> that can be parameterized with templates for the body and a row.
com.top_logic.layout.table.renderer.DefaultRowClassProvider = Default row class provider
com.top_logic.layout.table.renderer.DefaultRowClassProvider.tooltip = <i>Row class provider</i> that creates striped tables using the following CSS class combinations: <ul> <li><code>"tl-table__row"</code></li> <li><code>"tblEven"</code></li> <li><code>"tblSelected"</code></li> </ul> Additionally, one of the following classes is set on the first and last row accordingly: <ul> <li><code>"firstRow"</code></li> <li><code>"lastRow"</code></li> </ul>
com.top_logic.layout.table.renderer.DefaultTableRenderer = Default table renderer
com.top_logic.layout.table.renderer.DefaultTableRenderer.Config.fullFooter = Full footer
com.top_logic.layout.table.renderer.DefaultTableRenderer.Config.useColumnWidthDeclarationBasedLayout = Use column width declaration based layout
com.top_logic.layout.table.renderer.DefaultTableRenderer.DefaultRenderState.body = Writes the tables body.
com.top_logic.layout.table.renderer.DefaultTableRenderer.DefaultRenderState.body_rows = Writes the table body rows.
com.top_logic.layout.table.renderer.DefaultTableRenderer.DefaultRenderState.colgroup = Writes the tables colgroup.
com.top_logic.layout.table.renderer.DefaultTableRenderer.DefaultRenderState.footer = Writes the tables footer.
com.top_logic.layout.table.renderer.DefaultTableRenderer.DefaultRenderState.hasFixedColumns = True if the table layout is fixed, otherwise returns false.
com.top_logic.layout.table.renderer.DefaultTableRenderer.DefaultRenderState.header = Writes the tables header.
com.top_logic.layout.table.renderer.DefaultTableRenderer.DefaultRenderState.headerRowStyles = Header row styles.
com.top_logic.layout.table.renderer.DefaultTableRenderer.DefaultRenderState.headerRows = Writes the table header rows.
com.top_logic.layout.table.renderer.DefaultTableRenderer.DefaultRenderState.id = Returns the id of the underlying rendered <i>table control</i>.
com.top_logic.layout.table.renderer.DefaultTableRenderer.DefaultRenderState.selectRowHandler = Writes the onclick event handler to select a table row.
com.top_logic.layout.table.renderer.DefaultTableRenderer.DefaultRenderState.title = Writes the tables title.
com.top_logic.layout.table.renderer.DefaultTableRenderer.tooltip = Renderer for tables. <p> See also: http://www.w3.org/TR/xhtml1/dtds.html#dtdentry_xhtml1-strict.dtd_table </p> modularization.
com.top_logic.layout.table.renderer.Icons.FILTER = Image to filter a table.
com.top_logic.layout.table.renderer.Icons.SORTABLE = Image to show that the table is sortable.
com.top_logic.layout.table.renderer.Icons.SORT_ASC = Image to show ascending sort direction when the column is not filterable.
com.top_logic.layout.table.renderer.Icons.SORT_ASC_SMALL = Image, next to the filter image, to show ascending sort direction.
com.top_logic.layout.table.renderer.Icons.SORT_DESC = Image to show descending sort direction when the column is not filterable.
com.top_logic.layout.table.renderer.Icons.SORT_DESC_SMALL = Image, next to the filter image, to show descending sort direction.
com.top_logic.layout.table.renderer.Icons.TABLE_BACKGROUND_COLOR = Background color of a table.
com.top_logic.layout.table.renderer.Icons.TABLE_BODY_CELL_TEMPLATE = Template defining a table body row cell.
com.top_logic.layout.table.renderer.Icons.TABLE_BODY_ROW_TEMPLATE = Template defining a table body row.
com.top_logic.layout.table.renderer.Icons.TABLE_BODY_TEMPLATE = Template defining a table body.
com.top_logic.layout.table.renderer.Icons.TABLE_CELL_BACKGROUND_COLOR = Background color of a table cell.
com.top_logic.layout.table.renderer.Icons.TABLE_COLUMN_BORDER_WIDTH = Width of the border of a table column.
com.top_logic.layout.table.renderer.Icons.TABLE_CONTAINER_TEMPLATE = Template defining the table container.
com.top_logic.layout.table.renderer.Icons.TABLE_FOOTER_TEMPLATE = Template defining the table footer.
com.top_logic.layout.table.renderer.Icons.TABLE_HEADER_CELL_CONTENT_TEMPLATE = Template defining a table header row cell content.
com.top_logic.layout.table.renderer.Icons.TABLE_HEADER_CELL_TEMPLATE = Template defining a table header row cell.
com.top_logic.layout.table.renderer.Icons.TABLE_HEADER_GROUP_CELL_CONTENT_TEMPLATE = Template defining a table header row group cell content.
com.top_logic.layout.table.renderer.Icons.TABLE_HEADER_ROW_TEMPLATE = Template defining a table header row.
com.top_logic.layout.table.renderer.Icons.TABLE_HEADER_TEMPLATE = Template defining a table header.
com.top_logic.layout.table.renderer.Icons.TABLE_RESIZE_GRABBER_COLOR = Color of the grabber inside a table header cell to resize a table column.
com.top_logic.layout.table.renderer.Icons.TABLE_SEPARATOR_WIDTH = Width of the tables separator which separates the tables fixed and flexible area.
com.top_logic.layout.table.renderer.SupplierTableRenderer = Supplier table renderer
com.top_logic.layout.table.renderer.TableRendererProxy = Table renderer proxy
com.top_logic.layout.table.renderer.TableRendererProxy.Config.tableRenderer = Table renderer
com.top_logic.layout.table.renderer.TableRendererProxy.Config.tableRenderer.tooltip = The configuration of the actual <i>table renderer</i> to use as dispatch.
com.top_logic.layout.table.renderer.TableRendererProxy.tooltip = A <i>table renderer</i> that forwards all calls defined in the interface <i>table renderer</i> to a renderer implementation object.
com.top_logic.layout.table.renderer.UniformCellRenderer = Uniform cell renderer
com.top_logic.layout.table.renderer.UniformCellRenderer.Config.renderer = Renderer
com.top_logic.layout.table.renderer.UniformCellRenderer.Config.renderer.tooltip = <i>Renderer</i> to dispatch to.
com.top_logic.layout.table.renderer.UniformCellRenderer.tooltip = A <i>cell renderer</i> implementation that uniformly uses the same <i>renderer</i> for all columns in a row.
com.top_logic.layout.table.tree.TreeBuilderAdaptor = Tree builder adaptor
com.top_logic.layout.table.tree.TreeBuilderAdaptor.Config.treeModelBuilder = Tree model builder
com.top_logic.layout.table.tree.TreeBuilderAdaptor.Config.treeModelBuilder.tooltip = <i>Model builder</i> providing a tree.
com.top_logic.layout.table.tree.TreeBuilderAdaptor.tooltip = <i>Tree builder</i> dispatching to the wrapped <i>tree model builder</i>.
com.top_logic.layout.table.tree.TreeNodeUnwrappingProvider = Tree node unwrapping provider
com.top_logic.layout.table.tree.TreeNodeUnwrappingProvider.Config.exclude-columns = Exclude columns
com.top_logic.layout.table.tree.TreeNodeUnwrappingProvider.Config.exclude-columns.tooltip = Set of column names for which the <i>tree node unwrapping provider</i> must <b>not</b> be applied. The <code>"_select"</code> is also untouched. <p> The columns in the configured set remain untouched, i.e. the configured accessor gets the <i>tree node</i> as object. </p>
com.top_logic.layout.table.tree.TreeNodeUnwrappingProvider.tooltip = <i>Table configuration provider</i> that wraps <i>tree table accessor</i> and <i>tree table cell tester</i> around column accessors and column cell existence tester of table.
com.top_logic.layout.table.tree.TreeTableComponent = Tree table component
com.top_logic.layout.table.tree.TreeTableComponent.Config.additionalConfiguration = Additional configuration
com.top_logic.layout.table.tree.TreeTableComponent.Config.additionalConfiguration.tooltip = Provider of <i>table configuration</i>, that will be applied after XML based configuration.
com.top_logic.layout.table.tree.TreeTableComponent.Config.checkMissingTypeConfiguration = Check missing type configuration
com.top_logic.layout.table.tree.TreeTableComponent.Config.checkMissingTypeConfiguration.tooltip = Check for missing types in <i>Object type</i>. <p> Enable to find problems in existing tables when doing the migration for ticket #27174. They will be logged as errors when the table is used. <br/> Disable it afterwards, as this check is time consuming and slows the application down. </p>
com.top_logic.layout.table.tree.TreeTableComponent.Config.componentTableConfigProvider = Component table configuration provider
com.top_logic.layout.table.tree.TreeTableComponent.Config.componentTableConfigProvider.tooltip = Returns the factory to create programmatic <i>table configuration provider</i> for the configured <i>table component</i>.
com.top_logic.layout.table.tree.TreeTableComponent.Config.objectType = Object type
com.top_logic.layout.table.tree.TreeTableComponent.Config.objectType.tooltip = Full qualified type names that are displayed.
com.top_logic.layout.table.tree.TreeTableComponent.Config.table = Table
com.top_logic.layout.table.tree.TreeTableComponent.Config.table.tooltip = Tree <i>table configuration</i>.
com.top_logic.layout.table.tree.TreeTableComponent.Config.treeBuilder = Tree builder
com.top_logic.layout.table.tree.TreeTableComponent.Config.treeBuilder.tooltip = <i>Tree builder</i> creating the displayed tree from the business model.
com.top_logic.layout.table.tree.TreeTableComponent.tooltip = A <i>component</i> for displaying a table with a tree model.
com.top_logic.layout.table.tree.TreeTableConfig = Tree table configuration
com.top_logic.layout.table.tree.TreeTableConfig.tooltip = <i>Form table configuration</i> choosing <i>tree table context menu provider</i> by default.
com.top_logic.layout.table.tree.TreeTableContextMenuFactory = Tree table context menu factory
com.top_logic.layout.table.tree.TreeTableContextMenuFactory.tooltip = <i>Selectable context menu factory</i> mapping node objects to their respective business objects.
com.top_logic.layout.table.tree.TreeTableContextMenuProvider = Tree table context menu provider
com.top_logic.layout.table.tree.TreeTableContextMenuProvider.tooltip = <i>Selectable context menu provider</i> choosing <i>tree table context menu factory</i> by default.
com.top_logic.layout.table.tree.TreeTableExpandCollapseAll = Tree table expand collapse all
com.top_logic.layout.table.tree.TreeTableExpandCollapseAll.tooltip = Expands all nodes in the <i>tree table component</i>.
com.top_logic.layout.table.tree.UpdateTreeTableCommandHandler = Update tree table command handler
com.top_logic.layout.table.tree.UpdateTreeTableCommandHandler.tooltip = An <i>command handler</i> that updates its <i>tree table component</i>.
com.top_logic.layout.table.tree.compare.AbstractCompareModeCommand = Compare mode command
com.top_logic.layout.table.tree.compare.AbstractCompareModeCommand.tooltip = <i>Command handler</i>, that switches <i>compare tree table component</i> to specified <i>compare mode</i>.
com.top_logic.layout.table.tree.compare.CompareMode = Compare mode
com.top_logic.layout.table.tree.compare.CompareMode.OVERLAY = Overlay
com.top_logic.layout.table.tree.compare.CompareMode.OVERLAY.tooltip = Comparison result will be displayed in a table with common columns
com.top_logic.layout.table.tree.compare.CompareMode.SIDE_BY_SIDE = Side by side
com.top_logic.layout.table.tree.compare.CompareMode.SIDE_BY_SIDE.tooltip = Comparison result will be displayed in two separate table parts
com.top_logic.layout.table.tree.compare.CompareMode.tooltip = How to display the comparison between two table models.
com.top_logic.layout.table.tree.compare.CompareTreeTableComponent = Compare tree table component
com.top_logic.layout.table.tree.compare.CompareTreeTableComponent.Config.defaultCompareMode = Default compare mode
com.top_logic.layout.table.tree.compare.CompareTreeTableComponent.Config.defaultCompareMode.tooltip = <i>Compare mode</i>, which shall be initially used to display comparison result.
com.top_logic.layout.table.tree.compare.CompareTreeTableComponent.Config.treeCompareConfigurationProvider = Tree compare configuration provider
com.top_logic.layout.table.tree.compare.CompareTreeTableComponent.Config.treeCompareConfigurationProvider.tooltip = <i>Tree compare configuration provider</i>, that is basically used to create the tree table model of the compare view.
com.top_logic.layout.table.tree.compare.CompareTreeTableComponent.tooltip = <i>Tree table component</i>, that shows differences between tree based component models, using the <i>compare service</i>.
com.top_logic.layout.table.tree.compare.OverlayCompareCommand = Overlay compare command
com.top_logic.layout.table.tree.compare.OverlayCompareCommand.tooltip = <i>Compare mode command</i>, that switches the <i>compare tree table component</i> to <i>overlay</i>.
com.top_logic.layout.table.tree.compare.ShowChangeCommand = Show change command
com.top_logic.layout.table.tree.compare.ShowChangeCommand.tooltip = <i>Command handler</i>, that steps through structure comparison changes, displayed by <i>compare tree table component</i>.
com.top_logic.layout.table.tree.compare.ShowNextChangeCommand = Show next change command
com.top_logic.layout.table.tree.compare.ShowNextChangeCommand.tooltip = <i>Command handler</i>, that steps through structure comparison changes, displayed by <i>compare tree table component</i>.
com.top_logic.layout.table.tree.compare.ShowPreviousChangeCommand = Show previous change command
com.top_logic.layout.table.tree.compare.ShowPreviousChangeCommand.tooltip = <i>Command handler</i>, that steps through structure comparison changes, displayed by <i>compare tree table component</i>.
com.top_logic.layout.table.tree.compare.SideBySideCompareCommand = Side by side compare command
com.top_logic.layout.table.tree.compare.SideBySideCompareCommand.tooltip = <i>Compare mode command</i>, that switches the <i>compare tree table component</i> to <i>side by side</i>.
com.top_logic.layout.task.EditTaskWrapperComponent = Edit task object component
com.top_logic.layout.template.ConfiguredButtonRenderer = Configured button renderer
com.top_logic.layout.template.ConfiguredButtonRenderer.tooltip = <i>I button renderer</i> rendering with a configured template.
com.top_logic.layout.template.ConfiguredRenderer = Configured renderer
com.top_logic.layout.template.ConfiguredRenderer.Config.template = Template
com.top_logic.layout.template.ConfiguredRenderer.Config.template.tooltip = The template for rendering the <i>button control</i>.
com.top_logic.layout.template.ConfiguredRenderer.tooltip = <i>Renderer</i> using a <i>template expression</i> to render the displayed object.
com.top_logic.layout.toolbar.ToolBarGroupConfig = Tool bar group configuration
com.top_logic.layout.toolbar.ToolBarGroupConfig$ButtonConfig = Button configuration
com.top_logic.layout.toolbar.ToolBarGroupConfig$ButtonConfig.tooltip = Configuration of a single toolbar button in the context of a <i>component</i>.
com.top_logic.layout.toolbar.ToolBarGroupConfig.ButtonConfig.arguments = Arguments
com.top_logic.layout.toolbar.ToolBarGroupConfig.ButtonConfig.arguments.tooltip = Constant arguments to pass to the command invocation.
com.top_logic.layout.toolbar.ToolBarGroupConfig.ButtonConfig.command-id = Command ID
com.top_logic.layout.toolbar.ToolBarGroupConfig.ButtonConfig.command-id.tooltip = Name of the <i>command handler</i> to invoke. <p> A command with the given name must be defined by the context component. </p>
com.top_logic.layout.toolbar.ToolBarGroupConfig.buttons = Buttons
com.top_logic.layout.toolbar.ToolBarGroupConfig.buttons.tooltip = The buttons in the group.
com.top_logic.layout.toolbar.ToolBarGroupConfig.tooltip = Configuration of a <i>tool bar group</i> in the context of a <i>component</i>.
com.top_logic.layout.tools.rewrite.LayoutMigrationProcessor = Layout migration processor
com.top_logic.layout.tools.rewrite.LayoutMigrationProcessor.tooltip = Migrates the layout template arguments using the configured <i>document rewrite</i>.
com.top_logic.layout.tools.rewrite.RewriteMigrationProcessor = Rewrite migration processor
com.top_logic.layout.tools.rewrite.RewriteMigrationProcessor.Config.rewriter = Rewriter
com.top_logic.layout.tools.rewrite.RewriteMigrationProcessor.Config.rewriter.tooltip = The <i>document rewrite</i> implementation to be applied.
com.top_logic.layout.tools.rewrite.RewriteMigrationProcessor.tooltip = <i>Migration processor</i> applying a configured <i>document rewrite</i> operation.
com.top_logic.layout.tools.rewrite.XSLTLayoutRewrite = XSLT layout rewrite
com.top_logic.layout.tools.rewrite.XSLTLayoutRewrite.Config.templates = Templates
com.top_logic.layout.tools.rewrite.XSLTLayoutRewrite.Config.templates.tooltip = The layout template names for which argument configurations must be rewritten.
com.top_logic.layout.tools.rewrite.XSLTLayoutRewrite.Config.transform = Transform
com.top_logic.layout.tools.rewrite.XSLTLayoutRewrite.Config.transform.tooltip = The XSLT resource. <p> The value is a resource name starting with a '/' character rooted at the web application root folder. It typically starts with the prefix <code>/WEB-INF/kbase/migration/</code>. </p>
com.top_logic.layout.tools.rewrite.XSLTLayoutRewrite.tooltip = <i>Layout rewrite</i> implementation based on a configured XSL transformation.
com.top_logic.layout.tooltip.Icons.TOOLTIP_WITHOUT_CAPTION = Template for rendering a simple tool-tip without a caption.
com.top_logic.layout.tooltip.Icons.TOOLTIP_WITH_CAPTION = Template for rendering a tool-tip that has a caption.
com.top_logic.layout.tree.BreadcrumbComponentTreeContentRenderer = Breadcrumb component tree content renderer
com.top_logic.layout.tree.TreeDataName = Tree data name
com.top_logic.layout.tree.TreeDataName.tooltip = The <i>tree data name</i> consists of a <i>model name</i> for the <i>tree data owner</i> of the <i>tree data</i>.
com.top_logic.layout.tree.TreeDataName.tree-data-owner = Tree data owner
com.top_logic.layout.tree.breadcrumb.BreadcrumbContentRenderer = Breadcrumb content renderer
com.top_logic.layout.tree.breadcrumb.BreadcrumbContentRenderer.Config.resource-provider = Resource provider
com.top_logic.layout.tree.breadcrumb.BreadcrumbContentRenderer.Config.root-icon = Root icon
com.top_logic.layout.tree.breadcrumb.BreadcrumbContentRenderer.Config.root-label = Root label
com.top_logic.layout.tree.breadcrumb.BreadcrumbContentRenderer.Config.root-visible = Root visible
com.top_logic.layout.tree.breadcrumb.BreadcrumbContentRenderer.Config.separator-icon = Separator icon
com.top_logic.layout.tree.breadcrumb.BreadcrumbContentRenderer.Config.separator-label = Separator label
com.top_logic.layout.tree.breadcrumb.BreadcrumbContentRenderer.Config.write-menu = Write menu
com.top_logic.layout.tree.breadcrumb.BreadcrumbContentRenderer.tooltip = Renderer for the actual content of a node in a <i>breadcrumb data</i>.
com.top_logic.layout.tree.breadcrumb.BreadcrumbDataName = Breadcrumb data name
com.top_logic.layout.tree.breadcrumb.BreadcrumbDataName.breadcrumb-data-owner = Breadcrumb data owner
com.top_logic.layout.tree.breadcrumb.BreadcrumbDataName.breadcrumb-data-owner.tooltip = The name says everything.
com.top_logic.layout.tree.breadcrumb.BreadcrumbDataName.tooltip = The <i>breadcrumb data name</i> consists of a <i>model name</i> for the <i>breadcrumb data owner</i> of the <i>breadcrumb data</i>.
com.top_logic.layout.tree.breadcrumb.DecoratedBreadcrumbRenderer = Decorated breadcrumb renderer
com.top_logic.layout.tree.breadcrumb.DecoratedBreadcrumbRenderer.Config.decorator = Decorator
com.top_logic.layout.tree.breadcrumb.DecoratedBreadcrumbRenderer.Config.decorator.tooltip = Name of the root tag in the breadcrumb.
com.top_logic.layout.tree.breadcrumb.DecoratedBreadcrumbRenderer.tooltip = The class <i>decorated breadcrumb renderer</i> is a <i>default breadcrumb renderer</i> which is decorated by some <i>content decorator</i>.
com.top_logic.layout.tree.breadcrumb.DefaultBreadcrumbRenderer = Default breadcrumb renderer
com.top_logic.layout.tree.breadcrumb.DefaultBreadcrumbRenderer.Config.contentRenderer = Content renderer
com.top_logic.layout.tree.breadcrumb.DefaultBreadcrumbRenderer.Config.contentRenderer.tooltip = The configuration for the displaying <i>breadcrumb content renderer</i>.
com.top_logic.layout.tree.breadcrumb.DefaultBreadcrumbRenderer.tooltip = <i>Control renderer</i> for a <i>breadcrumb control</i>. <p> A <i>breadcrumb content renderer</i> is used as inner renderer for the nodes of the <i>breadcrumb data</i>. Updates in response to changes of inner nodes are created with this content renderer. </p>
com.top_logic.layout.tree.breadcrumb.GenericBreadcrumbDataOwnerNaming$GenericBreadcrumbDataName = Generic breadcrumb data name
com.top_logic.layout.tree.breadcrumb.GenericBreadcrumbDataOwnerNaming$GenericBreadcrumbDataName.tooltip = <i>Generic model name</i> for <i>generic breadcrumb data owner naming</i>.
com.top_logic.layout.tree.component.AbstractExpandCollapseAll = Expand collapse all
com.top_logic.layout.tree.component.AbstractExpandCollapseAll.Config.expand = Expand
com.top_logic.layout.tree.component.AbstractExpandCollapseAll.Config.expand.tooltip = Whether the nodes should be expanded (true) or collapsed (false).
com.top_logic.layout.tree.component.AbstractExpandCollapseAll.tooltip = Expands all nodes in a tree <i>component</i>.
com.top_logic.layout.tree.component.CachingSecuritySelectionFilter = Caching security selection filter
com.top_logic.layout.tree.component.CachingSecuritySelectionFilter.tooltip = <i>Security selection filter</i> that caches the formerly computed accept values to reuse them.
com.top_logic.layout.tree.component.ExpandCollapseAll = Expand collapse all
com.top_logic.layout.tree.component.ExpandCollapseAll.tooltip = Expands all nodes in the <i>component</i>, if it is a <i>tree data owner</i>.
com.top_logic.layout.tree.component.SecuritySelectionFilter = Security selection filter
com.top_logic.layout.tree.component.SecuritySelectionFilter.tooltip = Filter that handles the security for the selection of an <i>tree component</i>. <p> This filter decides whether a (business) node of the <i>tree component</i> can be selected (or not) for security reason. </p>
com.top_logic.layout.tree.component.TreeComponent = Tree component
com.top_logic.layout.tree.component.TreeComponent$TreeComponentRenderer = Tree component renderer
com.top_logic.layout.tree.component.TreeComponent$TreeComponentRenderer.tooltip = Default renderer for a <i>tree component</i>.
com.top_logic.layout.tree.component.TreeComponent.Config.autoFocusSelection = Auto focus selection
com.top_logic.layout.tree.component.TreeComponent.Config.autoFocusSelection.tooltip = Whether the selected node should be in focus, when component is displayed or selection changed (programmatic).
com.top_logic.layout.tree.component.TreeComponent.Config.dragSource = Drag source
com.top_logic.layout.tree.component.TreeComponent.Config.dragSource.tooltip = The <i>tree drag source</i> to use.
com.top_logic.layout.tree.component.TreeComponent.Config.resource-provider = Resource provider
com.top_logic.layout.tree.component.TreeComponent.Config.resource-provider.tooltip = The configuration of the <i>resource provider</i> used to display the business objects. <p> This method is used, if no tree renderer was set explicit. </p>
com.top_logic.layout.tree.component.TreeComponent.Config.security-filter = Security filter
com.top_logic.layout.tree.component.TreeComponent.Config.security-filter.tooltip = Configuration of the <i>security selection filter</i> which is used to delegate check whether a node can be selected (for security reasons) to.
com.top_logic.layout.tree.component.TreeComponent.Config.selection-filter = Selection filter
com.top_logic.layout.tree.component.TreeComponent.Config.selection-filter.tooltip = Filter for the business objects displayed in the tree. Only elements that are accepted by the filter can be selected.
com.top_logic.layout.tree.component.TreeComponent.Config.show-only-selectable-nodes = Show only selectable nodes
com.top_logic.layout.tree.component.TreeComponent.Config.show-only-selectable-nodes.tooltip = This configuration allows to hide non selectable nodes. <p> If this configuration is <code>true</code> only those nodes are displayed which can be selected, or which have a selectable node in the subtree with the node as root. </p>
com.top_logic.layout.tree.component.TreeComponent.Config.treeDrop = Tree drop
com.top_logic.layout.tree.component.TreeComponent.Config.treeDrop.tooltip = The <i>tree drop target</i> handler to use.
com.top_logic.layout.tree.component.TreeComponent.Config.treeRenderer = Tree renderer
com.top_logic.layout.tree.component.TreeComponent.Config.treeRenderer.tooltip = The configuration of the <i>tree renderer</i> used to render the tree. <p> If not set, a <i>tree renderer</i> is created using the <i>Resource provider</i>. </p>
com.top_logic.layout.tree.component.TreeComponent.TreeComponentRenderer.Config.cssClass = Css class
com.top_logic.layout.tree.component.TreeComponent.TreeComponentRenderer.Config.cssClass.tooltip = Additional CSS class to add to the tree element.
com.top_logic.layout.tree.component.TreeComponent.tooltip = Component for displaying and working with trees. <p> This class needs a <i>tree model builder</i> which defines the business tree to display. This component than translates this tree into a <i>tree UI model</i> and holds it in sync by reacting on model change, delete, and create events. </p>
com.top_logic.layout.tree.dnd.TreeDropEvent$Position = Position
com.top_logic.layout.tree.dnd.TreeDropEvent$Position.tooltip = Specifier where a drop event happened relative to a reference node in a tree.
com.top_logic.layout.tree.dnd.TreeDropEvent.Position.ABOVE = Above
com.top_logic.layout.tree.dnd.TreeDropEvent.Position.ABOVE.tooltip = Just above the reference node within its siblings.
com.top_logic.layout.tree.dnd.TreeDropEvent.Position.BELOW = Below
com.top_logic.layout.tree.dnd.TreeDropEvent.Position.BELOW.tooltip = Just after the reference node within its siblings.
com.top_logic.layout.tree.dnd.TreeDropEvent.Position.WITHIN = Within
com.top_logic.layout.tree.dnd.TreeDropEvent.Position.WITHIN.tooltip = Before the first child of a reference node (even if the reference node has no children which means that the drop should insert a first child).
com.top_logic.layout.tree.dnd.TreeDropTarget$DropType = Drop type
com.top_logic.layout.tree.dnd.TreeDropTarget$DropType.tooltip = Kind of drop operation possible in a <i>tree drop target</i>.
com.top_logic.layout.tree.dnd.TreeDropTarget.DropType.CHILD = Child
com.top_logic.layout.tree.dnd.TreeDropTarget.DropType.CHILD.tooltip = A drop is only possible "within" a reference node.
com.top_logic.layout.tree.dnd.TreeDropTarget.DropType.ORDERED = Ordered
com.top_logic.layout.tree.dnd.TreeDropTarget.DropType.ORDERED.tooltip = A drop is specified as "before", "after", or "within" a reference node.
com.top_logic.layout.tree.model.AbstractTreeTableModel$NodeFilterState = Node filter state
com.top_logic.layout.tree.model.AbstractTreeTableModel$NodeFilterState.tooltip = Property, that indicates whether a node has been accepted by filter criteria or not.
com.top_logic.layout.tree.model.AbstractTreeTableModel.NodeFilterState.DIRECT_MATCH = Direct match
com.top_logic.layout.tree.model.AbstractTreeTableModel.NodeFilterState.DIRECT_MATCH.tooltip = Is accepted by filter criteria
com.top_logic.layout.tree.model.AbstractTreeTableModel.NodeFilterState.NOT_VALIDATED = Not validated
com.top_logic.layout.tree.model.AbstractTreeTableModel.NodeFilterState.NOT_VALIDATED.tooltip = Has not been checked by filter
com.top_logic.layout.tree.model.AbstractTreeTableModel.NodeFilterState.NO_DIRECT_MATCH = No direct match
com.top_logic.layout.tree.model.AbstractTreeTableModel.NodeFilterState.NO_DIRECT_MATCH.tooltip = Is not accepted by filter criteria, but may be visible due to technical reasons (e.g. show not matching parent node of matching child nodes).
com.top_logic.layout.tree.model.TLTreeNodeResourceProvider = Tree node resource provider
com.top_logic.layout.tree.model.TLTreeNodeResourceProvider.tooltip = The class <i>tree node resource provider</i> is a <i>resource provider</i> for <i>tree node</i>. If some method is called using a <i>tree node</i>, the call is dispatched to its implementation using the user object of the node.
com.top_logic.layout.tree.model.TreeNodeComparatorLocal = Tree node comparator local
com.top_logic.layout.tree.model.TreeNodeComparatorLocal.Config.businessObjectComparator = Business object comparator
com.top_logic.layout.tree.model.TreeNodeComparatorLocal.Config.descending = Descending
com.top_logic.layout.tree.model.TreeNodeComparatorLocal.tooltip = <i>Comparator</i> of <i>tree nodes</i> that keep those nodes at the beginning of the children list, that have the same business object than the parent node. <p> This compare algorithm is useful, if a node has additional information stored in child nodes that immediately belongs to the parent node. E.g. the node is a sum line with several detail lines as children. </p>
com.top_logic.layout.tree.model.TreeTableBuilderAdapter = Tree table builder adapter
com.top_logic.layout.tree.model.TreeTableBuilderAdapter.Config.treeView = Tree view
com.top_logic.layout.tree.model.TreeTableBuilderAdapter.Config.treeView.tooltip = The <i>tree view</i> for resolving child objects.
com.top_logic.layout.tree.model.TreeTableBuilderAdapter.tooltip = Adapter for using a <i>tree view</i> as <i>default tree table builder</i>.
com.top_logic.layout.tree.model.TreeViewConfig = Tree view configuration
com.top_logic.layout.tree.model.TreeViewConfig.adjustSelectionWhenCollapsing = Adjust selection when collapsing
com.top_logic.layout.tree.model.TreeViewConfig.adjustSelectionWhenCollapsing.tooltip = Whether collapsing of a node should adjust the current selection. <p> If value is <code>true</code>, and a node is a collapsed, and the selection is within the collapsed subtree, then the selection is changed to the collapsed node, i.e. collapsing a node does not hide a selection. </p>
com.top_logic.layout.tree.model.TreeViewConfig.expandRoot = Expand root
com.top_logic.layout.tree.model.TreeViewConfig.expandRoot.tooltip = Whether root should be expanded initially.
com.top_logic.layout.tree.model.TreeViewConfig.expandSelected = Expand selected
com.top_logic.layout.tree.model.TreeViewConfig.expandSelected.tooltip = Whether the selected node should be expanded when selected.
com.top_logic.layout.tree.model.TreeViewConfig.rootVisible = Root visible
com.top_logic.layout.tree.model.TreeViewConfig.rootVisible.tooltip = Whether root should be visible.
com.top_logic.layout.tree.model.TreeViewConfig.tooltip = Configuration for displaying tree alike structures.
com.top_logic.layout.tree.model.UserObjectPropertyAccessor = User object property accessor
com.top_logic.layout.tree.model.UserObjectPropertyAccessor.Config.innerAccessor = Inner accessor
com.top_logic.layout.tree.model.UserObjectPropertyAccessor.tooltip = <i>Property accessor</i> that unwraps a <i>tree node</i> before forwarding to a delegate <i>property accessor</i>.
com.top_logic.layout.tree.renderer.ConfigurableTreeContentRenderer = Configurable tree content renderer
com.top_logic.layout.tree.renderer.ConfigurableTreeContentRenderer.Config.resourceProvider = Resource provider
com.top_logic.layout.tree.renderer.ConfigurableTreeContentRenderer.Config.resourceProvider.tooltip = The <i>resource provider</i> to take the display properties of node objects from.
com.top_logic.layout.tree.renderer.ConfigurableTreeContentRenderer.Config.treeImageProvider = Tree image provider
com.top_logic.layout.tree.renderer.ConfigurableTreeContentRenderer.Config.treeImageProvider.tooltip = The <i>tree image provider</i> providing images for rendering the tree structure.
com.top_logic.layout.tree.renderer.ConfigurableTreeContentRenderer.tooltip = <i>Tree content renderer</i> that can be configured during construction.
com.top_logic.layout.tree.renderer.ConfigurableTreeRenderer = Configurable tree renderer
com.top_logic.layout.tree.renderer.ConfigurableTreeRenderer.Config.contentTag = Content tag
com.top_logic.layout.tree.renderer.ConfigurableTreeRenderer.Config.contentTag.tooltip = The HTML tag to use for the whole tree.
com.top_logic.layout.tree.renderer.ConfigurableTreeRenderer.Config.nodeTag = Node tag
com.top_logic.layout.tree.renderer.ConfigurableTreeRenderer.Config.nodeTag.tooltip = The HTML tag to use for tree nodes.
com.top_logic.layout.tree.renderer.ConfigurableTreeRenderer.Config.treeContentRenderer = Tree content renderer
com.top_logic.layout.tree.renderer.ConfigurableTreeRenderer.Config.treeContentRenderer.tooltip = The <i>tree content renderer</i> responsible for rendering node contents.
com.top_logic.layout.tree.renderer.ConfigurableTreeRenderer.tooltip = Configurable <i>tree renderer</i> that can be configured during construction.
com.top_logic.layout.tree.renderer.LogoutTimerControl$Config = Configuration
com.top_logic.layout.tree.renderer.LogoutTimerControl$Config.tooltip = Configuration options for <i>logout timer control</i>.
com.top_logic.layout.tree.renderer.LogoutTimerControl.Config.counting-seconds = Counting seconds
com.top_logic.layout.tree.renderer.LogoutTimerControl.Config.counting-seconds.tooltip = Amount of time in seconds the logout count-down is shown at the UI. <p> A negative value means that the logout count-down is displayed after the given number of seconds (independently of the actual session timeout). </p>
com.top_logic.layout.tree.renderer.NavigationDecorator = Navigation decorator
com.top_logic.layout.tree.renderer.NavigationDecorator.Config.logoutTimer = Logout timer
com.top_logic.layout.tree.renderer.NavigationDecorator.Config.logoutTimer.tooltip = Whether to display a logout count-down.
com.top_logic.layout.tree.renderer.NavigationDecorator.Config.logoutView = Logout view
com.top_logic.layout.tree.renderer.NavigationDecorator.Config.logoutView.tooltip = If the logout view is set it will be displayed.
com.top_logic.layout.tree.renderer.NavigationDecorator.tooltip = The class <i>navigation decorator</i> can be used to render the name of the current user additionally.
com.top_logic.layout.tree.renderer.NavigationRenderer = Navigation renderer
com.top_logic.layout.tree.renderer.NavigationRenderer.tooltip = The class <i>navigation renderer</i> renders the nodes of the tree of some <i>component tree model</i>.
com.top_logic.layout.tree.renderer.ReadOnlyNavigationRenderer = Read only navigation renderer
com.top_logic.layout.tree.renderer.ReadOnlyNavigationRenderer.tooltip = The class <i>read only navigation renderer</i> suppresses the children menu as it supposes it renders a read only view to the breadcrumb.
com.top_logic.layout.tree.renderer.RowTypeCellRenderer = Row type cell renderer
com.top_logic.layout.tree.renderer.RowTypeCellRenderer.Config.contentRenderer = Content renderer
com.top_logic.layout.tree.renderer.RowTypeCellRenderer.Config.contentRenderer.tooltip = A delegate cell renderer that writes the value part of the cell (after the type image).
com.top_logic.layout.tree.renderer.RowTypeCellRenderer.Config.resourceProvider = Resource provider
com.top_logic.layout.tree.renderer.RowTypeCellRenderer.Config.resourceProvider.tooltip = A <i>resource provider</i> to use for the given <i>cell</i>. <p> <em>Important:</em> This <i>resource provider</i> will be applied to the row object, not the <i>accessor</i> value of the cell. </p> <p> The same effect cannot be achieved with a simple <i>resource provider</i> for the column, because this inner <i>resource provider</i> is applied to the row object which gives context information from the row that may not be available from the cell value alone. This context information is necessary to write e.g. a type image on a "name" column (whose value is a string) to make it look like a "self" column (whose value is the row object). </p>
com.top_logic.layout.tree.renderer.RowTypeCellRenderer.tooltip = <i>Cell renderer</i> that renders table rows with a row type image.
com.top_logic.layout.tree.renderer.TreeCellRenderer = Tree cell renderer
com.top_logic.layout.tree.renderer.TreeCellRenderer$ToggleNaming$ToggleName = Toggle name
com.top_logic.layout.tree.renderer.TreeCellRenderer$ToggleNaming$ToggleName.tooltip = <i>Model name</i> of tree node toggle commands.
com.top_logic.layout.tree.renderer.TreeCellRenderer.Config.indentChars = Indent chars
com.top_logic.layout.tree.renderer.TreeCellRenderer.Config.resourceProvider.tooltip = Is normally used to unwrap tree nodes and create the tree expansion icons. <p> In this use case, the type icons are rendered by the content renderer. Therefore, this implementations used the <i>no resource provider</i> by default. </p>
com.top_logic.layout.tree.renderer.TreeCellRenderer.ToggleNaming.ToggleName.context-model = Context model
com.top_logic.layout.tree.renderer.TreeCellRenderer.ToggleNaming.ToggleName.context-model.tooltip = Name of the context model.
com.top_logic.layout.tree.renderer.TreeCellRenderer.ToggleNaming.ToggleName.expand = Expand
com.top_logic.layout.tree.renderer.TreeCellRenderer.ToggleNaming.ToggleName.expand.tooltip = Whether to expand (in contrast to collapse) a node.
com.top_logic.layout.tree.renderer.TreeCellRenderer.ToggleNaming.ToggleName.node = Node
com.top_logic.layout.tree.renderer.TreeCellRenderer.ToggleNaming.ToggleName.node.tooltip = The name of the node being toggled.
com.top_logic.layout.tree.renderer.TreeCellRenderer.tooltip = <i>Row type cell renderer</i> that renders <i>tree UI node</i> rows displaying an expand/collapse button.
com.top_logic.layout.unit.ApplyUnitCommandHandler = Apply unit command handler
com.top_logic.layout.unit.ApplyUnitCommandHandler.tooltip = This <i>command handler</i> applies changes after editing a <i>unit</i> instance.
com.top_logic.layout.unit.DeleteUnitCommandHandler = Delete unit command handler
com.top_logic.layout.unit.DeleteUnitCommandHandler.tooltip = This <i>command handler</i> deletes a <i>unit</i> instance if permissible. It contains the corresponding <i>executability rule</i> as an inner class.
com.top_logic.layout.unit.EditUnitComponent = Edit unit component
com.top_logic.layout.unit.EditUnitComponent.tooltip = <i>Component</i> to edit a <i>unit</i> instance. It has form fields for the name, format, sort order, base unit and conversion factor.
com.top_logic.layout.unit.NewUnitCommandHandler = New unit command handler
com.top_logic.layout.unit.NewUnitCommandHandler.tooltip = This <i>command handler</i> creates a new <i>unit</i> instance.
com.top_logic.layout.unit.NewUnitComponent = New unit component
com.top_logic.layout.unit.NewUnitComponent.tooltip = <i>Component</i> to create a <i>unit</i> instance. It has form fields for the name, format, sort order.
com.top_logic.layout.window.OpenWindowCommand = Open window command
com.top_logic.layout.window.OpenWindowCommand.Config.window-template-name = Window template name
com.top_logic.layout.window.OpenWindowCommand.tooltip = Handler for opening a window. This handler isn't registered in the <i>command handler factory</i>, because it isn't stateless.
com.top_logic.layout.window.WindowCloseActionOp = Window close action
com.top_logic.layout.window.WindowCloseActionOp.WindowCloseAction.close-window-name = Close window name
com.top_logic.layout.window.WindowCloseActionOp.WindowCloseAction.close-window-name.tooltip = Name of the <i>window component</i> to close.
com.top_logic.layout.window.WindowCloseActionOp.tooltip = <i>Component action</i> for <i>window close action</i>.
com.top_logic.layout.window.WindowComponent = Window component
com.top_logic.layout.window.WindowComponent.tooltip = Top-level component of a layout sub-tree that is displayed in a browser window. <p> This component is automatically wrapped around a <i>component</i>, if it is being opened in a window. </p>
com.top_logic.layout.window.WindowInfo = Window info
com.top_logic.layout.window.WindowInfo.closeIfParentBecomesInvisible = Close if parent becomes invisible
com.top_logic.layout.window.WindowInfo.closeIfParentBecomesInvisible.tooltip = Whether the window should be closed when its opener becomes invisible.
com.top_logic.layout.window.WindowInfo.multiWindow = Multiple window
com.top_logic.layout.window.WindowInfo.multiWindow.tooltip = Whether the window can be opened multiple times. <p> If <code>false</code>, an existing window is reused for following open requests. </p>
com.top_logic.layout.window.WindowInfo.tooltip = Display properties of a window.
com.top_logic.layout.window.WindowManager$OnCloseWindow = On close window
com.top_logic.layout.window.WindowManager$OnCloseWindow.tooltip = Notifies the window manager about a client-side window close operation issued by the user.
com.top_logic.layout.window.WindowTemplate = Window template
com.top_logic.layout.window.WindowTemplate$WindowConfig = Window configuration
com.top_logic.layout.window.WindowTemplate$WindowConfig.tooltip = Configuration for component that are opened in an external window.
com.top_logic.layout.window.WindowTemplate.Config.substitutions = Substitutions
com.top_logic.layout.window.WindowTemplate.Config.template = Template
com.top_logic.layout.window.WindowTemplate.WindowConfig.windowInfo = Window info
com.top_logic.layout.window.WindowTemplate.WindowConfig.windowInfo.tooltip = <i>Window configuration</i> holding the necessary informations for opening the window.
com.top_logic.layout.window.WindowTemplate.tooltip = This is a special SubstitutionReferenceComponnent that references separate windows. It defines some substitutions that are needed for handling of multiple separate windows displaying the same components. <i>Window templates</i> are registered at the <i>window manager</i>. The final Components will be resolve on opening the Window.
com.top_logic.layout.workItem.SubWorkItemRenderer = Sub work item renderer
com.top_logic.layout.workItem.WorkItemTableComponent = Work item table component
com.top_logic.layout.workItem.WorkItemTableComponent.tooltip = Table displaying work items.
com.top_logic.layout.xml.LayoutControlComponent = Layout control component
com.top_logic.layout.xml.LayoutControlComponent.Config.componentName = Component name
com.top_logic.layout.xml.LayoutControlComponent.Config.componentName.tooltip = Name of the component to render with the configured <i>layout control provider</i>
com.top_logic.layout.xml.LayoutControlComponent.tooltip = Workaround <i>component</i> to configure to render a third <i>component</i> using a separate <i>layout control provider</i>.
com.top_logic.mig.html.DefaultSelectionModelFactory = Default selection model factory
com.top_logic.mig.html.DefaultSelectionModelFactory.Config.filter = Filter
com.top_logic.mig.html.DefaultSelectionModelFactory.Config.filter.tooltip = Returns the selection filter for the created <i>selection model</i>.
com.top_logic.mig.html.DefaultSelectionModelFactory.Config.multiple = Multiple
com.top_logic.mig.html.DefaultSelectionModelFactory.Config.multiple.tooltip = Whether the created <i>selection model</i> must support multiple selection.
com.top_logic.mig.html.DefaultSelectionModelFactory.tooltip = <i>Selection model factory</i> that creates "default" <i>selection models</i>.
com.top_logic.mig.html.FilteringListModelBuilder = Filtering list model builder
com.top_logic.mig.html.FilteringListModelBuilder.Config.filter = Filter
com.top_logic.mig.html.FilteringListModelBuilder.Config.filter.tooltip = Only elements matching this <i>filter</i> are returned as model.
com.top_logic.mig.html.FilteringListModelBuilder.tooltip = <i>Proxy list model builder</i> that filters the list provided by its delegate.
com.top_logic.mig.html.GenericSelectionModelNaming$GenericSelectionModelName = Generic selection model name
com.top_logic.mig.html.GenericSelectionModelNaming$GenericSelectionModelName.tooltip = <i>Generic model name</i> for <i>generic selection model naming</i>.
com.top_logic.mig.html.HTMLUtil$Config = Configuration
com.top_logic.mig.html.HTMLUtil$Config.tooltip = Configuration for <i>HTML util</i>.
com.top_logic.mig.html.HTMLUtil.Config.forceScriptReload = Force script reload
com.top_logic.mig.html.HTMLUtil.Config.forceScriptReload.tooltip = Getter for <code>"forceScriptReload"</code>.
com.top_logic.mig.html.I18NResourceProvider = Internationalization resource provider
com.top_logic.mig.html.I18NResourceProvider.Config.emptyKey = Empty key
com.top_logic.mig.html.I18NResourceProvider.Config.emptyKey.tooltip = The fully qualified key to use, if <code>null</code> is displayed, or the encoded form is empty.
com.top_logic.mig.html.I18NResourceProvider.Config.resPrefix = Resource prefix
com.top_logic.mig.html.I18NResourceProvider.Config.resPrefix.tooltip = The optional resource prefix used as context to resolve suffixes in.
com.top_logic.mig.html.I18NResourceProvider.tooltip = Special <i>resource provider</i> creating internationalized labels for <i>internationalizable</i>, <i>resource key</i> or string-encoded <i>resource keys</i>. <p> This is especially useful to directly display <i>resource key</i> instances, <i>internationalizable</i> objects, or string-encoded resource keys). </p>
com.top_logic.mig.html.Media = Media
com.top_logic.mig.html.Media.BROWSER = Browser
com.top_logic.mig.html.Media.BROWSER.tooltip = Output is delivered to a browser.
com.top_logic.mig.html.Media.PDF = Pdf
com.top_logic.mig.html.Media.PDF.tooltip = Output is delivered to a PDF document.
com.top_logic.mig.html.Media.tooltip = Medium to which data are delivered.
com.top_logic.mig.html.NoImageResourceProvider = No image resource provider
com.top_logic.mig.html.NoImageResourceProvider.tooltip = The <i>no image resource provider</i> suppresses the images of the underlying ResourceProvider.
com.top_logic.mig.html.NoLabelResourceProvider = No label resource provider
com.top_logic.mig.html.NoLabelResourceProvider.tooltip = The NoLabelResourceProvider suppresses the label of the underlying ResourceProvider.
com.top_logic.mig.html.NoLinkResourceProvider = No link resource provider
com.top_logic.mig.html.NoLinkResourceProvider.tooltip = The NoLinkResourceProvider suppresses the links of the underlying ResourceProvider.
com.top_logic.mig.html.NoTooltipResourceProvider = No tooltip resource provider
com.top_logic.mig.html.NoTooltipResourceProvider.tooltip = The NoTooltipResourceProvider suppresses the tooltips of the underlying ResourceProvider.
com.top_logic.mig.html.ProxyListModelBuilder = Proxy list model builder
com.top_logic.mig.html.ProxyListModelBuilder.Config.inner = Inner
com.top_logic.mig.html.ProxyListModelBuilder.Config.inner.tooltip = The inner, proxied <i>list model builder</i>.
com.top_logic.mig.html.ProxyListModelBuilder.tooltip = A <i>list model builder</i> that has an inner <i>list model builder</i> and delegates all calls to that. <p> This class is meant to be subclassed: Concrete proxies have to override those methods that they want to intercept. </p>
com.top_logic.mig.html.SecurityListModelBuilder = Security list model builder
com.top_logic.mig.html.SecurityListModelBuilder.Config.filter = Filter
com.top_logic.mig.html.SecurityListModelBuilder.Config.filter.tooltip = Configuration of the <i>security filter</i> used to filter the list model.
com.top_logic.mig.html.SecurityListModelBuilder.Config.modelBuilder = Model builder
com.top_logic.mig.html.SecurityListModelBuilder.Config.modelBuilder.tooltip = <i>List model builder</i> to retrieve un-filtered list.
com.top_logic.mig.html.SecurityListModelBuilder.tooltip = <i>List model builder proxy</i> that filters the result list of an inner <i>model builder</i> by applying security.
com.top_logic.mig.html.SelectionModelConfig = Selection model configuration
com.top_logic.mig.html.SelectionModelConfig.selectionModelFactory = Selection model factory
com.top_logic.mig.html.SelectionModelConfig.selectionModelFactory.tooltip = Factory to create the <i>selection model</i>.
com.top_logic.mig.html.SelectionModelConfig.tooltip = Configuration for the selection model of a <i>component</i>.
com.top_logic.mig.html.SelectionModelNaming$SelectionModelName = Selection model name
com.top_logic.mig.html.SelectionModelNaming$SelectionModelName.tooltip = <i>Model name</i> of the <i>selection model</i>, used by the <i>selection model naming</i>.
com.top_logic.mig.html.SelectionModelNaming.SelectionModelName.owner = Owner
com.top_logic.mig.html.SelectionModelNaming.SelectionModelName.owner.tooltip = The <i>model name</i> of the selecton model's owner.
com.top_logic.mig.html.SelectionNaming$Name = Name
com.top_logic.mig.html.SelectionNaming$Name.tooltip = Name of the selection of a <i>selection model</i>
com.top_logic.mig.html.SelectionNaming.Name.selection-model = Selection model
com.top_logic.mig.html.SelectionNaming.Name.selection-model.tooltip = Name of the <i>selection model</i>.
com.top_logic.mig.html.layout.AbstractWindowInfo.createOpenerButtons = Create opener buttons
com.top_logic.mig.html.layout.AbstractWindowInfo.createOpenerButtons.tooltip = Whether the <i>Open handler</i> should be visible as button. <p> If the value is <code>false</code>, the dialog cannot be directly opened by the user. In that case, an open handler must be configured in some other component to open the dialog. </p>
com.top_logic.mig.html.layout.AbstractWindowInfo.disabledImage.tooltip = The icon to use for the opening command, if the dialog cannot be opened.
com.top_logic.mig.html.layout.AbstractWindowInfo.image.tooltip = The icon to use for the opening command.
com.top_logic.mig.html.layout.AbstractWindowInfo.open-handler = Open handler
com.top_logic.mig.html.layout.AbstractWindowInfo.open-handler.tooltip = Stand-alone configuration of the open handler. <p> Note: Currently, this option can only be configured directly in sub-classes. </p>
com.top_logic.mig.html.layout.AbstractWindowInfo.openHandlerClass = Open handler class
com.top_logic.mig.html.layout.AbstractWindowInfo.openHandlerClass.tooltip = Class of the handler opening the dialog.
com.top_logic.mig.html.layout.AbstractWindowInfo.openHandlerName = Open handler name
com.top_logic.mig.html.layout.AbstractWindowInfo.openHandlerName.tooltip = Name of the opener command opening the dialog as found in the <i>command handler factory</i>.
com.top_logic.mig.html.layout.AbstractWindowInfo.openerClique = Opener clique
com.top_logic.mig.html.layout.AbstractWindowInfo.openerClique.tooltip = Command clique of the opener command, if defined in parts using <i>Open handler class</i>. <p> If not set, a dynamic default applies defined by <i>Default clique</i> (<i>command handler factory configuration</i>). </p>
com.top_logic.mig.html.layout.AbstractWindowInfo.openerCommandGroup = Opener command group
com.top_logic.mig.html.layout.AbstractWindowInfo.openerCommandGroup.tooltip = Command group for the open command.
com.top_logic.mig.html.layout.AbstractWindowInfo.targetComponent = Target component
com.top_logic.mig.html.layout.AbstractWindowInfo.targetComponent.tooltip = <i>Model component</i> of the generated dialog open command.
com.top_logic.mig.html.layout.BookmarkNotFoundNotification = Bookmark not found notification
com.top_logic.mig.html.layout.BookmarkNotFoundNotification.tooltip = Command used to inform the user that the object corresponding to some bookmark could not be found for some reason.
com.top_logic.mig.html.layout.CSVFileUploadComponent = CSV file upload component
com.top_logic.mig.html.layout.CSVFileUploadComponent.tooltip = Upload a CSV-File as Temp-file assuming this is part of an Assistant.
com.top_logic.mig.html.layout.ComponentOverlay = Component overlay
com.top_logic.mig.html.layout.ComponentOverlay.components = Components
com.top_logic.mig.html.layout.ComponentOverlay.components.tooltip = Configuration of the overlay components, indexed by its name.
com.top_logic.mig.html.layout.ComponentOverlay.tooltip = Configuration of the overlays for the components in a given layout tree.
com.top_logic.mig.html.layout.ComponentReference = Component reference
com.top_logic.mig.html.layout.ComponentReference.name = Name
com.top_logic.mig.html.layout.ComponentReference.name.tooltip = The <i>component name</i> of the referenced <i>component</i>.
com.top_logic.mig.html.layout.ComponentReference.tooltip = Reference to a <i>component</i> within a component tree identified by its name.
com.top_logic.mig.html.layout.DialogInfo = Dialog info
com.top_logic.mig.html.layout.DialogInfo.closableUsingX = Closable using X
com.top_logic.mig.html.layout.DialogInfo.closableUsingX.tooltip = Whether this dialog can be closed using the 'X'-button in the title bar.
com.top_logic.mig.html.layout.DialogInfo.helpID = Help ID
com.top_logic.mig.html.layout.DialogInfo.helpID.tooltip = The help ID associated with the dialog.
com.top_logic.mig.html.layout.DialogInfo.openButtonSecComp = Open button security component
com.top_logic.mig.html.layout.DialogInfo.openButtonSecComp.tooltip = Name of the component in the dialog that is responsible for answering security question about the open dialog button.
com.top_logic.mig.html.layout.DialogInfo.openMaximized = Open maximized
com.top_logic.mig.html.layout.DialogInfo.openMaximized.tooltip = Whether this dialog is opened maxmimized.
com.top_logic.mig.html.layout.DialogInfo.resizable = Resizable
com.top_logic.mig.html.layout.DialogInfo.resizable.tooltip = Whether the dialog can be resized.
com.top_logic.mig.html.layout.DialogInfo.title = Title
com.top_logic.mig.html.layout.DialogInfo.title.tooltip = A <i>title provider</i> creating the title to display in the title bar of the represented dialog. <p> The configured <i>title provider</i> gets the top level <i>component</i> of the component and creates a non <code>null</code> <i>HTML fragment</i> used as title. </p>
com.top_logic.mig.html.layout.DialogInfo.tooltip = Configuration of a dialog display.
com.top_logic.mig.html.layout.FileUploadComponent = File upload component
com.top_logic.mig.html.layout.FileUploadComponent.Config.extensions = Extensions
com.top_logic.mig.html.layout.FileUploadComponent.Config.multiUpload = Multiple upload
com.top_logic.mig.html.layout.FileUploadComponent.Config.multiUpload.tooltip = Flag whether the upload field shall be multi upload aware.
com.top_logic.mig.html.layout.FileUploadComponent.Config.uploadDateField = Upload date field
com.top_logic.mig.html.layout.FileUploadComponent.Config.uploadHandlerName = Upload handler name
com.top_logic.mig.html.layout.FileUploadComponent.Config.uploadHandlerName.tooltip = Name of the upload handler that should be used
com.top_logic.mig.html.layout.FileUploadComponent.tooltip = Component to upload File. Most commonly used as a modal dialog.
com.top_logic.mig.html.layout.GlobalModelEventForwarder = Global model event forwarder
com.top_logic.mig.html.layout.GlobalModelEventForwarder$Config = Configuration
com.top_logic.mig.html.layout.GlobalModelEventForwarder$Config.tooltip = Configuration of the <i>global model event forwarder</i>.
com.top_logic.mig.html.layout.GlobalModelEventForwarder$LinkRelevanceConfig = Link relevance configuration
com.top_logic.mig.html.layout.GlobalModelEventForwarder$LinkRelevanceConfig.tooltip = A <i>link relevance configuration</i> specifies the attributes of a reference types that are important for changes of the referencing object, i.e. if the reference object is created, changed, or deleted, the referenced object is treated as updated.
com.top_logic.mig.html.layout.GlobalModelEventForwarder.Config.link-relevance = Link relevance
com.top_logic.mig.html.layout.GlobalModelEventForwarder.Config.link-relevance.tooltip = Returns configured link relevance.
com.top_logic.mig.html.layout.GlobalModelEventForwarder.LinkRelevanceConfig.attributes = Attributes
com.top_logic.mig.html.layout.GlobalModelEventForwarder.LinkRelevanceConfig.attributes.tooltip = Definition of the enabled reference attributes of the represented type.
com.top_logic.mig.html.layout.GlobalModelEventForwarder.LinkRelevanceConfig.type = Type
com.top_logic.mig.html.layout.GlobalModelEventForwarder.LinkRelevanceConfig.type.tooltip = The name of the type to specify relevance for.
com.top_logic.mig.html.layout.GlobalModelEventForwarder.tooltip = <i>Model event forwarder</i> that consistently delivers model change events from the persistency layer to all active sessions.
com.top_logic.mig.html.layout.IncludeComponent = Include component
com.top_logic.mig.html.layout.IncludeComponent.Config.encodings = Encodings
com.top_logic.mig.html.layout.IncludeComponent.Config.encodings.tooltip = The encodings of the included files.
com.top_logic.mig.html.layout.IncludeComponent.Config.files = Files
com.top_logic.mig.html.layout.IncludeComponent.Config.files.tooltip = The files to include.
com.top_logic.mig.html.layout.IncludeComponent.tooltip = Just include the content of some (html-) File. when you want to render the whole js and css stuff by the framework and want to show just some html use this component. It includes the content of a file or more in the body of this component. KHA: Better us a page component and use static files. Perfomance and merory consumption should be much better !
com.top_logic.mig.html.layout.InvalidateComponentCommand = Invalidate component command
com.top_logic.mig.html.layout.InvalidateComponentCommand.Config.component-name = Component name
com.top_logic.mig.html.layout.InvalidateComponentCommand.Config.component-name.tooltip = Name of the component to validate.
com.top_logic.mig.html.layout.InvalidateComponentCommand.tooltip = Command that invalidates a <i>component</i>.
com.top_logic.mig.html.layout.Layout = Layout
com.top_logic.mig.html.layout.Layout$LayoutResizeMode = Layout resize mode
com.top_logic.mig.html.layout.Layout.Config.horizontal = Horizontal
com.top_logic.mig.html.layout.Layout.Config.resizable = Resizable
com.top_logic.mig.html.layout.Layout.Config.resizable.tooltip = Flag to mark the layout as resizable, so that the content components can be resized by dragging an additional displayed bar.
com.top_logic.mig.html.layout.Layout.Config.resizeMode = Resize mode
com.top_logic.mig.html.layout.Layout.LayoutResizeMode.INSTANT = Instant
com.top_logic.mig.html.layout.Layout.LayoutResizeMode.PREVIEW = Preview
com.top_logic.mig.html.layout.Layout.tooltip = A Layout is a horizontal or vertical List of LayoutComponents. The model for this class is the list of its child components.
com.top_logic.mig.html.layout.LayoutComponent = Component
com.top_logic.mig.html.layout.LayoutComponent$GlobalConfig = Global configuration
com.top_logic.mig.html.layout.LayoutComponent$GlobalConfig.tooltip = <i>Configuration item</i> containing some of the methods in <i>configuration</i> which may be be configured globally, but also be overridden in some subclasses. <p> This <i>configuration item</i> is for compatibility with 5.7.6 in which <i>component</i> may also be instantiated using <i>attributes</i>. For these components it not easily possible to configure defaults for <i>component</i> but override it programatically. </p>
com.top_logic.mig.html.layout.LayoutComponent.Config.active-component-control-provider = Active component control provider
com.top_logic.mig.html.layout.LayoutComponent.Config.assistantInfo = Assistant info
com.top_logic.mig.html.layout.LayoutComponent.Config.assistantInfo.tooltip = When the configured component is part of an <i>assistent component</i>, here are all the settings for it.
com.top_logic.mig.html.layout.LayoutComponent.Config.bodyClass = Body class
com.top_logic.mig.html.layout.LayoutComponent.Config.bodyClass.tooltip = CSS class to add to the top-level component view.
com.top_logic.mig.html.layout.LayoutComponent.Config.buttonComponent = Button component
com.top_logic.mig.html.layout.LayoutComponent.Config.buttonComponent.tooltip = Name of the <i>button component</i> to place command in.
com.top_logic.mig.html.layout.LayoutComponent.Config.buttons = Buttons
com.top_logic.mig.html.layout.LayoutComponent.Config.closeHandlerName = Close handler name
com.top_logic.mig.html.layout.LayoutComponent.Config.commandGroups = Command groups
com.top_logic.mig.html.layout.LayoutComponent.Config.commandGroups.tooltip = Additional <i>command groups</i> that needed by the configured component.
com.top_logic.mig.html.layout.LayoutComponent.Config.commands = Commands
com.top_logic.mig.html.layout.LayoutComponent.Config.component-resolvers = Component resolvers
com.top_logic.mig.html.layout.LayoutComponent.Config.component-resolvers.tooltip = Plugins that executes additional resolve operations on this <i>component</i>
com.top_logic.mig.html.layout.LayoutComponent.Config.componentControlProvider = Component control provider
com.top_logic.mig.html.layout.LayoutComponent.Config.content-layouting = Content layouting
com.top_logic.mig.html.layout.LayoutComponent.Config.content-layouting.tooltip = General <i>layouting</i> algorithm for leaf components.
com.top_logic.mig.html.layout.LayoutComponent.Config.dialogInfo = Dialog info
com.top_logic.mig.html.layout.LayoutComponent.Config.dialogInfo.tooltip = When the configured component has to be opened as the toplayout of a dialog, here are all the settings for it.
com.top_logic.mig.html.layout.LayoutComponent.Config.dialogs = Dialogs
com.top_logic.mig.html.layout.LayoutComponent.Config.dialogs.tooltip = Dialog components.
com.top_logic.mig.html.layout.LayoutComponent.Config.displayWithoutModel = Display without model
com.top_logic.mig.html.layout.LayoutComponent.Config.displayWithoutModel.tooltip = Whether this component should be displayed, also when the component has no model.
com.top_logic.mig.html.layout.LayoutComponent.Config.dontRecord = Dont record
com.top_logic.mig.html.layout.LayoutComponent.Config.dropTarget = Drop target
com.top_logic.mig.html.layout.LayoutComponent.Config.dropTarget.tooltip = <i>Component drop target</i> that handles drop operations over the configured component.
com.top_logic.mig.html.layout.LayoutComponent.Config.final = Final
com.top_logic.mig.html.layout.LayoutComponent.Config.final.tooltip = If <code>true</code>, this no overlay for this configuration in sub projects are applied.
com.top_logic.mig.html.layout.LayoutComponent.Config.helpID = Help ID
com.top_logic.mig.html.layout.LayoutComponent.Config.helpID.tooltip = When set, references a help page for this component.
com.top_logic.mig.html.layout.LayoutComponent.Config.helpIDLegacy = Help ID legacy
com.top_logic.mig.html.layout.LayoutComponent.Config.helpIDLegacy.tooltip = When set, references a help page for this component (the value is a legacy resource key, from which a tailing part is stripped to get the actual help ID).
com.top_logic.mig.html.layout.LayoutComponent.Config.layoutInfo = Layout info
com.top_logic.mig.html.layout.LayoutComponent.Config.layoutInfo.tooltip = Information for the layouting algorithm of the parent layout.
com.top_logic.mig.html.layout.LayoutComponent.Config.maximizeRoot = Maximize root
com.top_logic.mig.html.layout.LayoutComponent.Config.maximizeRoot.tooltip = Name of the ancestor component that is maximized, if the maximize button in this component's toolbar is pressed.
com.top_logic.mig.html.layout.LayoutComponent.Config.name = Name
com.top_logic.mig.html.layout.LayoutComponent.Config.name.tooltip = Returns the name of the configured component. If nothing is configured a synthetic name is returned.
com.top_logic.mig.html.layout.LayoutComponent.Config.noModelKey = No model key
com.top_logic.mig.html.layout.LayoutComponent.Config.noModelKey.tooltip = Optional <i>resource key</i> to display when this component does not have a model.
com.top_logic.mig.html.layout.LayoutComponent.Config.renderInline = Render inline
com.top_logic.mig.html.layout.LayoutComponent.Config.resPrefix = Resource prefix
com.top_logic.mig.html.layout.LayoutComponent.Config.resPrefix.tooltip = The <i>resource prefix</i> for the configured component.
com.top_logic.mig.html.layout.LayoutComponent.Config.resetInvisible = Reset invisible
com.top_logic.mig.html.layout.LayoutComponent.Config.resetInvisible.tooltip = Whether the component is invalidated, when the it becomes invisible. <p> This allows to release resources when this component is no longer visible. </p>
com.top_logic.mig.html.layout.LayoutComponent.Config.saveScrollPosition = Save scroll position
com.top_logic.mig.html.layout.LayoutComponent.Config.tabInfo = Tab info
com.top_logic.mig.html.layout.LayoutComponent.Config.tabInfo.tooltip = When the configured component is part of a <i>tab component</i>, here are all the settings for it.
com.top_logic.mig.html.layout.LayoutComponent.Config.tile-info = Tile info
com.top_logic.mig.html.layout.LayoutComponent.Config.tile-info.tooltip = When the configured component is part of an <i>group tile component</i>, here are all the settings for it.
com.top_logic.mig.html.layout.LayoutComponent.Config.toolbar = Toolbar
com.top_logic.mig.html.layout.LayoutComponent.Config.toolbar-groups = Toolbar groups
com.top_logic.mig.html.layout.LayoutComponent.Config.toolbar-groups.tooltip = Configuration of <i>tool bar groups</i> for this component.
com.top_logic.mig.html.layout.LayoutComponent.Config.toolbar.tooltip = Whether a toolbar should be allocated for this component automatically. <p> Not allocating a toolbar prevents this component from being maximizable and removes the possibility of collapsing the component within a flexible layout. </p>
com.top_logic.mig.html.layout.LayoutComponent.Config.useChangeHandling = Use change handling
com.top_logic.mig.html.layout.LayoutComponent.Config.views = Views
com.top_logic.mig.html.layout.LayoutComponent.Config.windows = Windows
com.top_logic.mig.html.layout.LayoutComponent.tooltip = Basic Building block of a (HTML) Layout.
com.top_logic.mig.html.layout.LayoutComponentUIOptions = Layout component UI options
com.top_logic.mig.html.layout.LayoutComponentUIOptions.model = Model
com.top_logic.mig.html.layout.LayoutComponentUIOptions.model.tooltip = Source of the component's model. <p> A component typically displays some content based on a model. The component's model is a single object, on which the component operates. Based on this model, a table component e.g. produces a list of row objects to be displayed. In most cases, the component's model is not displayed directly, but some aspects derived from this model. Another example is a form component. A form typically displays several fields for editing some properties of the component's model. </p> <p> The component's model can be received from other components through channels. A common use case is to receive a model from another component's selection channel. In such a configuration, the model of the receiving component changes whenever a user selects a new value in the sending component. All components have a <code>model</code> channel. Several components such as tables and trees have also a <code>selection</code> channel. Besides these common channels, there may be components with more specialized channels. </p>
com.top_logic.mig.html.layout.LayoutComponentUIOptions.titleKey = Title
com.top_logic.mig.html.layout.LayoutComponentUIOptions.titleKey.tooltip = Internationalized title of this component. <p> If the component has a tile bar, this title is shown there. </p>
com.top_logic.mig.html.layout.LayoutComponentUIOptions.tooltip = Configuration options of <i>component</i> that are displayed in simplified templates for component configuration.
com.top_logic.mig.html.layout.LayoutContainer = Layout container
com.top_logic.mig.html.layout.LayoutContainer.Config.child-configurations = Child configurations
com.top_logic.mig.html.layout.LayoutContainer.Config.child-configurations.tooltip = Configuration of all possible children in this <i>layout container</i>.
com.top_logic.mig.html.layout.LayoutContainer.tooltip = A Component that may have subcomponents.
com.top_logic.mig.html.layout.LayoutInfo = Layout info
com.top_logic.mig.html.layout.LayoutInfo.minSize = Minimum size
com.top_logic.mig.html.layout.LayoutInfo.minSize.tooltip = The minimum size the component can be resized to.
com.top_logic.mig.html.layout.LayoutInfo.scrolleable = Scrolleable
com.top_logic.mig.html.layout.LayoutInfo.scrolleable.tooltip = Whether the component's content are should get scroll bars, if the content does not fit into the available display area.
com.top_logic.mig.html.layout.LayoutInfo.size = Size
com.top_logic.mig.html.layout.LayoutInfo.size.tooltip = The displayed size of the component in the direction of its surrounding layout.
com.top_logic.mig.html.layout.LayoutInfo.tooltip = Component-local information to the layout algorithm.
com.top_logic.mig.html.layout.LayoutList = Layout list
com.top_logic.mig.html.layout.LayoutList.tooltip = <i>Layout container</i> organizing its children in a copy-on-write list.
com.top_logic.mig.html.layout.LayoutReference$LayoutReferenceComponent = Layout reference component
com.top_logic.mig.html.layout.LayoutReference$LayoutReferenceComponent.tooltip = Workaround component to avoid unnecessary "config:interface" annotation when serialising a <i>layout reference</i>.
com.top_logic.mig.html.layout.LayoutReference.resource.tooltip = Path to the layout file containing the referenced component.
com.top_logic.mig.html.layout.LayoutReference.target-label = Target label
com.top_logic.mig.html.layout.LayoutReference.target-label.tooltip = Label of the target component given by this reference.
com.top_logic.mig.html.layout.LayoutStorage = Layout storage
com.top_logic.mig.html.layout.LayoutStorage.Config.excludePatterns = Exclude patterns
com.top_logic.mig.html.layout.LayoutStorage.Config.excludePatterns.tooltip = If a layout name matches one of these patterns, it is <b>not</b> loaded.
com.top_logic.mig.html.layout.LayoutStorage.tooltip = Storage of <i>configurations</i>.
com.top_logic.mig.html.layout.MainLayout = Main layout
com.top_logic.mig.html.layout.MainLayout$DocType = Doc type
com.top_logic.mig.html.layout.MainLayout$DocType.tooltip = Configuration of an XHTML document type. <code> &lt;!DOCTYPE HTML PUBLIC "<code>"publicID"</code>" "<code>"path"</code><code>"dtd"</code>"&gt; </code>
com.top_logic.mig.html.layout.MainLayout$GlobalConfig = Global configuration
com.top_logic.mig.html.layout.MainLayout$GlobalConfig.tooltip = Configuration for <i>main layout</i>. System identifiers for various document type definitions.
com.top_logic.mig.html.layout.MainLayout$NotifyUnload = Notify unload
com.top_logic.mig.html.layout.MainLayout$NotifyUnload.tooltip = The <i>notify unload</i> command is triggered during the unload of the body of the <i>main layout</i>. It will be triggered if the user pressed the "F5" button. Triggering of this command will be suppressed if the server demands a complete reload.
com.top_logic.mig.html.layout.MainLayout.Config.closeDialogOnBackgroundClick = Close dialog on background click
com.top_logic.mig.html.layout.MainLayout.Config.closeDialogOnBackgroundClick.tooltip = Whether a dialog with a close button could be closed by a background click.
com.top_logic.mig.html.layout.MainLayout.Config.headerIncludeFilePath = Header include file path
com.top_logic.mig.html.layout.MainLayout.Config.icon = Icon
com.top_logic.mig.html.layout.MainLayout.Config.layoutFactory = Layout factory
com.top_logic.mig.html.layout.MainLayout.Config.layoutFactory.tooltip = The <i>layout factory</i> to use.
com.top_logic.mig.html.layout.MainLayout.Config.postProcessorClassName = Post processor class name
com.top_logic.mig.html.layout.MainLayout.Config.shortcutIcon = Shortcut icon
com.top_logic.mig.html.layout.MainLayout.DocType.dtd = Dtd
com.top_logic.mig.html.layout.MainLayout.DocType.dtd.tooltip = Getter for <code>"dtd"</code>.
com.top_logic.mig.html.layout.MainLayout.DocType.path = Path
com.top_logic.mig.html.layout.MainLayout.DocType.path.tooltip = Getter for <code>"path"</code>.
com.top_logic.mig.html.layout.MainLayout.DocType.publicID = Public ID
com.top_logic.mig.html.layout.MainLayout.DocType.publicID.tooltip = Getter for <code>"publicID"</code>.
com.top_logic.mig.html.layout.MainLayout.GlobalConfig.docType = Doc type
com.top_logic.mig.html.layout.MainLayout.GlobalConfig.docType.tooltip = Getter for the <code>"docType"</code>.
com.top_logic.mig.html.layout.MainLayout.GlobalConfig.eventForwarder = Event forwarder
com.top_logic.mig.html.layout.MainLayout.GlobalConfig.eventForwarder.tooltip = The <i>model event forwarder</i> that transforms change sets from the persistency layer to session events.
com.top_logic.mig.html.layout.MainLayout.tooltip = This is the top most part of a complete HTML-Layout. In Addition it provides a lot of static function to retrieve and navigate in layouts.
com.top_logic.mig.html.layout.PageComponent = Page component
com.top_logic.mig.html.layout.PageComponent.Config.page = Page
com.top_logic.mig.html.layout.PageComponent.tooltip = A LayoutComponent wrapper for "intelligent" HTML Pages (JSP, Servlet ...) .
com.top_logic.mig.html.layout.ProgressComponent = Progress component
com.top_logic.mig.html.layout.ProgressComponent.tooltip = A generic component to show the progress of a long lasting process provided by an implementation of the <i>progress info</i> interface. (Normally used as part of an assistant that wants to give a user response for some ongoing task). <p> The progress is shown as a progress bar. Above the progress bar is a description about what the whole task is about(called the progress info). Below the progress bar is a description of the current (sub)task (called the progress message). This information is provided by the <code>com.top_logic.layout.progress.ProgressInfo#getMessage()</code> method. </p> <p> After the progress is finished a message is shown to indicate this. </p> <h3>Example</h3> <p> The progress bar at a progress of 80%: <p> <h3>the header(progress header)</h3> An overview of the task(progress info) <table style="table-layout:fixed;border:thin solid black;width:80%;height:20px;"> <td style="width:80%;border:1;background-color: #000080;"/> <td style="width:20%;border:1;background-color: lightgrey;"/> </table> A short description of the current task(progress message) </p> </p> <p> <em>Note</em>: The component assumes, that the model implements the <i>progress info</i> interface, but this can be overriden. </p>
com.top_logic.mig.html.layout.SimpleBoundComponent = Simple bound component
com.top_logic.mig.html.layout.SimpleBoundComponent.Config.content-message = Content message
com.top_logic.mig.html.layout.SimpleBoundComponent.Config.content-message.tooltip = Resource message to display in the component body.
com.top_logic.mig.html.layout.SimpleBoundComponent.tooltip = <i>Bound component</i> that simply displays an internationalized message in its body.
com.top_logic.mig.html.layout.SimpleComponent = Simple component
com.top_logic.mig.html.layout.SimpleComponent.Config.content = Content
com.top_logic.mig.html.layout.SimpleComponent.Config.header = Header
com.top_logic.mig.html.layout.SimpleComponent.Config.useResources = Use resources
com.top_logic.mig.html.layout.SimpleComponent.tooltip = Simple Subclass of LayoutComponent for Demonstration of Concept. <p> Very valuable as placeholder: "ToDO XYZ Gui" ;-) </p>
com.top_logic.mig.html.layout.SingleLayoutContainer = Single layout container
com.top_logic.mig.html.layout.SingleLayoutContainer$ChildControlProvider = Child control provider
com.top_logic.mig.html.layout.SingleLayoutContainer$ChildControlProvider.tooltip = <i>Context menu layout control provider</i> for <i>single layout container</i> which creates a Control that inlines the child component, i.e. there is no GUI representation for the container itself.
com.top_logic.mig.html.layout.SingleLayoutContainer.Config.component = Component
com.top_logic.mig.html.layout.SingleLayoutContainer.Config.component.tooltip = Configuration of the single child component.
com.top_logic.mig.html.layout.SingleLayoutContainer.tooltip = <i>Layout container</i> holding at most one child.
com.top_logic.mig.html.layout.SubComponentConfig.components = Components
com.top_logic.mig.html.layout.SubComponentConfig.components.tooltip = Sub-component configurations.
com.top_logic.mig.html.layout.WithDefaultFor.defaultFor = Default for
com.top_logic.mig.html.layout.WithDefaultFor.defaultFor.tooltip = For the configured types, this component is the default view. <p> The default view for a type is opened, whenever an object of that type is opened through a link. </p>
com.top_logic.mig.html.layout.WithGotoConfiguration$GotoTarget = Goto target
com.top_logic.mig.html.layout.WithGotoConfiguration$GotoTarget.tooltip = Configuration of a local goto target.
com.top_logic.mig.html.layout.WithGotoConfiguration.GotoTarget.component = Component
com.top_logic.mig.html.layout.WithGotoConfiguration.GotoTarget.component.tooltip = Name of the component that is used as GOTO target for objects of type <i>Type</i>.
com.top_logic.mig.html.layout.WithGotoConfiguration.GotoTarget.type.tooltip = Full qualified name of the <i>type</i> for which <i>Component</i> must be used as GOTO target.
com.top_logic.mig.html.layout.WithGotoConfiguration.goto-targets = Goto targets
com.top_logic.mig.html.layout.WithGotoConfiguration.goto-targets.tooltip = Configuration for local GOTO targets. <p> The values are pairs of <i>type</i> name's and <i>component names</i>. When an object of the type (or a specialization) is displayed, the configured target component is used as goto target by default. </p>
com.top_logic.mig.html.layout.tiles.ComponentBuilder = Component builder
com.top_logic.mig.html.layout.tiles.ComponentBuilder.arguments = Arguments
com.top_logic.mig.html.layout.tiles.ComponentBuilder.arguments.tooltip = Optional arguments the are stored into the created <i>component parameters</i>. <p> The arguments typically contains informations that are not given by the user but are derived from the layout configuration environment, e.g. the "master" of the component to create. </p> <p> The configured keys must be the names of the properties of the concrete parameters type, and the configured values valid configuration values for the corresponding keys. </p>
com.top_logic.mig.html.layout.tiles.ComponentBuilder.dialogHeight = Dialog height
com.top_logic.mig.html.layout.tiles.ComponentBuilder.dialogHeight.tooltip = The height of the configuration dialog for this <i>component builder</i>.
com.top_logic.mig.html.layout.tiles.ComponentBuilder.dialogWidth = Dialog width
com.top_logic.mig.html.layout.tiles.ComponentBuilder.dialogWidth.tooltip = The width of the configuration dialog for this <i>component builder</i>.
com.top_logic.mig.html.layout.tiles.ComponentBuilder.formBuilder = Form builder
com.top_logic.mig.html.layout.tiles.ComponentBuilder.formBuilder.tooltip = The <i>dialog form builder</i> that creates the form to let the user given the necessary information that is needed to create the component.
com.top_logic.mig.html.layout.tiles.ComponentBuilder.parameters = Parameters
com.top_logic.mig.html.layout.tiles.ComponentBuilder.parameters.tooltip = The type of <i>component parameters</i> defining the parameter that are used to fill the referenced template.
com.top_logic.mig.html.layout.tiles.ComponentBuilder.template = Template
com.top_logic.mig.html.layout.tiles.ComponentBuilder.template.tooltip = The referenced layout file containing the template of the <i>component</i> to create. <p> The parameters that are used in the referenced template are defined by <i>Parameters</i>. </p>
com.top_logic.mig.html.layout.tiles.ComponentBuilder.tooltip = Definition of the builder for creating a new <i>component</i>.
com.top_logic.mig.html.layout.tiles.CompositeTile.tiles = Tiles
com.top_logic.mig.html.layout.tiles.CompositeTile.tiles.tooltip = The contained <i>tile layout</i> in this <i>composite tile</i>.
com.top_logic.mig.html.layout.tiles.ContextTileComponent = Context tile component
com.top_logic.mig.html.layout.tiles.ContextTileComponent.Config.content = Content
com.top_logic.mig.html.layout.tiles.ContextTileComponent.Config.content.tooltip = Configuration of the actual content component. This component uses the selection of <i>Selector</i> as context.
com.top_logic.mig.html.layout.tiles.ContextTileComponent.Config.selector = Selector
com.top_logic.mig.html.layout.tiles.ContextTileComponent.Config.selector.tooltip = Configuration of the component that selects the context for <i>Content</i>.
com.top_logic.mig.html.layout.tiles.ContextTileComponent.tooltip = <i>Layout container</i> representing a selector and content in tile environment. <p> A <i>context tile component</i> has exactly 2 children. Either the first or the second component is visible. </p> <p> The first child is the selector. Its selection represents the context object for the content. </p> <p> The second child is the content. It is displayed when something is selected in the selector. </p>
com.top_logic.mig.html.layout.tiles.ContextTileGroup = Context tile group
com.top_logic.mig.html.layout.tiles.ContextTileGroup.tooltip = <i>Composite tile</i> identifying the content of a <i>tile reference</i>.
com.top_logic.mig.html.layout.tiles.GroupTileComponent = Group tile component
com.top_logic.mig.html.layout.tiles.GroupTileComponent.tooltip = <i>Layout</i> in a tile context. <p> A <i>group tile component</i> is the holder for inner components which are displayed as tile. The information how the children are displayed as tiles can be found in the <i>Tile info</i> of the child component. </p>
com.top_logic.mig.html.layout.tiles.InlinedTile = Inlined tile
com.top_logic.mig.html.layout.tiles.InlinedTile.component = Component
com.top_logic.mig.html.layout.tiles.InlinedTile.component.tooltip = The configuration of the displayed component.
com.top_logic.mig.html.layout.tiles.InlinedTile.id = ID
com.top_logic.mig.html.layout.tiles.InlinedTile.id.tooltip = Application wide unique identifier of this <i>tile layout</i>.
com.top_logic.mig.html.layout.tiles.InlinedTile.tooltip = <i>Tile layout</i> containing the whole configuraton of a <i>component</i> inlined.
com.top_logic.mig.html.layout.tiles.InternationalizedName.name = Name
com.top_logic.mig.html.layout.tiles.InternationalizedName.name.tooltip = The internationalised name.
com.top_logic.mig.html.layout.tiles.PersonalizedTile = Personalized tile
com.top_logic.mig.html.layout.tiles.PersonalizedTile.hidden = Hidden
com.top_logic.mig.html.layout.tiles.PersonalizedTile.hidden.tooltip = Whether the <i>tile layout</i> is currently hidden.
com.top_logic.mig.html.layout.tiles.PersonalizedTile.tooltip = A <i>tile layout</i> that is created by the user.
com.top_logic.mig.html.layout.tiles.RootTileComponent = Root tile component
com.top_logic.mig.html.layout.tiles.RootTileComponent.Config.title = Title
com.top_logic.mig.html.layout.tiles.RootTileComponent.Config.title.tooltip = The title is displayed in the toolbar of the configured component. <p> Null means, that no title is displayed. </p>
com.top_logic.mig.html.layout.tiles.RootTileComponent.Config.toolbar.tooltip = <i>Root tile component</i> needs a <i>tool bar</i> to render the title.
com.top_logic.mig.html.layout.tiles.RootTileComponent.tooltip = A <i>root tile component</i> is the main entry point to configure tiles in app. <p> The main components that can be configured in a <i>root tile component</i> are the <i>group tile component</i> to display a group of components as tiles, and the <i>context tile component</i> to connect a <i>selectable</i> component and a detail component. In this case, when an object is selected in the selection component a step in the tile hierarchy is descended and the detail component is displayed. This detail component can use the selection of the selectable component as a model. </p> <p> The <i>root tile component</i> displays a breadbrumb showing the path to the currently visible tile. The breadcrumb can also be used to navigate back to parent components. </p>
com.top_logic.mig.html.layout.tiles.StepOutCommand = Step out command
com.top_logic.mig.html.layout.tiles.StepOutCommand.tooltip = Command to display the "tile parent" of a component.
com.top_logic.mig.html.layout.tiles.TileBuilder = Tile builder
com.top_logic.mig.html.layout.tiles.TileBuilder.tooltip = Definition of the builder for creating a new <i>component</i> displaying in a tile.
com.top_logic.mig.html.layout.tiles.TileComponentName = Tile component name
com.top_logic.mig.html.layout.tiles.TileComponentName.name.tooltip = Name of the new component. <p> The name is displayed in the navigation bar. It is displayed parameterised with the context model of the component. The context model is displayed at the position '{0}' in the name. </p>
com.top_logic.mig.html.layout.tiles.TileComponentName.tooltip = Configuration of the name of a component displayed in tile environment.
com.top_logic.mig.html.layout.tiles.TileDefinition = Tile definition
com.top_logic.mig.html.layout.tiles.TileDefinition.component = Component
com.top_logic.mig.html.layout.tiles.TileDefinition.component.tooltip = The configuration of the <i>component</i> which is displayed in the tile.
com.top_logic.mig.html.layout.tiles.TileDefinition.tileCommands = Tile commands
com.top_logic.mig.html.layout.tiles.TileDefinition.tileCommands.tooltip = Commands to display for the defined tile.
com.top_logic.mig.html.layout.tiles.TileDefinition.tileProvider = Tile provider
com.top_logic.mig.html.layout.tiles.TileDefinition.tileProvider.tooltip = The configuration of a <i>tile provider</i> to create <i>component tiles</i> to display for the <i>tile reference</i> that references this <i>tile definition</i>.
com.top_logic.mig.html.layout.tiles.TileDefinition.tooltip = Definition of a component tile. <p> A <i>tile definition</i> contains a <i>component</i> which is displayed in the tile, and <i>tile definitions</i> for <i>component</i> that have <i>Component</i> as context component. </p>
com.top_logic.mig.html.layout.tiles.TileGroup = Tile group
com.top_logic.mig.html.layout.tiles.TileGroup.tooltip = A <i>composite tile</i> with a static description.
com.top_logic.mig.html.layout.tiles.TileInfo = Tile info
com.top_logic.mig.html.layout.tiles.TileInfo.tile-factory = Tile factory
com.top_logic.mig.html.layout.tiles.TileInfo.tile-factory.tooltip = Factory to create <i>component tiles</i> for the annotated component to be displayed as tile.
com.top_logic.mig.html.layout.tiles.TileInfo.tooltip = Display information for displaying a <i>component</i> as tile.
com.top_logic.mig.html.layout.tiles.TileLayout = Tile layout
com.top_logic.mig.html.layout.tiles.TileLayout.tooltip = Super interface of all tiles.
com.top_logic.mig.html.layout.tiles.TileRef = Tile reference
com.top_logic.mig.html.layout.tiles.TileRef.content-tile = Content tile
com.top_logic.mig.html.layout.tiles.TileRef.content-tile.tooltip = The concrete content of a <i>tile reference</i>. <p> In the content only context free <i>tile layout</i> are allowed or references to <i>tile definition</i> within <i>Tiles</i> (<i>tile definition container</i>) of the referenced <i>tile definition</i>. </p>
com.top_logic.mig.html.layout.tiles.TileRef.tooltip = Reference to a <i>tile definition</i>.
com.top_logic.mig.html.layout.tiles.TileRoot = Tile root
com.top_logic.mig.html.layout.tiles.TileRoot.tooltip = Marker interface to have configuration name for the root of a <i>tile layout</i> hierarchy.
com.top_logic.mig.html.layout.tiles.breadcrumb.RootTileBreadcrumbControlProvider = Root tile breadcrumb control provider
com.top_logic.mig.html.layout.tiles.breadcrumb.RootTileBreadcrumbControlProvider$BreadcrumbNodeResourceProvider = Breadcrumb node resource provider
com.top_logic.mig.html.layout.tiles.breadcrumb.RootTileBreadcrumbControlProvider$BreadcrumbNodeResourceProvider.tooltip = <i>No image resource provider</i> for the nodes in the breadcrumb view.
com.top_logic.mig.html.layout.tiles.breadcrumb.RootTileBreadcrumbControlProvider.Config.renderer = Renderer
com.top_logic.mig.html.layout.tiles.breadcrumb.RootTileBreadcrumbControlProvider.Config.renderer.tooltip = The <i>breadcrumb renderer</i> that should render the breadcrumb.
com.top_logic.mig.html.layout.tiles.breadcrumb.RootTileBreadcrumbControlProvider.tooltip = <i>Control provider</i> creating a <i>breadcrumb control</i> in a <i>root tile component</i>.
com.top_logic.mig.html.layout.tiles.breadcrumb.TileBreadcrumbControlProvider = Tile breadcrumb control provider
com.top_logic.mig.html.layout.tiles.breadcrumb.TileBreadcrumbControlProvider.Config.renderer = Renderer
com.top_logic.mig.html.layout.tiles.breadcrumb.TileBreadcrumbControlProvider.Config.renderer.tooltip = The <i>breadcrumb renderer</i> that should render the breadcrumb.
com.top_logic.mig.html.layout.tiles.breadcrumb.TileBreadcrumbControlProvider.Config.treeBuilder = Tree builder
com.top_logic.mig.html.layout.tiles.breadcrumb.TileBreadcrumbControlProvider.Config.treeBuilder.tooltip = The <i>tree builder</i> for the <i>tree model</i> displayed by the breadcrumb.
com.top_logic.mig.html.layout.tiles.breadcrumb.TileBreadcrumbControlProvider.tooltip = <i>Control provider</i> for the <i>breadcrumb control</i>.
com.top_logic.mig.html.layout.tiles.component.AbstractTileProvider = Tile provider
com.top_logic.mig.html.layout.tiles.component.AbstractTileProvider.tooltip = Abstract super class for <i>tile provider</i>.
com.top_logic.mig.html.layout.tiles.component.AddComponentCommand = Add component command
com.top_logic.mig.html.layout.tiles.component.AddComponentCommand.tooltip = <i>Command handler</i> to add a new view from the possible <i>tile builder</i>.
com.top_logic.mig.html.layout.tiles.component.AddGroupCommand = Add group command
com.top_logic.mig.html.layout.tiles.component.AddGroupCommand.tooltip = <i>Command handler</i> that creates a new empty <i>tile group</i> and adds it to the calling component.
com.top_logic.mig.html.layout.tiles.component.ComponentParameters = Component parameters
com.top_logic.mig.html.layout.tiles.component.ComponentParameters.name = Name
com.top_logic.mig.html.layout.tiles.component.ComponentParameters.name.tooltip = Name of the template (relative to <code>"/WEB-INF/layouts/"</code>) holding the layout template.
com.top_logic.mig.html.layout.tiles.component.ComponentParameters.securityId = Security ID
com.top_logic.mig.html.layout.tiles.component.ComponentParameters.securityId.tooltip = The security id of the component in the tile. This is not selected by the user but filled from configuration.
com.top_logic.mig.html.layout.tiles.component.ComponentParameters.tooltip = <i>Configuration item</i> representing the informations that are needed to include a layout file.
com.top_logic.mig.html.layout.tiles.component.ConfigureGroupCommand = Configure group command
com.top_logic.mig.html.layout.tiles.component.ConfigureGroupCommand.tooltip = <i>Command handler</i> configuring the contents of a <i>composite tile</i>. <p> Possible selections are the currently displayed groups and all <i>tile reference's</i> which can be displayed in the current context stack of <i>tile reference</i>. </p>
com.top_logic.mig.html.layout.tiles.component.ConfiguredTilePreview = Configured tile preview
com.top_logic.mig.html.layout.tiles.component.ConfiguredTilePreview.tooltip = Configured implementation of <i>tile preview</i>.
com.top_logic.mig.html.layout.tiles.component.InlinedTileComponent = Inlined tile component
com.top_logic.mig.html.layout.tiles.component.InlinedTileComponent$InlinedTileInfo = Inlined tile info
com.top_logic.mig.html.layout.tiles.component.InlinedTileComponent$InlinedTileInfo.tooltip = Special <i>tile info</i> which uses a <i>tile factory</i> creating multiple tiles for a component.
com.top_logic.mig.html.layout.tiles.component.InlinedTileComponent.Config.modelBuilder = Model builder
com.top_logic.mig.html.layout.tiles.component.InlinedTileComponent.Config.modelBuilder.tooltip = <i>Model builder</i> that creates the elements that may be selectable.
com.top_logic.mig.html.layout.tiles.component.InlinedTileComponent.tooltip = <i>Single layout container</i> that offers tiles for multiple business objects in the "parent tile". <p> A <i>inlined tile component</i> is a special component in the tile context for displaying multiple business objects as tiles. No tile is created for the <i>inlined tile component</i> itself, but the tiles for the business objects are displayed. </p>
com.top_logic.mig.html.layout.tiles.component.InlinedTileProvider = Inlined tile provider
com.top_logic.mig.html.layout.tiles.component.InlinedTileProvider.tooltip = <i>Tile preview</i> that expects a <i>tile layout</i> for a <i>tile list component</i>. The result list is <b>not</b> a list with a <i>component tile</i> for the component, but a list containing a <i>component tile</i> for each option of the component.
com.top_logic.mig.html.layout.tiles.component.LabelBasedPreview = Label based preview
com.top_logic.mig.html.layout.tiles.component.LabelBasedPreview.Config.icon = Icon
com.top_logic.mig.html.layout.tiles.component.LabelBasedPreview.Config.icon.tooltip = A static icon for the <i>tile layout</i>.
com.top_logic.mig.html.layout.tiles.component.LabelBasedPreview.tooltip = <i>Configured tile preview</i> that displays an optional icon and the label of a <i>tile layout</i>.
com.top_logic.mig.html.layout.tiles.component.LabelConfiguration = Label configuration
com.top_logic.mig.html.layout.tiles.component.LabelConfiguration.label = Label
com.top_logic.mig.html.layout.tiles.component.LabelConfiguration.label.tooltip = The literal text label of the <i>labeled configuration</i>.
com.top_logic.mig.html.layout.tiles.component.LabelConfiguration.tooltip = Configuration of the label of a <i>labeled configuration</i>.
com.top_logic.mig.html.layout.tiles.component.PreviewedTile = Previewed tile
com.top_logic.mig.html.layout.tiles.component.PreviewedTile.preview = Preview
com.top_logic.mig.html.layout.tiles.component.PreviewedTile.preview.tooltip = The <i>tile preview</i> that is used to create a peview for this tile.
com.top_logic.mig.html.layout.tiles.component.PreviewedTile.tooltip = <i>Tile layout</i> that has a configured <i>tile preview</i>.
com.top_logic.mig.html.layout.tiles.component.SingleTileProvider = Single tile provider
com.top_logic.mig.html.layout.tiles.component.SingleTileProvider.tooltip = <i>Tile provider</i> returning a singleton list containing the given <i>component tile</i> .
com.top_logic.mig.html.layout.tiles.component.StaticPreview = Static preview
com.top_logic.mig.html.layout.tiles.component.StaticPreview.Config.description = Description
com.top_logic.mig.html.layout.tiles.component.StaticPreview.Config.description.tooltip = A more specific description of the <i>tile layout</i>.
com.top_logic.mig.html.layout.tiles.component.StaticPreview.tooltip = <i>Label based preview</i> with an additional <i>resource key</i> that is displayed as description.
com.top_logic.mig.html.layout.tiles.component.StaticPreviewConfiguration = Static preview configuration
com.top_logic.mig.html.layout.tiles.component.StaticPreviewConfiguration.description = Description
com.top_logic.mig.html.layout.tiles.component.StaticPreviewConfiguration.description.tooltip = The literal text description string in the preview.
com.top_logic.mig.html.layout.tiles.component.StaticPreviewConfiguration.image = Image
com.top_logic.mig.html.layout.tiles.component.StaticPreviewConfiguration.image.tooltip = The icon for the preview.
com.top_logic.mig.html.layout.tiles.component.StaticPreviewConfiguration.tooltip = <i>Configuration item</i> used to collect necessary data to create a new <i>static preview</i>.
com.top_logic.mig.html.layout.tiles.component.StepIntoContextTile = Step into context tile
com.top_logic.mig.html.layout.tiles.component.StepIntoContextTile.tooltip = <i>Command handler</i> that navigates into content of a <i>tile reference</i>.
com.top_logic.mig.html.layout.tiles.component.StepOutTileCommand = Step out tile command
com.top_logic.mig.html.layout.tiles.component.StepOutTileCommand.tooltip = <i>Precondition command handler</i> that changes the display of a tile to its container tile.
com.top_logic.mig.html.layout.tiles.component.TLObjectTilePreview = Object tile preview
com.top_logic.mig.html.layout.tiles.component.TLObjectTilePreview.tooltip = <i>Label based preview</i> for an <i>object</i> Based on the icon and label of the <i>meta resource provider</i>.
com.top_logic.mig.html.layout.tiles.component.TileContainerComponent = Tile container component
com.top_logic.mig.html.layout.tiles.component.TileContainerComponent$DefaultLayoutConfig = Default layout configuration
com.top_logic.mig.html.layout.tiles.component.TileContainerComponent$DefaultLayoutConfig.tooltip = Configuration holding the <i>tile layout</i> which is displayed when the user has made no changes in the layout hierarchy.
com.top_logic.mig.html.layout.tiles.component.TileContainerComponent.Config.breadcrumb = Breadcrumb
com.top_logic.mig.html.layout.tiles.component.TileContainerComponent.Config.breadcrumb.tooltip = The breadcrumb that should be displayed in the title of the toolbar. <p> Null means: No breadcrumb. </p>
com.top_logic.mig.html.layout.tiles.component.TileContainerComponent.Config.default-layout = Default layout
com.top_logic.mig.html.layout.tiles.component.TileContainerComponent.Config.default-layout.tooltip = Configuration of the default layout. Used unless the user haas changed the layout, e.g. by adding a group or changing displayed <i>tile references</i> in a group.
com.top_logic.mig.html.layout.tiles.component.TileContainerComponent.DefaultLayoutConfig.root-tile = Root tile
com.top_logic.mig.html.layout.tiles.component.TileContainerComponent.DefaultLayoutConfig.root-tile.tooltip = The root <i>tile layout</i> of the tiles within the <i>tile container component</i>.
com.top_logic.mig.html.layout.tiles.component.TileContainerComponent.tooltip = <i>Layout container</i> displaying <i>tile layout</i>.
com.top_logic.mig.html.layout.tiles.component.TileDefinitionContainer = Tile definition container
com.top_logic.mig.html.layout.tiles.component.TileDefinitionContainer.builders = Builders
com.top_logic.mig.html.layout.tiles.component.TileDefinitionContainer.builders.tooltip = All configured <i>tile builders</i>.
com.top_logic.mig.html.layout.tiles.component.TileDefinitionContainer.ignore-contexts = Ignore contexts
com.top_logic.mig.html.layout.tiles.component.TileDefinitionContainer.ignore-contexts.tooltip = Comma separated list of tile names which must not serve as supplier for <i>tile definition</i> and <i>tile builder</i> when it is a context of this <i>tile definition container</i>. <p> When this <i>tile definition container</i> is currently displayed, it provides <i>Tiles</i> and <i>Builders</i> for selection. Also the <i>tile definition</i> and <i>tile builder</i> of the contexts are used. When this set contains the name of such a context, neither the <i>tile definition</i> nor the <i>tile builder</i> of that context are delivered as select option. </p>
com.top_logic.mig.html.layout.tiles.component.TileDefinitionContainer.tiles = Tiles
com.top_logic.mig.html.layout.tiles.component.TileDefinitionContainer.tiles.tooltip = Definition of the known tiles, ordered by name. <p> The names of all <i>tile definition</i> (including the <i>tile definitions</i> with a definition) must be pairwise different. </p>
com.top_logic.mig.html.layout.tiles.component.TileDefinitionContainer.tooltip = Container configuration for <i>tile definition</i> and <i>tile builder</i>.
com.top_logic.mig.html.layout.tiles.component.TileListComponent = Tile list component
com.top_logic.mig.html.layout.tiles.component.TileListComponent.Config.noCardKey = No card key
com.top_logic.mig.html.layout.tiles.component.TileListComponent.Config.noCardKey.tooltip = The <i>resource key</i> of the message, when there are no elements to be displayed as tiles.
com.top_logic.mig.html.layout.tiles.component.TileListComponent.Config.tilePreview = Tile preview
com.top_logic.mig.html.layout.tiles.component.TileListComponent.Config.tilePreview.tooltip = The <i>tile preview</i> that is used to <i>HTML fragment</i> as preview for the displayed elements.
com.top_logic.mig.html.layout.tiles.component.TileListComponent.ContextMenuButtons.contextMenuButtons = Context menu buttons
com.top_logic.mig.html.layout.tiles.component.TileListComponent.ContextMenuButtons.contextMenuButtons.tooltip = All buttons on this component.
com.top_logic.mig.html.layout.tiles.component.TileListComponent.tooltip = <i>Selectable builder component</i> with additional configuration properties and pre-defined property values.
com.top_logic.mig.html.layout.tiles.component.TileListControlProvider = Tile list control provider
com.top_logic.mig.html.layout.tiles.component.TileListControlProvider.tooltip = <i>Layout control provider</i> creating a <i>composite tile control</i> for a <i>tile list component</i>.
com.top_logic.mig.html.layout.tiles.component.TileProvider.TileProviderConfig.component-displayed-inline = Component displayed inline
com.top_logic.mig.html.layout.tiles.component.TileProvider.TileProviderConfig.component-displayed-inline.tooltip = Whether the component at which the <i>tile provider</i> is configured is displayed inline. <p> Normally the <i>tile provider</i> gets a <i>container component tile</i> which represents a <i>component</i>. The component is not visible unless the given <i>container component tile</i> is clicked. When <i>Component displayed inline</i> is <code>true</code>, the component is treated as visible as soon as the the tiles are displayed. </p>
com.top_logic.mig.html.layout.tiles.control.AbstractContextTileControlProvider = Context tile control provider
com.top_logic.mig.html.layout.tiles.control.AbstractContextTileControlProvider.Config.provider = Provider
com.top_logic.mig.html.layout.tiles.control.AbstractContextTileControlProvider.Config.provider.tooltip = Configuration of the <i>layout control provider</i> creating the actual <i>layout control</i> for the component.
com.top_logic.mig.html.layout.tiles.control.AbstractContextTileControlProvider.tooltip = <i>Decorating layout control provider</i> for a <i>component</i> that serves as context component for other components in <i>tile layout</i>. <p> The created <i>layout control</i> reacts on a property event of the represented component and steps into the corresponding <i>tile layout</i>. </p>
com.top_logic.mig.html.layout.tiles.control.ContextTileControlProvider = Context tile control provider
com.top_logic.mig.html.layout.tiles.control.ContextTileControlProvider.tooltip = <i>Context menu layout control provider</i> for <i>context tile component</i>. <p> Default view for a <i>context tile component</i> is displaying its selector. The content is displayed by <i>root tile component</i> in a separate <i>layout control</i>. </p>
com.top_logic.mig.html.layout.tiles.control.GroupTileControlProvider = Group tile control provider
com.top_logic.mig.html.layout.tiles.control.GroupTileControlProvider.tooltip = <i>Decorating layout control provider</i> for a <i>group tile component</i>. <p> The children of a <i>group tile component</i> are displayed in a tile layout. </p>
com.top_logic.mig.html.layout.tiles.control.RootTileControlProvider = Root tile control provider
com.top_logic.mig.html.layout.tiles.control.RootTileControlProvider.tooltip = <i>Decorating layout control provider</i> for a <i>root tile component</i>.
com.top_logic.mig.html.layout.tiles.control.SelectableContextTileProvider = Selectable context tile provider
com.top_logic.mig.html.layout.tiles.control.SelectableContextTileProvider.tooltip = <i>Context tile control provider</i> for <i>selectable</i> components.
com.top_logic.mig.html.layout.tiles.control.TileContainerControlProvider = Tile container control provider
com.top_logic.mig.html.layout.tiles.control.TileContainerControlProvider.tooltip = <i>Decorating layout control provider</i> for a <i>tile container component</i>.
com.top_logic.mig.html.layout.tiles.document.AbstractDisplayDocumentBuilder = Display document builder
com.top_logic.mig.html.layout.tiles.document.AbstractDisplayDocumentBuilder.tooltip = <i>Model builder</i> creating a <i>form context</i> displaying a PDF document using the <i>display PDF control</i>.
com.top_logic.mig.html.layout.tiles.document.DisplayDocumentBuilder = Display document builder
com.top_logic.mig.html.layout.tiles.document.DisplayDocumentBuilder.Config.documentName = Document name
com.top_logic.mig.html.layout.tiles.document.DisplayDocumentBuilder.Config.documentName.tooltip = The name of the document that is displayed in the component.
com.top_logic.mig.html.layout.tiles.document.DisplayDocumentBuilder.tooltip = <i>Model builder</i> creating a <i>form context</i> displaying a PDF document using the <i>display PDF control</i>.
com.top_logic.mig.html.layout.tiles.document.DocumentTileConfig = Document tile configuration
com.top_logic.mig.html.layout.tiles.document.DocumentTileConfig.documentName = Document name
com.top_logic.mig.html.layout.tiles.document.DocumentTileConfig.documentName.tooltip = Name of the PDF file in the documents of the <i>Model</i> that must be displayed in the tile.
com.top_logic.mig.html.layout.tiles.document.DocumentTileConfig.model = Model
com.top_logic.mig.html.layout.tiles.document.DocumentTileConfig.model.tooltip = The model of the document tile. This is not selected by the user but filled from configuration.
com.top_logic.mig.html.layout.tiles.document.DocumentTileConfig.modelBuilder = Model builder
com.top_logic.mig.html.layout.tiles.document.DocumentTileConfig.modelBuilder.tooltip = The model builder of the document tile. This is not selected by the user but filled from configuration.
com.top_logic.mig.html.layout.tiles.document.DocumentTileConfig.tooltip = <i>Component parameters</i> for creation of a document tile that displays a PDF document as image gallery.
com.top_logic.mig.html.layout.tiles.document.DocumentTileFormBuilder = Document tile form builder
com.top_logic.mig.html.layout.tiles.document.DocumentTileFormBuilder.Config.resPrefix = Resource prefix
com.top_logic.mig.html.layout.tiles.document.DocumentTileFormBuilder.Config.resPrefix.tooltip = <i>Resource prefix</i> for the created <i>form member</i>.
com.top_logic.mig.html.layout.tiles.document.DocumentTileFormBuilder.Config.selectComponent = Select component
com.top_logic.mig.html.layout.tiles.document.DocumentTileFormBuilder.Config.selectComponent.tooltip = Name of the <i>selectable</i> whose selection is used to find available documents.
com.top_logic.mig.html.layout.tiles.document.DocumentTileFormBuilder.Config.uploadComponent = Upload component
com.top_logic.mig.html.layout.tiles.document.DocumentTileFormBuilder.Config.uploadComponent.tooltip = Name of the <i>component</i> to check executablility of upload command.
com.top_logic.mig.html.layout.tiles.document.DocumentTileFormBuilder.tooltip = <i>Dialog form builder</i> for the configuration of the document tile.
com.top_logic.mig.html.layout.tiles.scripting.DisplayTileActionOp = Display tile action
com.top_logic.mig.html.layout.tiles.scripting.DisplayTileActionOp.tooltip = <i>Component action</i> for a <i>display tile action</i>.
com.top_logic.mig.html.layout.tiles.scripting.DisplayedPathNaming = Displayed path naming
com.top_logic.mig.html.layout.tiles.scripting.DisplayedPathNaming.tooltip = <i>Object aspect name0</i> to get the displayed path of given <i>root tile component</i>.
com.top_logic.mig.html.layout.tiles.scripting.InlinedTileComponentNaming$InlinedTileName = Inlined tile name
com.top_logic.mig.html.layout.tiles.scripting.InlinedTileComponentNaming$InlinedTileName.tooltip = Name of an <i>inlined tile component</i>.
com.top_logic.mig.html.layout.tiles.scripting.SelectTileActionOp = Select tile action
com.top_logic.mig.html.layout.tiles.scripting.SelectTileActionOp.SelectTileAction.group = Group
com.top_logic.mig.html.layout.tiles.scripting.SelectTileActionOp.SelectTileAction.group.tooltip = <i>Model name</i> identifying the <i>group tile component</i> in which the tile is selected.
com.top_logic.mig.html.layout.tiles.scripting.SelectTileActionOp.SelectTileAction.tile-label = Tile label
com.top_logic.mig.html.layout.tiles.scripting.SelectTileActionOp.SelectTileAction.tile-label.tooltip = Label of the tile to select.
com.top_logic.mig.html.layout.tiles.scripting.SelectTileActionOp.tooltip = <i>Application action</i> for <i>select tile action</i>.
com.top_logic.mig.html.layout.tiles.scripting.TileAllowedNaming = Tile allowed naming
com.top_logic.mig.html.layout.tiles.scripting.TileAllowedNaming.tooltip = <i>Object aspect name0</i> to get the allow-state of a <i>tile layout</i> in a <i>tile container component</i>.
com.top_logic.mig.html.layout.tiles.scripting.TileContentsNaming = Tile contents naming
com.top_logic.mig.html.layout.tiles.scripting.TileContentsNaming.tooltip = <i>Object aspect name0</i> to get all tiles of a <i>container component tile</i>.
com.top_logic.mig.html.layout.tiles.scripting.TileHiddenNaming = Tile hidden naming
com.top_logic.mig.html.layout.tiles.scripting.TileHiddenNaming.tooltip = <i>Object aspect name0</i> to get <i>Hidden</i> (<i>personalized tile</i>).
com.top_logic.mig.html.layout.tiles.scripting.TileLayoutNaming$TileLayoutName = Tile layout name
com.top_logic.mig.html.layout.tiles.scripting.TileLayoutNaming$TileLayoutName.tooltip = <i>Model name</i> that identifies a <i>tile layout</i> within a <i>tile container component</i>.
com.top_logic.mig.html.layout.tiles.scripting.TilePathName = Tile path name
com.top_logic.mig.html.layout.tiles.scripting.TilePathName.tile-path = Tile path
com.top_logic.mig.html.layout.tiles.scripting.TilePathName.tile-path.tooltip = The path representing the <i>tile layout</i>.
com.top_logic.mig.html.layout.tiles.scripting.TilePathName.tooltip = <i>Configuration item</i> representing a path in a <i>tile layout</i>.
com.top_logic.mig.html.layout.tiles.scripting.TilePathNaming = Tile path naming
com.top_logic.mig.html.layout.tiles.scripting.TilePathNaming.tooltip = <i>Object aspect name0</i> to get path to currently displayed <i>tile layout</i>.
com.top_logic.mig.html.layout.tiles.scripting.UpdateCompositeTileActionOp = Update composite tile action
com.top_logic.mig.html.layout.tiles.scripting.UpdateCompositeTileActionOp.UpdateCompositeTileAction.tiles = Tiles
com.top_logic.mig.html.layout.tiles.scripting.UpdateCompositeTileActionOp.UpdateCompositeTileAction.tiles.tooltip = A list of identifier for <i>tile layout</i> to be displayed in the current <i>tile layout</i>.
com.top_logic.mig.html.layout.tiles.scripting.UpdateCompositeTileActionOp.tooltip = <i>Component action</i> for an <i>update composite tile action</i>.
com.top_logic.model.ModelKind = Model kind
com.top_logic.model.ModelKind.ASSOCIATION = Association
com.top_logic.model.ModelKind.ASSOCIATION.tooltip = <i>Association</i> kind.
com.top_logic.model.ModelKind.CLASS = Class
com.top_logic.model.ModelKind.CLASS.tooltip = <i>Business object type</i> kind.
com.top_logic.model.ModelKind.CLASSIFIER = Classifier
com.top_logic.model.ModelKind.CLASSIFIER.tooltip = <i>Classifier</i> kind.
com.top_logic.model.ModelKind.DATATYPE = Datatype
com.top_logic.model.ModelKind.DATATYPE.tooltip = <i>Primitive</i> kind.
com.top_logic.model.ModelKind.END = End
com.top_logic.model.ModelKind.END.tooltip = <i>Association end</i> kind.
com.top_logic.model.ModelKind.ENUMERATION = Enumeration
com.top_logic.model.ModelKind.ENUMERATION.tooltip = <i>Classification</i> kind.
com.top_logic.model.ModelKind.MODEL = Model
com.top_logic.model.ModelKind.MODEL.tooltip = <i>Model</i> kind.
com.top_logic.model.ModelKind.MODULE = Module
com.top_logic.model.ModelKind.MODULE.tooltip = <i>Module</i> kind.
com.top_logic.model.ModelKind.PROPERTY = Property
com.top_logic.model.ModelKind.PROPERTY.tooltip = <i>Object property</i> kind.
com.top_logic.model.ModelKind.REFERENCE = Reference
com.top_logic.model.ModelKind.REFERENCE.tooltip = <i>Reference</i> kind.
com.top_logic.model.ModelKind.tooltip = Kind of a <i>model part</i>.
com.top_logic.model.TLPrimitive$Kind = Kind
com.top_logic.model.TLPrimitive$Kind.tooltip = Enumeration of all built-in data types.
com.top_logic.model.TLPrimitive.Kind.BINARY = Binary
com.top_logic.model.TLPrimitive.Kind.BINARY.tooltip = A string of <code>byte</code> values.
com.top_logic.model.TLPrimitive.Kind.BOOLEAN = Boolean
com.top_logic.model.TLPrimitive.Kind.BOOLEAN.tooltip = A boolean value.
com.top_logic.model.TLPrimitive.Kind.CUSTOM = Custom
com.top_logic.model.TLPrimitive.Kind.CUSTOM.tooltip = An application-defined data type.
com.top_logic.model.TLPrimitive.Kind.DATE = Date
com.top_logic.model.TLPrimitive.Kind.DATE.tooltip = A date value.
com.top_logic.model.TLPrimitive.Kind.FLOAT = Float
com.top_logic.model.TLPrimitive.Kind.FLOAT.tooltip = A floating point number. <p> No precision e.g. <code>float</code>, or <code>double</code> is implied. </p>
com.top_logic.model.TLPrimitive.Kind.INT = Int
com.top_logic.model.TLPrimitive.Kind.INT.tooltip = An integer number. <p> No size constraint e.g. <code>int</code>, or <code>long</code> is implied. </p>
com.top_logic.model.TLPrimitive.Kind.STRING = String
com.top_logic.model.TLPrimitive.Kind.STRING.tooltip = A string of characters.
com.top_logic.model.TLPrimitive.Kind.TRISTATE = Tristate
com.top_logic.model.TLPrimitive.Kind.TRISTATE.tooltip = A boolean value plus <code>null</code>.
com.top_logic.model.access.TLStorageMapping = Storage mapping
com.top_logic.model.access.TLStorageMapping.implementation = Implementation
com.top_logic.model.access.TLStorageMapping.implementation.tooltip = The annotated <i>storage mapping</i> algorithm.
com.top_logic.model.access.TLStorageMapping.tooltip = Annotation that assigns a <i>storage mapping</i> algorithm to a <i>object property</i>.
com.top_logic.model.annotate.AnnotatedConfig.annotations = Annotations
com.top_logic.model.annotate.AnnotatedConfig.annotations.tooltip = Mapping from the configuration interface of a <i>annotation</i> to the annotation itself.
com.top_logic.model.annotate.AnnotationInheritance = Annotation inheritance
com.top_logic.model.annotate.AnnotationInheritance$Policy = Policy
com.top_logic.model.annotate.AnnotationInheritance$Policy.tooltip = The policy for inheriting an annotated <i>annotation</i>.
com.top_logic.model.annotate.AnnotationInheritance.Policy.FINAL = Final
com.top_logic.model.annotate.AnnotationInheritance.Policy.FINAL.tooltip = The annotated <i>annotation</i> is inherited but must not be redefined on an overridden part.
com.top_logic.model.annotate.AnnotationInheritance.Policy.INHERIT = Inherit
com.top_logic.model.annotate.AnnotationInheritance.Policy.INHERIT.tooltip = The annotated <i>annotation</i> is inherited from overridden parts but may be redefined on overriding parts.
com.top_logic.model.annotate.AnnotationInheritance.Policy.REDEFINE = Redefine
com.top_logic.model.annotate.AnnotationInheritance.Policy.REDEFINE.tooltip = The annotated <i>annotation</i> must be redefined on each overridden part.
com.top_logic.model.annotate.AnnotationInheritance.tooltip = Meta-annotation for <i>annotations</i> that defines whether they are inherited and can be redefined on sub types.
com.top_logic.model.annotate.AnnotationInheritance.value = Value
com.top_logic.model.annotate.AnnotationInheritance.value.tooltip = The annotation inheritance <i>policy</i> for the annotated <i>annotation</i>.
com.top_logic.model.annotate.BooleanAnnotation.value = Value
com.top_logic.model.annotate.BooleanAnnotation.value.tooltip = Whether this annotation is enabled.
com.top_logic.model.annotate.DefaultStrategy = Default strategy
com.top_logic.model.annotate.DefaultStrategy$Strategy = Strategy
com.top_logic.model.annotate.DefaultStrategy$Strategy.tooltip = Default strategy for <i>annotations</i>. <p> The default, if no <i>default strategy</i> annotation is present ist <i>value type</i>. </p>
com.top_logic.model.annotate.DefaultStrategy.Strategy.NONE = None
com.top_logic.model.annotate.DefaultStrategy.Strategy.NONE.tooltip = There is no default.
com.top_logic.model.annotate.DefaultStrategy.Strategy.PRIMARY_GENERALIZATION = Primary generalization
com.top_logic.model.annotate.DefaultStrategy.Strategy.PRIMARY_GENERALIZATION.tooltip = The default is taken from the value type of the attribute or the first of its primary generalizations defining the annotated annotation.
com.top_logic.model.annotate.DefaultStrategy.Strategy.VALUE_TYPE = Value type
com.top_logic.model.annotate.DefaultStrategy.Strategy.VALUE_TYPE.tooltip = The default is taken from the value type of the attribute.
com.top_logic.model.annotate.DefaultStrategy.tooltip = Meta-annotation for <i>annotation</i> types that specifies whether the annotation has some default if not specified directly at some attribute. <p> The strategy used by default (if the annotation is not annotated with <i>default strategy</i>) is <i>value type</i>. </p>
com.top_logic.model.annotate.DefaultStrategy.value = Value
com.top_logic.model.annotate.DefaultStrategy.value.tooltip = The default strategy to use for the annotated <i>annotation</i>.
com.top_logic.model.annotate.DisplayAnnotations$Config = Configuration
com.top_logic.model.annotate.DisplayAnnotations$Config.tooltip = Global configuration options for <i>boolean display</i>.
com.top_logic.model.annotate.DisplayAnnotations.Config.default-display = Default display
com.top_logic.model.annotate.DisplayAnnotations.Config.default-display.tooltip = The global default for boolean attribute display.
com.top_logic.model.annotate.DynamicLabel = Dynamic label
com.top_logic.model.annotate.DynamicLabel.label = Label
com.top_logic.model.annotate.DynamicLabel.label.tooltip = Expression computing the label based on the base object. <p> The first argument for the label expression is the base object, the second argument is the default label, and the third object the annotated <i>structured type part</i>. The returned value can be e.g. a <i>resource key</i> or a <i>string</i>. </p>
com.top_logic.model.annotate.DynamicLabel.tooltip = <i>Annotation</i> to annotate an <i>expression</i> computing the label based on the displayed object.
com.top_logic.model.annotate.ExportColumns = Export columns
com.top_logic.model.annotate.ExportColumns.tooltip = Configuration of the export columns for the annotated element. <p> When an attribute is displayed as table this annotation specifies which columns are exported. </p>
com.top_logic.model.annotate.ExportColumns.value = Value
com.top_logic.model.annotate.ExportColumns.value.tooltip = List of table columns to export.
com.top_logic.model.annotate.InstancePresentation = Instance presentation
com.top_logic.model.annotate.InstancePresentation.expanded-icon = Expanded icon
com.top_logic.model.annotate.InstancePresentation.expanded-icon.tooltip = Returns the icon when element is opened in tree.
com.top_logic.model.annotate.InstancePresentation.icon = Icon
com.top_logic.model.annotate.InstancePresentation.icon.tooltip = Returns the icon when element is closed in tree.
com.top_logic.model.annotate.InstancePresentation.large-icon = Large icon
com.top_logic.model.annotate.InstancePresentation.large-icon.tooltip = Returns the large icon to use in title bars.
com.top_logic.model.annotate.InstancePresentation.tooltip = Configuration options for specifying the presentation of instances.
com.top_logic.model.annotate.LabelPosition = Label position
com.top_logic.model.annotate.LabelPosition.AFTER_VALUE = After value
com.top_logic.model.annotate.LabelPosition.AFTER_VALUE.tooltip = The label is displayed after the value.
com.top_logic.model.annotate.LabelPosition.DEFAULT = Default
com.top_logic.model.annotate.LabelPosition.DEFAULT.tooltip = The label is displayed before the value.
com.top_logic.model.annotate.LabelPosition.HIDE_LABEL = Hide label
com.top_logic.model.annotate.LabelPosition.HIDE_LABEL.tooltip = The label is not displayed at all.
com.top_logic.model.annotate.LabelPosition.tooltip = Possible positions of a label.
com.top_logic.model.annotate.LabelPositionAnnotation = Label position
com.top_logic.model.annotate.LabelPositionAnnotation.tooltip = Determination of the position of the label in relation to the value.
com.top_logic.model.annotate.LabelPositionAnnotation.value = Value
com.top_logic.model.annotate.LabelPositionAnnotation.value.tooltip = The position of the label in relation to the value.
com.top_logic.model.annotate.LegacyQualifiedNameForCompatibility = Legacy qualified name for compatibility
com.top_logic.model.annotate.LegacyQualifiedNameForCompatibility.qualified-name = Qualified name
com.top_logic.model.annotate.LegacyQualifiedNameForCompatibility.qualified-name.tooltip = The explicitly set qualified name of a type.
com.top_logic.model.annotate.LegacyQualifiedNameForCompatibility.tooltip = Annotation to realize backwards-compatible qualified names for <i>business object typees</i> for references into the configuration. <p> Before <i>module</i> was introduced, abstract types formerly known as meta elements had by convention pseudo-qualified names as their type name. After transformation into a TL6 model, these qualified names must be kept to avoid a huge migration. Even if those types are now part of <i>modules</i>, they keep their configuration-relevant qualified name using an explicit annotation created by the model transformation. </p>
com.top_logic.model.annotate.RenderWholeLineAnnotation = Render whole line annotation
com.top_logic.model.annotate.RenderWholeLineAnnotation.tooltip = <i>Annotation</i> to annotate whether an element is rendered over the whole line. So it stretches over more than 1 column.
com.top_logic.model.annotate.StringAnnotation.value = Value
com.top_logic.model.annotate.StringAnnotation.value.tooltip = Configured value.
com.top_logic.model.annotate.TLAnnotation.annotated = Annotated
com.top_logic.model.annotate.TLAnnotation.annotated.tooltip = The annotated configuration.
com.top_logic.model.annotate.TLCollectionSeparator = Collection separator
com.top_logic.model.annotate.TLCollectionSeparator.format-separator = Format separator
com.top_logic.model.annotate.TLCollectionSeparator.format-separator.tooltip = The separator that is printed between multiple values. <p> Note: If given, the <i>Parse separator</i> must be a substring of this value. </p>
com.top_logic.model.annotate.TLCollectionSeparator.parse-separator = Parse separator
com.top_logic.model.annotate.TLCollectionSeparator.parse-separator.tooltip = The separator, a user has to enter in a field to separate multiple values.
com.top_logic.model.annotate.TLCollectionSeparator.regular-expression = Regular expression
com.top_logic.model.annotate.TLCollectionSeparator.regular-expression.tooltip = Whether the <i>Parse separator</i> is given as regular expression.
com.top_logic.model.annotate.TLCollectionSeparator.tooltip = <i>Type annotation</i> that configures the element separator, with which multiple primitive values can be separated when entering a value of an attribute with primitive type and multiple values.
com.top_logic.model.annotate.TLConstraints = Constraints
com.top_logic.model.annotate.TLConstraints.constraints = Constraints
com.top_logic.model.annotate.TLConstraints.constraints.tooltip = Constraints to be evaluated in the context of the annotated attribute.
com.top_logic.model.annotate.TLConstraints.tooltip = <i>Attribute annotation</i> attaching <i>constraint checks</i> to a model attribute.
com.top_logic.model.annotate.TLCreateVisibility = Create visibility
com.top_logic.model.annotate.TLCreateVisibility.tooltip = Annotation that defines the default <i>visibility</i> of a <i>model part</i> during creation. <p> When the annotation is absent, the value of <i>visibility</i> is also used during creation. </p>
com.top_logic.model.annotate.TLCreateVisibility.value = Value
com.top_logic.model.annotate.TLCreateVisibility.value.tooltip = The specification of the visibility during creation.
com.top_logic.model.annotate.TLDefaultValue = Default value
com.top_logic.model.annotate.TLDefaultValue.provider = Provider
com.top_logic.model.annotate.TLDefaultValue.provider.tooltip = Provider for the default value of the annotated attribute.
com.top_logic.model.annotate.TLDefaultValue.tooltip = Annotation defining the default value of an attribute.
com.top_logic.model.annotate.TLDeleteProtected = Delete protected
com.top_logic.model.annotate.TLDeleteProtected.tooltip = <i>Attribute annotation</i> that marks a model part as delete protected. <p> A delete protected model part cannot be deleted in a running application. This annotation is useful to set on attributes that are required for some code to function properly. </p>
com.top_logic.model.annotate.TLFullTextRelevant = Full text relevant
com.top_logic.model.annotate.TLFullTextRelevant.tooltip = <i>Attribute annotation</i> that customizes the full-text-search relevance of attributes. <p> Note: If such annotation is absent, a type-specific default applies. </p>
com.top_logic.model.annotate.TLI18NKey = TLI18N key
com.top_logic.model.annotate.TLI18NKey.tooltip = Annotation of a resource key under which a localized name of the annotated model element is stored.
com.top_logic.model.annotate.TLI18NKey.value = Value
com.top_logic.model.annotate.TLI18NKey.value.tooltip = The resource key that identifies the user visible name of the annotated model element.
com.top_logic.model.annotate.TLModuleDisplayGroup = Module display group
com.top_logic.model.annotate.TLModuleDisplayGroup.tooltip = <p> <i>Annotation</i> to define where this module should be grouped in the type tree of the model editor, which resembles the view of a package explorer of the commonly used code editors. </p> <p> The value of this field is a path with <code>.</code> as separators. </p> <p> For example, <code>com.foo.bar</code> specifies that this module is added as a child of the <code>com.foo.bar</code> group. </p> <p> By default, if the module is not annotated, the grouping of the module is determined by its technical name. </p>
com.top_logic.model.annotate.TLRange = Range
com.top_logic.model.annotate.TLRange.max = Maximum
com.top_logic.model.annotate.TLRange.max.tooltip = The upper bound on the value, <code>null</code> for no constraint.
com.top_logic.model.annotate.TLRange.min = Minimum
com.top_logic.model.annotate.TLRange.min.tooltip = The lower bound of the value, <code>null</code> for no constraint.
com.top_logic.model.annotate.TLRange.tooltip = <i>Annotation</i> that defines a value constraint to <i>number</i>-valued attributes.
com.top_logic.model.annotate.TLSearchRange = Search range
com.top_logic.model.annotate.TLSearchRange.tooltip = <i>Annotation</i> that marks a type or attribute to support search ranges.
com.top_logic.model.annotate.TLSearchRelevant = Search relevant
com.top_logic.model.annotate.TLSearchRelevant.tooltip = <i>Attribute annotation</i> that customizes the search relevance of attributes. <p> Note: If such annotation is absent, a type-specific default applies. </p>
com.top_logic.model.annotate.TLSize = Size
com.top_logic.model.annotate.TLSize.lower-bound = Lower bound
com.top_logic.model.annotate.TLSize.lower-bound.tooltip = A lower limit for the size of the annotated string property.
com.top_logic.model.annotate.TLSize.tooltip = Constraint annotation that limits the size of string attributes.
com.top_logic.model.annotate.TLSize.upper-bound = Upper bound
com.top_logic.model.annotate.TLSize.upper-bound.tooltip = An upper limit for the size of the annotated string property.
com.top_logic.model.annotate.TLSortOrder = Sort order
com.top_logic.model.annotate.TLSortOrder.tooltip = The position of this <i>structured type part</i> relative to the other parts of its <i>business object type</i>. <p> It does not matter whether the <i>business object type</i> itself or a superclass of it defines the part. It does not define a sort order for parts of different <i>business object typees</i> that are not superclasses of one another. </p> <p> The <i>structured type part</i> with the lowest value is displayed first. </p>
com.top_logic.model.annotate.TLSortOrder.value = Value
com.top_logic.model.annotate.TLSortOrder.value.tooltip = <i>Structured type parts</i> of a <i>business object type</i> are ordered according to this sort order.
com.top_logic.model.annotate.TLSupportsMultiple = Supports multiple
com.top_logic.model.annotate.TLSupportsMultiple.tooltip = <i>Type annotation</i> that marks a primitive type supporting attributes with multiple values.
com.top_logic.model.annotate.TLSupportsMultiple.value = Value
com.top_logic.model.annotate.TLSupportsMultiple.value.tooltip = Whether the annotated type supports the declaration of attributes with multiple values.
com.top_logic.model.annotate.TLTypeKind = Type kind
com.top_logic.model.annotate.TLTypeKind.BINARY = Binary
com.top_logic.model.annotate.TLTypeKind.BINARY.tooltip = A string of <code>byte</code> values.
com.top_logic.model.annotate.TLTypeKind.BOOLEAN = Boolean
com.top_logic.model.annotate.TLTypeKind.BOOLEAN.tooltip = A boolean value.
com.top_logic.model.annotate.TLTypeKind.COMPOSITION = Composition
com.top_logic.model.annotate.TLTypeKind.COMPOSITION.tooltip = A composition reference.
com.top_logic.model.annotate.TLTypeKind.CUSTOM = Custom
com.top_logic.model.annotate.TLTypeKind.CUSTOM.tooltip = A primitive type that does not match any of the above criteria.
com.top_logic.model.annotate.TLTypeKind.DATE = Date
com.top_logic.model.annotate.TLTypeKind.DATE.tooltip = A date value.
com.top_logic.model.annotate.TLTypeKind.ENUMERATION = Enumeration
com.top_logic.model.annotate.TLTypeKind.ENUMERATION.tooltip = A <i>classification</i> reference.
com.top_logic.model.annotate.TLTypeKind.FLOAT = Float
com.top_logic.model.annotate.TLTypeKind.FLOAT.tooltip = A floating point number. <p> No precision e.g. <code>float</code>, or <code>double</code> is implied. </p>
com.top_logic.model.annotate.TLTypeKind.INT = Int
com.top_logic.model.annotate.TLTypeKind.INT.tooltip = An integer number. <p> No size constraint e.g. <code>int</code>, or <code>long</code> is implied. </p>
com.top_logic.model.annotate.TLTypeKind.REF = Reference
com.top_logic.model.annotate.TLTypeKind.REF.tooltip = A general reference.
com.top_logic.model.annotate.TLTypeKind.STRING = String
com.top_logic.model.annotate.TLTypeKind.STRING.tooltip = A string of characters.
com.top_logic.model.annotate.TLTypeKind.tooltip = Coarse-grained classification of model types for deciding applicability of <i>annotations</i>.
com.top_logic.model.annotate.TLUpdateMode = Update mode
com.top_logic.model.annotate.TLUpdateMode$Mode = Mode
com.top_logic.model.annotate.TLUpdateMode$Mode.tooltip = The <i>classification configuration</i> usage mode.
com.top_logic.model.annotate.TLUpdateMode.Mode.UPDATE = Update
com.top_logic.model.annotate.TLUpdateMode.Mode.UPDATE.tooltip = The classification is installed and updated with configuration changes.
com.top_logic.model.annotate.TLUpdateMode.Mode.USE = Use
com.top_logic.model.annotate.TLUpdateMode.Mode.USE.tooltip = The classification is installed, but not updated by configuration changes.
com.top_logic.model.annotate.TLUpdateMode.tooltip = <i>Annotation</i> specifying how a model is updated, if the application configuration changes.
com.top_logic.model.annotate.TLUpdateMode.value = Value
com.top_logic.model.annotate.TLUpdateMode.value.tooltip = How the classification is used and updated.
com.top_logic.model.annotate.TLVisibility = Visibility
com.top_logic.model.annotate.TLVisibility.tooltip = Annotation that defines the default <i>visibility</i> of a <i>model part</i>.
com.top_logic.model.annotate.TLVisibility.value = Value
com.top_logic.model.annotate.TLVisibility.value.tooltip = The specification of the visibility.
com.top_logic.model.annotate.TargetType = Target type
com.top_logic.model.annotate.TargetType.name = Name
com.top_logic.model.annotate.TargetType.name.tooltip = When <i>reference</i> or <i>custom</i> is specified for <i>value</i>, this property returns optional type names that specify the super types, the annotated annotation is compatible with.
com.top_logic.model.annotate.TargetType.tooltip = Meta-annotation for <i>annotation</i> types that specify the <i>type kinds</i> this annotation is compatible with.
com.top_logic.model.annotate.TargetType.value = Value
com.top_logic.model.annotate.TargetType.value.tooltip = The <i>type kinds</i> the annotated annotation is compatible with. <p> In case <i>reference</i> or <i>custom</i>, <i>name</i> is used to define optional names for <i>type</i> that are compatible with the annotated annotation. </p>
com.top_logic.model.annotate.Visibility = Visibility
com.top_logic.model.annotate.Visibility.EDITABLE = Editable
com.top_logic.model.annotate.Visibility.EDITABLE.tooltip = The model element is visible and can be directly edited by the user.
com.top_logic.model.annotate.Visibility.HIDDEN = Hidden
com.top_logic.model.annotate.Visibility.HIDDEN.tooltip = The model element is hidden from all generically generated views. <p> There may be custom application functionality that displays the element. </p>
com.top_logic.model.annotate.Visibility.READ_ONLY = Read only
com.top_logic.model.annotate.Visibility.READ_ONLY.tooltip = The model element is visible, but cannot directly be edited by the user. <p> There may be custom application functionality that allows editing. </p>
com.top_logic.model.annotate.Visibility.tooltip = Specification of the default visibility of a model element.
com.top_logic.model.annotate.persistency.TLDeleteConstraints = Delete constraints
com.top_logic.model.annotate.persistency.TLDeleteConstraints.override = Override
com.top_logic.model.annotate.persistency.TLDeleteConstraints.override.tooltip = Whether <i>delete constraints</i> annotations of super-types should be overridden. <p> If set to <code>true</code>, the annotated type specifies its on <i>delete constraints</i> independently of potential generalizations. </p>
com.top_logic.model.annotate.persistency.TLDeleteConstraints.tooltip = Annotation that binds a <i>delete constraint</i> to a type.
com.top_logic.model.annotate.persistency.TLDeleteConstraints.value = Value
com.top_logic.model.annotate.persistency.TLDeleteConstraints.value.tooltip = The <i>delete constraint</i> implementation for the annotated type. <p> Note: The configurable "default implementation" selected with the entry tag <code>delete-constraint</code> is contributed by the model-based search module declaring the tag name <code>delete-constraint</code>. Hard-coded implementations of constraints are possible by the somewhat special entry tag <code>custom-constraint</code>. </p>
com.top_logic.model.annotate.security.RoleConfig = Role configuration
com.top_logic.model.annotate.security.RoleConfig.name.tooltip = The name of the declared role.
com.top_logic.model.annotate.security.RoleConfig.tooltip = Definition of a role.
com.top_logic.model.annotate.security.TLRoleDefinitions = Role definitions
com.top_logic.model.annotate.security.TLRoleDefinitions.roles = Roles
com.top_logic.model.annotate.security.TLRoleDefinitions.roles.tooltip = Roles defined by the annotated module.
com.top_logic.model.annotate.security.TLRoleDefinitions.tooltip = <i>Module annotation</i> for defining roles in the context of a <i>module</i>.
com.top_logic.model.annotate.ui.BooleanDisplay = Boolean display
com.top_logic.model.annotate.ui.BooleanDisplay.presentation = Presentation
com.top_logic.model.annotate.ui.BooleanDisplay.presentation.tooltip = How to display this attribute by default.
com.top_logic.model.annotate.ui.BooleanDisplay.tooltip = <i>Annotation</i> that defines display properties for <i>boolean</i>-valued attributes.
com.top_logic.model.annotate.ui.BooleanPresentation = Boolean presentation
com.top_logic.model.annotate.ui.BooleanPresentation.CHECKBOX = Checkbox
com.top_logic.model.annotate.ui.BooleanPresentation.CHECKBOX.tooltip = Display as check box.
com.top_logic.model.annotate.ui.BooleanPresentation.RADIO = Radio
com.top_logic.model.annotate.ui.BooleanPresentation.RADIO.tooltip = Display as yes/no radio buttons.
com.top_logic.model.annotate.ui.BooleanPresentation.SELECT = Select
com.top_logic.model.annotate.ui.BooleanPresentation.SELECT.tooltip = Display as yes/no select field.
com.top_logic.model.annotate.ui.BooleanPresentation.tooltip = Configuration options for annotating the display of boolean attributes.
com.top_logic.model.annotate.ui.ClassificationDisplay = Options display
com.top_logic.model.annotate.ui.ClassificationDisplay$ClassificationPresentation = Classification presentation
com.top_logic.model.annotate.ui.ClassificationDisplay$ClassificationPresentation.tooltip = Presentation of options for an attribute with enumerated values.
com.top_logic.model.annotate.ui.ClassificationDisplay.ClassificationPresentation.CHECKLIST = Checklist
com.top_logic.model.annotate.ui.ClassificationDisplay.ClassificationPresentation.CHECKLIST.tooltip = Display as check-list pop-up.
com.top_logic.model.annotate.ui.ClassificationDisplay.ClassificationPresentation.DROP_DOWN = Select box
com.top_logic.model.annotate.ui.ClassificationDisplay.ClassificationPresentation.DROP_DOWN.tooltip = Display as drop-down select box.
com.top_logic.model.annotate.ui.ClassificationDisplay.ClassificationPresentation.POP_UP = Select dialog
com.top_logic.model.annotate.ui.ClassificationDisplay.ClassificationPresentation.POP_UP.tooltip = Display as input field with pop-up select dialog.
com.top_logic.model.annotate.ui.ClassificationDisplay.ClassificationPresentation.RADIO = Radio buttons
com.top_logic.model.annotate.ui.ClassificationDisplay.ClassificationPresentation.RADIO.tooltip = Shows all possible values using a vertical list of radio buttons.
com.top_logic.model.annotate.ui.ClassificationDisplay.ClassificationPresentation.RADIO_INLINE = Radio buttons (single line)
com.top_logic.model.annotate.ui.ClassificationDisplay.ClassificationPresentation.RADIO_INLINE.tooltip = Shows all possible values using horizontal list of radio buttons.
com.top_logic.model.annotate.ui.ClassificationDisplay.tooltip = Display settings for an attribute that is entered by selecting from a list of options. <p> This annotation is useful for attributes of type <i>classification</i> and those that have an options annotation. </p>
com.top_logic.model.annotate.ui.ClassificationDisplay.value = Presentation
com.top_logic.model.annotate.ui.ClassificationDisplay.value.tooltip = How to display this attribute by default.
com.top_logic.model.annotate.ui.Format = Format
com.top_logic.model.annotate.ui.Format.tooltip = <i>Annotation</i> that defines a display format constraint for attributes.
com.top_logic.model.annotate.ui.FormatBase = Format base
com.top_logic.model.annotate.ui.FormatBase.format = Format
com.top_logic.model.annotate.ui.FormatBase.format-ref = Format reference
com.top_logic.model.annotate.ui.FormatBase.format-ref.tooltip = Display values of this attribute according to this referenced format.
com.top_logic.model.annotate.ui.FormatBase.format.tooltip = Display values of this attribute according to this literal format.
com.top_logic.model.annotate.ui.FormatBase.tooltip = Definition of display formats.
com.top_logic.model.annotate.ui.InputSize = Input size
com.top_logic.model.annotate.ui.InputSize.tooltip = Size of the input field of the annotated attribute.
com.top_logic.model.annotate.ui.InputSize.value = Value
com.top_logic.model.annotate.ui.InputSize.value.tooltip = The number of text columns of the input field.
com.top_logic.model.annotate.ui.MarkerFactoryAnnotation = Marker factory annotation
com.top_logic.model.annotate.ui.MarkerFactoryAnnotation.implementation = Implementation
com.top_logic.model.annotate.ui.MarkerFactoryAnnotation.implementation.tooltip = The getter to retrieve the <i>marker factory</i> implementation.
com.top_logic.model.annotate.ui.MarkerFactoryAnnotation.tooltip = <i>Annotation</i> that defines the <i>marker factory</i> to set the <i>calendar marker</i>.
com.top_logic.model.annotate.ui.MultiLine = Multiple line
com.top_logic.model.annotate.ui.MultiLine.rows = Rows
com.top_logic.model.annotate.ui.MultiLine.rows.tooltip = The number of rows for the displayed text area input element.
com.top_logic.model.annotate.ui.MultiLine.tooltip = <i>Annotation</i> that defines display properties of <i>string</i>-typed attributes.
com.top_logic.model.annotate.ui.OptionsDisplay = Options display
com.top_logic.model.annotate.ui.OptionsDisplay.tooltip = <i>Annotation</i> that defines how the options are displayed when they are displayed in a dialog.
com.top_logic.model.annotate.ui.OptionsDisplay.value = Value
com.top_logic.model.annotate.ui.OptionsDisplay.value.tooltip = Chooses the way to display options in choose dialog.
com.top_logic.model.annotate.ui.OptionsPresentation = Options presentation
com.top_logic.model.annotate.ui.OptionsPresentation.PLAIN = Plain
com.top_logic.model.annotate.ui.OptionsPresentation.PLAIN.tooltip = Display the options as plain list or tree, depending on the options.
com.top_logic.model.annotate.ui.OptionsPresentation.TABLE = Table
com.top_logic.model.annotate.ui.OptionsPresentation.TABLE.tooltip = Display the options as table.
com.top_logic.model.annotate.ui.OptionsPresentation.tooltip = The display of options of a <i>reference</i> in a select dialog in case the reference is displayed as pop-up select.
com.top_logic.model.annotate.ui.PDFRendererAnnotation = PDF renderer annotation
com.top_logic.model.annotate.ui.PDFRendererAnnotation.impl = Implementation
com.top_logic.model.annotate.ui.PDFRendererAnnotation.impl.tooltip = <i>PDF renderer</i> to use.
com.top_logic.model.annotate.ui.PDFRendererAnnotation.tooltip = Annotation to configure a <i>PDF renderer</i>.
com.top_logic.model.annotate.ui.ReferenceDisplay = Reference display
com.top_logic.model.annotate.ui.ReferenceDisplay.tooltip = <i>Annotation</i> that defines display properties of references.
com.top_logic.model.annotate.ui.ReferenceDisplay.value = Value
com.top_logic.model.annotate.ui.ReferenceDisplay.value.tooltip = Chooses the way to display values.
com.top_logic.model.annotate.ui.ReferencePresentation = Reference presentation
com.top_logic.model.annotate.ui.ReferencePresentation.DROP_DOWN = Drop down
com.top_logic.model.annotate.ui.ReferencePresentation.DROP_DOWN.tooltip = Show the possible values as drop down box.
com.top_logic.model.annotate.ui.ReferencePresentation.POP_UP = Pop up
com.top_logic.model.annotate.ui.ReferencePresentation.POP_UP.tooltip = Show the possible values as pop up dialog. <p> When this presentation is used an <i>options presentation</i> defines how the options are displayed in the "option choose dialog". </p>
com.top_logic.model.annotate.ui.ReferencePresentation.RADIO = Radio
com.top_logic.model.annotate.ui.ReferencePresentation.RADIO.tooltip = Shows all possible values using a vertical list of radio buttons.
com.top_logic.model.annotate.ui.ReferencePresentation.RADIO_INLINE = Radio inline
com.top_logic.model.annotate.ui.ReferencePresentation.RADIO_INLINE.tooltip = Shows all possible values using horizontal list of radio buttons.
com.top_logic.model.annotate.ui.ReferencePresentation.TABLE = Table
com.top_logic.model.annotate.ui.ReferencePresentation.TABLE.tooltip = Show a table of values with an option to choose new ones and remove old ones. <p> The columns displayed by default are either specified by the MainColumns annotation, or are the main columns of the reference type as globally configured in the application configuration. </p> <p> When this presentation is used an <i>options presentation</i> defines how the options are displayed in the "option choose dialog". </p>
com.top_logic.model.annotate.ui.ReferencePresentation.tooltip = Enumeration of the possible kinds to display the options and value of a <i>reference</i>.
com.top_logic.model.annotate.ui.TLAcceptedTypes = Accepted types
com.top_logic.model.annotate.ui.TLAcceptedTypes.tooltip = <i>Annotation</i> that defines the accepted file types for file upload dialogs.
com.top_logic.model.annotate.ui.TLAcceptedTypes.value.tooltip = Comma separated list of accepted file types.
com.top_logic.model.annotate.ui.TLColumnInfo = Column info
com.top_logic.model.annotate.ui.TLColumnInfo.tooltip = <i>Annotation</i> specifying column settings for an attribute.
com.top_logic.model.annotate.ui.TLCssClass = Css class
com.top_logic.model.annotate.ui.TLCssClass.tooltip = <i>Attribute annotation</i> to specify a CSS class to be consistently set for all input elements generated for the annotated attribute.
com.top_logic.model.annotate.ui.TLCssClass.value = Value
com.top_logic.model.annotate.ui.TLCssClass.value.tooltip = The CSS class to set on input elements for the annotated attribute.
com.top_logic.model.annotate.ui.TLDimensions = Dimensions
com.top_logic.model.annotate.ui.TLDimensions.height = Height
com.top_logic.model.annotate.ui.TLDimensions.height.tooltip = The CSS height value to set on the input input element of the annotated attribute. <p> Note: the value may not be relevant for all types of potential input fields. </p>
com.top_logic.model.annotate.ui.TLDimensions.tooltip = <i>Attribute annotation</i> to specify the dimensions of the input field for all input elements generated for the annotated attribute.
com.top_logic.model.annotate.ui.TLDimensions.width = Width
com.top_logic.model.annotate.ui.TLDimensions.width.tooltip = The CSS width value to set on the input input element of the annotated attribute.
com.top_logic.model.annotate.ui.TLDynamicIcon = Dynamic icon
com.top_logic.model.annotate.ui.TLDynamicIcon.icon-provider = Icon provider
com.top_logic.model.annotate.ui.TLDynamicIcon.icon-provider.tooltip = The provider computing the dynamic icon for an instance of the annotated type.
com.top_logic.model.annotate.ui.TLDynamicIcon.tooltip = Dynamically computing the icon for an object that is an instance of the annotated type.
com.top_logic.model.annotate.ui.TLIDColumn = TLID column
com.top_logic.model.annotate.ui.TLIDColumn.tooltip = Sets the id column of tables representing objects of the annotated type. <p> The id column is the column for which an icon of the row objects type is added before its value and which is rendered as a link to its row object. </p> <p> If no id column is annotated then the <code>name</code> column is used by default, if it exists. </p>
com.top_logic.model.annotate.ui.TLRowObject = Row object
com.top_logic.model.annotate.ui.TLRowObject.creatable = Creatable
com.top_logic.model.annotate.ui.TLRowObject.creatable.tooltip = True if an add button to create new row objects is added to the table.
com.top_logic.model.annotate.ui.TLRowObject.deletable = Deletable
com.top_logic.model.annotate.ui.TLRowObject.deletable.tooltip = True if a remove button to delete existing row objects is added to the table.
com.top_logic.model.annotate.ui.TLRowObject.sortable = Sortable
com.top_logic.model.annotate.ui.TLRowObject.sortable.tooltip = True if a button to adjust the order of the rows is added to the table.
com.top_logic.model.annotate.ui.TLRowObject.tooltip = <i>Attribute annotation</i> that determines whether an add button to create new objects, a remove button to delete object or a button to adjust the order of the rows is added to the table that represents a reference.
com.top_logic.model.annotate.ui.TLSortColumns = Sort columns
com.top_logic.model.annotate.ui.TLSortColumns.tooltip = Sets the sort order of tables representing objects of the annotated type.
com.top_logic.model.annotate.util.AttributeSettings = Attribute settings
com.top_logic.model.annotate.util.AttributeSettings.tooltip = Configured settings for <i>structured type part</i> and <i>structured type</i>.
com.top_logic.model.cache.AbstractTLModelCache = Model cache
com.top_logic.model.cache.AbstractTLModelCache.tooltip = A <i>simple knowledge-base cache</i> for data based on the <i>model</i>.
com.top_logic.model.cache.TLModelCacheImpl = Model cache implementation
com.top_logic.model.cache.TLModelCacheImpl.tooltip = A <i>knowledge-base cache</i> based <i>model cache</i>.
com.top_logic.model.cache.TLModelCacheService = Model cache service
com.top_logic.model.cache.TLModelCacheService.Config.cache = Cache
com.top_logic.model.cache.TLModelCacheService.Config.cache.tooltip = The <i>model cache</i> to use.
com.top_logic.model.cache.TLModelCacheService.tooltip = <i>Configured managed class</i> for caching expensive queries about the <i>model</i>.
com.top_logic.model.config.EnumConfig = Enum configuration
com.top_logic.model.config.EnumConfig$ClassifierConfig = Classifier configuration
com.top_logic.model.config.EnumConfig$ClassifierConfig.tooltip = Definition of a <i>classifier</i>.
com.top_logic.model.config.EnumConfig.ClassifierConfig.default = Default
com.top_logic.model.config.EnumConfig.ClassifierConfig.default.tooltip = Whether this is the default classifier for the defining enumeration.
com.top_logic.model.config.EnumConfig.classifiers = Classifiers
com.top_logic.model.config.EnumConfig.classifiers.tooltip = The literals of the enumeration.
com.top_logic.model.config.EnumConfig.tooltip = Definition of a <i>classification</i>.
com.top_logic.model.config.FactoryClass = Factory class
com.top_logic.model.config.FactoryClass.tooltip = <i>Annotation</i> to set the name of the factory class for a <i>module</i>.
com.top_logic.model.config.FactoryClass.value.tooltip = The name of the factory for the annotated <i>module</i>.
com.top_logic.model.config.JavaClass = Java class
com.top_logic.model.config.JavaClass.class-name = Class name
com.top_logic.model.config.JavaClass.class-name.tooltip = The name of the java class that implements the annotated type. <p> Implementation detail: The type is <i>string</i> instead of <i>class</i>, because this annotation is used in generators that generates the java classes. Therefore the class does not exist at load time. </p>
com.top_logic.model.config.JavaClass.implementation-class = Implementation class
com.top_logic.model.config.JavaClass.implementation-class.tooltip = Resolved <i>Class name</i>, or <code>null</code> if the class was not found.
com.top_logic.model.config.JavaClass.interface-name = Interface name
com.top_logic.model.config.JavaClass.interface-name.tooltip = The name of the java interface that represents the annotated type. <p> Implementation detail: The type is <i>string</i> instead of <i>class</i>, because this annotation is used in generators that generates the java classes. Therefore the class does not exist at load time. </p>
com.top_logic.model.config.JavaClass.tooltip = <i>Type annotation</i> defining the implementation and interface class of the annotated type.
com.top_logic.model.config.JavaPackage = Java package
com.top_logic.model.config.JavaPackage.implementation-package = Implementation package
com.top_logic.model.config.JavaPackage.implementation-package.tooltip = The name of the default implementation class package for the annotated <i>module</i>.
com.top_logic.model.config.JavaPackage.interface-package = Interface package
com.top_logic.model.config.JavaPackage.interface-package.tooltip = The name of the default interface package for the annotated <i>module</i>.
com.top_logic.model.config.JavaPackage.tooltip = <i>Annotation</i> of the default implementation class and interface package of the annotated <i>module</i>.
com.top_logic.model.config.PartAspect = Part aspect
com.top_logic.model.config.PartAspect.tooltip = Definition aspect of a type part.
com.top_logic.model.config.ScopeConfig = Scope configuration
com.top_logic.model.config.ScopeConfig.tooltip = Container for type definitions.
com.top_logic.model.config.ScopeConfig.types = Types
com.top_logic.model.config.ScopeConfig.types.tooltip = Locally defined types.
com.top_logic.model.config.TypeRef.type = Type
com.top_logic.model.config.TypeRef.type.tooltip = Name of the target type of this attribute.
com.top_logic.model.config.annotation.EnumScope = Enum scope
com.top_logic.model.config.annotation.EnumScope.tooltip = <i>Type annotation</i> that defines an additional scope name for the definition of enumerations.
com.top_logic.model.config.annotation.EnumScope.value.tooltip = The name of the scope of the annotated enumeration. <p> The scope of the enumeration controls whether the enumeration is displayed in a certain context. </p>
com.top_logic.model.config.annotation.MainProperties = Main properties
com.top_logic.model.config.annotation.MainProperties.properties = Properties
com.top_logic.model.config.annotation.MainProperties.properties.tooltip = The "main properties" of the type. <p> They are used as default columns of tables, in the order given here. </p>
com.top_logic.model.config.annotation.MainProperties.tooltip = <i>Annotation</i> for defining the "main properties" of a <i>business object type</i>. <p> Alternatively to defining the main properties as type annotation, the can be given in the application configuration for a certain module, see <code>com.top_logic.element.model.DynamicModelService.Config.ModuleSetting#getMainProperties()</code>. </p>
com.top_logic.model.config.annotation.MultiSelect = Multiple select
com.top_logic.model.config.annotation.MultiSelect.tooltip = <i>Type annotation</i> to an <i>enum configuration</i> that defines the default for the multiselect property of attributes of this enumeration type.
com.top_logic.model.config.annotation.SystemEnum = System enum
com.top_logic.model.config.annotation.SystemEnum.tooltip = <i>Type annotation</i> to an <i>enum configuration</i> that defines whether the enumeration type is a system relevant enumeration.
com.top_logic.model.config.annotation.TLLocks = Locks
com.top_logic.model.config.annotation.TLLocks.operations = Operations
com.top_logic.model.config.annotation.TLLocks.operations.tooltip = The locking strategies for various abstract operations.
com.top_logic.model.config.annotation.TLLocks.tooltip = Annotation of <i>business object typees</i> for specifying the lock strategy for that type.
com.top_logic.model.config.annotation.TableName = Table name
com.top_logic.model.config.annotation.TableName.name = Name
com.top_logic.model.config.annotation.TableName.name.tooltip = The name of the table in which instances of the annotated <i>type</i> are stored.
com.top_logic.model.config.annotation.TableName.tooltip = Annotation of the database table in which instances of the annotated <i>type</i> are stored.
com.top_logic.model.config.annotation.UnorderedEnum = Unordered enum
com.top_logic.model.config.annotation.UnorderedEnum.tooltip = Annotation for an <i>classification</i> to define whether the elements are un-ordered, i.e. whether the definition order of the classifier is not relevant.
com.top_logic.model.filter.GlobalTypeFilter = Global type filter
com.top_logic.model.filter.GlobalTypeFilter.tooltip = A <i>configurable filter</i> that accepts only global types.
com.top_logic.model.filter.ModelFilter = Model filter
com.top_logic.model.filter.ModelFilter.Config.blacklist = Blacklist
com.top_logic.model.filter.ModelFilter.Config.blacklist.tooltip = <i>Model parts</i> matched by one of these filters are not displayed, <b>unless there is a matching whitelist entry</b>.
com.top_logic.model.filter.ModelFilter.Config.whitelist = Whitelist
com.top_logic.model.filter.ModelFilter.Config.whitelist.tooltip = <i>Model parts</i> matched by one of these filters are displayed, even if they are blacklisted. <p> A <i>model part</i> that is matched by no filter and neither the blacklist nor the whitelist, it is displayed. Use the blacklist to define which parts of the model should not be displayed. Use the <i>Whitelist</i> to define exceptions that should be displayed, even though they are matched by the blacklist. </p>
com.top_logic.model.filter.ModelFilter.tooltip = Defines which parts of the model which should be filtered out. <p> There are multiple reasons for filtering the model: Hiding security relevant information, hiding parts of the model from the customer for business reasons, hiding technical necessary types that add no value to the search, hiding technical data structures that the user won't understand, etc. </p>
com.top_logic.model.filter.ModuleNameFilter = Module name filter
com.top_logic.model.filter.ModuleNameFilter.Config.module = Module
com.top_logic.model.filter.ModuleNameFilter.Config.module.tooltip = The module name of matching types.
com.top_logic.model.filter.ModuleNameFilter.tooltip = A <i>configurable filter</i> that accepts types by matching their module names.
com.top_logic.model.filter.TLNamedPartFilter = Named part filter
com.top_logic.model.filter.TLNamedPartFilter.Config.name.tooltip = If the qualified name of the <i>named part</i> is equal to <i>Name</i>, it is accepted by this filter. <p> This property is mutual exclusive with <i>Regular expression</i>: Exactly one of them has to be set, not none, not both. </p>
com.top_logic.model.filter.TLNamedPartFilter.Config.regex = Regular expression
com.top_logic.model.filter.TLNamedPartFilter.Config.regex.tooltip = If the qualified name of the <i>named part</i> matches this Regex, it is accepted by this filter. <p> This property is mutual exclusive with <i>Name</i>: Exactly one of them has to be set, not none, not both. </p>
com.top_logic.model.filter.TLNamedPartFilter.tooltip = A <i>configurable filter</i> that accepts only <i>named parts</i> whose qualified is equal to the given name, respectively matches the given <i>pattern</i>.
com.top_logic.model.filter.UselessTypeFilter = Useless type filter
com.top_logic.model.filter.UselessTypeFilter.tooltip = An <i>configurable filter</i> that accepts abstract types that have none or only a single direct subtype.
com.top_logic.model.form.definition.AttributeDefinition.name.tooltip = Name of the attribute to display.
com.top_logic.model.form.definition.AttributeDefinition.owner = Owner
com.top_logic.model.form.definition.AttributeDefinition.owner.tooltip = The name of the type that owns the attribute to resolve.
com.top_logic.model.form.definition.Columns = Columns
com.top_logic.model.form.definition.Columns.DEFAULT = Default
com.top_logic.model.form.definition.Columns.DEFAULT.tooltip = Maximal number of columns: default (for forms: in properties, for form elements: in form).
com.top_logic.model.form.definition.Columns.FIVE = Five
com.top_logic.model.form.definition.Columns.FIVE.tooltip = Maximal number of columns: 5.
com.top_logic.model.form.definition.Columns.FOUR = Four
com.top_logic.model.form.definition.Columns.FOUR.tooltip = Maximal number of columns: 4.
com.top_logic.model.form.definition.Columns.ONE = One
com.top_logic.model.form.definition.Columns.ONE.tooltip = Maximal number of columns: 1.
com.top_logic.model.form.definition.Columns.THREE = Three
com.top_logic.model.form.definition.Columns.THREE.tooltip = Maximal number of columns: 3.
com.top_logic.model.form.definition.Columns.TWO = Two
com.top_logic.model.form.definition.Columns.TWO.tooltip = Maximal number of columns: 2.
com.top_logic.model.form.definition.Columns.tooltip = The maximal number of columns for a form (element).
com.top_logic.model.form.definition.ColumnsDefinition.lineBreak = Line break
com.top_logic.model.form.definition.ColumnsDefinition.lineBreak.tooltip = Returns whether the elements are rendered over multiple rows or the number of columns is kept instead of adjust to the viewport size.
com.top_logic.model.form.definition.ContainerDefinition.content = Content
com.top_logic.model.form.definition.ContainerDefinition.content.tooltip = <i>Form element template provider</i> that create the contents of this this container.
com.top_logic.model.form.definition.ContainerProperties.columns = Columns
com.top_logic.model.form.definition.ContainerProperties.columns.tooltip = The maximum default number of columns in this container. <p> This number can be overwritten at other container elements locally. </p>
com.top_logic.model.form.definition.ContainerProperties.labelPlacement = Label placement
com.top_logic.model.form.definition.ContainerProperties.labelPlacement.tooltip = Placement strategy of the labels of the form container contents.
com.top_logic.model.form.definition.FormVisibility = visibility
com.top_logic.model.form.definition.FormVisibility.DEFAULT = Default
com.top_logic.model.form.definition.FormVisibility.DEFAULT.tooltip = The model element adopts the default settings of its <i>form member</i>.
com.top_logic.model.form.definition.FormVisibility.EDITABLE = Editable
com.top_logic.model.form.definition.FormVisibility.EDITABLE.tooltip = The model element is visible and can be directly edited by the user.
com.top_logic.model.form.definition.FormVisibility.MANDATORY = Mandatory
com.top_logic.model.form.definition.FormVisibility.MANDATORY.tooltip = The model element is visible, can be directly edited by the user and must not be empty.
com.top_logic.model.form.definition.FormVisibility.READ_ONLY = Read only
com.top_logic.model.form.definition.FormVisibility.READ_ONLY.tooltip = The model element is visible, but cannot directly be edited by the user.
com.top_logic.model.form.definition.FormVisibility.tooltip = Specification of the visibility of an attribute in a dynamic form. <i>Visibility</i> (<i>visibility configuration</i>)
com.top_logic.model.form.definition.FrameDefinition.cssClass = Css class
com.top_logic.model.form.definition.FrameDefinition.cssClass.tooltip = Returns the custom CSS classes.
com.top_logic.model.form.definition.FrameDefinition.showBorder = Show border
com.top_logic.model.form.definition.FrameDefinition.showBorder.tooltip = Returns whether the border of this element is visible.
com.top_logic.model.form.definition.FrameDefinition.wholeLine = Whole line
com.top_logic.model.form.definition.FrameDefinition.wholeLine.tooltip = Returns whether the container element is rendered over the entire line.
com.top_logic.model.form.definition.Heading = Heading
com.top_logic.model.form.definition.Heading.H1 = H1
com.top_logic.model.form.definition.Heading.H1.tooltip = H1-tag
com.top_logic.model.form.definition.Heading.H2 = H2
com.top_logic.model.form.definition.Heading.H2.tooltip = H2-tag
com.top_logic.model.form.definition.Heading.H3 = H3
com.top_logic.model.form.definition.Heading.H3.tooltip = H3-tag
com.top_logic.model.form.definition.Heading.H4 = H4
com.top_logic.model.form.definition.Heading.H4.tooltip = H4-tag
com.top_logic.model.form.definition.Heading.H5 = H5
com.top_logic.model.form.definition.Heading.H5.tooltip = H5-tag
com.top_logic.model.form.definition.Heading.H6 = H6
com.top_logic.model.form.definition.Heading.H6.tooltip = H6-tag
com.top_logic.model.form.definition.Heading.tooltip = Different level of HTML headings.
com.top_logic.model.form.definition.LabelPlacement = Label placement
com.top_logic.model.form.definition.LabelPlacement.ABOVE = Above
com.top_logic.model.form.definition.LabelPlacement.ABOVE.tooltip = Label is above its input
com.top_logic.model.form.definition.LabelPlacement.DEFAULT = Default
com.top_logic.model.form.definition.LabelPlacement.DEFAULT.tooltip = No special configuration for this form.
com.top_logic.model.form.definition.LabelPlacement.INLINE = Inline
com.top_logic.model.form.definition.LabelPlacement.INLINE.tooltip = Label is in the same line as its input
com.top_logic.model.form.definition.LabelPlacement.tooltip = Decision about where to place labels in forms.
com.top_logic.model.form.definition.SeparatorDefinition.visible = Visible
com.top_logic.model.form.definition.SeparatorDefinition.visible.tooltip = Returns whether the separator is visible at the GUI.
com.top_logic.model.form.definition.VisibilityConfig.visibility = Visibility
com.top_logic.model.form.definition.VisibilityConfig.visibility.tooltip = How the columns (content) <i>visibility</i>.
com.top_logic.model.form.implementation.AbstractFormContainerProvider = Form container provider
com.top_logic.model.form.implementation.AbstractFormContainerProvider.tooltip = <i>Form element template provider</i> which contains other <i>form element template providers</i> within.
com.top_logic.model.form.implementation.AbstractFormElementProvider = Form element provider
com.top_logic.model.form.implementation.AbstractFormElementProvider.tooltip = Base class for <i>form element template providers</i>.
com.top_logic.model.form.implementation.ColumnsDefinitionTemplateProvider = Columns definition template provider
com.top_logic.model.form.implementation.ColumnsDefinitionTemplateProvider.tooltip = Creates a template for a <i>columns definition</i> and stores the necessary information.
com.top_logic.model.form.implementation.EmptyCellDefinitionTemplateProvider = Empty cell definition template provider
com.top_logic.model.form.implementation.EmptyCellDefinitionTemplateProvider.tooltip = Creates a template for a <i>empty cell definition</i> and stores the necessary information.
com.top_logic.model.form.implementation.FormDefinitionTemplateProvider = Form definition template provider
com.top_logic.model.form.implementation.FormDefinitionTemplateProvider.tooltip = Creates a template for a <i>form definition</i>.
com.top_logic.model.form.implementation.FormMode = Form mode
com.top_logic.model.form.implementation.FormMode.CREATE = Create
com.top_logic.model.form.implementation.FormMode.CREATE.tooltip = In create mode, the form is not filled with an existing model.
com.top_logic.model.form.implementation.FormMode.DESIGN = Design
com.top_logic.model.form.implementation.FormMode.DESIGN.tooltip = Form is designed in a form editor.
com.top_logic.model.form.implementation.FormMode.EDIT = Edit
com.top_logic.model.form.implementation.FormMode.EDIT.tooltip = The form is filled with an existing model.
com.top_logic.model.form.implementation.FormMode.tooltip = Mode where a form is displayed. Can be used to calculate the <i>visibility</i> of the <i>model parts</i> of a form.
com.top_logic.model.form.implementation.FrameDefinitionTemplateProvider = Frame definition template provider
com.top_logic.model.form.implementation.FrameDefinitionTemplateProvider.tooltip = Creates a template for a <i>frame definition</i> and stores the necessary information.
com.top_logic.model.form.implementation.SeparatorDefinitionTemplateProvider = Separator definition template provider
com.top_logic.model.form.implementation.SeparatorDefinitionTemplateProvider.tooltip = Creates a template for a <i>separator definition</i> and stores the necessary information.
com.top_logic.model.format.TLClassifierFormat = Classifier format
com.top_logic.model.format.TLClassifierFormat.Config.by-label = By label
com.top_logic.model.format.TLClassifierFormat.Config.by-label.tooltip = Whether to use the labels of the classifiers for identification.
com.top_logic.model.format.TLClassifierFormat.Config.ignore-case = Ignore case
com.top_logic.model.format.TLClassifierFormat.Config.ignore-case.tooltip = Whether to ignore upper/lower-case of the identifiers.
com.top_logic.model.format.TLClassifierFormat.Config.language = Language
com.top_logic.model.format.TLClassifierFormat.Config.language.tooltip = The language to use for looking up classifiers, if <i>By label</i> is set.
com.top_logic.model.format.TLClassifierFormat.Config.type = Type
com.top_logic.model.format.TLClassifierFormat.Config.type.tooltip = The fully qualified name of the <i>classification</i>.
com.top_logic.model.format.TLClassifierFormat.tooltip = Configurable <i>configuration value provider</i> that reads classifiers of <i>classification</i> model elements based on their label or technical name. <p> Note: Since this implementation caches classifiers, it is designed to be used in short-lived scenarios such as an importer that creates the format, imports the data and then discards the format. By no way, an instance of this format must be used as member of a long-lived configuration (e.g. as an <i>instance format</i> value of a layout configuration). </p>
com.top_logic.model.instance.importer.schema.AttributeValueConf = Attribute value conf
com.top_logic.model.instance.importer.schema.AttributeValueConf.name = Name
com.top_logic.model.instance.importer.schema.AttributeValueConf.name.tooltip = Name of the attribute to import.
com.top_logic.model.instance.importer.schema.AttributeValueConf.references = References
com.top_logic.model.instance.importer.schema.AttributeValueConf.references.tooltip = References to other objects to set in the <i>Name</i> attribute. <p> For a primitive attribute, <i>Value</i> must be set instead. </p>
com.top_logic.model.instance.importer.schema.AttributeValueConf.tooltip = Configuration specifying an attribute value of an object import declaration.
com.top_logic.model.instance.importer.schema.AttributeValueConf.value = Value
com.top_logic.model.instance.importer.schema.AttributeValueConf.value.tooltip = Textual value of a primitive attribute. <p> For a reference attribute, <i>References</i> must be set instead. </p>
com.top_logic.model.instance.importer.schema.GlobalRefConf = Global reference conf
com.top_logic.model.instance.importer.schema.GlobalRefConf.id = ID
com.top_logic.model.instance.importer.schema.GlobalRefConf.id.tooltip = Identifier of the object being referenced. <p> The syntax of the identifier may vary from type to type. </p>
com.top_logic.model.instance.importer.schema.GlobalRefConf.kind = Kind
com.top_logic.model.instance.importer.schema.GlobalRefConf.kind.tooltip = The <i>instance resolver</i> kind the <i>ID</i> is made for.
com.top_logic.model.instance.importer.schema.GlobalRefConf.tooltip = Reference to a pre-existing instance in the target application of an import.
com.top_logic.model.instance.importer.schema.InstanceRefConf = Instance reference conf
com.top_logic.model.instance.importer.schema.InstanceRefConf.id = ID
com.top_logic.model.instance.importer.schema.InstanceRefConf.id.tooltip = ID of another object in the same import that is referenced.
com.top_logic.model.instance.importer.schema.InstanceRefConf.tooltip = Reference to another object in the same import scope.
com.top_logic.model.instance.importer.schema.ModelRefConf = Model reference conf
com.top_logic.model.instance.importer.schema.ModelRefConf.name = Name
com.top_logic.model.instance.importer.schema.ModelRefConf.name.tooltip = Name of the model part to reference. <p> The format of the model part name is as follows: </p> <dl> <dt>Module</dt> <dd><code>[module-name]</code></dd> <dt>Type</dt> <dd><code>[module-name]:[type-name]</code></dd> <dt>Type part (property, reference, or enumeration literal)</dt> <dd><code>[module-name]:[type-name]#[part-name]</code></dd> <dt>Singleton object</dt> <dd><code>[module-name]#[singleton-name]</code></dd> </dl>
com.top_logic.model.instance.importer.schema.ModelRefConf.tooltip = Reference to the context model on which the import is based on.
com.top_logic.model.instance.importer.schema.ObjectConf = Object conf
com.top_logic.model.instance.importer.schema.ObjectConf.attributes = Attributes
com.top_logic.model.instance.importer.schema.ObjectConf.attributes.tooltip = Attributes to set on the imported object.
com.top_logic.model.instance.importer.schema.ObjectConf.id = ID
com.top_logic.model.instance.importer.schema.ObjectConf.id.tooltip = Optional import-local identifier that is used to reference this object from references of other objects that are imported.
com.top_logic.model.instance.importer.schema.ObjectConf.tooltip = Import description of a single new object to create.
com.top_logic.model.instance.importer.schema.ObjectConf.type = Type
com.top_logic.model.instance.importer.schema.ObjectConf.type.tooltip = The type name (qualified name of the <i>business object type</i>) the imported object should be an instance of.
com.top_logic.model.internal.AbstractConfiguredStorageMapping = Configured storage mapping
com.top_logic.model.internal.AbstractConfiguredStorageMapping.tooltip = Base class for configured <i>storage mappings</i>.
com.top_logic.model.internal.ConfigurationStorageMapping = Configuration storage mapping
com.top_logic.model.internal.ConfigurationStorageMapping.Config.config-interface = Configuration interface
com.top_logic.model.internal.ConfigurationStorageMapping.Config.config-interface.tooltip = The class the application value must have.
com.top_logic.model.internal.ConfigurationStorageMapping.tooltip = <i>Storage mapping</i> to store <i>configuration item</i>.
com.top_logic.model.internal.PersistentModelPart$AnnotationConfigs = Annotation configs
com.top_logic.model.internal.PersistentModelPart$AnnotationConfigs.tooltip = Generic holder for all annotations, added to a <i>persistent model part</i>.
com.top_logic.model.io.annotation.TLExportBinding = Export binding
com.top_logic.model.io.annotation.TLExportBinding.impl = Implementation
com.top_logic.model.io.annotation.TLExportBinding.impl.tooltip = The <i>attribute value binding</i> algorithm to export and import the annotated attribute.
com.top_logic.model.io.annotation.TLExportBinding.tooltip = <i>Attribute annotation</i> annotating an <i>attribute value binding</i> algorithm to an attribute or type. <p> The type default is configured in <code>com.top_logic.element.meta.AttributeSettings.Config.AttributeSetting#getExportBinding()</code>. </p>
com.top_logic.model.io.bindings.ConfigurationAttributeValueBinding = Configuration attribute value binding
com.top_logic.model.io.bindings.ConfigurationAttributeValueBinding.Config.root-tag = Root tag
com.top_logic.model.io.bindings.ConfigurationAttributeValueBinding.Config.root-tag.tooltip = Tag name to use for the top-level element written.
com.top_logic.model.io.bindings.ConfigurationAttributeValueBinding.Config.root-type = Root type
com.top_logic.model.io.bindings.ConfigurationAttributeValueBinding.Config.root-type.tooltip = Expected type of the top-level element.
com.top_logic.model.io.bindings.ConfigurationAttributeValueBinding.tooltip = <i>Attribute value binding</i> storing a <i>configuration item</i> value.
com.top_logic.model.io.bindings.PrimitiveAttributeValueBinding = Primitive attribute value binding
com.top_logic.model.io.bindings.PrimitiveAttributeValueBinding.Config.format = Format
com.top_logic.model.io.bindings.PrimitiveAttributeValueBinding.Config.format.tooltip = The format to store the primitive value with.
com.top_logic.model.io.bindings.PrimitiveAttributeValueBinding.tooltip = <i>Attribute value binding</i> delegating to a configured <i>format</i> implementation for storing a value as XML attribute value.
com.top_logic.model.listen.ModelChangeEvent$ChangeType = Change type
com.top_logic.model.listen.ModelChangeEvent$ChangeType.tooltip = Description of the change to a single object.
com.top_logic.model.listen.ModelChangeEvent.ChangeType.CREATED = Created
com.top_logic.model.listen.ModelChangeEvent.ChangeType.CREATED.tooltip = The object was created.
com.top_logic.model.listen.ModelChangeEvent.ChangeType.DELETED = Deleted
com.top_logic.model.listen.ModelChangeEvent.ChangeType.DELETED.tooltip = The object was deleted.
com.top_logic.model.listen.ModelChangeEvent.ChangeType.NONE = None
com.top_logic.model.listen.ModelChangeEvent.ChangeType.NONE.tooltip = The object was not changed. <p> This is used if the object in question was not part of the <i>model change event</i>. </p>
com.top_logic.model.listen.ModelChangeEvent.ChangeType.UPDATED = Updated
com.top_logic.model.listen.ModelChangeEvent.ChangeType.UPDATED.tooltip = Properties of the object were updated.
com.top_logic.model.provider.BooleanDefaultProvider = Boolean default provider
com.top_logic.model.provider.BooleanDefaultProvider.tooltip = <i>Default value computation</i> returning <i>boolean</i> value.
com.top_logic.model.provider.ByteDefaultProvider = Byte default provider
com.top_logic.model.provider.ByteDefaultProvider.tooltip = <i>Default value computation</i> returning <i>byte</i> value.
com.top_logic.model.provider.ColorDefaultProvider = Color default provider
com.top_logic.model.provider.ColorDefaultProvider.tooltip = <i>Default value computation</i> configuring a default <i>color</i>.
com.top_logic.model.provider.ConfiguredConstantDefaultProvider = Default value computation
com.top_logic.model.provider.ConfiguredConstantDefaultProvider.Config.value = Value
com.top_logic.model.provider.ConfiguredConstantDefaultProvider.Config.value.tooltip = The constant value to use as default.
com.top_logic.model.provider.ConfiguredConstantDefaultProvider.tooltip = <i>Default value computation</i> fetching the constant value form the configuration.
com.top_logic.model.provider.DateDefaultProvider = Date default provider
com.top_logic.model.provider.DateDefaultProvider.tooltip = <i>Default value computation</i> returning <i>date</i> value.
com.top_logic.model.provider.DoubleDefaultProvider = Double default provider
com.top_logic.model.provider.DoubleDefaultProvider.tooltip = <i>Default value computation</i> returning <i>double</i> value.
com.top_logic.model.provider.FloatDefaultProvider = Float default provider
com.top_logic.model.provider.FloatDefaultProvider.tooltip = <i>Default value computation</i> returning <i>float</i> value.
com.top_logic.model.provider.IconDefaultProvider = Icon default provider
com.top_logic.model.provider.IconDefaultProvider.tooltip = <i>Default value computation</i> returning an <i>icon</i> value.
com.top_logic.model.provider.IntegerDefaultProvider = Integer default provider
com.top_logic.model.provider.IntegerDefaultProvider.tooltip = <i>Default value computation</i> returning <i>integer</i> value.
com.top_logic.model.provider.LongDefaultProvider = Long default provider
com.top_logic.model.provider.LongDefaultProvider.tooltip = <i>Default value computation</i> returning <i>long</i> value.
com.top_logic.model.provider.NullDefaultProvider = Null default provider
com.top_logic.model.provider.NullDefaultProvider.tooltip = <i>Default value computation</i> that always returns <code>null</code>.
com.top_logic.model.provider.ShortDefaultProvider = Short default provider
com.top_logic.model.provider.ShortDefaultProvider.tooltip = <i>Default value computation</i> returning <i>short</i> value.
com.top_logic.model.provider.StringDefaultProvider = String default provider
com.top_logic.model.provider.StringDefaultProvider.tooltip = <i>Default value computation</i> returning <i>string</i> value.
com.top_logic.model.util.scripting.TLModelPartNaming$Name = Name
com.top_logic.model.util.scripting.TLModelPartNaming$Name.tooltip = <i>Model name</i> referencing a part of the application model.
com.top_logic.model.util.scripting.TLModelPartNaming.Name.ref = Reference
com.top_logic.model.util.scripting.TLModelPartNaming.Name.ref.tooltip = The name of the referenced <i>model part</i>.
com.top_logic.tool.boundsec.AbstractCommandHandler = Command handler
com.top_logic.tool.boundsec.AbstractCommandHandler.tooltip = Base for all component command handlers.
com.top_logic.tool.boundsec.AbstractConfirmationHandler = Confirmation handler
com.top_logic.tool.boundsec.AbstractConfirmationHandler.tooltip = General <i>command handler</i> asking for confirmation for further processing.
com.top_logic.tool.boundsec.AbstractDownloadHandler = Download handler
com.top_logic.tool.boundsec.AbstractDownloadHandler$GlobalConfig = Global configuration
com.top_logic.tool.boundsec.AbstractDownloadHandler$GlobalConfig.tooltip = Configuration options for <i>export progress handler</i>.
com.top_logic.tool.boundsec.AbstractDownloadHandler.GlobalConfig.max-direct-download-time = Maximum direct download time
com.top_logic.tool.boundsec.AbstractDownloadHandler.GlobalConfig.max-direct-download-time.tooltip = The time in milliseconds to wait for a forked export to deliver the result before opening a progress dialog. <p> A value of <code>0</code> means not to show export progress at all, but perform the export completely within the rendering thread. </p> <p> A value less than <code>0</code> means to always show export progress, even if the export completes immediately. </p>
com.top_logic.tool.boundsec.AbstractDownloadHandler.tooltip = Command preparing a custom export for download providing user feedback. <p> Note: A pure download without any additional user feedback can be triggered by <code>WindowScope#deliverContent(BinaryDataSource, boolean)</code>. </p>
com.top_logic.tool.boundsec.AbstractSystemCommand = System command
com.top_logic.tool.boundsec.AbstractSystemCommand.tooltip = <i>Command handler</i> with system command group.
com.top_logic.tool.boundsec.BoundCheckerLayoutConfig = Bound checker layout configuration
com.top_logic.tool.boundsec.BoundCheckerLayoutConfig.tooltip = Configuration interface for <i>component</i> that implement <i>bound checker</i>.
com.top_logic.tool.boundsec.BoundComponent = Bound component
com.top_logic.tool.boundsec.BoundComponent.Config.securityProviderClass = Security provider class
com.top_logic.tool.boundsec.BoundComponent.Config.securityProviderClass.tooltip = The name of the <i>security object provider</i> which defines on which object the security will be checked.
com.top_logic.tool.boundsec.BoundComponent.tooltip = A <i>component</i> implementing the <i>bound checker</i> interface. This implementation allows caching of the Security <code>#allow(BoundCommandGroup, BoundObject)</code>, be aware that this will be correct only if the <i>account</i> / <i>context</i> is always the same.
com.top_logic.tool.boundsec.BoundHelper = Bound helper
com.top_logic.tool.boundsec.BoundHelper.Config.use-default-security-parent = Use default security parent
com.top_logic.tool.boundsec.BoundHelper.Config.use-default-security-parent.tooltip = Whether to use the global default object as security parent by default.
com.top_logic.tool.boundsec.BoundHelper.tooltip = Common, configurable functions used by the Bound hierarchy. <p> This class can easily be overridden to modify aspects of the BoundSecurity as needed by applications. </p>
com.top_logic.tool.boundsec.BoundLayout = Bound layout
com.top_logic.tool.boundsec.BoundLayout.tooltip = A Layout that that will care for Bound security.
com.top_logic.tool.boundsec.BoundMainLayout = Bound main layout
com.top_logic.tool.boundsec.BoundMainLayout.tooltip = A Layout that that will care for Bound security.
com.top_logic.tool.boundsec.BoundedRoleNamingScheme$BoundedRoleName = Bounded role name
com.top_logic.tool.boundsec.BoundedRoleNamingScheme$BoundedRoleName.tooltip = <i>Model name</i> of a <i>bounded role naming scheme</i>.
com.top_logic.tool.boundsec.CallCommand = Call command
com.top_logic.tool.boundsec.CallCommand.Config.component = Component
com.top_logic.tool.boundsec.CallCommand.Config.component.tooltip = Optional target component name.
com.top_logic.tool.boundsec.CallCommand.Config.group.tooltip = The command group must be explicitly specified, because one cannot refer to the command group of the target command, which is only given as ID.
com.top_logic.tool.boundsec.CallCommand.Config.id.tooltip = A <i>call command</i> within a <i>command sequence</i> does not need its own ID. <p> When directly registering a <i>call command</i> on a component, a non-<code>null</code> ID is still required. </p>
com.top_logic.tool.boundsec.CallCommand.tooltip = <i>Command handler</i> that dynamically calls another command on the same or another component using its own settings including access control.
com.top_logic.tool.boundsec.ChangeCheckDialogCloser = Change check dialog closer
com.top_logic.tool.boundsec.ChangeCheckDialogCloser.tooltip = The class <i>change check dialog closer</i> is a <i>close modal dialog command handler</i> which performs dirty handling. The <i>form handlers</i> to check are the handlers in the dialog closed by this command.
com.top_logic.tool.boundsec.CheckerProxyHandler = Checker proxy handler
com.top_logic.tool.boundsec.CheckerProxyHandler.Config.command = Command
com.top_logic.tool.boundsec.CheckerProxyHandler.Config.command.tooltip = <i>Command handler</i> to delegate execution to.
com.top_logic.tool.boundsec.CheckerProxyHandler.Config.name.tooltip = Name of the component to delegate access checks to.
com.top_logic.tool.boundsec.CheckerProxyHandler.tooltip = <i>Command handler proxy</i> that delegates to a custom <i>bound checker</i> for access privileges.
com.top_logic.tool.boundsec.CloseModalDialogCommandHandler = Close modal dialog command handler
com.top_logic.tool.boundsec.CloseModalDialogCommandHandler.tooltip = Default command to close a Dialog.
com.top_logic.tool.boundsec.CockpitLayout = Cockpit layout
com.top_logic.tool.boundsec.CockpitLayout.tooltip = With a CockpitLayout you can build portlets. A CockpitLayout may contain any kind of component. On all contained components, that are <code>instanceof</code>
com.top_logic.tool.boundsec.CommandGroupType = Command group type
com.top_logic.tool.boundsec.CommandGroupType.DELETE = Delete
com.top_logic.tool.boundsec.CommandGroupType.DELETE.tooltip = Commands with a <i>command group</i> of type <i>delete</i> delete objects.
com.top_logic.tool.boundsec.CommandGroupType.READ = Read
com.top_logic.tool.boundsec.CommandGroupType.READ.tooltip = Commands with a <i>command group</i> of type <i>read</i> simply accesses objects without modify them.
com.top_logic.tool.boundsec.CommandGroupType.WRITE = Write
com.top_logic.tool.boundsec.CommandGroupType.WRITE.tooltip = Commands with a <i>command group</i> of type <i>write</i> access objects and change them in any way.
com.top_logic.tool.boundsec.CommandGroupType.tooltip = Classification of <i>command groups</i>.
com.top_logic.tool.boundsec.CommandHandler$ConfirmConfig = Confirm configuration
com.top_logic.tool.boundsec.CommandHandler$ConfirmConfig.tooltip = Configuration options for the confirm message of a command.
com.top_logic.tool.boundsec.CommandHandler$Display = Display
com.top_logic.tool.boundsec.CommandHandler$Display.tooltip = Strategy to display a command.
com.top_logic.tool.boundsec.CommandHandler$ExecutabilityConfig = Executability configuration
com.top_logic.tool.boundsec.CommandHandler$ExecutabilityConfig.tooltip = Configuration of an executability definition.
com.top_logic.tool.boundsec.CommandHandler$ImageConfig = Image configuration
com.top_logic.tool.boundsec.CommandHandler$ImageConfig.tooltip = Configuration options for the image aspect of a <i>command handler</i>.
com.top_logic.tool.boundsec.CommandHandler$TargetConfig = Target configuration
com.top_logic.tool.boundsec.CommandHandler$TargetConfig.tooltip = Configuration of a command target model.
com.top_logic.tool.boundsec.CommandHandler.CommandDefaults.cssClasses = Css classes
com.top_logic.tool.boundsec.CommandHandler.Config.checkScopeProvider = Check scope provider
com.top_logic.tool.boundsec.CommandHandler.Config.checkScopeProvider.tooltip = The configured <i>check scope provider</i>.
com.top_logic.tool.boundsec.CommandHandler.Config.clique = Clique
com.top_logic.tool.boundsec.CommandHandler.Config.clique.tooltip = Name of the command clique, this <i>command handler</i> is part of. <p> If no clique is assigned explicitly, the default in <i>Default clique</i> (<i>command handler factory configuration</i>) is used. </p>
com.top_logic.tool.boundsec.CommandHandler.Config.group = Group
com.top_logic.tool.boundsec.CommandHandler.Config.group.tooltip = <i>Command group</i> of this <i>command handler</i>. <p> If not set (the value is <code>null</code>), <code>"Read"</code> is used implicitly. </p>
com.top_logic.tool.boundsec.CommandHandler.Config.id = ID
com.top_logic.tool.boundsec.CommandHandler.Config.resourceKey = label
com.top_logic.tool.boundsec.CommandHandler.Config.resourceKey.tooltip = The internationalized command label.
com.top_logic.tool.boundsec.CommandHandler.ConfigBase.collapsedTitle = Collapsed title
com.top_logic.tool.boundsec.CommandHandler.ConfigBase.collapsedTitle.tooltip = The title displayed for a collapsed <i>command handler</i> configuration.
com.top_logic.tool.boundsec.CommandHandler.ConfirmConfig.confirm = Confirm
com.top_logic.tool.boundsec.CommandHandler.ConfirmConfig.confirm.tooltip = Whether the user is asked for confirmation before the command is actually executed.
com.top_logic.tool.boundsec.CommandHandler.ConfirmConfig.confirmMessage = Confirm message
com.top_logic.tool.boundsec.CommandHandler.ConfirmConfig.confirmMessage.tooltip = The message to display to the user requesting for confirmation that the command should really be executed. <p> The message can refer to the target model of the command using the <code>{0}</code> placeholder. </p> <p> The message is only displayed, if <i>Confirm</i> is set. If no value is set, but <i>Confirm</i> is checked, a generic confirmation message is displayed. </p>
com.top_logic.tool.boundsec.CommandHandler.Display.COMMANDS = Commands
com.top_logic.tool.boundsec.CommandHandler.Display.COMMANDS.tooltip = Display the commands in the regular button bar.
com.top_logic.tool.boundsec.CommandHandler.Display.CONTEXT_MENU = Context menu
com.top_logic.tool.boundsec.CommandHandler.Display.CONTEXT_MENU.tooltip = Display the commands only in the context menu of elements.
com.top_logic.tool.boundsec.CommandHandler.Display.HIDDEN = Hidden
com.top_logic.tool.boundsec.CommandHandler.Display.HIDDEN.tooltip = No not display the commands directly in the UI.
com.top_logic.tool.boundsec.CommandHandler.Display.MENU = Menu
com.top_logic.tool.boundsec.CommandHandler.Display.MENU.tooltip = Display the commands in the component's burger menu.
com.top_logic.tool.boundsec.CommandHandler.Display.TOOLBAR = Toolbar
com.top_logic.tool.boundsec.CommandHandler.Display.TOOLBAR.tooltip = Display the component's toolbar (icon-only).
com.top_logic.tool.boundsec.CommandHandler.ExecutabilityConfig.executability = Executability
com.top_logic.tool.boundsec.CommandHandler.ExecutabilityConfig.executability.tooltip = The configuration of the <i>executability rule</i> to use.
com.top_logic.tool.boundsec.CommandHandler.ImageConfig.disabledImage = Disabled image
com.top_logic.tool.boundsec.CommandHandler.ImageConfig.disabledImage.tooltip = The icon to display for this command, if the command is disabled. <p> Note: With icon font icons, there is no need to customize the disabled icon. By default the regular button icon is also used for disabled buttons but rendered in another style. </p>
com.top_logic.tool.boundsec.CommandHandler.ImageConfig.image = Image
com.top_logic.tool.boundsec.CommandHandler.ImageConfig.image.tooltip = The icon for this command, if displayed as image button. <p> Note: If no icon is defined, the default icon from the command clique is used. </p>
com.top_logic.tool.boundsec.CommandHandler.TargetConfig.target = model
com.top_logic.tool.boundsec.CommandHandler.TargetConfig.target.tooltip = The specification of the target object to operate on. <p> The evaluation of the configured <i>component channel</i> is passed as context object to the command execution. </p> <p> If nothing is configured, the default is to use the model of the context component as target model for the executed command. </p>
com.top_logic.tool.boundsec.CommandHandlerFactory = Command handler factory
com.top_logic.tool.boundsec.CommandHandlerFactory$Config$CliqueConfig = Clique configuration
com.top_logic.tool.boundsec.CommandHandlerFactory$Config$CliqueConfig.tooltip = Definition of a command clique. <p> A command clique is a group of commands displayed together. </p>
com.top_logic.tool.boundsec.CommandHandlerFactory$Config$CliqueGroupConfig = Clique group configuration
com.top_logic.tool.boundsec.CommandHandlerFactory$Config$CliqueGroupConfig.tooltip = Definition of a clique group. <p> A clique group consists of a list of cliques with a common display setting. </p>
com.top_logic.tool.boundsec.CommandHandlerFactory$Config$GroupedCliqueConfig = Grouped clique configuration
com.top_logic.tool.boundsec.CommandHandlerFactory$Config$GroupedCliqueConfig.tooltip = Definition of a clique within a clique group. <p> A grouped clique may define <i>command defaults</i> but inherits its display properties form its group. </p>
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.AbstractCliqueConfig.display = Display
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.AbstractCliqueConfig.display.tooltip = Strategy how to display the commands in this group.
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.CliqueGroupConfig.cliques = Cliques
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.CliqueGroupConfig.cliques.tooltip = Cliques in this group.
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.clique-defaults = Clique defaults
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.clique-defaults.tooltip = <i>Mapping</i> finding default settings for all commands of a given clique.
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.clique-group-display = Clique group display
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.clique-group-display.tooltip = Index of a clique name to its index in the <i>Cliques</i> list.
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.clique-group-mapping = Clique group mapping
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.clique-group-mapping.tooltip = <i>Mapping</i> finding the clique group for a clique name.
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.clique-index = Clique index
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.clique-index.tooltip = Index of top-level clique name to its index in the <i>Cliques</i> list.
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.cliques = Cliques
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.cliques.tooltip = Definition of command cliques.
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.default-clique = Default clique
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.default-clique.tooltip = The command clique, if none is explicitly assined.
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.handler-index = Handler index
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.handler-index.tooltip = Index of a handler name to its index in the <i>Handlers</i> list.
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.handlers = Handlers
com.top_logic.tool.boundsec.CommandHandlerFactory.Config.handlers.tooltip = Configurations for declared <i>command handlers</i>.
com.top_logic.tool.boundsec.CommandHandlerFactory.tooltip = Registry of globally defined <i>command handlers</i>.
com.top_logic.tool.boundsec.CommandHandlerProxy = Command handler proxy
com.top_logic.tool.boundsec.CommandHandlerProxy.tooltip = Abstract proxy for <i>command handler</i>.
com.top_logic.tool.boundsec.CommandHandlerReference = Command handler reference
com.top_logic.tool.boundsec.CommandHandlerReference.tooltip = <i>Command handler proxy</i> that delegates to a <i>command handler</i> registered in the <i>command handler factory</i> referenced by its <i>ID</i> (<i>command handler configuration</i>).
com.top_logic.tool.boundsec.CommandReferenceConfig = Command reference configuration
com.top_logic.tool.boundsec.CommandReferenceConfig.command-id = Command ID
com.top_logic.tool.boundsec.CommandReferenceConfig.command-id.tooltip = Id of the referenced <i>command handler</i>.
com.top_logic.tool.boundsec.CommandReferenceConfig.tooltip = Base configuration for referencing another <i>command handler</i> by its <i>ID</i> (<i>command handler configuration</i>).
com.top_logic.tool.boundsec.CommandSequence = Command sequence
com.top_logic.tool.boundsec.CommandSequence.Config.commands = Commands
com.top_logic.tool.boundsec.CommandSequence.Config.commands.tooltip = The <i>command handlers</i> that should be executed.
com.top_logic.tool.boundsec.CommandSequence.Config.group.tooltip = One must explicitly decide about the command group of the sequence.
com.top_logic.tool.boundsec.CommandSequence.tooltip = Aggregation of <i>command handlers</i> that are executed in sequence.
com.top_logic.tool.boundsec.ConfirmCommandHandler = Confirm command handler
com.top_logic.tool.boundsec.ConfirmCommandHandler.tooltip = <i>Command handler</i> opening a confirm dialog for the user before executing the actual command.
com.top_logic.tool.boundsec.DispatchingSecurityObjectProvider = Dispatching security object provider
com.top_logic.tool.boundsec.DispatchingSecurityObjectProvider$ProviderConfig = Provider configuration
com.top_logic.tool.boundsec.DispatchingSecurityObjectProvider$ProviderConfig.tooltip = <i>Configuration item</i> holding a <i>security object provider</i> for a <i>command group</i>.
com.top_logic.tool.boundsec.DispatchingSecurityObjectProvider.Config.default = Default
com.top_logic.tool.boundsec.DispatchingSecurityObjectProvider.Config.default.tooltip = The default <i>security object provider</i> that is used for <i>command group</i> that are not configured.
com.top_logic.tool.boundsec.DispatchingSecurityObjectProvider.Config.providers = Providers
com.top_logic.tool.boundsec.DispatchingSecurityObjectProvider.Config.providers.tooltip = The mapping of the command group name to the <i>security object provider</i> handling it.
com.top_logic.tool.boundsec.DispatchingSecurityObjectProvider.ProviderConfig.command-group = Command group
com.top_logic.tool.boundsec.DispatchingSecurityObjectProvider.ProviderConfig.command-group.tooltip = The id of the command group for which <i>Implementation</i> should be used.
com.top_logic.tool.boundsec.DispatchingSecurityObjectProvider.ProviderConfig.impl = Implementation
com.top_logic.tool.boundsec.DispatchingSecurityObjectProvider.ProviderConfig.impl.tooltip = The <i>security object provider</i> that is used for the command group with given id.
com.top_logic.tool.boundsec.DispatchingSecurityObjectProvider.tooltip = <i>Security object provider</i> delegating to different <i>security object provider</i> depending on the <i>command group</i>.
com.top_logic.tool.boundsec.LayoutSecurityConfiguration = Layout security configuration
com.top_logic.tool.boundsec.LayoutSecurityConfiguration.collector = Collector
com.top_logic.tool.boundsec.LayoutSecurityConfiguration.collector.tooltip = Configuration of the collector to collect <i>command group</i> for the layout.
com.top_logic.tool.boundsec.LayoutSecurityConfiguration.domain-mapper = Domain mapper
com.top_logic.tool.boundsec.LayoutSecurityConfiguration.tooltip = Definitions of the Compound security layout.
com.top_logic.tool.boundsec.NoDialogContentCheck = No dialog content check
com.top_logic.tool.boundsec.NoDialogContentCheck.tooltip = Annotation for <i>command handler</i> class opening dialogs. <p> By default the <i>executability rule</i> of the open handler checks whether the current used is allowed to see the dialog. If this annotation is present at the handler class and <i>value</i> is true. no such check occurs. </p>
com.top_logic.tool.boundsec.NoDialogContentCheck.value = Value
com.top_logic.tool.boundsec.NoDialogContentCheck.value.tooltip = Whether the dialog content must be checked .
com.top_logic.tool.boundsec.OpenAllowedExecutability = Open allowed executability
com.top_logic.tool.boundsec.OpenAllowedExecutability.Config.dialog-name = Dialog name
com.top_logic.tool.boundsec.OpenAllowedExecutability.Config.dialog-name.tooltip = The name of the dialog whose allow must be checked.
com.top_logic.tool.boundsec.OpenAllowedExecutability.tooltip = <i>Executability rule</i> that checks that the current user is allowed to view a configured dialog of the calling <i>component</i>.
com.top_logic.tool.boundsec.OpenModalDialogCommandHandler = Open dialog
com.top_logic.tool.boundsec.OpenModalDialogCommandHandler.Config.dialog-name = Dialog name
com.top_logic.tool.boundsec.OpenModalDialogCommandHandler.Config.dialog-name.tooltip = Name of the component to open as dialog. <p> If not given, a dynamic default is applied (the name of the context component of the <i>dialog info</i> this handler is defined in, see <i>Open handler</i> (<i>dialog info</i>). </p>
com.top_logic.tool.boundsec.OpenModalDialogCommandHandler.Config.targetComponent = model component
com.top_logic.tool.boundsec.OpenModalDialogCommandHandler.Config.targetComponent.tooltip = Name of the <i>component</i> in the opened dialog that should receive the command's target model. <p> This setting is usable to populate the opened dialog with a model object taken e.g. from the the component that opens the dialog (or any other component as specified as the command's target model source). </p> <p> Note: The visibility of the dialog open button is implicitly affected by this setting. For the opener button to be visible, the target component must support the model transferred in the opening process. </p> <p> The setting is optional. If not specified, no model is transfered in the opening process. </p>
com.top_logic.tool.boundsec.OpenModalDialogCommandHandler.tooltip = <i>Command handler</i> to open a dialog. <p> When defining a dialog, an open handler is also defined to create a button for opening that dialog. Outside a dialog definition, this handler can also be used to open a dialog defined somewhere else. </p>
com.top_logic.tool.boundsec.ReferencedSecurityObjectProvider = Referenced security object provider
com.top_logic.tool.boundsec.ReferencedSecurityObjectProvider.Config.reference = Reference
com.top_logic.tool.boundsec.ReferencedSecurityObjectProvider.Config.reference.tooltip = The name of the <i>security object provider</i> to resolve against the <i>security object provider manager</i>.
com.top_logic.tool.boundsec.ReferencedSecurityObjectProvider.tooltip = <i>Security object provider</i> referencing a different <i>security object provider</i> that is known by the <i>security object provider manager</i>.
com.top_logic.tool.boundsec.SecurityConfiguration = Security configuration
com.top_logic.tool.boundsec.SecurityConfiguration.securityId = Security ID
com.top_logic.tool.boundsec.SecurityConfiguration.securityId.tooltip = The name under which the security for this component is configurable. If not given <i>Name</i> (<i>layout component configuration</i>) is used.
com.top_logic.tool.boundsec.SecurityConfiguration.tooltip = Configuration of the security for a <i>component</i>.
com.top_logic.tool.boundsec.SecurityObjectProviderConfig.securityObject = Security object
com.top_logic.tool.boundsec.SecurityObjectProviderConfig.securityObject.tooltip = The algorithm that navigates to the <i>object</i> on which the security is checked.
com.top_logic.tool.boundsec.SecurityObjectProviderManager = Security object provider manager
com.top_logic.tool.boundsec.SecurityObjectProviderManager$ProviderConfig = Provider configuration
com.top_logic.tool.boundsec.SecurityObjectProviderManager$ProviderConfig.tooltip = Configuration of a <i>security object provider</i> that also holds a name.
com.top_logic.tool.boundsec.SecurityObjectProviderManager.Config.providers = Providers
com.top_logic.tool.boundsec.SecurityObjectProviderManager.Config.providers.tooltip = Mapping of the alias for a <i>security object provider</i> to its configuration.
com.top_logic.tool.boundsec.SecurityObjectProviderManager.ProviderConfig.impl = Implementation
com.top_logic.tool.boundsec.SecurityObjectProviderManager.ProviderConfig.impl.tooltip = <i>Security object provider</i> for the given alias.
com.top_logic.tool.boundsec.SecurityObjectProviderManager.ProviderConfig.name.tooltip = The alias for the configured <i>security object provider</i>.
com.top_logic.tool.boundsec.SecurityObjectProviderManager.tooltip = The <i>security object provider manager</i> manages the <i>security object providers</i> and their aliases to comfort up layout configuration.
com.top_logic.tool.boundsec.SimpleOpenDialog = Simple open dialog
com.top_logic.tool.boundsec.SimpleOpenDialog.tooltip = Command handler for opening a dialog with a specific component and model. The handler will look in the given arguments for the following values: <ul> <li><code>"dialog"</code>: Name of the dialog to be opened.</li> <li><code>"component"</code>: Business component within the opened dialog.</li> <li><code>"model"</code>: Model to be set into the business component.</li> </ul>
com.top_logic.tool.boundsec.WithSecurityMaster.isSecurityMaster = Is security master
com.top_logic.tool.boundsec.WithSecurityMaster.isSecurityMaster.tooltip = Whether this component controls the access to its whole view. <p> If a user has no access to a security-master component, he is prohibited to show the whole view (tab, tile) the component resides in. </p>
com.top_logic.tool.boundsec.assistent.AbstractAssistentController = Assistent controller
com.top_logic.tool.boundsec.assistent.AbstractAssistentController$FormContextAjaxTransferCommandHandler = Form context ajax transfer command handler
com.top_logic.tool.boundsec.assistent.AbstractAssistentController$FormContextAjaxTransferCommandHandler.tooltip = Simple CommandHandler that copies all (validated) constraints to the dataMap.
com.top_logic.tool.boundsec.assistent.AbstractAssistentController.tooltip = This is the superclass of all assistant controllers.#
com.top_logic.tool.boundsec.assistent.AssistantMultiFileUploadComponent = Assistant multiple file upload component
com.top_logic.tool.boundsec.assistent.AssistantMultiFileUploadComponent.tooltip = This class is a file upload component as step of an assistent. The uploaded files are stored in the assistant data (key: <code>"FILES"</code>.
com.top_logic.tool.boundsec.assistent.AssistentComponent = Assistent component
com.top_logic.tool.boundsec.assistent.AssistentComponent.Config.backCommand = Back command
com.top_logic.tool.boundsec.assistent.AssistentComponent.Config.cancelCommand = Cancel command
com.top_logic.tool.boundsec.assistent.AssistentComponent.Config.controller = Controller
com.top_logic.tool.boundsec.assistent.AssistentComponent.Config.forwardCommand = Forward command
com.top_logic.tool.boundsec.assistent.AssistentComponent.Config.showCommand = Show command
com.top_logic.tool.boundsec.assistent.AssistentComponent.tooltip = Implementation of a assistant (wizard). All steps are based on LayoutComponent. Access to the DataMap is not synchronized, as this concurrent access is not expected.
com.top_logic.tool.boundsec.assistent.AssistentFileUploadComponent = Assistent file upload component
com.top_logic.tool.boundsec.assistent.AssistentFileUploadComponent.tooltip = This component uploads a single File and stores it into the <i>assistent components</i> data.
com.top_logic.tool.boundsec.assistent.AssistentProgressComponent = Assistent progress component
com.top_logic.tool.boundsec.assistent.AssistentProgressComponent.Config.horizontal = Horizontal
com.top_logic.tool.boundsec.assistent.AssistentProgressComponent.tooltip = Showing progress of an AssistentComponent. Just put it in a layout and configure the master as the AssistentComponent. This components shows the major steps of the AssistentComponent. To configure them use the right attribute while defining AssistentStepInfos in your XML.
com.top_logic.tool.boundsec.assistent.AssistentStepInfo = Assistent step info
com.top_logic.tool.boundsec.assistent.AssistentStepInfo.labelKeySuffix = Label key suffix
com.top_logic.tool.boundsec.assistent.AssistentStepInfo.tooltip = Metainformation for assistent steps are stored here.
com.top_logic.tool.boundsec.assistent.BoundAssistentComponent = Bound assistent component
com.top_logic.tool.boundsec.assistent.BoundAssistentComponent.Config.securityProviderClass = Security provider class
com.top_logic.tool.boundsec.assistent.BoundAssistentComponent.tooltip = Extension of AssistentComponent making it security aware.
com.top_logic.tool.boundsec.assistent.CommandChain = Command chain
com.top_logic.tool.boundsec.assistent.CommandChain.tooltip = To perform more than one command during a step switch in the assistentComponent. e.g. the step forward and a addional command.
com.top_logic.tool.boundsec.assistent.EVAAssistantController = EVA assistant controller
com.top_logic.tool.boundsec.assistent.EVAAssistantController$ImportCommandHandler = Import command handler
com.top_logic.tool.boundsec.assistent.EVAAssistantController$ImportCommandHandler.tooltip = Importer step in the assistant. This step will be called when the upload has been finished and the options have been chosen. This handler will start the import thread an hand over the process file handler to it for doing the work.
com.top_logic.tool.boundsec.assistent.EVAAssistantController.Config.errorStep = Error step
com.top_logic.tool.boundsec.assistent.EVAAssistantController.Config.extension = Extension
com.top_logic.tool.boundsec.assistent.EVAAssistantController.Config.importHandler = Import handler
com.top_logic.tool.boundsec.assistent.EVAAssistantController.Config.inputStep = Input step
com.top_logic.tool.boundsec.assistent.EVAAssistantController.Config.outputStep = Output step
com.top_logic.tool.boundsec.assistent.EVAAssistantController.Config.processStep = Process step
com.top_logic.tool.boundsec.assistent.EVAAssistantController.Config.uploadHandler = Upload handler
com.top_logic.tool.boundsec.assistent.EVAAssistantController.tooltip = The simple process of importing a file to the system can be handled by this controller.
com.top_logic.tool.boundsec.assistent.SimpleAssistentController = Simple assistent controller
com.top_logic.tool.boundsec.assistent.SimpleAssistentController.tooltip = Simple implementation of assistant controller with default behavior. Can be used for simple assistants, look at subclasses for examples
com.top_logic.tool.boundsec.assistent.StepAssistantComponent = Step assistant component
com.top_logic.tool.boundsec.assistent.StepAssistantComponent.tooltip = Only override the <code>#getSteps()</code> method.
com.top_logic.tool.boundsec.assistent.ValidatingUploadHandler = Validating upload handler
com.top_logic.tool.boundsec.assistent.ValidatingUploadHandler.tooltip = Upload handler, which will validate the uploaded file. After uploading the file this handler will call the method <code>#validateFile(AssistentComponent, File)</code> to perform a consistency check on the uploaded file. If this succeeds (returned list is empty or <code>null</code>), the assistant can go further.
com.top_logic.tool.boundsec.assistent.commandhandler.AbstractAssistentSwitchCommandHandler = Assistent switch command handler
com.top_logic.tool.boundsec.assistent.commandhandler.AbstractAssistentSwitchCommandHandler.tooltip = Abstract handler for switching between steps in the AssistentComponent.
com.top_logic.tool.boundsec.assistent.commandhandler.BackwardAssistentCommandHandler = Backward assistent command handler
com.top_logic.tool.boundsec.assistent.commandhandler.BackwardAssistentCommandHandler.tooltip = For switching back in the AssistentComponent.
com.top_logic.tool.boundsec.assistent.commandhandler.CancelAssistentCommandHandler = Cancel assistent command handler
com.top_logic.tool.boundsec.assistent.commandhandler.CancelAssistentCommandHandler.tooltip = For cancle the AssistentComponent.
com.top_logic.tool.boundsec.assistent.commandhandler.ConfirmedCancelAssistentCommandHandler = Confirmed cancel assistent command handler
com.top_logic.tool.boundsec.assistent.commandhandler.ConfirmedCancelAssistentCommandHandler.tooltip = Overridden to set needsConfirm flag.
com.top_logic.tool.boundsec.assistent.commandhandler.FinishAssistentCommandHandler = Finish assistent command handler
com.top_logic.tool.boundsec.assistent.commandhandler.FinishAssistentCommandHandler.tooltip = To close eventaully opened assistent dialog and perform a callback.
com.top_logic.tool.boundsec.assistent.commandhandler.ForwardAssistantCommandHandlerInvalidate = Forward assistant command handler invalidate
com.top_logic.tool.boundsec.assistent.commandhandler.ForwardAssistentCommandHandler = Forward assistent command handler
com.top_logic.tool.boundsec.assistent.commandhandler.ForwardAssistentCommandHandler.tooltip = For switching forward in the AssistentComponent. Also other commands as "finish" or "end" are realized with this handler.
com.top_logic.tool.boundsec.assistent.commandhandler.ShowAssistentCommandHandler = Show assistent command handler
com.top_logic.tool.boundsec.assistent.commandhandler.ShowAssistentCommandHandler.tooltip = To show the current step in the AssistentComponent.
com.top_logic.tool.boundsec.assistent.eva.ErrorComponent = Error component
com.top_logic.tool.boundsec.assistent.eva.ErrorComponent.tooltip = Error component to be displayed when the <i>validating upload handler</i> has found at least one error in the uploaded file.
com.top_logic.tool.boundsec.assistent.eva.OutputComponent = Output component
com.top_logic.tool.boundsec.assistent.eva.ProcessingComponent = Processing component
com.top_logic.tool.boundsec.commandhandlers.AbstractUploadHandler = Upload handler
com.top_logic.tool.boundsec.commandhandlers.AbstractUploadHandler.tooltip = The class <i>upload handler</i> expects that the component to handle is a <i>form component</i> which has a <i>form field</i> with name <code>"uploadField"</code>. Typically it is used with a <i>file upload component</i>.
com.top_logic.tool.boundsec.commandhandlers.BookmarkService = Bookmark service
com.top_logic.tool.boundsec.commandhandlers.BookmarkService$BookmarkHandlerConfig = Bookmark handler configuration
com.top_logic.tool.boundsec.commandhandlers.BookmarkService$BookmarkHandlerConfig.tooltip = Configuration of a <i>bookmark handler</i> for some <i>type</i>.
com.top_logic.tool.boundsec.commandhandlers.BookmarkService.BookmarkHandlerConfig.impl = Implementation
com.top_logic.tool.boundsec.commandhandlers.BookmarkService.BookmarkHandlerConfig.impl.tooltip = The <i>bookmark handler</i> used for <i>Type</i>.
com.top_logic.tool.boundsec.commandhandlers.BookmarkService.Config.bookmark-handlers = Bookmark handlers
com.top_logic.tool.boundsec.commandhandlers.BookmarkService.Config.bookmark-handlers.tooltip = <i>Bookmark handler</i> for identified by the type, the handler is responsible for. <p> When a <i>bookmark handler</i> is requested for some type the handler configured for the nearest generalisation of that type is returned. </p>
com.top_logic.tool.boundsec.commandhandlers.BookmarkService.Config.default-bookmark-handler = Default bookmark handler
com.top_logic.tool.boundsec.commandhandlers.BookmarkService.Config.default-bookmark-handler.tooltip = Default <i>bookmark handler</i> that is used for an object when no special handler is configured for object's type.
com.top_logic.tool.boundsec.commandhandlers.BookmarkService.tooltip = Service that provides <i>bookmark handler</i> for different <i>types</i>.
com.top_logic.tool.boundsec.commandhandlers.CompoundSetHomepageHandler = Compound set homepage handler
com.top_logic.tool.boundsec.commandhandlers.CompoundSetHomepageHandler.tooltip = Class for setting the personal home-page. The home page should normally be a business component (in this case a <i>form component</i>) which has a model of type <i>object</i>. If the found <i>form component</i> is also a <i>selectable</i>, take the selection, otherwise the model as business object to be displayed. If there is no matching business component, we use the nearest <i>selectable</i> to find a context we can reconstruct later on.
com.top_logic.tool.boundsec.commandhandlers.DefaultBookmarkHandler = Default bookmark handler
com.top_logic.tool.boundsec.commandhandlers.DefaultBookmarkHandler.tooltip = <i>Command handler</i> that resolves a stable link (a bookmark) and displays the bookmarked object.
com.top_logic.tool.boundsec.commandhandlers.DoubleCheckCommandHandler = Double check command handler
com.top_logic.tool.boundsec.commandhandlers.DoubleCheckCommandHandler.tooltip = Validate the form context befor opening the dialog. The dialog is opend only if the form has no errors
com.top_logic.tool.boundsec.commandhandlers.EmptyFileUploadHandler = Empty file upload handler
com.top_logic.tool.boundsec.commandhandlers.EmptyFileUploadHandler.tooltip = Upload Handler which allows uploading empty files.
com.top_logic.tool.boundsec.commandhandlers.FormContextValidatingCommandHandler = Form context validating command handler
com.top_logic.tool.boundsec.commandhandlers.FormContextValidatingCommandHandler.tooltip = Simple handler to submit a form and validate its FormContext. This handler ist very needfull in usage with the <i>assistent component</i>. When switch to another step you can store the formContext of the old step by registering this handler on your forward command in your assistentController. The validated formContext can be stored in the AssistentComponents datamap.
com.top_logic.tool.boundsec.commandhandlers.FormContextValidatingOpenModalDialogCommandHandler = Form context validating open modal dialog command handler
com.top_logic.tool.boundsec.commandhandlers.FormContextValidatingOpenModalDialogCommandHandler.tooltip = This open-handler fetches opener's FormContext and validates it to store user input. Then opens a dialog. Needed, when a FormComponent opens dialogs. Tell component in xml-declaration to open dialog with this open-handler: set attribute 'openHandlerClass' to fully qualified classname of this.
com.top_logic.tool.boundsec.commandhandlers.GotoHandler = Goto handler
com.top_logic.tool.boundsec.commandhandlers.GotoHandler.tooltip = CommandHandler to jump between Components. This CommandHandler needs two parameters, which have to be included in (JavaScript) methodCalls: <ol> <li>GotoHandler.COMMAND_PARAM_ID, ID of KnowledgeObjects to go to</li> <li>GotoHandler.COMMAND_PARAM_TYPE, Type of KO of Wrapper </li> </ol> Example for caling the command in a link: <pre> javascript:gotoCmd( '15b011c:fd46ed626a:-7edb', 'Person'); </pre>
com.top_logic.tool.boundsec.commandhandlers.NonClosingDialogUploadHandler = Non closing dialog upload handler
com.top_logic.tool.boundsec.commandhandlers.NonClosingDialogUploadHandler.tooltip = <i>Upload handler</i> that does not close the dialog after the upload is finished.
com.top_logic.tool.boundsec.commandhandlers.OpenViewForModelCommand = Open view for model command
com.top_logic.tool.boundsec.commandhandlers.OpenViewForModelCommand.Config.gotoCommandId = Goto command ID
com.top_logic.tool.boundsec.commandhandlers.OpenViewForModelCommand.Config.gotoCommandId.tooltip = The command id of the <i>goto handler</i> that should be used.
com.top_logic.tool.boundsec.commandhandlers.OpenViewForModelCommand.tooltip = Opens the default view for the given target model. <p> The advantage of this command over the <i>goto handler</i> is, that this command uses standard configuration option <i>model</i>, not a custom unconfigurable parameter in the argument maps. That makes it easy to replace this command with another command that uses the standard <i>model</i> mechanism. </p> <p> An example for a replacement command is <i>set component model command</i>, which just sets the target model as the components model. </p>
com.top_logic.tool.boundsec.commandhandlers.SetComponentModelCommand = Set component model command
com.top_logic.tool.boundsec.commandhandlers.SetComponentModelCommand.tooltip = Sets the given model as the model of the <i>component</i>. <p> This can be used as a component local "goto" command. See <i>open view for model command</i> for more information. </p>
com.top_logic.tool.boundsec.commandhandlers.SetHomepageHandler = Set homepage handler
com.top_logic.tool.boundsec.commandhandlers.SetHomepageHandler.tooltip = Class for setting the personal homepage
com.top_logic.tool.boundsec.commandhandlers.ShowCurrentRevisionCommandHandler = Show current revision command handler
com.top_logic.tool.boundsec.commandhandlers.ShowCurrentRevisionCommandHandler.tooltip = Display the current revision of the components model.
com.top_logic.tool.boundsec.commandhandlers.ToggleCommandHandler = Toggle command handler
com.top_logic.tool.boundsec.commandhandlers.ToggleCommandHandler.Config.activeCssClasses = Active css classes
com.top_logic.tool.boundsec.commandhandlers.ToggleCommandHandler.Config.activeCssClasses.tooltip = CSS classes to set in active state.
com.top_logic.tool.boundsec.commandhandlers.ToggleCommandHandler.Config.activeImage = Active image
com.top_logic.tool.boundsec.commandhandlers.ToggleCommandHandler.Config.activeImage.tooltip = Icon to use, if activated. <p> If no special image is configured, the default one is used even in activated state. </p>
com.top_logic.tool.boundsec.commandhandlers.ToggleCommandHandler.Config.activeResourceKey = Active resource key
com.top_logic.tool.boundsec.commandhandlers.ToggleCommandHandler.Config.activeResourceKey.tooltip = Label to use, if activated. <p> If no special label key is configured, the default one is used even in activated state. </p>
com.top_logic.tool.boundsec.commandhandlers.ToggleCommandHandler.tooltip = Base class for <i>command handlers</i> that have an active/pressed state with an alternative image and label.
com.top_logic.tool.boundsec.commandhandlers.UploadHandler = Upload handler
com.top_logic.tool.boundsec.commandhandlers.UploadHandler.Config.allow-empty-files = Allow empty files
com.top_logic.tool.boundsec.commandhandlers.UploadHandler.tooltip = Handler for a simple upload of a file to the server.
com.top_logic.tool.boundsec.commandhandlers.stacked.StackedGotoHandler = Stacked goto handler
com.top_logic.tool.boundsec.commandhandlers.stacked.StackedGotoHandler.Config.exclude-layouts = Exclude layouts
com.top_logic.tool.boundsec.commandhandlers.stacked.StackedGotoHandler.Config.exclude-layouts.tooltip = The layout that are that may be stacked.
com.top_logic.tool.boundsec.commandhandlers.stacked.StackedGotoHandler.tooltip = Override the default GotoHandler to cooperate with the <i>stack handler</i>.
com.top_logic.tool.boundsec.compound.CompoundSecurityLayout = Compound security layout
com.top_logic.tool.boundsec.compound.CompoundSecurityLayout.Config.securityDomain = Security domain
com.top_logic.tool.boundsec.compound.CompoundSecurityLayout.Config.useDefaultChecker = Use default checker
com.top_logic.tool.boundsec.compound.CompoundSecurityLayout.tooltip = A CompoundSecurityLayout provides a logical representation of a technical view. The structure the the parts of the layouts into logic groups as experienced by the user. The BoundSecurityLayout is too fine-grained (has too many nesting levels). CompoundSecurityLayout allows to define the security for a group of components.
com.top_logic.tool.boundsec.compound.CompoundSecurityProjectLayout = Compound security project layout
com.top_logic.tool.boundsec.compound.CompoundSecurityProjectLayout.Config.primaryChecker = Primary checker
com.top_logic.tool.boundsec.compound.CompoundSecurityProjectLayout.Config.secondaryChecker = Secondary checker
com.top_logic.tool.boundsec.compound.CompoundSecurityProjectLayout.tooltip = This Layout delegates the allow methods to a primary checker, which in turn should delegate its allow methods to the secondary checker. This mechanism is used in the context of layouts with a tree and a element view. The tree must be visible only if the element view is visible for at least one of the trees nodes (elements). In addition nodes which can not be viewd in the element view must not be visible in the tree. In such a scenario the tree is the primaryChecker, and the element view the secondary.
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.ExportRolesProfileHandler = Export roles profile handler
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.ExportRolesProfileHandler.tooltip = Exports the <i>security configuration</i> for the application.
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.OpenRolesProfileImportDialog = Open roles profile import dialog
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.OpenRolesProfileImportDialog.tooltip = <i>Command handler</i> opening the <i>roles profile import dialog</i>.
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig = Security configuration
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig$CommandGroupConfig = Command group configuration
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig$CommandGroupConfig.tooltip = Configuration of a <i>command group</i>
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig$RoleProfileConfig = Role profile configuration
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig$RoleProfileConfig.tooltip = Configuration for a <i>role</i> identified by its name.
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig$ViewConfig = View configuration
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig$ViewConfig.tooltip = Configuration for a represented <i>configuration</i>.
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig.CommandGroupConfig.name = Name
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig.CommandGroupConfig.name.tooltip = The represented <i>command group</i>.
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig.RoleProfileConfig.name.tooltip = The name of the role for which is this the configuration.
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig.RoleProfileConfig.views = Views
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig.RoleProfileConfig.views.tooltip = The <i>view configurations</i> on which a user the represented <i>role</i> must have, to execute commands.
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig.ViewConfig.commandGroups = Command groups
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig.ViewConfig.commandGroups.tooltip = The configured <i>command group</i> for this view.
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig.ViewConfig.name.tooltip = The name of the represented <i>configuration</i>.
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig.profiles = Profiles
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig.profiles.tooltip = All known <i>role profile configurations</i>.
com.top_logic.tool.boundsec.compound.gui.admin.rolesProfile.SecurityConfig.tooltip = <i>Configuration item</i> for the textual persistence of the <i>roles profile handler</i> profiles as configured in the <i>edit security profile component</i>.
com.top_logic.tool.boundsec.conditional.PreconditionCommandHandler = Precondition command handler
com.top_logic.tool.boundsec.conditional.PreconditionCommandHandler.tooltip = <i>Command handler</i> that can only be executed if some internal preconditions are given.
com.top_logic.tool.boundsec.gui.EditRoleComponent = Edit role component
com.top_logic.tool.boundsec.gui.EditRoleComponent$ApplyRoleCommand = Apply role command
com.top_logic.tool.boundsec.gui.EditRoleComponent$ApplyRoleCommand.tooltip = Apply command handler for Bounded roles.
com.top_logic.tool.boundsec.gui.EditRoleComponent$DeleteRoleCommand = Delete role command
com.top_logic.tool.boundsec.gui.EditRoleComponent$DeleteRoleCommand.tooltip = DeleteHandler for roles.
com.top_logic.tool.boundsec.gui.EditRoleComponent$NewRoleCommand = New role command
com.top_logic.tool.boundsec.gui.EditRoleComponent$NewRoleCommand.tooltip = Handler to create new roles.
com.top_logic.tool.boundsec.gui.EditRoleComponent$NewRoleComponent = New role component
com.top_logic.tool.boundsec.gui.EditRoleComponent$NewRoleComponent.tooltip = Component to create new roles.
com.top_logic.tool.boundsec.gui.EditRoleComponent.tooltip = Component to edit, create and delete Bound(ed)Roles.
com.top_logic.tool.boundsec.gui.profile.ApplyRolesCommandHandler = Apply roles command handler
com.top_logic.tool.boundsec.gui.profile.ApplyRolesCommandHandler.tooltip = <i>Apply command handler</i> to apply changes made in the <i>edit security profile component</i>.
com.top_logic.tool.boundsec.gui.profile.EditRolesProfileComponent = Edit roles profile component
com.top_logic.tool.boundsec.gui.profile.EditRolesProfileComponent$ApplyRolesProfile = Apply roles profile
com.top_logic.tool.boundsec.gui.profile.EditRolesProfileComponent$CollapseAllCommandHandler = Collapse all command handler
com.top_logic.tool.boundsec.gui.profile.EditRolesProfileComponent$ExpandAllCommandHandler = Expand all command handler
com.top_logic.tool.boundsec.gui.profile.EditRolesProfileComponent$SetAllCommandHandler = Set all command handler
com.top_logic.tool.boundsec.gui.profile.EditRolesProfileComponent$UnSetAllCommandHandler = Un set all command handler
com.top_logic.tool.boundsec.gui.profile.EditRolesProfileComponent.Config.columnProvider = Column provider
com.top_logic.tool.boundsec.gui.profile.EditRolesProfileComponent.Config.columnProvider.tooltip = Returns the provider for the columns displayed in the table.
com.top_logic.tool.boundsec.gui.profile.EditRolesProfileComponent.Config.nodeFilter = Node filter
com.top_logic.tool.boundsec.gui.profile.EditRolesProfileComponent.Config.nodeFilter.tooltip = Filter for the layout components that are displayed in the tree. Only components matching this filter are displayed.
com.top_logic.tool.boundsec.gui.profile.EditRolesProfileComponent.tooltip = <i>Edit component</i> for editing role profiles.
com.top_logic.tool.boundsec.gui.profile.EditSecurityProfileComponent = Edit security profile component
com.top_logic.tool.boundsec.gui.profile.EditSecurityProfileComponent.Config.excludedRoles = Excluded roles
com.top_logic.tool.boundsec.gui.profile.EditSecurityProfileComponent.Config.excludedRoles.tooltip = The names of the roles to exclude from the GUI
com.top_logic.tool.boundsec.gui.profile.EditSecurityProfileComponent.tooltip = Component editing the role profiles using the configuration of the layout tree.
com.top_logic.tool.boundsec.gui.profile.SetAccessCommandHandler = Set access command handler
com.top_logic.tool.boundsec.gui.profile.SetAccessCommandHandler.Config.access = Access
com.top_logic.tool.boundsec.gui.profile.SetAccessCommandHandler.Config.access.tooltip = Whether the access should be granted or revoked.
com.top_logic.tool.boundsec.gui.profile.SetAccessCommandHandler.tooltip = <i>Command handler</i> that grants (or revokes) access on all visible <i>boolean field</i>.
com.top_logic.tool.boundsec.manager.AccessManager = Access manager
com.top_logic.tool.boundsec.manager.AccessManager.Config.structures = Structures
com.top_logic.tool.boundsec.manager.AccessManager.tooltip = The access manager is responsible to determine the roles for persons on objects.
com.top_logic.tool.boundsec.securityObjectProvider.ConfiguredModelSecurityProvider = Configured model security provider
com.top_logic.tool.boundsec.securityObjectProvider.ConfiguredModelSecurityProvider.Config.model = Model
com.top_logic.tool.boundsec.securityObjectProvider.ConfiguredModelSecurityProvider.Config.model.tooltip = Model which is used as security object.
com.top_logic.tool.boundsec.securityObjectProvider.ConfiguredModelSecurityProvider.tooltip = <i>Security object provider</i> that uses a configured model as security object.
com.top_logic.tool.boundsec.securityObjectProvider.PathSecurityObjectProvider = Path security object provider
com.top_logic.tool.boundsec.securityObjectProvider.PathSecurityObjectProvider.Config.path = Path
com.top_logic.tool.boundsec.securityObjectProvider.PathSecurityObjectProvider.Config.path.tooltip = The path to navigate.
com.top_logic.tool.boundsec.securityObjectProvider.PathSecurityObjectProvider.tooltip = Use a path to find the <i>bound object</i> in the layout hierarchy.
com.top_logic.tool.boundsec.securityObjectProvider.SecurityObjectByGroup = Security object by group
com.top_logic.tool.boundsec.securityObjectProvider.SecurityObjectByGroup$ProviderByGroup = Provider by group
com.top_logic.tool.boundsec.securityObjectProvider.SecurityObjectByGroup$ProviderByGroup.tooltip = Configuration of a <i>security object provider</i> to use for a special <i>command group</i>.
com.top_logic.tool.boundsec.securityObjectProvider.SecurityObjectByGroup.Config.providers = Providers
com.top_logic.tool.boundsec.securityObjectProvider.SecurityObjectByGroup.Config.providers.tooltip = <i>Security object provider</i> computing the security object from the given model for a special <i>command group</i>. <p> If this <i>security object provider</i> is accessed with a <i>command group</i> that is not contained, the default provider is used. </p>
com.top_logic.tool.boundsec.securityObjectProvider.SecurityObjectByGroup.ProviderByGroup.group = Group
com.top_logic.tool.boundsec.securityObjectProvider.SecurityObjectByGroup.ProviderByGroup.group.tooltip = The <i>command group</i> for which the configured <i>Security object</i> must be used.
com.top_logic.tool.boundsec.securityObjectProvider.SecurityObjectByGroup.tooltip = <i>Security object provider</i> delegating to another <i>security object provider</i> depending on the given command group.
com.top_logic.tool.boundsec.securityObjectProvider.path.Component = Component
com.top_logic.tool.boundsec.securityObjectProvider.path.Component.Config.name = Name
com.top_logic.tool.boundsec.securityObjectProvider.path.Component.Config.name.tooltip = The name of the component to step to.
com.top_logic.tool.boundsec.securityObjectProvider.path.Component.tooltip = <i>Intermediate path</i> delegating to a component identified by its name.
com.top_logic.tool.boundsec.simple.CommandGroupRegistry = Command group registry
com.top_logic.tool.boundsec.simple.CommandGroupRegistry$GroupDefinition = Group definition
com.top_logic.tool.boundsec.simple.CommandGroupRegistry$GroupDefinition.tooltip = Definition for a <i>command group</i>.
com.top_logic.tool.boundsec.simple.CommandGroupRegistry.Config.groups = Groups
com.top_logic.tool.boundsec.simple.CommandGroupRegistry.Config.groups.tooltip = All known <i>group definitions</i>, indexed by its <i>Name</i> (<i>command group registry group definition</i>).
com.top_logic.tool.boundsec.simple.CommandGroupRegistry.GroupDefinition.name.tooltip = The ID of the configured <i>command group</i>.
com.top_logic.tool.boundsec.simple.CommandGroupRegistry.GroupDefinition.type = Type
com.top_logic.tool.boundsec.simple.CommandGroupRegistry.GroupDefinition.type.tooltip = Type of the configured <i>command group</i>.
com.top_logic.tool.boundsec.simple.CommandGroupRegistry.tooltip = Registry for <i>command group's</i>.
com.top_logic.tool.boundsec.util.HasRoleFilter = Has role filter
com.top_logic.tool.boundsec.util.HasRoleFilter.Config.roles = Roles
com.top_logic.tool.boundsec.util.HasRoleFilter.Config.roles.tooltip = List of role names. <p> Only those objects are accepted on which the current user has one on the configured roles. </p>
com.top_logic.tool.boundsec.util.HasRoleFilter.tooltip = <i>Filter</i> that accepts objects, for which the current user has one of a given number of roles.
com.top_logic.tool.boundsec.wrap.SecurityComponentCache = Security component cache
com.top_logic.tool.boundsec.wrap.SecurityComponentCache.tooltip = Cache for <i>pers bound component</i> objects.
com.top_logic.tool.dataImport.AutomaticDataImportTask = Automatic data import task
com.top_logic.tool.dataImport.AutomaticDataImportTask.Config.abort-on-errors = Abort on errors
com.top_logic.tool.dataImport.AutomaticDataImportTask.Config.abort-on-errors.tooltip = Flag indicating that the import should not be run on errors, even if possible.
com.top_logic.tool.dataImport.AutomaticDataImportTask.Config.abort-on-warnings = Abort on warnings
com.top_logic.tool.dataImport.AutomaticDataImportTask.Config.abort-on-warnings.tooltip = Flag indicating that the import should not be run on warnings, even if possible.
com.top_logic.tool.dataImport.AutomaticDataImportTask.Config.importer = Importer
com.top_logic.tool.dataImport.AutomaticDataImportTask.Config.importer.tooltip = The <i>data importer</i> to use by this task.
com.top_logic.tool.dataImport.AutomaticDataImportTask.tooltip = A task for automatic data import.
com.top_logic.tool.dataImport.layout.DataImportAssistant = Data import assistant
com.top_logic.tool.dataImport.layout.DataImportAssistant$DataImportAssistantController = Data import assistant controller
com.top_logic.tool.dataImport.layout.DataImportAssistant$DataImportAssistantController.tooltip = The controller for this assistant.
com.top_logic.tool.dataImport.layout.DataImportAssistant$DataImportCancelCommandHandler = Data import cancel command handler
com.top_logic.tool.dataImport.layout.DataImportAssistant$DataImportCancelCommandHandler.tooltip = The DataImportCancelCommandHandler does cleanup work.
com.top_logic.tool.dataImport.layout.DataImportAssistant$DataImportProgressStepCommandHandler = Data import progress step command handler
com.top_logic.tool.dataImport.layout.DataImportAssistant$DataImportProgressStepCommandHandler.tooltip = The DataImportProgressStepCommandHandler does nothing. It is for the ExecutabilityRule only.
com.top_logic.tool.dataImport.layout.DataImportAssistant.Config.importerClass = Importer class
com.top_logic.tool.dataImport.layout.DataImportAssistant.DataImportAssistantController.Config.commitStep = Commit step
com.top_logic.tool.dataImport.layout.DataImportAssistant.DataImportAssistantController.Config.endStep = End step
com.top_logic.tool.dataImport.layout.DataImportAssistant.DataImportAssistantController.Config.parseStep = Parse step
com.top_logic.tool.dataImport.layout.DataImportAssistant.DataImportAssistantController.Config.resultStep = Result step
com.top_logic.tool.dataImport.layout.DataImportAssistant.DataImportAssistantController.Config.startStep = Start step
com.top_logic.tool.dataImport.layout.DataImportAssistant.tooltip = The DataImportAssistant imports data from files.
com.top_logic.tool.dataImport.layout.DataImportEndStepComponent = Data import end step component
com.top_logic.tool.dataImport.layout.DataImportEndStepComponent.tooltip = The DataImportEndStepComponent is the last step of the DataImportAssistant.
com.top_logic.tool.dataImport.layout.DataImportProgressStepComponent = Data import progress step component
com.top_logic.tool.dataImport.layout.DataImportProgressStepComponent.tooltip = The DataImportProgressStepComponent is a progress step of the DataImportAssistant.
com.top_logic.tool.dataImport.layout.DataImportResultStepComponent = Data import result step component
com.top_logic.tool.dataImport.layout.DataImportResultStepComponent$DataImportResultStepCommandHandler = Data import result step command handler
com.top_logic.tool.dataImport.layout.DataImportResultStepComponent$DataImportResultStepCommandHandler.tooltip = The DataImportResultStepCommandHandler starts the data import committing.
com.top_logic.tool.dataImport.layout.DataImportResultStepComponent.tooltip = The DataImportResultStepComponent is the step after the parsing step of the DataImportAssistant, showing the results of the parsing.
com.top_logic.tool.dataImport.layout.DataImportStartStepComponent = Data import start step component
com.top_logic.tool.dataImport.layout.DataImportStartStepComponent$DataImportStartStepCommandHandler = Data import start step command handler
com.top_logic.tool.dataImport.layout.DataImportStartStepComponent$DataImportStartStepCommandHandler.tooltip = The DataImportStartStepCommandHandler starts the data import parsing.
com.top_logic.tool.dataImport.layout.DataImportStartStepComponent.tooltip = The DataImportStartStepComponent is the first step of the DataImportAssistant.
com.top_logic.tool.dataImport.layout.DataImportStatusComponent = Data import status component
com.top_logic.tool.dataImport.layout.DataImportStatusComponent.Config.importerClass = Importer class
com.top_logic.tool.dataImport.layout.DataImportStatusComponent.tooltip = The TOPSFileDataImportStatusComponent displays the last result of the TOPSFileDataImporter.
com.top_logic.tool.execution.CheckOnOtherModelRule = Check on other model
com.top_logic.tool.execution.CheckOnOtherModelRule.tooltip = <i>Executability rule</i> that evaluates other <i>executability rules</i> on a custom model (not the commands target model).
com.top_logic.tool.execution.CombinedExecutabilityRule = Combined executability rule
com.top_logic.tool.execution.CombinedExecutabilityRule.tooltip = <i>Executability rule</i> combining multiple other <i>executability rules</i> to a single one. <p> The rules are evaluated in the given order. Checking aborts with the first non-executable state returned. </p>
com.top_logic.tool.execution.DelegateRule = Delegate rule
com.top_logic.tool.execution.DelegateRule.Config.delegate-mapping = Delegate mapping
com.top_logic.tool.execution.DelegateRule.Config.delegate-mapping.tooltip = A mapping the resolved the component to delegate executability computation to.
com.top_logic.tool.execution.DelegateRule.tooltip = <i>Executability rule</i> resolving the <i>executable state</i> by resolving a configured rule to a (potentially) different component.
com.top_logic.tool.execution.EditorExecutabilityRule = Editor executability rule
com.top_logic.tool.execution.EditorExecutabilityRule.Config.mode = Mode
com.top_logic.tool.execution.EditorExecutabilityRule.Config.mode.tooltip = The mode of the <i>editor</i> that should be restricted. <p> All other modes are considered executable. </p>
com.top_logic.tool.execution.EditorExecutabilityRule.Config.reason = Reason
com.top_logic.tool.execution.EditorExecutabilityRule.Config.reason.tooltip = Reason for the <i>Mode</i>.
com.top_logic.tool.execution.EditorExecutabilityRule.Config.visibility = Visibility
com.top_logic.tool.execution.EditorExecutabilityRule.Config.visibility.tooltip = The visibility of the command in the specified <i>Mode</i>.
com.top_logic.tool.execution.EditorExecutabilityRule.tooltip = <i>Executability rule</i> that reacts on the mode of an <i>editor</i>.
com.top_logic.tool.execution.ExecutabilityRuleManager = Executability rule manager
com.top_logic.tool.execution.ExecutabilityRuleManager$RuleDefinition = Rule definition
com.top_logic.tool.execution.ExecutabilityRuleManager$RuleDefinition.tooltip = Configuration of a single rule.
com.top_logic.tool.execution.ExecutabilityRuleManager.Config.definitions = Definitions
com.top_logic.tool.execution.ExecutabilityRuleManager.Config.definitions.tooltip = Configured rules by their <i>ID</i> (<i>executability rule manager rule definition</i>).
com.top_logic.tool.execution.ExecutabilityRuleManager.RuleDefinition.id = ID
com.top_logic.tool.execution.ExecutabilityRuleManager.RuleDefinition.id.tooltip = The rule identifier.
com.top_logic.tool.execution.ExecutabilityRuleManager.tooltip = Registry of configured <i>executability rule</i> instances.
com.top_logic.tool.execution.ExecutableIfChannelActive = Executable if channel active
com.top_logic.tool.execution.ExecutableIfChannelActive.Config.channel = Channel
com.top_logic.tool.execution.ExecutableIfChannelActive.Config.channel.tooltip = The edit mode channel to observe.
com.top_logic.tool.execution.ExecutableIfChannelActive.tooltip = <i>Executability rule</i> that displays a command only if some configured channel delivers a <code>true</code> value. <p> This can e.g. be used to display a command only if some other component is in edit mode by observing its edit mode channel. </p>
com.top_logic.tool.execution.ExecutableState$CommandVisibility = Command visibility
com.top_logic.tool.execution.ExecutableState$CommandVisibility.tooltip = The visibility and executability of a button.
com.top_logic.tool.execution.ExecutableState.CommandVisibility.DISABLED = Disabled
com.top_logic.tool.execution.ExecutableState.CommandVisibility.DISABLED.tooltip = The button is visible but in disabled state and cannot be executed.
com.top_logic.tool.execution.ExecutableState.CommandVisibility.HIDDEN = Hidden
com.top_logic.tool.execution.ExecutableState.CommandVisibility.HIDDEN.tooltip = The button is not visible and cannot be executed.
com.top_logic.tool.execution.ExecutableState.CommandVisibility.VISIBLE = Visible
com.top_logic.tool.execution.ExecutableState.CommandVisibility.VISIBLE.tooltip = The button is visible and executable.
com.top_logic.tool.execution.RuleReference = Rule reference
com.top_logic.tool.execution.RuleReference.Config.rule-id = Rule ID
com.top_logic.tool.execution.RuleReference.Config.rule-id.tooltip = The ID of the referenced <i>executability rule</i>.
com.top_logic.tool.execution.RuleReference.tooltip = <i>Executability rule</i> that delegates to a globally configured rule in <i>executability rule manager</i>.
com.top_logic.tool.execution.SecurityDelegationExecutabilityRule = Security delegation executability rule
com.top_logic.tool.execution.SecurityDelegationExecutabilityRule.Config.group = Group
com.top_logic.tool.execution.SecurityDelegationExecutabilityRule.Config.group.tooltip = The <i>command group</i> to check access for. <p> Normally, this must be the command group of the command in which context this <i>executability rule</i> rule is used. For technical reasons, a redundant configuration is necessary. </p>
com.top_logic.tool.execution.SecurityDelegationExecutabilityRule.Config.security-component = Security component
com.top_logic.tool.execution.SecurityDelegationExecutabilityRule.Config.security-component.tooltip = Name of the <i>component</i> that is responsible for checking access. <p> The configured component must be a <i>bound checker</i>. </p> <p> This rule allows execution, if the referenced component permits access to the command's base model using the configured command group. </p>
com.top_logic.tool.execution.SecurityDelegationExecutabilityRule.tooltip = <i>Executability rule</i> that explicitly checks for permission. <p> For regular commands, this check is done implicitly: A component on which a command is executed needs to give permission for the command's <i>command group</i> and the command's base model. Only if a command explicitly delegates permission to another component, a <i>security delegation executability rule</i> is required. </p>
com.top_logic.tool.execution.service.CommandApprovalService = Command approval service
com.top_logic.tool.execution.service.CommandApprovalService.tooltip = Central point for customizing checks whether commands can be executed depending on their command group and the target model state. <p> Per command checks can be configured through <i>executability rules</i>, see <i>Executability</i> (<i>command handler executability configuration</i>). Global checks based on the current state of a command's target model is more convenient to realize throug a <i>command approval service</i> configuration. This does not require adjusting all commands of all view where a certain model can be displayed or edited. </p>
com.top_logic.tool.execution.service.ConfiguredApprovalRule = Configured approval rule
com.top_logic.tool.execution.service.ConfiguredApprovalRule.Config.contexts = Contexts
com.top_logic.tool.execution.service.ConfiguredApprovalRule.Config.contexts.tooltip = Condition that selects a context in which to apply the <i>Executability</i> to a command execution. <p> If multiple contexts are given, the <i>Executability</i> is applied, in any of those contexts. </p> <p> If no context is specified at all, this means that the check is performed in all contexts. </p>
com.top_logic.tool.execution.service.ConfiguredApprovalRule.Config.excluded-contexts = Excluded contexts
com.top_logic.tool.execution.service.ConfiguredApprovalRule.Config.excluded-contexts.tooltip = Exception to the condition defined in <i>Contexts</i>. <p> A context is matched, if it is matched by a context in <i>Contexts</i> except if it is matched by a condition defined here. </p>
com.top_logic.tool.execution.service.ConfiguredApprovalRule.Config.executability = Executability
com.top_logic.tool.execution.service.ConfiguredApprovalRule.Config.executability.tooltip = The <i>executability rule</i> to invoke for computing whether the command can be executed on the target model.
com.top_logic.tool.execution.service.ConfiguredApprovalRule.tooltip = <i>Command approval rule</i> that can be configured.
com.top_logic.tool.execution.service.ConfiguredCommandApprovalService = Configured command approval service
com.top_logic.tool.execution.service.ConfiguredCommandApprovalService$Config$Check = Check
com.top_logic.tool.execution.service.ConfiguredCommandApprovalService$Config$Check.tooltip = Assignment of a <i>command approval rule</i> to a certain <i>structured type</i> for checking commands executed on instances of that type.
com.top_logic.tool.execution.service.ConfiguredCommandApprovalService.Config.Check.rules = Rules
com.top_logic.tool.execution.service.ConfiguredCommandApprovalService.Config.Check.rules.tooltip = The <i>command approval rule</i> to apply to instances of <i>Type</i>.
com.top_logic.tool.execution.service.ConfiguredCommandApprovalService.Config.Check.type = Type
com.top_logic.tool.execution.service.ConfiguredCommandApprovalService.Config.Check.type.tooltip = The type of command target models to which the <i>Rules</i> applies to.
com.top_logic.tool.execution.service.ConfiguredCommandApprovalService.Config.checks = Checks
com.top_logic.tool.execution.service.ConfiguredCommandApprovalService.Config.checks.tooltip = Configured additional checks to perform before commands are executed.
com.top_logic.tool.execution.service.ConfiguredCommandApprovalService.tooltip = <i>Command approval service</i> with configured checks.
com.top_logic.tool.execution.service.filter.CommandOfComponent = Command of component
com.top_logic.tool.execution.service.filter.CommandOfComponent.Config.command-id = Command ID
com.top_logic.tool.execution.service.filter.CommandOfComponent.Config.command-id.tooltip = The ID of the <i>command handler</i> to match. <p> If no command ID is given, all commands of the given <i>Component</i> match. </p>
com.top_logic.tool.execution.service.filter.CommandOfComponent.Config.component = Component
com.top_logic.tool.execution.service.filter.CommandOfComponent.Config.component.tooltip = The name of the component to match. <p> If no component name is given, all commands with the given <i>Command ID</i> of all components match. </p>
com.top_logic.tool.execution.service.filter.CommandOfComponent.tooltip = <i>Execution context filter</i> selecting a specific command of a specific component.
com.top_logic.tool.execution.service.filter.CommandWithGroup = Command with group
com.top_logic.tool.execution.service.filter.CommandWithGroup.Config.command-group = Command group
com.top_logic.tool.execution.service.filter.CommandWithGroup.Config.command-group.tooltip = The <i>command group</i> to match.
com.top_logic.tool.execution.service.filter.CommandWithGroup.tooltip = <i>Execution context filter</i> that selects all commands of a certain <i>command group</i>.
com.top_logic.tool.execution.service.filter.ExecutionContextFilter$MatchResult = Match result
com.top_logic.tool.execution.service.filter.ExecutionContextFilter$MatchResult.tooltip = Decision of a context match.
com.top_logic.tool.execution.service.filter.ExecutionContextFilter.MatchResult.MATCHES = Matches
com.top_logic.tool.execution.service.filter.ExecutionContextFilter.MatchResult.MATCHES.tooltip = The context matches.
com.top_logic.tool.execution.service.filter.ExecutionContextFilter.MatchResult.NOT_MATCHES = Not matches
com.top_logic.tool.execution.service.filter.ExecutionContextFilter.MatchResult.NOT_MATCHES.tooltip = The context does not match.
com.top_logic.tool.execution.service.filter.ExecutionContextFilter.MatchResult.UNDECIDED = Undecided
com.top_logic.tool.execution.service.filter.ExecutionContextFilter.MatchResult.UNDECIDED.tooltip = It is unknown, whether the context matches. <p> This is the case, if the filter must check special context (e.g. the command ID) but this context is not available during check. </p>
com.top_logic.tool.export.AbstractOfficeExportHandler = Office export handler
com.top_logic.tool.export.AbstractOfficeExportHandler.tooltip = Common superclass for Donwloading office-files.
com.top_logic.tool.export.AbstractZipDownloadHandler = Zip download handler
com.top_logic.tool.export.AbstractZipDownloadHandler.tooltip = Handler to download a zip file.
com.top_logic.tool.export.ExcelExportHandler = Excel export handler
com.top_logic.tool.export.ExcelExportHandler.tooltip = Handler for generating Excel reports.
com.top_logic.tool.export.ExcelExportSupport$Config = Configuration
com.top_logic.tool.export.ExcelExportSupport$Config.tooltip = Configuration for <i>Excel export support</i>.
com.top_logic.tool.export.ExcelExportSupport.Config.className = Class name
com.top_logic.tool.export.ExcelExportSupport.Config.className.tooltip = Getter for <code>"className"</code>.
com.top_logic.tool.export.Export$State = State
com.top_logic.tool.export.Export$State.tooltip = The <i>state</i> defines the state of the <i>exports</i> process. <ul> <li><i>Initialized</i>: The export has never been done.</li> <li><i>Queued</i>: The <i>export</i> is queued and waits for execution.</li> <li><i>Running</i>: The <i>export</i> is currently performed.</li> <li><i>Finished</i>: The last <i>export</i> run was successful.</li> <li><i>Failed</i>: The last <i>export</i> run ended with a failure.</li> </ul>
com.top_logic.tool.export.Export.State.FAILED = Failed
com.top_logic.tool.export.Export.State.FINISHED = Finished
com.top_logic.tool.export.Export.State.INITIALIZED = Initialized
com.top_logic.tool.export.Export.State.QUEUED = Queued
com.top_logic.tool.export.Export.State.RUNNING = Running
com.top_logic.tool.export.ExportHandlerRegistry = Export handler registry
com.top_logic.tool.export.ExportHandlerRegistry$Config$NamedExportHandler = Named export handler
com.top_logic.tool.export.ExportHandlerRegistry$Config$NamedExportHandler.tooltip = Configuration <i>export handler</i>.
com.top_logic.tool.export.ExportHandlerRegistry.Config.NamedExportHandler.handler = Handler
com.top_logic.tool.export.ExportHandlerRegistry.Config.export-handlers = Export handlers
com.top_logic.tool.export.ExportHandlerRegistry.Config.export-handlers.tooltip = Export handlers.
com.top_logic.tool.export.ExportQueueManager = Export queue manager
com.top_logic.tool.export.ExportQueueManager.Config.activated = Activated
com.top_logic.tool.export.ExportQueueManager.Config.activated.tooltip = True if its activated.
com.top_logic.tool.export.ExportQueueManager.Config.queue-managers = Queue managers
com.top_logic.tool.export.ExportQueueManager.Config.queue-managers.tooltip = Multiple queue managers.
com.top_logic.tool.export.ExportQueueManager.tooltip = The ExportQueueManager is responsible for starting and stopping <i>export executors</i>.
com.top_logic.tool.export.ExportRegistryFactory = Export registry factory
com.top_logic.tool.export.ExportRegistryFactory.Config.export-registry = Export registry
com.top_logic.tool.export.ExportRegistryFactory.Config.export-registry.tooltip = Configuration of the used <i>export registry</i>.
com.top_logic.tool.export.ExportRegistryFactory.tooltip = Provider for the <i>export registry</i> to use.
com.top_logic.tool.export.ExportTableComponent = Export table component
com.top_logic.tool.export.ExportTableComponent$EnqueueExportCommand = Enqueue export command
com.top_logic.tool.export.ExportTableComponent$EnqueueExportCommand.tooltip = Enqueues an <i>export</i> and updates the export table. <p> The command is executable if the <i>export</i> is not <i>running</i> or <i>queued</i>. </p>
com.top_logic.tool.export.ExportTableComponent$ExportDownloadHandler = Export download handler
com.top_logic.tool.export.ExportTableComponent$ExportDownloadHandler.tooltip = Download of the created document of an <i>export</i>.
com.top_logic.tool.export.ExportTableComponent$ExportHandlersConfig = Export handlers configuration
com.top_logic.tool.export.ExportTableComponent$ExportHandlersConfig.tooltip = Configuration of <i>export handlers</i>.
com.top_logic.tool.export.ExportTableComponent$OpenExportTableCommand = Open export table command
com.top_logic.tool.export.ExportTableComponent$OpenExportTableCommand.tooltip = <p> Quirks </p> <p> Overwritten because the semantics and handling of defaultI18N of <i>dialog info</i> is highly unclear nor does is work correctly. </p>
com.top_logic.tool.export.ExportTableComponent.Config.refreshInterval = Refresh interval
com.top_logic.tool.export.ExportTableComponent.Config.refreshInterval.tooltip = Interval in seconds between a page reload
com.top_logic.tool.export.ExportTableComponent.ExportHandlersConfig.exportHandlers = Export handlers
com.top_logic.tool.export.ExportTableComponent.ExportHandlersConfig.exportHandlers.tooltip = Comma separated list of names of <i>export handler</i>.
com.top_logic.tool.export.ExportTableComponent.ExportHandlersConfig.handlers = Handlers
com.top_logic.tool.export.ExportTableComponent.ExportHandlersConfig.handlers.tooltip = The configured handlers, indexed by name.
com.top_logic.tool.export.ExportTableComponent.tooltip = The <i>export table component</i> lists all available <i>export</i> registered at the dialog opener component of this. The component will refresh in a configurable interval to update the UI with changes of the exports progresses. Default is <code>10</code>.
com.top_logic.tool.export.ExportTableOpenRule = Export table open rule
com.top_logic.tool.export.ExportTableOpenRule.Config.exportComponentName = Export component name
com.top_logic.tool.export.ExportTableOpenRule.Config.exportComponentName.tooltip = Name of the export component open.
com.top_logic.tool.export.ExportTableOpenRule.tooltip = Checks if the current person is allowed to perform at least one of the <i>Export handlers</i> actions.
com.top_logic.tool.export.FormattedValueExcelRenderer = Formatted value Excel renderer
com.top_logic.tool.export.FormattedValueExcelRenderer.Config.format = Format
com.top_logic.tool.export.FormattedValueExcelRenderer.Config.format.tooltip = The data format for the excel cell.
com.top_logic.tool.export.FormattedValueExcelRenderer.tooltip = <i>Excel cell renderer</i> that creates a <i>Excel value</i> with a given. <p> It is expected that the value of the table model is a simple value, e.g. <i>Double</i>, <i>string</i>, or <i>date</i>. Complex values like <i>collection</i> or <i>form field</i> are not supported. </p>
com.top_logic.tool.export.PowerpointExportHandler = Powerpoint export handler
com.top_logic.tool.export.PowerpointExportHandler.tooltip = Handler for export of powerpoint reports
com.top_logic.tool.export.WordExportHandler = Word export handler
com.top_logic.tool.export.WordExportHandler.tooltip = Handler for export of word reports.
com.top_logic.tool.export.pdf.AbstractPDFExportCommand = PDF export command
com.top_logic.tool.export.pdf.AbstractPDFExportCommand.tooltip = Abstract super class for <i>command handler</i> exporting a PDF defined by a <i>form element template provider</i>.
com.top_logic.tool.export.progress.ExportDownloadComponent = Export download component
com.top_logic.tool.export.progress.ExportDownloadComponent$Download = Download
com.top_logic.tool.export.progress.ExportDownloadComponent$Download.tooltip = <i>Command handler</i> finally offering the download.
com.top_logic.tool.export.progress.ExportDownloadComponent.tooltip = Download component to be used, when export has finished his work.
com.top_logic.tool.export.progress.ExportProgressComponent = Export progress component
com.top_logic.tool.export.progress.ExportProgressComponent.Config.downloadComp = Download component
com.top_logic.tool.export.progress.ExportProgressComponent.tooltip = Progress dialog for executing the export of a grid.
com.top_logic.tool.export.progress.ExportProgressHandler = Export progress handler
com.top_logic.tool.export.progress.ExportProgressHandler.tooltip = Download handler which prepares the download in a separate thread.
com.top_logic.tool.state.StateManager$Config = Configuration
com.top_logic.tool.state.StateManager$InitialConfig = Initial configuration
com.top_logic.tool.state.StateManager$KeyConfiguration = Key configuration
com.top_logic.tool.state.StateManager$StateDescription = State description
com.top_logic.tool.state.StateManager.Config.StateManagerConfiguration = State manager configuration
com.top_logic.tool.state.StateManager.Config.StateManagerInitial = State manager initial
com.top_logic.tool.state.StateManager.KeyConfiguration.key = Key
com.top_logic.tool.state.StateManager.StateDescription.owner = Owner
com.top_logic.tool.state.StateManager.StateDescription.stateclass = Stateclass
com.top_logic.tool.state.StateManager.StateDescription.step = Step
com.top_logic.tool.state.StateManager.StateDescription.successors = Successors
com.top_logic.util.CachePolicy = Cache policy
com.top_logic.util.CachePolicy.Config.headers = Headers
com.top_logic.util.CachePolicy.Config.headers.tooltip = Getter for <code>"headers"</code>.
com.top_logic.util.CachePolicy.tooltip = This class allows a Reloadable Configuration of the default CachePolicy used by most JSP Pages and Servlets. Th Cacheploicy tells the UserAgent (vugo Browser) whwn to relaod/cache pages. Use the top-logix.xml to configure this class, It can be reloaded an this way cchange in a running system.
com.top_logic.util.CountryNamingScheme$CountryName = Country name
com.top_logic.util.CountryNamingScheme.CountryName.iso-country-code = Iso country code
com.top_logic.util.DefaultResourcesModule = Default resources module
com.top_logic.util.DefaultResourcesModule.tooltip = Default <i>resources module</i> implementation creating <i>resources</i>.
com.top_logic.util.DeferredBootService = Deferred boot service
com.top_logic.util.DeferredBootService.Config.deferred-boot-location = Deferred boot location
com.top_logic.util.DeferredBootService.Config.deferred-boot-location.tooltip = Deferred boot location.
com.top_logic.util.DeferredBootService.tooltip = Service that is started from the <i>start stop listener</i>, if deferred boot is enabled (instead of starting all configured services).
com.top_logic.util.LayoutBasedSecurity = Layout based security
com.top_logic.util.LayoutBasedSecurity.tooltip = <i>Knowledge-base based managed class</i> that initialises the security objects that base on the layout configurations of the application.
com.top_logic.util.MultiKBContextManager = Multiple knowledge-base context manager
com.top_logic.util.MultiKBContextManager.tooltip = <i>Thread context manager</i> creating <i>thread context</i> for applications with more than one <i>knowledge base</i>.
com.top_logic.util.StartStopListenerConfig = Start stop listener configuration
com.top_logic.util.StartStopListenerConfig.deferredBoot = Deferred boot
com.top_logic.util.StartStopListenerConfig.doInitLayouts = Do init layouts
com.top_logic.util.StartStopListenerConfig.enterMaintenanceMode = Enter maintenance mode
com.top_logic.util.StartStopListenerConfig.lockTimeout = Lock timeout
com.top_logic.util.StartStopListenerConfig.lockTimeout.tooltip = Maximum time waiting for a startup lock while booting the application. <p> The timeout configured here must at least be as long as the token timeout of the <code>startup</code> token (see <i>Lock timeout</i> (<i>configured lock service configuration type configuration operation configuration</i>). </p>
com.top_logic.util.StartStopListenerConfig.startupSleep = Startup sleep
com.top_logic.util.StartStopListenerConfig.startupSleep.tooltip = Polling interval when waiting for a startup token.
com.top_logic.util.StartStopListenerConfig.tooltip = Configuration for the start stop listener.
com.top_logic.util.TLContext$Config = Configuration
com.top_logic.util.TLContext$Config.tooltip = Configuration for <i>context</i>.
com.top_logic.util.TLContext.Config.personalConfiguration = Personal configuration
com.top_logic.util.TLContext.Config.personalConfiguration.tooltip = Getter for <code>"personalConfiguration"</code>.
com.top_logic.util.TLContextManager = Context manager
com.top_logic.util.TLContextManager.tooltip = Factory class for <i>thread context</i> in <i>TopLogic</i>.
com.top_logic.util.TLMimeTypes = MIME types
com.top_logic.util.TLMimeTypes.tooltip = <i>MIME types</i> knowning icons for types.
com.top_logic.util.TopLogicJspBase$Config = Configuration
com.top_logic.util.TopLogicJspBase$Config.tooltip = Configuration for <i>TopLogic jsp base</i>.
com.top_logic.util.TopLogicServlet$Config = Configuration
com.top_logic.util.TopLogicServlet$Config.tooltip = Configuration for <i>TopLogic servlet</i>.
com.top_logic.util.TopLogicServlet.Config.maxServiceTime = Maximum service time
com.top_logic.util.TopLogicServlet.Config.maxServiceTime.tooltip = Getter for <code>"maxServiceTime"</code>.
com.top_logic.util.WebMimeTypes = Web MIME types
com.top_logic.util.WebMimeTypes.tooltip = MimeTypes that live in a <i>servlet context</i>.
com.top_logic.util.error.ErrorHandlingHelper = Error handling helper
com.top_logic.util.error.ErrorHandlingHelper.Config.renderer = Renderer
com.top_logic.util.error.ErrorHandlingHelper.Config.renderer.tooltip = Configuration of the renderer that actually renders the error dialog
com.top_logic.util.error.ErrorHandlingHelper.tooltip = Provides helper methods for displaying problems..
com.top_logic.util.error.ErrorRenderer = Error renderer
com.top_logic.util.error.ErrorRenderer.tooltip = <i>Renderer</i> that renders the content of the error dialog.
com.top_logic.util.license.OpenSourceLicenseTool$AGPL = Agpl
com.top_logic.util.license.OpenSourceLicenseTool$AGPL.tooltip = The license information for an active AGPL license.
com.top_logic.util.license.TLLicense = License
com.top_logic.util.license.TLLicense.cluster-size = Cluster size
com.top_logic.util.license.TLLicense.cluster-size.tooltip = Allowed number of cluster nodes running the application.
com.top_logic.util.license.TLLicense.development = Development
com.top_logic.util.license.TLLicense.development.tooltip = Whether this license is for development only.
com.top_logic.util.license.TLLicense.expire-date = Expire date
com.top_logic.util.license.TLLicense.license-key = License key
com.top_logic.util.license.TLLicense.license-key.tooltip = The license key.
com.top_logic.util.license.TLLicense.restricted-users = Restricted users
com.top_logic.util.license.TLLicense.restricted-users.tooltip = Number of restricted user accounts (read-only) permitted by the license.
com.top_logic.util.license.TLLicense.tooltip = Information contained in a TopLogic license.
com.top_logic.util.license.TLLicense.users = Users
com.top_logic.util.license.TLLicense.users.tooltip = Number of users accounts permitted by the license.
com.top_logic.util.license.TLLicense.validity = Validity
com.top_logic.util.log.FileViewRenderer = File view renderer
com.top_logic.util.log.FileViewRenderer.Config.encoding = Encoding
com.top_logic.util.log.FileViewRenderer.tooltip = <i>Renderer</i> that renders a <i>file</i> through a link to a download.
com.top_logic.util.maintenance.MaintenanceComponent = Maintenance component
com.top_logic.util.maintenance.MaintenanceComponent.Config.noSelectionPage = No selection page
com.top_logic.util.maintenance.MaintenanceComponent.Config.noSelectionPage.tooltip = The JSP to display when no maintenance page is selected.
com.top_logic.util.maintenance.MaintenanceComponent.tooltip = Will show pages select in its master using page as base directory.
com.top_logic.util.maintenance.MaintenanceTableModelBuilder = Maintenance table model builder
com.top_logic.util.maintenance.MaintenanceTableModelBuilder.Config.dir = Directory
com.top_logic.util.maintenance.MaintenanceTableModelBuilder.Config.dir.tooltip = The name of the folder containing the maintenance pages.
com.top_logic.util.maintenance.MaintenanceTableModelBuilder.Config.extension = Extension
com.top_logic.util.maintenance.MaintenanceTableModelBuilder.Config.extension.tooltip = The extension of the file names of the maintenance pages.
com.top_logic.util.maintenance.MaintenanceTableModelBuilder.tooltip = The class <i>maintenance table model builder</i> builds the list of files for the maintenance table component.
com.top_logic.util.maintenance.MemoryObserver = Memory observer
com.top_logic.util.maintenance.MemoryObserver$Pools = Pools
com.top_logic.util.maintenance.MemoryObserver$Pools.tooltip = Configuration of <code>"pools"</code>.
com.top_logic.util.maintenance.MemoryObserver$Threshold = Threshold
com.top_logic.util.maintenance.MemoryObserver$Threshold.tooltip = Configuration of a threshold.
com.top_logic.util.maintenance.MemoryObserver$Thresholds = Thresholds
com.top_logic.util.maintenance.MemoryObserver$Thresholds.tooltip = Configuration of <code>"thresholds"</code>.
com.top_logic.util.maintenance.MemoryObserver.Config.loggingInterval = Logging interval
com.top_logic.util.maintenance.MemoryObserver.Config.loggingInterval.tooltip = Getter for <code>"loggingInterval"</code>.
com.top_logic.util.maintenance.MemoryObserver.Config.pools = Pools
com.top_logic.util.maintenance.MemoryObserver.Config.pools.tooltip = Getter for <code>"pools"</code>.
com.top_logic.util.maintenance.MemoryObserver.Config.thresholds = Thresholds
com.top_logic.util.maintenance.MemoryObserver.Config.thresholds.tooltip = Getter for <code>"thresholds"</code>.
com.top_logic.util.maintenance.MemoryObserver.Pools.eden = Eden
com.top_logic.util.maintenance.MemoryObserver.Pools.eden.tooltip = Getter for <code>"eden"</code>.
com.top_logic.util.maintenance.MemoryObserver.Pools.ignored = Ignored
com.top_logic.util.maintenance.MemoryObserver.Pools.ignored.tooltip = Getter for <code>"ignored"</code>.
com.top_logic.util.maintenance.MemoryObserver.Pools.metaspace = Metaspace
com.top_logic.util.maintenance.MemoryObserver.Pools.metaspace.tooltip = Getter for <code>"metaspace"</code>.
com.top_logic.util.maintenance.MemoryObserver.Pools.old = Old
com.top_logic.util.maintenance.MemoryObserver.Pools.old.tooltip = Getter for <code>"old"</code>.
com.top_logic.util.maintenance.MemoryObserver.Pools.survivor = Survivor
com.top_logic.util.maintenance.MemoryObserver.Pools.survivor.tooltip = Getter for <code>"survivor"</code>.
com.top_logic.util.maintenance.MemoryObserver.Threshold.red = Red
com.top_logic.util.maintenance.MemoryObserver.Threshold.red.tooltip = Getter for <code>"red"</code>.
com.top_logic.util.maintenance.MemoryObserver.Threshold.yellow = Yellow
com.top_logic.util.maintenance.MemoryObserver.Threshold.yellow.tooltip = Getter for <code>"yellow"</code>.
com.top_logic.util.maintenance.MemoryObserver.Thresholds.heap = Heap
com.top_logic.util.maintenance.MemoryObserver.Thresholds.heap.tooltip = Getter for <code>"heap"</code>.
com.top_logic.util.maintenance.MemoryObserver.Thresholds.metaspace = Metaspace
com.top_logic.util.maintenance.MemoryObserver.Thresholds.metaspace.tooltip = Getter for <code>"metaspace"</code>.
com.top_logic.util.maintenance.MemoryObserver.Thresholds.oldGen = Old gen
com.top_logic.util.maintenance.MemoryObserver.Thresholds.oldGen.tooltip = Getter for <code>"oldGen"</code>.
com.top_logic.util.maintenance.MemoryObserver.Thresholds.youngGen = Young gen
com.top_logic.util.maintenance.MemoryObserver.Thresholds.youngGen.tooltip = Getter for <code>"youngGen"</code>.
com.top_logic.util.maintenance.MemoryObserver.tooltip = DPM specific variant of the <i>memory observer thread</i> as of QC2558. It will not log internally but use use log4j to write a special log file.
com.top_logic.util.model.CompatibilityService = Compatibility service
com.top_logic.util.model.CompatibilityService.tooltip = <i>Managed class</i> used to be able to provide APIs in top logic for methods and classes that are introduced in element.
com.top_logic.util.model.ModelService = Model service
com.top_logic.util.model.ModelService$ClassificationConfig = Classification configuration
com.top_logic.util.model.ModelService$ClassificationConfig.tooltip = Configuration of the usage of a single classification.
com.top_logic.util.model.ModelService$PersistentModelConfig = Persistent model configuration
com.top_logic.util.model.ModelService$PersistentModelConfig$QueryConfig = Query configuration
com.top_logic.util.model.ModelService$PersistentModelConfig$QueryConfig.tooltip = Configuration of a query resolver implementation.
com.top_logic.util.model.ModelService$PersistentModelConfig.tooltip = Configuration options for <i>models</i>.
com.top_logic.util.model.ModelService.ClassificationConfig.mode = Mode
com.top_logic.util.model.ModelService.ClassificationConfig.mode.tooltip = How the classification is used and updated.
com.top_logic.util.model.ModelService.Config.classifications = Classifications
com.top_logic.util.model.ModelService.Config.classifications.tooltip = Registered classifications.
com.top_logic.util.model.ModelService.Config.model = Model
com.top_logic.util.model.ModelService.Config.model.tooltip = Configuration of operational aspects of the model.
com.top_logic.util.model.ModelService.PersistentModelConfig.QueryConfig.impl = Implementation
com.top_logic.util.model.ModelService.PersistentModelConfig.QueryConfig.impl.tooltip = The query resolver that implements the <i>Interface</i>.
com.top_logic.util.model.ModelService.PersistentModelConfig.QueryConfig.interface = Interface
com.top_logic.util.model.ModelService.PersistentModelConfig.QueryConfig.interface.tooltip = The query interface.
com.top_logic.util.model.ModelService.PersistentModelConfig.queries = Queries
com.top_logic.util.model.ModelService.PersistentModelConfig.queries.tooltip = Installed query resolvers.
com.top_logic.util.model.ModelService.tooltip = Provides the business model, this application is working on.
com.top_logic.util.monitor.ApplicationMonitor = Application monitor
com.top_logic.util.monitor.ApplicationMonitor.Config.components = Components
com.top_logic.util.monitor.ApplicationMonitor.Config.components.tooltip = Registered <i>application health monitors</i>.
com.top_logic.util.monitor.ApplicationMonitor.tooltip = <i>Managed class</i> providing <i>application health monitors</i>. <p> A <i>application health monitor</i> checks a certain function of the application. This <i>managed class</i> collects the results from all <i>application health monitors</i>. </p>
com.top_logic.util.monitor.ApplicationMonitorComponent = Application monitor component
com.top_logic.util.monitor.ApplicationMonitorComponent$RefreshApplicationMonitorCommand = Refresh application monitor command
com.top_logic.util.monitor.ApplicationMonitorComponent$RefreshApplicationMonitorCommand.tooltip = An <i>command handler</i> which resets the <i>form context</i> in order to display the most recent information.
com.top_logic.util.monitor.ApplicationMonitorComponent.Config.displayWithoutModel.tooltip = Model is not used to create <i>form context</i>. Therefore the component should also be displayed without model
com.top_logic.util.monitor.ApplicationMonitorComponent.tooltip = Provides information of the running application.
com.top_logic.util.monitor.ConfiguredMonitorComponent = Configured monitor component
com.top_logic.util.monitor.ConfiguredMonitorComponent.Config.description = Description
com.top_logic.util.monitor.ConfiguredMonitorComponent.Config.description.tooltip = A description of what is being monitored.
com.top_logic.util.monitor.ConfiguredMonitorComponent.tooltip = A <i>application health monitor</i> which is a <i>configured instance</i>.
com.top_logic.util.monitor.MonitorMessage$Status = Status
com.top_logic.util.monitor.MonitorMessage$Status.tooltip = Status of a message, see <code>MonitorMessage#getType()</code>.
com.top_logic.util.monitor.MonitorMessage.Status.ERROR = Error
com.top_logic.util.monitor.MonitorMessage.Status.ERROR.tooltip = State flag for an error message.
com.top_logic.util.monitor.MonitorMessage.Status.FATAL = Fatal
com.top_logic.util.monitor.MonitorMessage.Status.FATAL.tooltip = State flag for a fatal message.
com.top_logic.util.monitor.MonitorMessage.Status.INFO = Info
com.top_logic.util.monitor.MonitorMessage.Status.INFO.tooltip = State flag for an information message.
com.top_logic.util.monitor.SystemEnvironmentBuilder$GlobalConfig = Global configuration
com.top_logic.util.monitor.SystemEnvironmentBuilder$GlobalConfig.tooltip = Configuration of a <i>system environment builder</i>.
com.top_logic.util.monitor.SystemEnvironmentBuilder$PatternConfig = Pattern configuration
com.top_logic.util.monitor.SystemEnvironmentBuilder$PatternConfig.tooltip = Configuration of a <i>pattern</i>.
com.top_logic.util.monitor.SystemEnvironmentBuilder.GlobalConfig.protected-aliases = Protected aliases
com.top_logic.util.monitor.SystemEnvironmentBuilder.GlobalConfig.protected-aliases.tooltip = List of <i>pattern</i> that an alias key must match, if its value must not be displayed. <p> Aliases may hold informations that must not be displayed here, e.g. passwords. If an alias matches one of the returned pattern, then not the actual value but a replacement is displayed instead. </p>
com.top_logic.util.monitor.SystemEnvironmentBuilder.PatternConfig.pattern = Pattern
com.top_logic.util.monitor.SystemEnvironmentBuilder.PatternConfig.pattern.tooltip = <i>Pattern</i> that an alias key must match, if its value must not be displayed.
com.top_logic.util.monitor.db.ClearCommand = Clear command
com.top_logic.util.monitor.db.ClearCommand.tooltip = <i>Command handler</i> clearing the model of its component.
com.top_logic.util.monitor.db.MonitoringCommand = Monitoring command
com.top_logic.util.monitor.db.MonitoringCommand.tooltip = Base class for <i>command handlers</i> accessing the monitoring result.
com.top_logic.util.monitor.db.NanoSecondsFilterProvider = Nano seconds filter provider
com.top_logic.util.monitor.db.NanoSecondsFilterProvider.tooltip = <i>Table filter provider</i> creating a filter for a time display <code>mm:ss,SSS</code> using a <i>long</i> nanoseconds value as model.
com.top_logic.util.monitor.db.RefreshMonitoringCommand = Refresh monitoring command
com.top_logic.util.monitor.db.RefreshMonitoringCommand.tooltip = <i>Command handler</i> fetching intermediate monitoring results.
com.top_logic.util.monitor.db.StartMonitoringCommand = Start monitoring command
com.top_logic.util.monitor.db.StartMonitoringCommand.tooltip = <i>Command handler</i> starting the monitoring process.
com.top_logic.util.monitor.db.StopMonitoringCommand = Stop monitoring command
com.top_logic.util.monitor.db.StopMonitoringCommand.tooltip = <i>Command handler</i> finishing the monitoring process.
com.top_logic.util.monitor.thread.RefreshThreadsCommand = Refresh threads command
com.top_logic.util.monitor.thread.RefreshThreadsCommand.tooltip = Refresh the thread list.
com.top_logic.util.monitor.thread.ThreadData$Kind = Kind
com.top_logic.util.monitor.thread.ThreadData$Kind.tooltip = The <i>thread</i> kind.
com.top_logic.util.monitor.thread.ThreadData.Kind.DAEMON = Daemon
com.top_logic.util.monitor.thread.ThreadData.Kind.DAEMON.tooltip = A daemon thread.
com.top_logic.util.monitor.thread.ThreadData.Kind.REGULAR = Regular
com.top_logic.util.monitor.thread.ThreadData.Kind.REGULAR.tooltip = A regular non-daemon thread.
com.top_logic.util.monitor.thread.ThreadDetailComponent = Thread detail component
com.top_logic.util.monitor.thread.ThreadDetailComponent.Config.default-active = Default active
com.top_logic.util.monitor.thread.ThreadDetailComponent.Config.default-active.tooltip = Whether automatic update is enabled by default.
com.top_logic.util.monitor.thread.ThreadDetailComponent.Config.update-interval = Update interval
com.top_logic.util.monitor.thread.ThreadDetailComponent.Config.update-interval.tooltip = The time between two UI refreshes in milliseconds.
com.top_logic.util.monitor.thread.ThreadDetailComponent.tooltip = Display details for a <i>thread data</i>.
com.top_logic.util.resource.analyzer.IDEResources = IDE resources
com.top_logic.util.resource.analyzer.IDEResources.Config.all-keys-file = All keys file
com.top_logic.util.resource.analyzer.IDEResources.Config.all-keys-file.tooltip = The file to dump all resolved keys to.
com.top_logic.util.resource.analyzer.IDEResources.Config.dump-all-keys = Dump all keys
com.top_logic.util.resource.analyzer.IDEResources.Config.dump-all-keys.tooltip = Whether to dump all used keys during application shutdown.
com.top_logic.util.resource.analyzer.IDEResources.Config.missing-keys-file = Missing keys file
com.top_logic.util.resource.analyzer.IDEResources.Config.missing-keys-file.tooltip = The file to dump missing keys to.
com.top_logic.util.resource.analyzer.IDEResources.tooltip = <i>Resources module</i> that dumps missing keys and all resolved keys to the workspace.
com.top_logic.util.sched.CleanImageTmpTask = Clean image temporary task
com.top_logic.util.sched.CleanImageTmpTask.tooltip = This task deletes the image tmp directory in constant intervals.
com.top_logic.util.sched.CleanSysTmpTask = Clean sys temporary task
com.top_logic.util.sched.CleanSysTmpTask.tooltip = This task cleanes up a directory in the system tmp area.
com.top_logic.util.sched.CleanUpTask = Clean up task
com.top_logic.util.sched.CleanUpTask.Config.cleanup-path = Cleanup path
com.top_logic.util.sched.CleanUpTask.Config.cleanup-path.tooltip = The path to the directory to clean up.
com.top_logic.util.sched.CleanUpTask.Config.timeout = Timeout
com.top_logic.util.sched.CleanUpTask.Config.timeout.tooltip = Time in milliseconds that a file must stay untouched to eligible for deletion.
com.top_logic.util.sched.CleanUpTask.tooltip = Cleans up the temporary files directory. Copied from <code>com.top_logic.knowledge.gui.pos.report.CleanUpThread</code> and transformed from a Thread into a Task that can be run by the Scheduler.
com.top_logic.util.sched.MemoryObserverThread = Memory observer thread
com.top_logic.util.sched.MemoryObserverThread.Config.createReport = Create report
com.top_logic.util.sched.MemoryObserverThread.Config.createReport.tooltip = Getter for <code>"createReport"</code>.
com.top_logic.util.sched.MemoryObserverThread.Config.loggingAttributes = Logging attributes
com.top_logic.util.sched.MemoryObserverThread.Config.loggingAttributes.tooltip = Getter for <code>"loggingAttributes"</code>.
com.top_logic.util.sched.MemoryObserverThread.Config.loggingInterval = Logging interval
com.top_logic.util.sched.MemoryObserverThread.Config.loggingInterval.tooltip = Getter for <code>"loggingInterval"</code>.
com.top_logic.util.sched.MemoryObserverThread.Config.loggingPeriod = Logging period
com.top_logic.util.sched.MemoryObserverThread.Config.loggingPeriod.tooltip = Getter for <code>"loggingPeriod"</code>.
com.top_logic.util.sched.MemoryObserverThread.Config.reportAttributes = Report attributes
com.top_logic.util.sched.MemoryObserverThread.Config.reportAttributes.tooltip = Getter for <code>"reportAttributes"</code>.
com.top_logic.util.sched.MemoryObserverThread.Config.reportFile = Report file
com.top_logic.util.sched.MemoryObserverThread.Config.reportFile.tooltip = Getter for <code>"reportFile"</code>.
com.top_logic.util.sched.MemoryObserverThread.Config.reportInterval = Report interval
com.top_logic.util.sched.MemoryObserverThread.Config.reportInterval.tooltip = Getter for <code>"reportInterval"</code>.
com.top_logic.util.sched.MemoryObserverThread.Config.reportPeriod = Report period
com.top_logic.util.sched.MemoryObserverThread.Config.reportPeriod.tooltip = Getter for <code>"reportPeriod"</code>.
com.top_logic.util.sched.MemoryObserverThread.tooltip = <i>Managed class</i> to log memory usage. <p> In the default configuration a <i>memory usage entry</i> is created each <i>Logging interval</i> milliseconds and buffered for <i>Logging period</i> milliseconds. </p> <p> A <i>Logging period</i> of <code>0</code> disables buffering. </p> <p> If <i>Logging attributes</i> are specified, these attributes of a <i>memory usage entry</i> is logged to the <i>logger</i>. </p> <p> If <i>Create report</i> is set a graphic report of used memory is created periodically. </p>
com.top_logic.util.sched.Scheduler = Scheduler
com.top_logic.util.sched.Scheduler.SchedulerConfig.dont-run-tasks-on-startup = Dont run tasks on startup
com.top_logic.util.sched.Scheduler.SchedulerConfig.dont-run-tasks-on-startup.tooltip = Whether tasks should not run during system startup.
com.top_logic.util.sched.Scheduler.SchedulerConfig.kb-tasks = Knowledge-base tasks
com.top_logic.util.sched.Scheduler.SchedulerConfig.kb-tasks.tooltip = Types of persistent tasks. All instances of the given types are added as tasks.
com.top_logic.util.sched.Scheduler.SchedulerConfig.max-maintenance-mode-polling-interval = Maximum maintenance mode polling interval
com.top_logic.util.sched.Scheduler.SchedulerConfig.max-maintenance-mode-polling-interval.tooltip = The maximum time a task waits for the maintenance mode to become active before checking whether it is already active.
com.top_logic.util.sched.Scheduler.SchedulerConfig.max-task = Maximum task
com.top_logic.util.sched.Scheduler.SchedulerConfig.max-task.tooltip = Maximum number of concurrent tasks to execute.
com.top_logic.util.sched.Scheduler.SchedulerConfig.max-tasktime = Maximum tasktime
com.top_logic.util.sched.Scheduler.SchedulerConfig.max-tasktime.tooltip = Maximum amount of time that a task may run until it is forcefully stopped.
com.top_logic.util.sched.Scheduler.SchedulerConfig.past-task-time = Past task time
com.top_logic.util.sched.Scheduler.SchedulerConfig.past-task-time.tooltip = A task with a schedule in the past will result in a warning when this limit is reached.
com.top_logic.util.sched.Scheduler.SchedulerConfig.polling-interval = Polling interval
com.top_logic.util.sched.Scheduler.SchedulerConfig.polling-interval.tooltip = Polling interval.
com.top_logic.util.sched.Scheduler.SchedulerConfig.shutdown-countdown = Shutdown countdown
com.top_logic.util.sched.Scheduler.SchedulerConfig.shutdown-countdown.tooltip = How often the <i>scheduler</i> should check during its shutdown period whether all <i>tasks</i> have finished.
com.top_logic.util.sched.Scheduler.SchedulerConfig.shutdown-join-time = Shutdown join time
com.top_logic.util.sched.Scheduler.SchedulerConfig.shutdown-join-time.tooltip = How long to wait for the thread to finish during shutdown.
com.top_logic.util.sched.Scheduler.SchedulerConfig.startup-sleep = Startup sleep
com.top_logic.util.sched.Scheduler.SchedulerConfig.startup-sleep.tooltip = Sleep time while waiting for startup.
com.top_logic.util.sched.Scheduler.SchedulerConfig.tasks = Tasks
com.top_logic.util.sched.Scheduler.SchedulerConfig.tasks.tooltip = All configured tasks. <p> A configured <i>task</i> is only considered for scheduling, if its enabled flag is set. </p>
com.top_logic.util.sched.Scheduler.SchedulerConfig.thread-name = Thread name
com.top_logic.util.sched.Scheduler.SchedulerConfig.thread-name.tooltip = Name of the system thread that executes the schedule.
com.top_logic.util.sched.Scheduler.SchedulerConfig.time-to-kill = Time to kill
com.top_logic.util.sched.Scheduler.SchedulerConfig.time-to-kill.tooltip = Maximum time that a <i>task</i> may ignore a stop request. <p> If this time is exceeded, a <i>task</i> is killed. </p>
com.top_logic.util.sched.Scheduler.SchedulerConfig.wait-after-fail-time = Wait after fail time
com.top_logic.util.sched.Scheduler.SchedulerConfig.wait-after-fail-time.tooltip = How long to suspend after an error occurred. <p> This suspend time prevents flooding the log files. </p>
com.top_logic.util.sched.Scheduler.tooltip = Scheduler for <i>tasks</i>. <p> <i>Tasks</i> are executed periodically with configurable intervals. </p>
com.top_logic.util.sched.SchedulerClusterCleanupTask = Scheduler cluster cleanup task
com.top_logic.util.sched.SchedulerClusterCleanupTask.tooltip = <i>Task</i> that regularly checks whether a cluster node died while a task was still running on it. <p> If an unfinished <i>task</i> is found, it's state is set to <i>inactive</i> and all <i>task results</i> in state <i>not finished</i> or <i>unknown</i> are set to <i>error</i>. </p>
com.top_logic.util.sched.TranslationServiceResetTask = Translation service reset task
com.top_logic.util.sched.TranslationServiceResetTask.tooltip = A <i>state handling task</i> that regularly resets the character counter of the currently active <i>translation service</i>.
com.top_logic.util.sched.entry.SchedulerEntry$State = State
com.top_logic.util.sched.entry.SchedulerEntry$State.tooltip = Whether the <i>task</i> is waiting or running.
com.top_logic.util.sched.entry.SchedulerEntry.State.DONE = Done
com.top_logic.util.sched.entry.SchedulerEntry.State.DONE.tooltip = The <i>task</i> does not want to be run again.
com.top_logic.util.sched.entry.SchedulerEntry.State.RUNNING = Running
com.top_logic.util.sched.entry.SchedulerEntry.State.RUNNING.tooltip = The <i>task</i> is running.
com.top_logic.util.sched.entry.SchedulerEntry.State.STARTING = Starting
com.top_logic.util.sched.entry.SchedulerEntry.State.STARTING.tooltip = The <i>task</i> is being prepared for running.
com.top_logic.util.sched.entry.SchedulerEntry.State.WAITING = Waiting
com.top_logic.util.sched.entry.SchedulerEntry.State.WAITING.tooltip = The <i>task</i> is waiting to be run.
com.top_logic.util.sched.entry.SchedulerEntry.State.WAITING_FOR_MAINTENANCE_MODE = Waiting for maintenance mode
com.top_logic.util.sched.entry.SchedulerEntry.State.WAITING_FOR_MAINTENANCE_MODE.tooltip = The <i>task</i> is waiting for the maintenance mode.
com.top_logic.util.sched.layout.EditTaskComponent = Edit task component
com.top_logic.util.sched.layout.EditTaskComponent.tooltip = Edit tasks in <i>TopLogic</i>.
com.top_logic.util.sched.layout.ReleaseTaskClusterLockCommand = Release task cluster lock command
com.top_logic.util.sched.layout.ReleaseTaskClusterLockCommand.tooltip = <i>Command handler</i> for manually releasing the cluster lock of a <i>task</i>. <p> <b>Be careful! If the task is still running or about to start, releasing the lock can cause duplicate task runs.</b> </p>
com.top_logic.util.sched.layout.ScheduleTaskCommandHandler = Schedule task command handler
com.top_logic.util.sched.layout.ScheduleTaskCommandHandler.tooltip = Schedule a task immediately.
com.top_logic.util.sched.layout.StopTaskCommand = Stop task command
com.top_logic.util.sched.layout.StopTaskCommand.tooltip = Signals the <i>task</i> which is the model of the given component to stop.
com.top_logic.util.sched.layout.TaskResultComponent = Task result component
com.top_logic.util.sched.layout.TaskResultComponent.tooltip = An <i>edit component</i> to display the information in an <i>task result</i>. <p> This is an <i>edit component</i> although nothing can be edited, as it makes the implementation easier. (Ask BHU for details.) </p>
com.top_logic.util.sched.layout.block.BlockState = Block state
com.top_logic.util.sched.layout.block.BlockState.BLOCKED = Blocked
com.top_logic.util.sched.layout.block.BlockState.BLOCKED.tooltip = It is blocked.
com.top_logic.util.sched.layout.block.BlockState.CHILD_BLOCKED = Child blocked
com.top_logic.util.sched.layout.block.BlockState.CHILD_BLOCKED.tooltip = It is not blocked, but a (direct or indirect) child is blocked.
com.top_logic.util.sched.layout.block.BlockState.NOT_BLOCKED = Not blocked
com.top_logic.util.sched.layout.block.BlockState.NOT_BLOCKED.tooltip = It is not blocked, and it either has no children or none of them is blocked.
com.top_logic.util.sched.layout.block.BlockState.tooltip = The different values of how a <i>task</i> can be blocked by the <i>scheduler</i>.
com.top_logic.util.sched.layout.block.BlockTaskCommand = Block task command
com.top_logic.util.sched.layout.block.BlockTaskCommand.tooltip = Blocks the <i>task</i> selected in the given component.
com.top_logic.util.sched.layout.block.UnblockTaskCommand = Unblock task command
com.top_logic.util.sched.layout.block.UnblockTaskCommand.tooltip = Blocks the <i>task</i> selected in the given component.
com.top_logic.util.sched.layout.table.AbstractTaskTreeTableComponent = Task tree table component
com.top_logic.util.sched.layout.table.TaskListeningTreeComponent = Task listening tree component
com.top_logic.util.sched.layout.table.TaskListeningTreeComponent.tooltip = An <i>tree table component</i> that is informed about <i>task</i> <i>task state</i> changes. <p> The component is only informed while it is visible. It is therefore invalidated when it is <code>#becomingInvisible()</code>. </p>
com.top_logic.util.sched.layout.table.TaskTreeComponent = Task tree component
com.top_logic.util.sched.layout.table.TaskTreeComponent.tooltip = An <i>task listening tree component</i> for displaying <i>tasks</i>, especially <i>composite tasks</i>.
com.top_logic.util.sched.layout.table.results.TaskResultTreeComponent = Task result tree component
com.top_logic.util.sched.layout.table.results.TaskResultTreeComponent.tooltip = An <i>tree table component</i> for displaying <i>task results</i>, especially those of <i>composite tasks</i>.
com.top_logic.util.sched.layout.table.results.failed.FailedTaskResultTreeComponent = Failed task result tree component
com.top_logic.util.sched.layout.table.results.failed.FailedTaskResultTreeComponent.tooltip = An <i>tree table component</i> for displaying failed <i>task results</i>, especially those of <i>composite tasks</i>.
com.top_logic.util.sched.task.Task.Config.blocked-by-default = Blocked by default
com.top_logic.util.sched.task.Task.Config.blocked-by-default.tooltip = Whether this <i>task</i> is blocked by default (but can be enabled by the administrator).
com.top_logic.util.sched.task.Task.Config.blocking-allowed = Blocking allowed
com.top_logic.util.sched.task.Task.Config.blocking-allowed.tooltip = Whether this <i>task</i> can be blocked.
com.top_logic.util.sched.task.Task.Config.enabled = Enabled
com.top_logic.util.sched.task.Task.Config.enabled.tooltip = Whether the task should be considered in the schedule. <p> A task that is not enabled is never scheduled independently of its <i>Schedules</i>. </p>
com.top_logic.util.sched.task.Task.Config.maintenance-mode-delay = Maintenance mode delay
com.top_logic.util.sched.task.Task.Config.maintenance-mode-delay.tooltip = Delay (in milliseconds) from the request until the maintenance mode is set. <p> Once the maintenance mode is set, all users are thrown out. The delay is useful to give them some time to save their work. <br/> The <i>task</i> is started once the maintenance mode is set. </p>
com.top_logic.util.sched.task.Task.Config.maintenance-mode-safe = Maintenance mode safe
com.top_logic.util.sched.task.Task.Config.maintenance-mode-safe.tooltip = Whether this <i>task</i> can run even if maintenance mode is active. <p> In contrast to <i>maintenance mode required</i>, a task that is maintenance-mode safe can run in with or without maintenance mode. If <i>maintenance mode required</i> is active, maintenance mode is actively entered before running the task. </p>
com.top_logic.util.sched.task.Task.Config.name.tooltip = The name of the task. <p> Must be case-insensitive unique among all tasks. </p>
com.top_logic.util.sched.task.Task.Config.needing-maintenance-mode = Maintenance mode required
com.top_logic.util.sched.task.Task.Config.needing-maintenance-mode.tooltip = Whether this <i>task</i> requires entering maintenance mode before startup. <p> If maintenance mode is not active, it is automatically activated before starting the task. After the task has finished, maintenance mode is deactivated again. </p> <p> If the task requires maintenance mode, and maintenance mode is already active, the task is not run until the time the maintenance mode is deactivated again. The scheduler will then activate maintenance mode for the task before starting and deactivates it after the task is done. </p> <p> In other words, a task requiring maintenance mode must activate maintenance mode for its run exclusively. Maintenance mode is for operations during which nothing else is allowed to happen on the system. If the maintenance mode is already active when a task is about to start, it means the administrator is doing something that should not be interrupted with anything else. </p> <p> On the other hand, if a task is manually started, it is started even if maintenance mode is already active. In this case, maintenance mode is not automatically deactivated after the task finishes. In other words, if maintenance mode should stay active after finishing the manually started task, maintenance mode has to be activated manually before starting the task. </p>
com.top_logic.util.sched.task.Task.Config.schedules = Schedules
com.top_logic.util.sched.task.Task.Config.schedules.tooltip = The <i>scheduling algorithms</i> to use to calculate the next schedule (=run time) of this <i>task</i>. <p> The task runs at the point in time of all schedules that next to the current time. </p>
com.top_logic.util.sched.task.TaskState = Task state
com.top_logic.util.sched.task.TaskState.CANCELING = Canceling
com.top_logic.util.sched.task.TaskState.CANCELING.tooltip = The <i>task</i> is canceling: It was running and was told to cancel, but has not canceled, yet.
com.top_logic.util.sched.task.TaskState.INACTIVE = Inactive
com.top_logic.util.sched.task.TaskState.INACTIVE.tooltip = The <i>task</i> is inactive, probably waiting for the next execution.
com.top_logic.util.sched.task.TaskState.RUNNING = Running
com.top_logic.util.sched.task.TaskState.RUNNING.tooltip = The <i>task</i> is running.
com.top_logic.util.sched.task.TaskState.tooltip = The state in which a <i>task</i> can be.
com.top_logic.util.sched.task.composite.CompositeTaskImpl = Composite task implementation
com.top_logic.util.sched.task.composite.CompositeTaskImpl.Config.leave-maintenance-mode-early = Leave maintenance mode early
com.top_logic.util.sched.task.composite.CompositeTaskImpl.Config.leave-maintenance-mode-early.tooltip = Should the maintenance mode be left as soon as the last child needing it is done? <p> Is implemented only for top-level tasks. <i>Composite tasks</i> that are nested within other <i>composite tasks</i> cannot leave the maintenance mode early. </p>
com.top_logic.util.sched.task.composite.CompositeTaskImpl.Config.non-critical-children = Non critical children
com.top_logic.util.sched.task.composite.CompositeTaskImpl.Config.non-critical-children.tooltip = If these children fail, the <i>composite task</i> will not fail but continue. <p> If any other child fails, the <i>composite task</i> will fail, too. Without executing any other child task. <br/> "<i>fail</i>" means: The task returns with a <i>result type</i> that is not <i>success</i> or throws any <i>throwable</i>. </p>
com.top_logic.util.sched.task.composite.CompositeTaskImpl.Config.stoppable = Stoppable
com.top_logic.util.sched.task.composite.CompositeTaskImpl.Config.stoppable.tooltip = Whether this <i>composite task implementation</i> can be stopped. <p> If the value is <code>false</code>, the task simply ignores stop requests. </p>
com.top_logic.util.sched.task.composite.CompositeTaskImpl.Config.tasks = Tasks
com.top_logic.util.sched.task.composite.CompositeTaskImpl.Config.tasks.tooltip = The configurations for the children of this <i>composite task</i>. <p> <b>Their scheduling-information are ignored.</b><br/> They are executed in this order when this <i>composite task implementation</i> is executed. </p>
com.top_logic.util.sched.task.composite.CompositeTaskImpl.tooltip = Extension of <i>task implementation</i> that implements the <i>composite task</i> interface.
com.top_logic.util.sched.task.impl.InstructableTestTask = Instructable test task
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.node-local = Node local
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.node-local.tooltip = Whether this task runs independently on every cluster node. <p> In some cases it may be needful, if tasks are scheduled only on one cluster node (e.g. refresh of external user data). Those tasks are <b>not</b> node-local. </p>
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.persistent = Persistent
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.persistent.tooltip = Whether this <i>task</i> is persisted.
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.random-seed = Random seed
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.random-seed.tooltip = The seed for the <i>random</i> number generator.
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.rate-error-result = Rate error result
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.rate-error-result.tooltip = How often (between 0 and 1) should this <i>instructable test task</i> end with <i>error</i>? <p> The sum of all possibilities has to be <code>&lt;= 1</code>. Otherwise, an <i>configuration error</i> is thrown when the task is instantiated. If the sum is exactly 1, the task will never succeed.<br/> This is only the probability for the <i>error</i> to be explicitly set without some error or exception being thrown. If one of the rates for throwing something is higher than 0, that might increase the number of observed <i>error</i> results, depending on how the super classes react on thrown errors and exceptions. </p>
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.rate-failure-result = Rate failure result
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.rate-failure-result.tooltip = How often (between 0 and 1) should this <i>instructable test task</i> end with <i>failure</i>? <p> The sum of all possibilities has to be <code>&lt;= 1</code>. Otherwise, an <i>configuration error</i> is thrown when the task is instantiated. If the sum is exactly 1, the task will never succeed. </p> <p> This is only the probability for the <i>failure</i> to be explicitly set without some error or exception being thrown. If one of the rates for throwing something is higher than 0, that might increase the number of observed <i>failure</i> results, depending on how the super classes react on thrown errors and exceptions. </p>
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.rate-gui-warnings = Rate gui warnings
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.rate-gui-warnings.tooltip = How often (between 0 and 1) should this <i>instructable test task</i> generate gui warnings? <p> If the task does have at least one warning, the probability is additionally used to generate the number of warnings by getting new random numbers until one of them is lower than this value. <br/> This probability is independent of the other rates, when it comes to the sum of probabilities that must not be larger than 1. </p>
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.rate-throw-error = Rate throw error
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.rate-throw-error.tooltip = How often (between 0 and 1) should this <i>instructable test task</i> throw an (anonymous inner class) <i>error</i>? <p> The sum of all possibilities has to be <code>&lt;= 1</code>. Otherwise, an <i>configuration error</i> is thrown when the task is instantiated. If the sum is exactly 1, the task will never succeed.<br/> </p>
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.rate-throw-exception = Rate throw exception
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.rate-throw-exception.tooltip = How often (between 0 and 1) should this <i>instructable test task</i> throw an (anonymous inner class) <i>exception</i>? <p> The sum of all possibilities has to be <code>&lt;= 1</code>. Otherwise, an <i>configuration error</i> is thrown when the task is instantiated. If the sum is exactly 1, the task will never succeed.<br/> </p>
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.rate-throw-runtime-exception = Rate throw runtime exception
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.rate-throw-runtime-exception.tooltip = How often (between 0 and 1) should this <i>instructable test task</i> throw a <i>runtime exception</i>? <p> The sum of all possibilities has to be <code>&lt;= 1</code>. Otherwise, an <i>configuration error</i> is thrown when the task is instantiated. If the sum is exactly 1, the task will never succeed.<br/> </p>
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.rate-throw-throwable = Rate throw throwable
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.rate-throw-throwable.tooltip = How often (between 0 and 1) should this <i>instructable test task</i> throw an (anonymous inner class) <i>throwable</i>? <p> The sum of all possibilities has to be <code>&lt;= 1</code>. Otherwise, an <i>configuration error</i> is thrown when the task is instantiated. If the sum is exactly 1, the task will never succeed.<br/> </p>
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.working-time-max = Working time maximum
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.working-time-max.tooltip = The maximal working time (in milliseconds).
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.working-time-min = Working time minimum
com.top_logic.util.sched.task.impl.InstructableTestTask.Config.working-time-min.tooltip = The minimal working time (in milliseconds).
com.top_logic.util.sched.task.impl.InstructableTestTask.tooltip = A dummy <i>task</i> for tests. <p> Useful for example for tests and experiments. Is not located in the test package, as it is sometimes useful for experiments that use the running application. </p>
com.top_logic.util.sched.task.impl.StateHandlingTask = State handling task
com.top_logic.util.sched.task.impl.StateHandlingTask.tooltip = <i>Task implementation</i> that takes care of the code (of <code>#runHook()</code>) being executed in a system context and storing whether the <i>task</i> succeeded or failed. <p> <b>This is the recommended superclass for implementing a new <i>task</i>,</b> as it takes already care of stuff that is easily forgotten to implement. </p>
com.top_logic.util.sched.task.impl.TaskImpl = Task implementation
com.top_logic.util.sched.task.impl.TaskImpl.Config.run-on-startup = Run on startup
com.top_logic.util.sched.task.impl.TaskImpl.Config.run-on-startup.tooltip = Whether this task can run during system startup.
com.top_logic.util.sched.task.impl.TaskImpl.tooltip = Default implementation for Task. <p> <b>The recommended superclass for implementing a new <i>task</i> is the <i>state handling task</i>.</b> </p> <p> Commits in this class have to be retried in most cases, if they fail. The reason is, that the different schedulers of the cluster nodes are synchronized and communicating via the KnowledgeBase. Therefore, concurrent write accesses can happen. Example: A task which is not node local is told to stop from a user that is logged in on a different cluster node. But at the same time the task is storing a warning. If they happen "concurrently" one of them will fail and has to be retried. </p>
com.top_logic.util.sched.task.result.TaskResult$ResultType = Result type
com.top_logic.util.sched.task.result.TaskResult$ResultType.tooltip = Type of the task result.
com.top_logic.util.sched.task.result.TaskResult.ResultType.CANCELED = Canceled
com.top_logic.util.sched.task.result.TaskResult.ResultType.CANCELED.tooltip = Task has been canceled by a user.
com.top_logic.util.sched.task.result.TaskResult.ResultType.ERROR = Error
com.top_logic.util.sched.task.result.TaskResult.ResultType.ERROR.tooltip = Task has an error and finished its work.
com.top_logic.util.sched.task.result.TaskResult.ResultType.FAILURE = Failure
com.top_logic.util.sched.task.result.TaskResult.ResultType.FAILURE.tooltip = Task has a failure and finished its work.
com.top_logic.util.sched.task.result.TaskResult.ResultType.NOT_FINISHED = Not finished
com.top_logic.util.sched.task.result.TaskResult.ResultType.NOT_FINISHED.tooltip = The <i>task</i> is still running, it's result therefore only initialized.
com.top_logic.util.sched.task.result.TaskResult.ResultType.SUCCESS = Success
com.top_logic.util.sched.task.result.TaskResult.ResultType.SUCCESS.tooltip = Task finished as expected.
com.top_logic.util.sched.task.result.TaskResult.ResultType.UNKNOWN = Unknown
com.top_logic.util.sched.task.result.TaskResult.ResultType.UNKNOWN.tooltip = Unknown state of task (will come up from TaskAccessor).
com.top_logic.util.sched.task.result.TaskResult.ResultType.WARNING = Warning
com.top_logic.util.sched.task.result.TaskResult.ResultType.WARNING.tooltip = Task has logged gui warnings and finished its work.
com.top_logic.util.sched.task.schedule.AbstractSchedulingAlgorithm = Scheduling algorithm
com.top_logic.util.sched.task.schedule.AbstractSchedulingAlgorithm.tooltip = Base class for configurable <i>scheduling algorithms</i>.
com.top_logic.util.sched.task.schedule.AlwaysSchedule = Always schedule
com.top_logic.util.sched.task.schedule.AlwaysSchedule.tooltip = A <i>scheduling algorithm</i> for: "Always run that <i>task</i>." <p> Always returns a clone of the given 'now'. <br/> Useful for example for tests and experiments. Is not located in the test package, as it is sometimes useful for experiments that use the running application. </p>
com.top_logic.util.sched.task.schedule.DailyPeriodicallySchedule = Daily periodically schedule
com.top_logic.util.sched.task.schedule.DailyPeriodicallySchedule.Config.interval = Interval
com.top_logic.util.sched.task.schedule.DailyPeriodicallySchedule.Config.interval.tooltip = The time between task runs.
com.top_logic.util.sched.task.schedule.DailyPeriodicallySchedule.Config.start-time = Start time
com.top_logic.util.sched.task.schedule.DailyPeriodicallySchedule.Config.start-time.tooltip = The time of day when the <i>task</i> should start to be scheduled. <p> If it is not set, 00:00 is used. Has to be earlier than <i>Stop time</i>. </p>
com.top_logic.util.sched.task.schedule.DailyPeriodicallySchedule.Config.stop-time = Stop time
com.top_logic.util.sched.task.schedule.DailyPeriodicallySchedule.Config.stop-time.tooltip = The time of day when the <i>task</i> should stop to be scheduled. <p> If it is not set, 23:59 is used. Has to be later than <i>Start time</i>. </p>
com.top_logic.util.sched.task.schedule.DailyPeriodicallySchedule.tooltip = <i>Scheduling algorithm</i> for running a <i>task</i> multiple times every day. <p> The first schedule of a day is at <i>Start time</i>. The following schedules are at: <code>startTime + n*interval</code> The schedule is not affected by manual runs of the task: If the task should run for for the first time at 8:00 and then every hour but it is run manually at 10:30, for example, the next run after that will be 11:00. Therefore, the task sticks to its original schedule. This is similar to weekly tasks that should run every Sunday, but are not affected if they are run manually at a Wednesday, for example. </p>
com.top_logic.util.sched.task.schedule.DailySchedule = Daily schedule
com.top_logic.util.sched.task.schedule.DailySchedule.Config.time-of-day = Time of day
com.top_logic.util.sched.task.schedule.DailySchedule.Config.time-of-day.tooltip = The time of day when the <i>task</i> should be scheduled.
com.top_logic.util.sched.task.schedule.DailySchedule.tooltip = <i>Scheduling algorithm</i> for running a <i>task</i> once every day at a given time. <p> Use either <i>daily periodically schedule</i> or <i>scheduling algorithm combinator</i> if the the task should run multiple times per day. </p>
com.top_logic.util.sched.task.schedule.FixedDatePeriodicalSchedulingAlgorithm = Fixed date periodical scheduling algorithm
com.top_logic.util.sched.task.schedule.FixedDatePeriodicalSchedulingAlgorithm.tooltip = Base class for <i>scheduling algorithms</i> that schedule at a fixed time with a fixed period.
com.top_logic.util.sched.task.schedule.OnceSchedule = Once schedule
com.top_logic.util.sched.task.schedule.OnceSchedule.Config.time = Time
com.top_logic.util.sched.task.schedule.OnceSchedule.Config.time.tooltip = The time when to schedule the task.
com.top_logic.util.sched.task.schedule.OnceSchedule.tooltip = <i>Scheduling algorithm</i> for running a <i>task</i> once.
com.top_logic.util.sched.task.schedule.WeeklySchedule = Weekly schedule
com.top_logic.util.sched.task.schedule.WeeklySchedule.Config.day-of-week = Day of week
com.top_logic.util.sched.task.schedule.WeeklySchedule.Config.day-of-week.tooltip = The Day of week at which the <i>task</i> should be scheduled.
com.top_logic.util.sched.task.schedule.WeeklySchedule.Config.time-of-day = Time of day
com.top_logic.util.sched.task.schedule.WeeklySchedule.Config.time-of-day.tooltip = The time of day when the <i>task</i> should be scheduled.
com.top_logic.util.sched.task.schedule.WeeklySchedule.tooltip = <i>Scheduling algorithm</i> for running a <i>task</i> once a week. <p> Use the <i>scheduling algorithm combinator</i> if it should run at multiple days of the week. </p>
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule = Legacy daily schedule
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.hour = Hour
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.hour.tooltip = At what hour (0..23) shall the task run (or start) <br/> Only needed if <i>Periodically</i> is <code>false</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.interval = Interval
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.interval.tooltip = Interval in milliseconds, to determine the next run period. <br/> Only needed if <i>Periodically</i> is <code>true</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.minute = Minute
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.minute.tooltip = At what minute (0..59) shall the task run (or start) <br/> Only needed if <i>Periodically</i> is <code>false</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.periodically = Periodically
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.periodically.tooltip = Whether this task should be run periodically
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.start-hour = Start hour
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.start-hour.tooltip = At what hour (0..23) shall the task run (or start) <br/> Only needed if <i>Periodically</i> is <code>true</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.start-minute = Start minute
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.start-minute.tooltip = At what minute (0..59) shall the task run (or start) <br/> Only needed if <i>Periodically</i> is <code>true</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.stop-hour = Stop hour
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.stop-hour.tooltip = At what hour (1..24) shall the task stop, 0 indicates no stop at all. <br/> Only needed if <i>Periodically</i> is <code>true</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.stop-minute = Stop minute
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.Config.stop-minute.tooltip = At what minute (1..60) shall the task stop. <br/> Only needed if <i>Periodically</i> is <code>true</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyDailySchedule.tooltip = The old code of the <code>TaskImpl.calcDaily(Calendar)</code> method, before it was rewritten as a <i>scheduling algorithm</i>. <p> Extracted to this class, in case someone still needs it. Use this class only if switching to the new code is too dangerous and the old code should be used because it is already in use for many years and its behavior is well known. <br/> <b>It is unclear what this code is intended to do exactly, and what it actually does. But it probably has some bugs.</b><br/> It allows to schedule a task daily periodically between the start and stop times. </p>
com.top_logic.util.sched.task.schedule.legacy.LegacyDateSchedule = Legacy date schedule
com.top_logic.util.sched.task.schedule.legacy.LegacyDateSchedule.Config.hour = Hour
com.top_logic.util.sched.task.schedule.legacy.LegacyDateSchedule.Config.hour.tooltip = At what hour (0..23) shall the task run (or start)
com.top_logic.util.sched.task.schedule.legacy.LegacyDateSchedule.Config.minute = Minute
com.top_logic.util.sched.task.schedule.legacy.LegacyDateSchedule.Config.minute.tooltip = At what minute (0..59) shall the task run (or start)
com.top_logic.util.sched.task.schedule.legacy.LegacyDateSchedule.Config.when = When
com.top_logic.util.sched.task.schedule.legacy.LegacyDateSchedule.Config.when.tooltip = Specifies when the <i>task</i> should be scheduled.
com.top_logic.util.sched.task.schedule.legacy.LegacyDateSchedule.tooltip = The old code of the <code>TaskImpl.calcDate(Calendar)</code> method, before it was rewritten as a <i>scheduling algorithm</i>. <p> Extracted to this class, in case someone still needs it. Use this class only if switching to the new code is too dangerous and the old code should be used because it is already in use for many years and its behavior is well known. <br/> <b>It is unclear what this code is intended to do exactly, and what it actually does. But it probably has some bugs.</b><br/> It allows to schedule a task at a given date. </p>
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule = Legacy monthly schedule
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.days = Days
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.days.tooltip = The days on which the task must be run. <p> The days of the month start with 1. </p>
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.hour = Hour
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.hour.tooltip = At what hour (0..23) shall the task run (or start) <br/> Only needed if <i>Periodically</i> is <code>false</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.interval = Interval
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.interval.tooltip = Interval in milliseconds, to determine the next run period. <br/> Only needed if <i>Periodically</i> is <code>true</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.minute = Minute
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.minute.tooltip = At what minute (0..59) shall the task run (or start) <br/> Only needed if <i>Periodically</i> is <code>false</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.periodically = Periodically
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.periodically.tooltip = Whether this task should be run periodically
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.start-hour = Start hour
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.start-hour.tooltip = At what hour (0..23) shall the task run (or start) <br/> Only needed if <i>Periodically</i> is <code>true</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.start-minute = Start minute
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.start-minute.tooltip = At what minute (0..59) shall the task run (or start) <br/> Only needed if <i>Periodically</i> is <code>true</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.stop-hour = Stop hour
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.stop-hour.tooltip = At what hour (1..24) shall the task stop, 0 indicates no stop at all. <br/> Only needed if <i>Periodically</i> is <code>true</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.stop-minute = Stop minute
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.Config.stop-minute.tooltip = At what minute (1..60) shall the task stop. <br/> Only needed if <i>Periodically</i> is <code>true</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyMonthlySchedule.tooltip = The old code of the <code>TaskImpl.calcMonth(Calendar)</code> method, before it was rewritten as a <i>scheduling algorithm</i>. <p> Extracted to this class, in case someone still needs it. Use this class only if switching to the new code is too dangerous and the old code should be used because it is already in use for many years and its behavior is well known. <br/> <b>It is unclear what this code is intended to do exactly, and what it actually does. But it probably has some bugs.</b><br/> It allows to schedule a task at certain days in a month and optionally periodically at those days between the start and stop times. </p>
com.top_logic.util.sched.task.schedule.legacy.LegacyOnceSchedule = Legacy once schedule
com.top_logic.util.sched.task.schedule.legacy.LegacyOnceSchedule.Config.hour = Hour
com.top_logic.util.sched.task.schedule.legacy.LegacyOnceSchedule.Config.hour.tooltip = At what hour (0..23) shall the task run (or start)
com.top_logic.util.sched.task.schedule.legacy.LegacyOnceSchedule.Config.minute = Minute
com.top_logic.util.sched.task.schedule.legacy.LegacyOnceSchedule.Config.minute.tooltip = At what minute (0..59) shall the task run (or start)
com.top_logic.util.sched.task.schedule.legacy.LegacyOnceSchedule.tooltip = The old code of the <code>TaskImpl.calcOnce(Calendar)</code> method, before it was rewritten as a <i>scheduling algorithm</i>. <p> Extracted to this class, in case someone still needs it. Use this class only if switching to the new code is too dangerous and the old code should be used because it is already in use for many years and its behavior is well known. <br/> <b>It is unclear what this code is intended to do exactly, and what it actually does. But it probably has some bugs.</b><br/> It allows to schedule a task once after each server startup. </p>
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule = Legacy weekly schedule
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.days = Days
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.days.tooltip = The days o which the task must be run.
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.hour = Hour
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.hour.tooltip = At what hour (0..23) shall the task run (or start) <br/> Only needed if <i>Periodically</i> is <code>false</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.interval = Interval
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.interval.tooltip = Interval in milliseconds, to determine the next run period. <br/> Only needed if <i>Periodically</i> is <code>true</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.minute = Minute
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.minute.tooltip = At what minute (0..59) shall the task run (or start) <br/> Only needed if <i>Periodically</i> is <code>false</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.periodically = Periodically
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.periodically.tooltip = Whether this task should be run periodically
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.start-hour = Start hour
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.start-hour.tooltip = At what hour (0..23) shall the task run (or start) <br/> Only needed if <i>Periodically</i> is <code>true</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.start-minute = Start minute
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.start-minute.tooltip = At what minute (0..59) shall the task run (or start) <br/> Only needed if <i>Periodically</i> is <code>true</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.stop-hour = Stop hour
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.stop-hour.tooltip = At what hour (1..24) shall the task stop, 0 indicates no stop at all. <br/> Only needed if <i>Periodically</i> is <code>true</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.stop-minute = Stop minute
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.Config.stop-minute.tooltip = At what minute (1..60) shall the task stop. <br/> Only needed if <i>Periodically</i> is <code>true</code>.
com.top_logic.util.sched.task.schedule.legacy.LegacyWeeklySchedule.tooltip = The old code of the <code>TaskImpl.calcWeek(Calendar)</code> method, before it was rewritten as a <i>scheduling algorithm</i>. <p> Extracted to this class, in case someone still needs it. Use this class only if switching to the new code is too dangerous and the old code should be used because it is already in use for many years and its behavior is well known. <br/> <b>It is unclear what this code is intended to do exactly, and what it actually does. But it probably has some bugs.</b><br/> It allows to schedule a task at certain days in a week and optionally periodically at those days between the start and stop times. </p>
