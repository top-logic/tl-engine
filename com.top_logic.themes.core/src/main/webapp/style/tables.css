/* 
/* Design of a regular, unmodified table, which get 
/* created through inapp configurations 
*/
code:not(table) {
	font-family: var(--font-family-regular);
}

.tl-standard-table {
	white-space: nowrap;
	display: table;
	width: 100%;
	margin: var(--spacing-02) 0;
	background: var(--background);
	border-collapse: collapse;
	border-spacing: 0 10px;
}

table.treeBody {
	white-space: nowrap;
	display: table;
	width: 100%;
	margin-top: var(--spacing-03);
	background: var(--background);
	border-collapse: separate;
    border-spacing: 0 10px;
}

table.treeBody .tl-table__row:not(.tblSelected):hover > td {
    background: var(--background);
}

.tl-standard-table th {
	text-align: left;
	color: var(--text-primary);
    font-family: var(--font-family-bold);
    font-size: var(--heading-compact-02-font-size);
    line-height: var(--heading-compact-02-line-height);
    letter-spacing: var(--heading-compact-02-letter-spacing);
    font-weight: 600;
    background: var(--layer);
}

.tl-standard-table th,
.tl-standard-table td {
    padding: 0 var(--spacing-02);
    height: var(--table-height);
    box-sizing: border-box;
    border: 1px solid var(--border-subtle);
}

/* ============================================ */
/* ====== Table styles (prefix is 'tbl') ===== */
/* ============================================ */

.tl-table__title-label {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

table.tblTableNoBorder {
	border: solid transparent;
	width: 100%;
	border-collapse: collapse;
	border-spacing: 0;
	padding: 0;
	margin: 0;
}

td.tblRight .px-1,
td.tblRight .px-1 > * {
	justify-content: flex-end;
}

table td.tblRight .px-1 span.lFlexible > input {
	text-align: right;
}

table td div.tblRight span.cError {
	left: 2px;
	right: auto;
}

a.tl-table__title {
	color: var(--text-primary);
}

a.tl-table__title:visited {
	color: var(--text-primary);
}

.tl-table__title {
	display: flex;
	justify-content: space-between;
    align-items: center;
    gap: var(--spacing-02);
	background: var(--layer-accent);
	color: var(--text-primary);
	font-family: var(--font-family-bold);
    font-size: var(--heading-compact-02-font-size);
    line-height: var(--heading-compact-02-line-height);
    letter-spacing: var(--heading-compact-02-letter-spacing);
	padding: var(--spacing-02) var(--spacing-03);
	border: var(--border-strong) solid 1px;
	border-top-style: none;
	border-right-style: none;
	border-left-style: none;
	height: var(--TABLE_TITLE_HEIGHT);
	box-sizing: border-box;
}

th.tblTitleRight {
	background: var(--layer-accent);
	color: var(--text-primary);
	font-family: var(--font-family-bold);
	font-size: var(--heading-03-font-size);
	line-height: var(--heading-03-line-height);
	letter-spacing: var(--heading-03-letter-spacing);
	padding: 2px;
	border-color: var(--border-strong);
	text-align: right;
	border-left: none;
}

.tl-table__title-toolbar {
	border-spacing: 0px;
	float: right;
	white-space: nowrap;
}

input.tblRowSelector {
	margin-top: 4px;	
}

input.tblRowSelector {
	/* empty: due to transparent image. */
}

input.tblRowSelected {
	background-image: var(--TABLE_ROW_SELECTED);
}

tr.tl-table__row:hover input.tblRowSelector, input.tblRowSelector:focus {
	background-image: var(--TABLE_ROW_FOCUSED);
}

a.tblRowSelector {
	display: none;
}

a.tblRowSelector i {
	font-size: 9px;
}

tr.tl-table__row:hover a.tblRowSelector, a.tblRowSelector:focus, a.tblRowSelected {
	display: inline-block;
}

span.tblButton input {
	margin-left: 2px; 
}

.tl-table__footer-counter {
	display: flex;
	align-items: center;
	align-self: center;
	justify-content: end;
	color: var(--text-primary);
	white-space: nowrap;
	height: inherit;
	padding-right: var(--spacing-03);
	box-sizing: border-box;
	width: 100%;
	height: 2.5rem;
}

th.tblCounterNoBorder {
	display: flex;
	align-items: center;
	align-self: center;
	justify-content: end;
	color: var(--text-primary);
	white-space: nowrap;
	height: inherit;
	padding-right: var(--spacing-03);
	box-sizing: border-box;
	width: 100%;
	height: 2.5rem;
}

.tl-table__footer-pager {
    display: flex;
    align-items: center;
    align-self: center;
    gap: var(--spacing-02);
    height: inherit;
    overflow-y: hidden;
    overflow-x: auto;
    height: 2.5rem;
    padding: 0 var(--spacing-03);
}

.tl-table__footer-pager i {
	color: var(--icon-primary);
}

.tl-table__footer-pager-item {
	display: inline-flex;
	gap: var(--spacing-02);
	align-items: center;
}

.tl-table__footer-pager .ddwttDropBtn {
	font-family: var(--font-family-regular);
    font-size: var(--body-01-font-size);
    line-height: var(--body-0-line-height);
    letter-spacing: var(--body-01-letter-spacing);
}

td.tl-table__cell {
	border-bottom-style: solid;
	border-bottom-width: var(--TABLE_COLUMN_BORDER_WIDTH);
}

.tl-table__cell {
	color: var(--text-secondary);
    white-space: nowrap;
	padding: 0px;
	border-color: var(--border-subtle);
    border-left: 0px solid var(--border-subtle);
	border-left-color: var(--border-subtle);
	border-bottom: 0px solid var(--border-subtle);
}

th.tl-table__cell {
    color: var(--text-primary);
	font-family: var(--font-family-bold);
	font-size: var(--heading-compact-02-font-size);
	line-height: var(--heading-compact-02-line-height);
	letter-spacing: var(--heading-compact-02-letter-spacing);
	font-weight: 600;
    background: var(--layer);
    border-bottom-color: var(--border-subtle);
    border-bottom-style: solid;
    border-bottom-width: 1px;
    border-top-width: 0px;
    border-top-style: none;
    border-right-style: none;
    border-color: var(--border-subtle);
}

td.tl-table__cell {
	overflow: hidden; 
}

.tl-table__row.header .tl-table__cell:focus {
	box-shadow: inset 0px 0px 0px 2px var(--focus),inset 0px 0px 0px 3px var(--focus-inset);
	outline: none !important;
}

.tl-table__row.header .tl-table__cell:active {
	background: var(--layer-selected);
}

.tl-table__row.header .tl-table__cell:hover {
	color: var(--text-primary);
	background: var(--layer-hover);
}

.tl-table__header-cell-content span.activeFilter:hover {
	color: var(--support-danger);
}

.tl-table__header-cell-content {
	width: 100%
}

th.tl-table__group-cell {
	text-align: center;
	border-bottom-width: 1px;
}

th.tblTHNoBorder {
	font-size:           13px;
	font-weight:         normal;
    white-space:         nowrap;
	padding:             2px;
	border-bottom-color: var(--border-subtle);
	border-bottom-style: solid;
	border-width:        0px;
	color:               black;
	background-color:    var(--layer);
}

th.tblTHRight {
	text-align:		  	 right;
	font-size:           13px;
	font-weight:         normal;
    white-space:         nowrap;
	padding:             2px;
	border-bottom-color: var(--border-subtle);
	border-bottom-style: solid;
	border-bottom-width: 1px;
	border-right-width:  0px;
	border-left-width:   0px;
	border-top-width:    0px;
	color:               black;
	background-color:    var(--layer);
}

tr.tl-table__row {
	background-color: var(--background);
}

/* Note: Order matters: Must appear below `tl-table__row` to override styles. */
tr.tblEven {
	background-color: var(--background);
}

/* Note: Order matters: Must appear below `tblEven` to override styles. */
tr.tblSelected {
    background: var(--layer-selected);
}

td.tl-table__cell--selectable {
	cursor: pointer;
}

div.frmBody > div.dropPane {
	display: none;
}

div.frmBody.dndInsertInto > div.dropPane {
	display: block;

	/* Note: The client-side script for drag and drop depends on the `dropPane` overlaying the drop area. */	
	position: absolute;
	top: 0px;
	left: 0px;
 	bottom: 0px;
	right: 0px;
	opacity: 0.5;
	background-color: var(--notification-info-background);
}

tr.tl-table__row.dndInsertInto > td {
	background-color: var(--notification-info-background);
}

tr.tl-table__row.dndInsertBelow > td {
	border-bottom-width: 2px;
	border-bottom-style: solid;
	border-bottom-color: var(--border-interactive);
}

tr.tl-table__row.dndInsertAbove > td {
	border-top-width: 2px;
	border-top-style: solid;
	border-top-color: var(--border-interactive);
}


td.tblTDNoPadding {
    white-space:    nowrap;
	padding:        0px;
	border-color:   transparent;
	color:          var(--text-primary);
	border-width:   0px;
}

td.tblTDNoBorder {
    white-space:    nowrap;
	border-color:   transparent;
	border-width:   0px;
	color:          var(--text-primary);
	border-width:   0px;
	border-style:	solid;
}

td.tblTDNoBorderRight {
	text-align:     right;
    white-space:    nowrap;
	padding:        2px;
	border-color:   transparent;
	color:          var(--text-primary);
	border-width:   0px;
	border-style:	solid;
}

td.tblTDStrong {
	font-weight:	bold;
    white-space:    nowrap;
	padding:        2px;
	border-color:   transparent;
	color:          var(--text-primary);
}

td.tblTDwrap {
	padding:        2px;
	border-color:   transparent;
	color:          var(--text-primary);
}

td.tblTDCenter {
	text-align:     center;
    white-space:    nowrap;
	padding:        2px;
	border-color:   transparent;
	color:          var(--text-primary);
	border-width:   0px;
}

td.tblTDRight {
	text-align:     right;
    white-space:    nowrap;
	padding:        2px;
	border-color:   transparent;
	color:          var(--text-primary);
	border-width:   0px;
}

td.tblTD100 {
    white-space:    nowrap;
	padding:        2px;
	border-color:   var(--layer-accent);
	color:          var(--text-primary);
	width:          100%;
	border-width:   0px;
}

tr.treeSelected td.tl-table__cell--selected {
	padding:          2px;
}

td.tblTDselectWrap {
	padding:          2px;
	border-color:     var(--layer-accent);
	color:            var(--text-primary);
	background-color: var(--layer-accent);
	border-width:     0px;
}

td.tblTDselectStrong {
	font-size:        11px;
	font-weight:	  bold;
    white-space:      nowrap;
	padding:          2px;
	border-color:     var(--layer-accent);
	color:            var(--text-primary);
	background-color: var(--layer-accent);
	border-width:     0px;
}

td.tblTDselect100 {
	font-weight:	  bold;
    white-space:      nowrap;
	padding:          2px;
	border-color:     var(--layer-accent);
	color:            var(--text-primary);
	background-color: var(--layer-accent);
	width:            100%;
	border-width:     0px;
}

/** A Numeric table entry */
td.num {
	font-family:    var(--MONOSPACE_FAMILY);
	text-align:     right;
    white-space:    nowrap;
	padding:        2px;
	border-color:   transparent;
	color:          var(--text-primary);
}


a.tl-table__cell {
	font-size:13px;
	color:black;
	text-decoration:var(--ANCHOR_TEXT_DECORATION_TABLE_HEADER_LINK);
}

a.tl-table__cell:visited {
	font-size:13px;
	color:black;
}

/** Images inlined in the table */
img.tbl {
	vertical-align:	middle;
	border: 		none;
	padding-left:	2px;
	padding-right:	2px;
}

/* == styles for register tables == */

table.regTable {
	border-collapse: separate;
	border-width: 	 0px;
	border-style:    solid;
	border:    		 none;
	width:		     100%;
}

th.regTitle {
	background-color: var(--layer-accent);
	color:            var(--text-primary);
	font-size:        13px;
	font-weight:      normal;
	padding:          2px;
	border-color:     var(--border-strong);
	border-style:     solid;
}

tr.regTH {
}

th.regTH {
	font-size:        13px;
	font-weight:      normal;
    white-space:      nowrap;
	padding:          2px;
	border-color:     var(--border-strong);
	color:            black;
	background-color: var(--layer);
}

tr.regTR {
	background-color:#F7F7E7;
}

tr.regTR_even {
	background-color:#F7F7E7;
}

td.regTD {
	font-size:      10px;
    white-space:    nowrap;
	padding:        0px;
	vertical-align: top;
	border-color:     var(--border-strong);
	border-style:   outset;
	color:          black;
}

td.regTDStrong {
	font-size:      10px;
	font-weight:	bold;
    white-space:    nowrap;
	padding:        0px;
	vertical-align: top;
	border-color:     var(--border-strong);
	color:          black;
}

td.regTDwrap {
	font-size:      10px;
	padding:        0px;
	vertical-align: top;
	border-color:     var(--border-strong);
	color:          black;
}

td.regTDCenter {
	font-size:      10px;
	text-align:     center;
    white-space:    nowrap;
	padding:        0px;
	vertical-align: top;
	border-color:     var(--border-strong);
	color:          black;
}

td.regTDRight {
	font-size:      10px;
	text-align:     right;
    white-space:    nowrap;
	padding:        0px;
	vertical-align: top;
	border-color:     var(--border-strong);
	color:          black;
}

td.regTD100 {
	font-size:      10px;
    white-space:    nowrap;
	padding:        0px;
	vertical-align: top;
	border-color:     var(--border-strong);
	color:          black;
	width:          100%;
}

tr.regTRselect {
	/* background-color: #ADAEAD; */
	background-color:#F7F7E7;
}

td.regTDselected {
	font-size:        11px;
	font-weight:	  bold;
    white-space:      nowrap;
	padding:          0px;
	vertical-align:   top;
	border-color:     var(--border-strong);
	border-style:     outset;
}

td.regTDselectedStrong {
	font-size:        10px;
	font-weight:	  bold;
    white-space:      nowrap;
	padding:          0px;
	vertical-align:   top;
	border-color:     var(--border-strong);
	color:            var(--text-primary);
	background-color: #ADAEAD;
}

td.regTDselected100 {
	font-size:        10px;
	font-weight:	  bold;
    white-space:      nowrap;
	padding:          0px;
	vertical-align:   top;
	border-color:     var(--border-strong);
	color:            var(--text-primary);
	background-color: #ADAEAD;
	width:          100%;
}

select.tbl {	/* Tables can be written as selects, using this style */
 	width: 80%;
}

div.movingheader{
	text-align: 		 left;
	position:			 absolute;
	font-size:           13px;
	font-weight:         normal;
    white-space:         nowrap;
	padding:             0px;
	border-bottom-color: var(--border-subtle);
	border-bottom-style: solid;
	border-bottom-width: 0px;
	border-right-width:  0px;
	border-left-width:   0px;
	border-top-width:    0px;
	color:               black;
	background-color:    var(--layer-accent);
}

th.insertRight{
	border-right-color:  var(--REPLACECOLOR) !important;
	border-right-width: 2px !important;
	border-right-style: solid !important;
	z-index: 1000 !important;
}

th.insertLeft{
	border-left-color:   var(--REPLACECOLOR) !important;
	border-left-width: 2px !important;
	border-left-style: solid !important;
	z-index: 1000 !important;
}

.fltButtons {
	height: var(--TABLE_FILTER_BUTTON_BAR_HEIGHT);
	display: flex;
	justify-content: space-around;
    align-items: center;
}

td.fltButton {
	width:17px;
	text-align: center;
	position: relative;
}

.fltButtons .cButton {
	padding: 0 var(--spacing-01);
}

.tl-table__header-cell-content .fltButton.tl-table__filter-sort-icons {
	color: var(--icon-primary);
	align-self: center;
}

.tl-table__header-cell-content .fltButton:not(.activeFilter):not(.tl-table__filter-sort-icons) {
	color: var(--icon-disabled);
}

.tl-table__header-cell-content .fltButton:not(.activeFilter):not(.tl-table__filter-sort-icons):hover {
	color: var(--icon-primary);
}

.tl-table__header-cell-content .fltButton.activeFilter {
	color: var(--icon-interactive);
}

.tl-table__header-cell-content .fltButton.activeFilter:hover {
	color: var(--support-danger);
}

i.bi-funnel-fill.tablefilter {
	color: var(--icon-interactive);
}

a:not(.disabled) i.bi-funnel-fill.tablefilter:hover {
	color: var(--support-danger);
}

th span.tl-table__filter-sort-icons {
	align-self: end;
	font-size: .6rem;
}

tr.sortState{
	background: var(--FILTER_SORT_DIALOG_SORT_STATE);
}

div.tl-table__filter-sort-container {
	width: 100%;
	height: 100%;
	cursor: pointer;
	min-width: 1.5em;
	display: flex;
	align-items: center;
}

.sidebarFilterContainer {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	overflow-x: hidden;
	overflow-y: auto;
	background-color: var(--layer);
    height: 100%;
}

.sidebarFilterContainer > div {
  	margin-bottom: var(--spacing-03);
}

.sidebarFilterEntry {
	position: relative;
	box-sizing: border-box;
	height: 1.5rem;
	width: 100%;
	white-space: nowrap;
	background: var(--layer);
	padding-left: var(--spacing-01);
	display: flex;
	align-items: center;
}

.collapsibleFilterEntry {
	cursor: pointer;
}

.resetSidebarFilterButton {
	position: absolute;
	right: 0;
	padding-right: var(--spacing-01);
}

table.tblFrozen {
    table-layout: fixed;
    margin: 0;
    padding: 0;
    border-spacing: 0;
    border: 0;
    border-right: var(--TABLE_COLUMN_BORDER_WIDTH) solid var(--border-subtle);
    border-collapse: collapse;
}

.tblFrozenControlTag {
	overflow: hidden;
}

div.tblFrozen {
	position: relative;
	height: 100%;
	width: 100%;
}

div.tblFrozenTitle {
	position:relative;
	overflow: hidden;
	height: var(--FROZEN_TABLE_TITLE_HEIGHT);
}

div.tblTreeFrozenTitle {
	position:relative;
	overflow: hidden;
	height: var(--FROZEN_TREE_TABLE_TITLE_HEIGHT);
}

div.tblFrozenTitle > table.tblFrozen,
div.tblTreeFrozenTitle > table.tblFrozen {
	box-sizing: border-box;
	width: 100%;
	height: 100%;
}

tr.tblFrozen {
}

tr.tblFilterDirectMatch {
}

tr.tblFilterDirectMatch td,
tr.tblFilterDirectMatch td input {
}

tr.tblFilterIndirectMatch {
}

tr.tblFilterIndirectMatch td {
	color: var(--text-disabled);
}

tr.tblSelected.tblFilterIndirectMatch td {
	color: var(--text-on-color-disabled);
}

tr.tblFilterIndirectMatch .cButton a {
	color: var(--icon-disabled);
}

.tblFilterIndirectMatch.tl-table__row:not(.tblSelected):hover .px-1 {
	color: var(--text-on-color-disabled);
}

.tblFilterIndirectMatch.tl-table__row:not(.tblSelected):hover .cButton a {
	color: var(--icon-on-color-disabled);
}

tr.tblFilterIndirectMatch td img,
tr.tblFilterIndirectMatch td select,
tr.tblFilterIndirectMatch td input {
	opacity: 0.6;
}

tr.tblFilterNotValidated {
}

tr.tblFilterNotValidated td,
tr.tblFilterNotValidated td input,
tr.tblFilterNotValidated td select,
tr.tblFilterNotValidated td label {
	font-weight: 600;
	color: var(--text-primary);
}

tr.tblFrozen.title {
	height: var(--FROZEN_TABLE_TITLE_HEIGHT);
}

/* the header row in the grid may have another height */
tr.tblFrozen.header {
	height: var(--FROZEN_TABLE_HEADER_ROW_HEIGHT);
}

div.tblColumnBorderLine {
	position: absolute;
	width: 4px;
	background-color: #808080; /*grey*/
	cursor: e-resize;
}

div.tblColumnAdjustmentPane {
	position: absolute;
	cursor: e-resize;
	width: 100%;
	height: 100%;
	background-color: white;
	opacity: 0;
}

div.tblColumnAdjustmentGrabber {
	position: absolute;
	cursor: e-resize;
	width: 4px;
	height: 100%;
	top: 0px;
	right: 0px;
	background-color: white;
	border-width: 0px;
	margin: 0px;
	padding: 0px;
	opacity: 0;
}

div.tblCellAdjustment {
	top: 0px;
	left: 0px;
	width:100%;
	padding: 0px;
	margin: 0px;
	border-width: 0px;
	overflow: hidden;
	white-space: nowrap;
}

div.tblCellInnerSpacer {
	margin: 2px;
	overflow: visible;
	position: relative;
}

.tblFrozen div.tblCellInnerSpacer {
	white-space: nowrap;
}

div.tblCellAdjustment {
	position: relative;
}

/*********************************************************************/

div.tblFrozen th.treeTableTh, div.tblFrozen td.treeTableTd, div.tblFrozen td.treeTableTdFirst {
	padding: 0px;
}

div.tblSeperator, div.tblSeperatorLine {
	background-color: var(--border-subtle);
	cursor: e-resize;
}

div.tblSeperatorLine {
	position: absolute;
	opacity: 60;
}

/* ============================================================== */
/* ====== Flexible layout of input elements in fixed tables ===== */
/* ============================================================== */

table td span.cError {
	position: absolute;
	top: 0px;
	right: 2px;	
}

table td span.cError i {
	font-size: var(--FONT_SIZE_SMALL);
	line-height: var(--FONT_SIZE_SMALL); 	
}

/* Place error images at regular position in title of
 frozen tables (e.g. needed for gallery edit dialog). */
.tl-table__title span.cError img,
.tl-table__title span.cError i {
	position: static;
}

table td .ddwttDropBtn,
table td .ddwttDropBtn .ddwttButtonContent {
	flex-grow: 1;
}

table td ..ddwttContainer {
	width: 100%;
}

table td span.cDecoratedCell,
table td span.cPopupSelect,
table td span.cTextSelect,
table td span.cDropdownSelect,
table td span.cDateInput,
table td span.cIntegerInput,
table td span.cDatetime,
table td span.cTimeInput,
table td span.cTextPopup,
table td span.cExpandableTextInput,
table td span.cTextInput,
table td .cDataItem,
table td span.downloadControl {
	display: flex;
	flex-wrap: nowrap;
	align-items: center;
	width: 100%;
	height: 100%;
}

table td span.cDecoratedCell .lFlexible, 
table td span.cDecoratedCell .lFixedLeft {
	height: inherit;
	display: inline-flex;
	align-items: center;
}

table .cDecoratedCell > .lFlexible > :first-child:not(a) {
	flex-grow: 2;
}

table td span.cDecoratedCell {
	gap: var(--spacing-02);
}

.cDecoratedCell .treeType {
	color: var(--icon-secondary);
}

.tl-table__row:not(.tblSelected):hover .cDecoratedCell .treeType, 
td.tl-table__cell--selected .cDecoratedCell .treeType {
	color: var(--icon-primary);
}

table.i18nStringTable td span.cDecoratedCell .lFlexible {
	padding-left: 0px;
	padding-right: 0px;
}

table.i18nStringTable td {
	padding-bottom: var(--spacing-02);
}

table td span.cTextPopup span.content {
	overflow: hidden;
	text-overflow: ellipsis;
}

table td .cDataItem span.lFlexible span.content,
table td span.downloadControl span.content {
	width: 100%;
	overflow: hidden;
	text-overflow: ellipsis;
}

table td span.cTextPopup.descriptionSizeConstraint span.content{
	position: relative;
}

.cTextPopup.descriptionSizeConstraint .cImageButton{
	vertical-align: middle;
}

.descriptionSizeMax {
	max-width: 300px;
	overflow: hidden;
	text-overflow: ellipsis;
}

.descriptionSizeConstraint {
	overflow: hidden;
	text-overflow: ellipsis;
}

.cTextPopupEditor .cTextInput.cannot-edit:not(.disabled) {
	display: inline-block;
	width: 497px;
	height: 280px;
	overflow: auto;
}

.cTextPopupEditor .cTextInput.cannot-edit:not(.disabled) {
    padding: 2px 8px 4px 8px;
    box-sizing: border-box;
}

.cTextPopupEditor .cTextInput .is-input {
    width: 100%;
    box-sizing: border-box;    
}

span.cTextPopupView span.content p,
span.cTextPopupView span.content ul,
span.cTextPopupView span.content li,
span.cTextPopup span.content p,
span.cTextPopup span.content ul,
span.cTextPopup span.content li {
	margin: 0px;
	padding: 0px;
	display: inline;
}

table td span.cTextPopupView span.content p,
table td span.cTextPopupView span.content ul,
table td span.cTextPopupView span.content li,
table td span.cTextPopup span.content p,
table td span.cTextPopup span.content ul,
table td span.cTextPopup span.content li,
table td a.cDownload {
	display: block;
	overflow: hidden;
	text-overflow: ellipsis;
}

table.tl-table td span.lFlexible,
table.tl-table td span.lFlexibleCustom {
	display: inline-flex;
	overflow: hidden;
	width: 100%;
}

table td span.lFlexible > select {
	width: 100%;
}

/* Use default width for select fields in title of
 frozen tables (e.g. needed for gallery edit dialog). */
.tl-table__title span.lFlexible select {
	width: auto;
}

table td .cDatetime .lFlexible {
	width: fit-content !important;
}

table td .cDatetime .cDateInput input,
table td .cDatetime .cTimeInput input {
	padding-right: 0;
    padding-left: 0;
}

table.tl-table td .cDateTime .lFixedRight .cDateInput .lFlexible {
	width: fit-content !important;
}

table td span.lFlexible > input:not([type="image"]) {
	width: 100%;
}

/* Use default width for input fields in title of
 frozen tables (e.g. needed for gallery edit dialog). */
.tl-table__title span.lFlexible input {
	width: auto;
}

/* Use default display for span in title of
 frozen tables (e.g. needed for gallery edit dialog). */
.tl-table__title span.lFixedLeft,
.tl-table__title span.lFixedRight {
	display: inherit;
}

/* ================================= */
/* === Drag & drop file upload  ==== */
/* ================================= */

.dropControl {
	position: relative;
	height: 100%;
	display: inline-block;
	width: 100%;
}

.dropControl .dragover {
	display: flex;
	align-items: center;
	justify-content: center;
	border: dashed;
	box-sizing: border-box;
	height: 100%;
	width: 100%;
	position: absolute;
	top: 0px;
	left: 0px;
	background: rgba(255, 0, 0, .5);
}

.dropControl .dragover.allowed {
	background: rgba(0, 128, 128, .5);
}

.dropFrame {
	height: 100%;
	width: 100%;
	z-index: 10;
	position: absolute;
	top: 0px;
	left: 0px;
}

.dropText {
	margin: auto;
	text-align: center;
	width: 100%;
}

/* ============================================= */
/* ===== Drag & Drop upload progress bar  ====== */
/* ============================================= */

.dndProgressDialog {
	position: fixed;
	display: none;
	top: 50%;
	left: 50%;
	width: 50em;
	margin-top: -9em; /*set to a negative number 1/2 of your height*/
	margin-left: -25em; /*set to a negative number 1/2 of your width*/
	background: #f5f5f5;
	border: 1px solid #FFF;
	border-radius: 5px;
	-moz-border-radius: 5px;
	-webkit-border-radius: 5px;
	box-shadow: 1px 2px 4px rgba(0, 0, 0, .4);
	z-index: 1000;
}

.dndUploadDialogContent {
	margin: 5%;
	width: 90%;
	height: 10em;
}

.dndUploadProgressText {
	color: var(--text-primary);
	font-size: 1.5em;
	margin: 0%;
}

.dndProgressBarFrame {
	display: none;
	height: 3em;
	width: 100%;
	margin-top: 3em;
	margin-bottom: 1em;
	border-radius: 5px;
	box-shadow: 0 1px 5px #000 inset, 0 1px 0 #444;
}

.dndProgressBar {
	height: 100%;
	margin: 5px;
}

.dndProgress {
	display: inline-block;
	height: 75%;
	width: 100%;
	border-radius: 3px;
	box-shadow: 0 1px 0 rgba(255, 255, 255, .5) inset;
	transition: width .2s linear;
	position: relative;
	top: 50%;
	transform: translateY(-50%);
	background-image: -webkit-linear-gradient(left, var(--ACCORDION_BACKGROUND_COLOR), 
	var(--ACCORDION_BEVEL_COLOR));
}

.dndLoader {
	display: none;
	position: absolute;
	top: calc(50% - 10px);
	left: calc(50% - 20px);
}

.dndLoaderBox {
	width: 50px;
	height: 50px;
	background-color: var(--ACCORDION_BACKGROUND_COLOR);
	animation: animate 0.6s linear infinite, colorChange 2.4s linear
		infinite;
}

.dndLoaderShadow {
	width: 50px;
	height: 5px;
	background: #000;
	opacity: 0.1;
	position: absolute;
	top: 59px;
	left: 0;
	border-radius: 50%;
	animation: shadow .5s linear infinite;
}

@keyframes animate {
	17% { border-bottom-right-radius: 3px; }
	25% { transform: translateY(9px) rotate(22.5deg); }
	50% {
		transform: translateY(18px) scale(1, .9) rotate(45deg);
		border-bottom-right-radius: 40px;
	}
	75% { transform: translateY(9px) rotate(67.5deg); }
	100% { transform: translateY(0) rotate(90deg); }
}

@keyframes colorChange {
	0% { background-color:  var(--ACCORDION_BEVEL_COLOR); }
	50% { background-color: var(--ACCORDION_BACKGROUND_COLOR); }
	100% { background-color: var(--ACCORDION_BEVEL_COLOR); }
}

@keyframes shadow {
	50% {
		transform: scale(1.2, 1);
	}
}

.cPDFDisplay {
/* Center replacement message. */
	text-align: center;
}
.cPDFDisplay .missingPDFIcon {
	font-size: 3em;
}

.popupEditField {
	display: flex;
}

.popupEditField div.tlscript {
	width: 100%;
}

div.dirtyHandlingDialog {
	width: 100%;
	height: 100%; 
	overflow: auto;
}

div.dirtyHandlingDialog .message {
	margin: 15px;
}

div.dirtyHandlingDialog .changes {
	margin: 5px;
}

.verticalResizer:hover {
	cursor: ns-resize;
}

.placeholder {
	display: inline-block;
  	min-height: 1em;
  	vertical-align: middle;
  	cursor: wait;
  	background-color: currentcolor;
  	opacity: 0.5;
}

.placeholder-glow .placeholder {
  	animation: placeholder-glow 2s ease-in-out infinite;
}

@keyframes placeholder-glow {
  50% {
    opacity: 0.2;
  }
}

.h-100 {
  	height: 100% !important;
  	overflow: auto;
}

.w-100 {
  	width: 100% !important;
  	overflow: auto;
}

.px-1 {
	padding-right: var(--spacing-02) !important;
	padding-left: var(--spacing-02) !important;
    display: inline-flex;
    align-items: center;
    box-sizing: border-box;
    vertical-align: middle;
}

th:last-child .px-1 {
	padding-right: 16px !important;
}

.px-1 .tl-radio-checkbox-container {
	display: flex;
	justify-content: center;
	flex-grow: 1;
}

.px-1 .cPopupSelect.cannot-edit {
	flex-wrap: nowrap;
}

.tl-table__content-container {
	min-height: 0;
	position: relative;
	overflow: hidden;
	/* tables content should always be displayed over its footer e. g. dropdowns */
	z-index: 1;
}

.tl-vstack {
	display: flex;
	flex-direction: column;
}

.tl-height-100 {
	height: 100%;
}

.tl-width-100 {
	width: 100%;
}

.tl-stacking-context {
	position: relative;
	z-index: 0;
}

.tl-table {
	height: fit-content;
	width: 100%;
	border-collapse: separate !important;
	border-spacing: 0px;
	margin: 0px;
}

.tl-table--fixed {
	table-layout: fixed;
	width: min-content;
}

.tl-table__header {
	position: sticky;
	top: 0;
	z-index: 1;
}

.tl-table__body {
	position: relative;
	z-index: 0;
}

.tl-table__footer {
	width: 100%;
	position: sticky;
	bottom: 0;
	left: 0;
	display: flex;
	justify-content: center;
	background: var(--layer-accent);
	color: var(--text-primary);
	font-family: var(--font-family-regular);
	font-size: var(--body-01-font-size);
	line-height: var(--body-01-line-height);
	letter-spacing: var(--body-01-letter-spacing);
	white-space: nowrap;
	box-sizing: border-box;
	border-top: 1px solid var(--border-subtle);
}

.frmBody .tl-table__footer {
	position: relative;
}

.tl-table__cell-resizer {
	width: 16px;
	cursor: col-resize;
	position: absolute;
	top: 0;
	right: -8px;
	height: 100%;
	user-select: none;
	z-index: 1;
}

th:last-child .tl-table__cell-resizer {
/* 	width: 8px; */
	right: 0;
}

.tl-table__cell {
	background-clip: padding-box !important;
	position: relative;
	box-sizing: border-box;
	background-color: var(--background);
}

.tl-table__cell:not(:last-child),
.tl-table-overlay__column:not(.tl-table-overlay__columns-container > :last-child) {
	border-right: var(--border-subtle) solid var(--TABLE_COLUMN_BORDER_WIDTH);
}

.tl-table__header-cell-content {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: stretch;
	min-height: var(--table-height);
}

.tl-table__cell-checkbox {
    width: 100%;
    height: 100%;
    display: inline-flex;
    justify-content: center;
    align-items: center;
}

.tblSelected .tl-table__cell {
	background: inherit;
}

.tl-table-overlay {
	position: relative;
	width: 100%;
	height:100%;
}

.tl-table__cell.tl-position--sticky,
.tl-table-overlay__column.tl-position--sticky {
	z-index: 2;
}

.tl-table-overlay__left-scroller {
	display: flex;
	align-items: center;
	justify-content: center;
	height: 100%;
	width: 100px;
	background-image: linear-gradient(to right, rgba(225,225,225,1), rgba(255,255,255,0));
	visibility: hidden;
}

.tl-table-overlay__right-scroller {
	display: flex;
	align-items: center;
	justify-content: center;
	height: 100%;
	width: 100px;
	background-image: linear-gradient(to left, rgba(225,225,225,1), rgba(255,255,255,0));
	visibility: hidden;
}

.tl-table-overlay__columns-container {
	display: flex;
	flex-direction: row;
	cursor: move;
	white-space: nowrap;
	overflow: auto;
	height: 100%;
	width: 100%;
}

.tl-table-overlay__column-group {
	height: min-content;
}

.tl-table-overlay__column-group-header {
	position: sticky;
	z-index: 1;
}

.tl-table-overlay__column-group-body {
	display: flex;
	position: relative;
	z-index: 0;
}

.tl-table-overlay__column-group > .tl-table-overlay__column {
	/*
	 * Grouped column overlays are items in a flex container. 
	 *
	 * For flex items the min-width is set to auto (the browsers default for non
	 * flex item is 0). This causes, if the items are big enough, an overflow
	 * of the flex container.
	 */
	min-width: 0;
}

.tl-table-overlay__column {
	box-sizing: border-box;
}

.tl-table-overlay__column--dragged {
	z-index: 2;
	overflow: hidden;
}

.tl-table-overlay__column-placeholder {
	display: inline-block;
	white-space: nowrap;
	z-index: 1;
}

.tl-table-overlay__column-placeholder-content {
	box-sizing: border-box;
	border: 2px dashed var(--border-strong);
	background-color: var(--layer-grid-interactive);
	height: 100%;
}

.tl-position--sticky {
	position: sticky;
}

/*
 * Firefox is missing the has selector but it should be added in FF116:
 *
 * https://connect.mozilla.org/t5/ideas/when-is-has-css-selector-going-to-be-fully-implemented-in/idi-p/23794
 *
 * Then there is no need for additional classes to mark the last sticky colum and
 * a lot of code could be removed.
 *
 * The following selector could instead be used: .tl-position--sticky:has(+ :not(.tl-position--sticky))
 */
.tl-table__fix-flex-separator {
	z-index: 2;
	border-right-color: var(--border-strong) !important;
	border-right-width: .25rem !important;
	border-right-style: solid !important;
	width: 0px;
	padding: 0px;
}

.tl-table-overlay .tl-table__fix-flex-separator {
	align-self: stretch;
}

.tl-table-overlay__scroller-icon {
	font-size: 25px;
	color: var(--icon-primary);
}

.tl-flex--fill {
	flex: 1 1 auto;
}

.tl-overflow--auto {
	overflow-x: auto;
}

tr.tl-table__row:last-child > td, .tl-table__header tr {
	border-bottom: var(--TR_TBLTR_LASTROW_BORDERBOTTOM);	
}

table.tl-table--fixed td.tl-table__cell--selected.treeTableTd {
    border-left-width: var(--TABLE_COLUMN_BORDER_WIDTH);
}

th.treeTableTh {
    color: var(--text-primary);
    font-family: var(--font-family-bold);
	font-size: var(--heading-compact-02-font-size);
	line-height: var(--heading-compact-02-line-height);
	letter-spacing: var(--heading-compact-02-letter-spacing);
    white-space: nowrap;     
    border: var(--TABLE_COLUMN_BORDER_WIDTH) solid var(--border-subtle);
    background: var(--layer);
    background-position-y: bottom;
}

td.treeTableTdFirst {
    background-color:var(--layer);
    border: var(--TABLE_COLUMN_BORDER_WIDTH) solid var(--border-subtle);
    overflow: hidden;
}

td.treeTableTdFirst span {
    white-space:  nowrap;
    vertical-align: middle;
}

tr.treeSelected td.treeTableTdFirst {
    white-space:  nowrap;
}

td.treeTableTd {
    background-color:var(--background);
    border: var(--TABLE_COLUMN_BORDER_WIDTH) solid var(--border-subtle);
    overflow: hidden;
}

td.treeTableTd span {
    white-space:  nowrap;     
    vertical-align: middle;
}

/****************************************************************************
 DO NOT MOVE "tl-table__cell--selected" before "treeTableTd", because selected table
 cells shall be look equal in common tables and tree tables. Because the latest
 selector wins, "tl-table__cell--selected" has to reside after "treeTableTd" in this file.
*****************************************************************************/
td.tl-table__cell--selected {
    white-space:      nowrap;
    color:            var(--text-primary);
    background-color: var(--layer-selected);
    border-color:     var(--border-subtle);
}

.tblSelected.tl-table__row:hover {
	background-color: var(--layer-selected-hover)
}

.tl-table__row:not(.tblSelected):hover > td {
	background-color: var(--layer-hover);
}

.tl-table__row:not(.tblSelected):hover .px-1 {
	color: var(--text-primary);
}

.tl-table__row:not(.tblSelected):hover .fToggle a {
	color: var(--icon-primary);
}

.tl-table__cell--selectable .fToggle a {
	color: var(--icon-secondary);
}

.i18nStringTable.tl-table {
	border: none;
}

.adjustableColumn {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	cursor: pointer;
}

.unselectableContent {
  	user-select: none;     
}

