/*
 * SPDX-FileCopyrightText: 2025 (c) Business Operation Systems GmbH <info@top-logic.com>
 * 
 * SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-BOS-TopLogic-1.0
 */
package com.top_logic.bpe.bpml.model.impl;

/**
 * Basic interface for {@link #PROCESS_TYPE} business objects.
 * 
 * @author Automatically generated by {@link com.top_logic.element.model.generate.InterfaceGenerator}
 */
public interface ProcessBase extends com.top_logic.bpe.bpml.model.Externalized, com.top_logic.bpe.bpml.model.LaneSet, com.top_logic.bpe.bpml.model.AnnotationContainer {

	/**
	 * Name of type <code>Process</code>
	 */
	String PROCESS_TYPE = "Process";

	/**
	 * Part <code>collaboration</code> of <code>Process</code>
	 * 
	 * <p>
	 * Declared as <code>tl.bpe.bpml:Collaboration</code> in configuration.
	 * </p>
	 */
	String COLLABORATION_ATTR = "collaboration";

	/**
	 * Part <code>edges</code> of <code>Process</code>
	 * 
	 * <p>
	 * Declared as <code>tl.bpe.bpml:Edge</code> in configuration.
	 * </p>
	 */
	String EDGES_ATTR = "edges";

	/**
	 * Part <code>isExecutable</code> of <code>Process</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:Boolean</code> in configuration.
	 * </p>
	 */
	String IS_EXECUTABLE_ATTR = "isExecutable";

	/**
	 * Part <code>nodes</code> of <code>Process</code>
	 * 
	 * <p>
	 * Declared as <code>tl.bpe.bpml:Node</code> in configuration.
	 * </p>
	 */
	String NODES_ATTR = "nodes";

	/**
	 * Part <code>participant</code> of <code>Process</code>
	 * 
	 * <p>
	 * Declared as <code>tl.bpe.bpml:Participant</code> in configuration.
	 * </p>
	 */
	String PARTICIPANT_ATTR = "participant";

	/**
	 * Getter for part {@link #COLLABORATION_ATTR}.
	 */
	default com.top_logic.bpe.bpml.model.Collaboration getCollaboration() {
		return (com.top_logic.bpe.bpml.model.Collaboration) tValueByName(COLLABORATION_ATTR);
	}

	/**
	 * Getter for part {@link #EDGES_ATTR}.
	 */
	@SuppressWarnings("unchecked")
	default java.util.Set<? extends com.top_logic.bpe.bpml.model.Edge> getEdges() {
		return (java.util.Set<? extends com.top_logic.bpe.bpml.model.Edge>) tValueByName(EDGES_ATTR);
	}

	/**
	 * Live view of the {@link #EDGES_ATTR} part.
	 * <p>
	 * Changes to this {@link java.util.Collection} change directly the attribute value.
	 * The caller has to take care of the transaction handling.
	 * </p>
	 */
	default java.util.Set<com.top_logic.bpe.bpml.model.Edge> getEdgesModifiable() {
		com.top_logic.model.TLStructuredTypePart attribute = tType().getPart(EDGES_ATTR);
		@SuppressWarnings("unchecked")
		java.util.Set<com.top_logic.bpe.bpml.model.Edge> result = (java.util.Set<com.top_logic.bpe.bpml.model.Edge>) com.top_logic.element.meta.kbbased.WrapperMetaAttributeUtil.getLiveCollection(this, attribute);
		return result;
	}

	/**
	 * Setter for part {@link #EDGES_ATTR}.
	 */
	default void setEdges(java.util.Set<com.top_logic.bpe.bpml.model.Edge> newValue) {
		tUpdateByName(EDGES_ATTR, newValue);
	}

	/**
	 * Adds a value to the {@link #EDGES_ATTR} reference.
	 */
	default void addEdge(com.top_logic.bpe.bpml.model.Edge newValue) {
		tAddByName(EDGES_ATTR, newValue);
	}

	/**
	 * Removes the given value from the {@link #EDGES_ATTR} reference.
	 */
	default void removeEdge(com.top_logic.bpe.bpml.model.Edge oldValue) {
		tRemoveByName(EDGES_ATTR, oldValue);
	}

	/**
	 * Getter for part {@link #IS_EXECUTABLE_ATTR}.
	 */
	default boolean getIsExecutable() {
		return (Boolean) tValueByName(IS_EXECUTABLE_ATTR);
	}

	/**
	 * Setter for part {@link #IS_EXECUTABLE_ATTR}.
	 */
	default void setIsExecutable(boolean newValue) {
		tUpdateByName(IS_EXECUTABLE_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #NODES_ATTR}.
	 */
	@SuppressWarnings("unchecked")
	default java.util.Set<? extends com.top_logic.bpe.bpml.model.Node> getNodes() {
		return (java.util.Set<? extends com.top_logic.bpe.bpml.model.Node>) tValueByName(NODES_ATTR);
	}

	/**
	 * Live view of the {@link #NODES_ATTR} part.
	 * <p>
	 * Changes to this {@link java.util.Collection} change directly the attribute value.
	 * The caller has to take care of the transaction handling.
	 * </p>
	 */
	default java.util.Set<com.top_logic.bpe.bpml.model.Node> getNodesModifiable() {
		com.top_logic.model.TLStructuredTypePart attribute = tType().getPart(NODES_ATTR);
		@SuppressWarnings("unchecked")
		java.util.Set<com.top_logic.bpe.bpml.model.Node> result = (java.util.Set<com.top_logic.bpe.bpml.model.Node>) com.top_logic.element.meta.kbbased.WrapperMetaAttributeUtil.getLiveCollection(this, attribute);
		return result;
	}

	/**
	 * Setter for part {@link #NODES_ATTR}.
	 */
	default void setNodes(java.util.Set<com.top_logic.bpe.bpml.model.Node> newValue) {
		tUpdateByName(NODES_ATTR, newValue);
	}

	/**
	 * Adds a value to the {@link #NODES_ATTR} reference.
	 */
	default void addNode(com.top_logic.bpe.bpml.model.Node newValue) {
		tAddByName(NODES_ATTR, newValue);
	}

	/**
	 * Removes the given value from the {@link #NODES_ATTR} reference.
	 */
	default void removeNode(com.top_logic.bpe.bpml.model.Node oldValue) {
		tRemoveByName(NODES_ATTR, oldValue);
	}

	/**
	 * Getter for part {@link #PARTICIPANT_ATTR}.
	 */
	default com.top_logic.bpe.bpml.model.Participant getParticipant() {
		return (com.top_logic.bpe.bpml.model.Participant) tValueByName(PARTICIPANT_ATTR);
	}

}
