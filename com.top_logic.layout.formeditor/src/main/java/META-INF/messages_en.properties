com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand = Export model as PDF
com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand.Config.export-descriptions = Export descriptions
com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand.Config.export-descriptions.tooltip = Configuration of the export description depending on the type of the exported model. When no export description can be found for the type of the model, a default export description is used.
com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand.Config.header = Header
com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand.Config.header.tooltip = The <i>expression</i> computing the heading line of the PDF export. When nothing is configured, no header line is exported. <p> The expression is evaluated with the exported model as the only argument. The model can be accessed with the variable <code>"model"</code>. </p>
com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand.Config.pdf-name = PDF name
com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand.Config.pdf-name.tooltip = Name of the downloaded PDF. <p> The expression is evaluated with the exported model as the only argument. The model can be accessed with the variable <code>"model"</code>. </p> <p> The name of the PDF file must end with ".pdf". </p>
com.top_logic.layout.formeditor.export.pdf.DefaultPDFExportCommand.tooltip = <i>PDF export command</i> exporting the model of a component. <p> When an export definition for the type of the model is given, that definition is used. If no such definition is found and a form definition for the model type is locally defined at the component, this definition is also used for the export. </p> <p> When no such locally defined form, can be found the most specific export definition for the type, defined in the model, and at least the most specific layout form (defined in the model) is used. </p> <p> When no form can be found at all, a generic export form is used. </p>
com.top_logic.layout.formeditor.parts.ForeignAttributeDefinition.item = Item
com.top_logic.layout.formeditor.parts.ForeignAttributeDefinition.item.tooltip = <i>Expression</i> for an item of the configured type.
com.top_logic.layout.formeditor.parts.ForeignAttributeTemplateProvider = Foreign attribute template provider
com.top_logic.layout.formeditor.parts.ForeignAttributeTemplateProvider.tooltip = <i>Form element provider</i> for <i>foreign attribute definition</i>.
com.top_logic.layout.formeditor.parts.ForeignObjects.buttons.tooltip = Commands that can be executed on the individual objects.
com.top_logic.layout.formeditor.parts.ForeignObjects.items = Items
com.top_logic.layout.formeditor.parts.ForeignObjects.items.tooltip = The items to display forms for.
com.top_logic.layout.formeditor.parts.ForeignObjects.label = Label
com.top_logic.layout.formeditor.parts.ForeignObjects.label.tooltip = Expression that is used to compute the label of the single form groups, from the base object of the form group.
com.top_logic.layout.formeditor.parts.ForeignObjects.layout = Layout
com.top_logic.layout.formeditor.parts.ForeignObjects.layout.tooltip = Definition of the layout that is used to display the single objects.
com.top_logic.layout.formeditor.parts.ForeignObjects.no-separate-group = No separate group
com.top_logic.layout.formeditor.parts.ForeignObjects.no-separate-group.tooltip = Defines that no separate groups should be displayed for the individual objects. In this case the elements are displayed inline in the outer form.
com.top_logic.layout.formeditor.parts.ForeignObjects.read-only = Display item attributes read-only
com.top_logic.layout.formeditor.parts.ForeignObjects.read-only.tooltip = Expression that is used for each of the items to compute, whether the form elements must be displayed read-only instead of editable. <p> The first argument for the evaluation is the displayed item, the second is the base object, e.g. the expression 'true' displays all attributes read-only. </p> <p> When nothing is configured, no attribute is explicitly set to read-only. </p>
com.top_logic.layout.formeditor.parts.ForeignObjectsTemplateProvider = Foreign objects template provider
com.top_logic.layout.formeditor.parts.ForeignObjectsTemplateProvider.tooltip = <i>Form element provider</i> for <i>foreign objects</i>.
com.top_logic.layout.formeditor.parts.FormTableDefinition$AttributeColumn = Attribute column
com.top_logic.layout.formeditor.parts.FormTableDefinition$AttributeColumn.tooltip = <i>Column display</i> representing an attribute.
com.top_logic.layout.formeditor.parts.FormTableDefinition.ColumnDisplay.table = Table
com.top_logic.layout.formeditor.parts.FormTableDefinition.ColumnDisplay.table.tooltip = The <i>form table definition</i> this <i>column display</i> is a part of.
com.top_logic.layout.formeditor.parts.FormTableDefinition.columns = Columns
com.top_logic.layout.formeditor.parts.FormTableDefinition.columns.tooltip = The columns to display for the given <i>Rows</i>.
com.top_logic.layout.formeditor.parts.FormTableDefinition.commands = Commands
com.top_logic.layout.formeditor.parts.FormTableDefinition.commands.tooltip = Additional command models to display in the configured table.
com.top_logic.layout.formeditor.parts.FormTableDefinition.form-field-name = Form field name
com.top_logic.layout.formeditor.parts.FormTableDefinition.form-field-name.tooltip = Name of the form field that is created for this table.
com.top_logic.layout.formeditor.parts.FormTableDefinition.rows = Rows
com.top_logic.layout.formeditor.parts.FormTableDefinition.rows.tooltip = Expression creating a list of objects edited in the displayed table as rows.
com.top_logic.layout.formeditor.parts.FormTableTemplateProvider = Form table template provider
com.top_logic.layout.formeditor.parts.FormTableTemplateProvider.tooltip = Creates a template for a <i>form table definition</i> and stores the necessary information.
com.top_logic.layout.formeditor.parts.MacroPart.expr = Expression
com.top_logic.layout.formeditor.parts.MacroPart.expr.tooltip = The <i>expression</i> computing the HTML. <p> The expression is expected to be a function that takes the context object as single argument. </p> <p> The name of the sole variable in <i>Expression</i> is <code>"model"</code>. </p>
com.top_logic.layout.formeditor.parts.MacroPart.wholeLine = Whole line
com.top_logic.layout.formeditor.parts.MacroPart.wholeLine.tooltip = Whether the content must be rendered using the whole line.
com.top_logic.layout.formeditor.parts.MacroTemplateProvider = Macro template provider
com.top_logic.layout.formeditor.parts.MacroTemplateProvider.tooltip = <i>Form element provider</i> for <i>macro part</i>.
